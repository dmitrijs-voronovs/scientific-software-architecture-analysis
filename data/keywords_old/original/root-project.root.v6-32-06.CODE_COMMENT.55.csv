id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1100,Modifiability,variab,variables,1100,"parblock; /// A string that takes one of these general forms:; /// - ""e1"" produces a 1-d histogram (TH1F) of expression ""e1""; /// - ""e1:e2"" produces an unbinned 2-d scatter-plot (TGraph) of ""e1""; /// on the y-axis versus ""e2"" on the x-axis; /// - ""e1:e2:e3"" produces an unbinned 3-d scatter-plot (TPolyMarker3D) of ""e1""; /// vs ""e2"" vs ""e3"" on the z-, y-, x-axis, respectively; /// - ""e1:e2:e3:e4"" produces an unbinned 3-d scatter-plot (TPolyMarker3D) of ""e1""; /// vs ""e2"" vs ""e3"" and ""e4"" mapped on the current color palette.; /// (to create histograms in the 2, 3, and 4 dimensional case,; /// see section ""Saving the result of Draw to an histogram""); /// - ""e1:e2:e3:e4:e5"" with option ""GL5D"" produces a 5D plot using OpenGL. `gStyle->SetCanvasPreferGL(true)` is needed.; /// - Any number of variables no fewer than two can be used with the options ""CANDLE"" and ""PARA""; /// - An arbitrary number of variables can be used with the option ""GOFF""; ///; /// Examples:; /// - ""x"": the simplest case, it draws a 1-Dim histogram of column x; /// - ""sqrt(x)"", ""x*y/z"": draw histogram with the values of the specified numerical expression across TTree events; /// - ""y:sqrt(x)"": 2-Dim histogram of y versus sqrt(x); /// - ""px:py:pz:2.5*E"": produces a 3-d scatter-plot of px vs py ps pz; /// and the color number of each marker will be 2.5*E.; /// If the color number is negative it is set to 0.; /// If the color number is greater than the current number of colors; /// it is set to the highest color number. The default number of; /// colors is 50. See TStyle::SetPalette for setting a new color palette.; ///; /// The expressions can use all the operations and built-in functions; /// supported by TFormula (see TFormula::Analyze()), including free; /// functions taking numerical arguments (e.g. TMath::Bessel()).; /// In addition, you can call member functions taking numerical; /// arguments. For example, these are two valid expressions:; /// ~~~ {.cpp}; /// TMath::BreitWigner(fPx,3,2); /// event.Get",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1207,Modifiability,variab,variables,1207,"parblock; /// A string that takes one of these general forms:; /// - ""e1"" produces a 1-d histogram (TH1F) of expression ""e1""; /// - ""e1:e2"" produces an unbinned 2-d scatter-plot (TGraph) of ""e1""; /// on the y-axis versus ""e2"" on the x-axis; /// - ""e1:e2:e3"" produces an unbinned 3-d scatter-plot (TPolyMarker3D) of ""e1""; /// vs ""e2"" vs ""e3"" on the z-, y-, x-axis, respectively; /// - ""e1:e2:e3:e4"" produces an unbinned 3-d scatter-plot (TPolyMarker3D) of ""e1""; /// vs ""e2"" vs ""e3"" and ""e4"" mapped on the current color palette.; /// (to create histograms in the 2, 3, and 4 dimensional case,; /// see section ""Saving the result of Draw to an histogram""); /// - ""e1:e2:e3:e4:e5"" with option ""GL5D"" produces a 5D plot using OpenGL. `gStyle->SetCanvasPreferGL(true)` is needed.; /// - Any number of variables no fewer than two can be used with the options ""CANDLE"" and ""PARA""; /// - An arbitrary number of variables can be used with the option ""GOFF""; ///; /// Examples:; /// - ""x"": the simplest case, it draws a 1-Dim histogram of column x; /// - ""sqrt(x)"", ""x*y/z"": draw histogram with the values of the specified numerical expression across TTree events; /// - ""y:sqrt(x)"": 2-Dim histogram of y versus sqrt(x); /// - ""px:py:pz:2.5*E"": produces a 3-d scatter-plot of px vs py ps pz; /// and the color number of each marker will be 2.5*E.; /// If the color number is negative it is set to 0.; /// If the color number is greater than the current number of colors; /// it is set to the highest color number. The default number of; /// colors is 50. See TStyle::SetPalette for setting a new color palette.; ///; /// The expressions can use all the operations and built-in functions; /// supported by TFormula (see TFormula::Analyze()), including free; /// functions taking numerical arguments (e.g. TMath::Bessel()).; /// In addition, you can call member functions taking numerical; /// arguments. For example, these are two valid expressions:; /// ~~~ {.cpp}; /// TMath::BreitWigner(fPx,3,2); /// event.Get",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:6030,Modifiability,variab,variable,6030,"//; /// | String passed | What is used for each entry of the tree; /// |-----------------|--------------------------------------------------------|; /// | `fMatrix` | the 9 elements of fMatrix |; /// | `fMatrix[][]` | the 9 elements of fMatrix |; /// | `fMatrix[2][2]` | only the elements fMatrix[2][2] |; /// | `fMatrix[1]` | the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2] |; /// | `fMatrix[1][]` | the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2] |; /// | `fMatrix[][0]` | the 3 elements fMatrix[0][0], fMatrix[1][0] and fMatrix[2][0] |; ///; /// ""fEvent.fMatrix...."" same as ""fMatrix..."" (unless there is more than one leaf named fMatrix!).; ///; /// In summary, if a specific index is not specified for a dimension, TTree::Draw; /// will loop through all the indices along this dimension. Leaving off the; /// last (right most) dimension of specifying then with the two characters '[]'; /// is equivalent. For variable size arrays (and TClonesArray) the range; /// of the first dimension is recalculated for each entry of the tree.; /// You can also specify the index as an expression of any other variables from the; /// tree.; ///; /// TTree::Draw also now properly handling operations involving 2 or more arrays.; ///; /// Let assume a second matrix fResults[5][2], here are a sample of some; /// of the possible combinations, the number of elements they produce and; /// the loop used:; ///; /// | expression | element(s) | Loop |; /// |----------------------------------|------------|--------------------------|; /// | `fMatrix[2][1] - fResults[5][2]` | one | no loop |; /// | `fMatrix[2][] - fResults[5][2]` | three | on 2nd dim fMatrix |; /// | `fMatrix[2][] - fResults[5][]` | two | on both 2nd dimensions |; /// | `fMatrix[][2] - fResults[][1]` | three | on both 1st dimensions |; /// | `fMatrix[][2] - fResults[][]` | six | on both 1st and 2nd dimensions of fResults |; /// | `fMatrix[][2] - fResults[3][]` | two | on 1st dim of fMatrix and 2nd of fResults (",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:6218,Modifiability,variab,variables,6218,"-----------------------------------|; /// | `fMatrix` | the 9 elements of fMatrix |; /// | `fMatrix[][]` | the 9 elements of fMatrix |; /// | `fMatrix[2][2]` | only the elements fMatrix[2][2] |; /// | `fMatrix[1]` | the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2] |; /// | `fMatrix[1][]` | the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2] |; /// | `fMatrix[][0]` | the 3 elements fMatrix[0][0], fMatrix[1][0] and fMatrix[2][0] |; ///; /// ""fEvent.fMatrix...."" same as ""fMatrix..."" (unless there is more than one leaf named fMatrix!).; ///; /// In summary, if a specific index is not specified for a dimension, TTree::Draw; /// will loop through all the indices along this dimension. Leaving off the; /// last (right most) dimension of specifying then with the two characters '[]'; /// is equivalent. For variable size arrays (and TClonesArray) the range; /// of the first dimension is recalculated for each entry of the tree.; /// You can also specify the index as an expression of any other variables from the; /// tree.; ///; /// TTree::Draw also now properly handling operations involving 2 or more arrays.; ///; /// Let assume a second matrix fResults[5][2], here are a sample of some; /// of the possible combinations, the number of elements they produce and; /// the loop used:; ///; /// | expression | element(s) | Loop |; /// |----------------------------------|------------|--------------------------|; /// | `fMatrix[2][1] - fResults[5][2]` | one | no loop |; /// | `fMatrix[2][] - fResults[5][2]` | three | on 2nd dim fMatrix |; /// | `fMatrix[2][] - fResults[5][]` | two | on both 2nd dimensions |; /// | `fMatrix[][2] - fResults[][1]` | three | on both 1st dimensions |; /// | `fMatrix[][2] - fResults[][]` | six | on both 1st and 2nd dimensions of fResults |; /// | `fMatrix[][2] - fResults[3][]` | two | on 1st dim of fMatrix and 2nd of fResults (at the same time) |; /// | `fMatrix[][] - fResults[][]` | six | on 1st dim then on 2nd dim |; /// | `fMatrix[][",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:7763,Modifiability,variab,variable,7763,"s[5][]` | two | on both 2nd dimensions |; /// | `fMatrix[][2] - fResults[][1]` | three | on both 1st dimensions |; /// | `fMatrix[][2] - fResults[][]` | six | on both 1st and 2nd dimensions of fResults |; /// | `fMatrix[][2] - fResults[3][]` | two | on 1st dim of fMatrix and 2nd of fResults (at the same time) |; /// | `fMatrix[][] - fResults[][]` | six | on 1st dim then on 2nd dim |; /// | `fMatrix[][fResult[][]]` | 30 | on 1st dim of fMatrix then on both dimensions of fResults. The value if fResults[j][k] is used as the second index of fMatrix.|; ///; ///; /// In summary, TTree::Draw loops through all unspecified dimensions. To; /// figure out the range of each loop, we match each unspecified dimension; /// from left to right (ignoring ALL dimensions for which an index has been; /// specified), in the equivalent loop matched dimensions use the same index; /// and are restricted to the smallest range (of only the matched dimensions).; /// When involving variable arrays, the range can of course be different; /// for each entry of the tree.; ///; /// So the loop equivalent to ""fMatrix[][2] - fResults[3][]"" is:; /// ~~~ {.cpp}; /// for (Int_t i0; i < min(3,2); i++) {; /// use the value of (fMatrix[i0][2] - fMatrix[3][i0]); /// }; /// ~~~; /// So the loop equivalent to ""fMatrix[][2] - fResults[][]"" is:; /// ~~~ {.cpp}; /// for (Int_t i0; i < min(3,5); i++) {; /// for (Int_t i1; i1 < 2; i1++) {; /// use the value of (fMatrix[i0][2] - fMatrix[i0][i1]); /// }; /// }; /// ~~~; /// So the loop equivalent to ""fMatrix[][] - fResults[][]"" is:; /// ~~~ {.cpp}; /// for (Int_t i0; i < min(3,5); i++) {; /// for (Int_t i1; i1 < min(3,2); i1++) {; /// use the value of (fMatrix[i0][i1] - fMatrix[i0][i1]); /// }; /// }; /// ~~~; /// So the loop equivalent to ""fMatrix[][fResults[][]]"" is:; /// ~~~ {.cpp}; /// for (Int_t i0; i0 < 3; i0++) {; /// for (Int_t j2; j2 < 5; j2++) {; /// for (Int_t j3; j3 < 2; j3++) {; /// i1 = fResults[j2][j3];; /// use the value of fMatrix[i0][i1]; /// }; /// ",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:10819,Modifiability,variab,variable,10819,"lt drawing option, the; /// data is filled into a TGraph named `Graph`. This TGraph can be retrieved by; /// calling; ///; /// ~~~ {.cpp}; /// auto graph = (TGraph*)gPad->GetPrimitive(""Graph"");; /// ~~~; ///; /// For the three and four dimensional cases, with the default drawing option, an unnamed; /// TPolyMarker3D is produced, and therefore cannot be retrieved.; ///; /// In all cases `htemp` can be used to access the axes. For instance in the 2D case:; ///; /// ~~~ {.cpp}; /// auto htemp = (TH2F*)gPad->GetPrimitive(""htemp"");; /// auto xaxis = htemp->GetXaxis();; /// ~~~; ///; /// When the option `""A""` is used (with TGraph painting option) to draw a 2D; /// distribution:; /// ~~~ {.cpp}; /// tree.Draw(""e1:e2"","""",""A*"");; /// ~~~; /// a scatter plot is produced (with stars in that case) but the axis creation is; /// delegated to TGraph and `htemp` is not created.; ///; /// ### Saving the result of Draw to a histogram; ///; /// If `varexp` contains `>>hnew` (following the variable(s) name(s)),; /// the new histogram called `hnew` is created and it is kept in the current; /// directory (and also the current pad). This works for all dimensions.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>hsqrt"",""y>0""); /// ~~~; /// will draw `sqrt(x)` and save the histogram as ""hsqrt"" in the current; /// directory. To retrieve it do:; /// ~~~ {.cpp}; /// TH1F *hsqrt = (TH1F*)gDirectory->Get(""hsqrt"");; /// ~~~; /// The binning information is taken from the environment variables; /// ~~~ {.cpp}; /// Hist.Binning.?D.?; /// ~~~; /// In addition, the name of the histogram can be followed by up to 9; /// numbers between '(' and ')', where the numbers describe the; /// following:; ///; /// - 1 - bins in x-direction; /// - 2 - lower limit in x-direction; /// - 3 - upper limit in x-direction; /// - 4-6 same for y-direction; /// - 7-9 same for z-direction; ///; /// When a new binning is used the new value will become the default.; /// Values can be skipped.; ///; /// Example:; /// ",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:11321,Modifiability,variab,variables,11321,"stance in the 2D case:; ///; /// ~~~ {.cpp}; /// auto htemp = (TH2F*)gPad->GetPrimitive(""htemp"");; /// auto xaxis = htemp->GetXaxis();; /// ~~~; ///; /// When the option `""A""` is used (with TGraph painting option) to draw a 2D; /// distribution:; /// ~~~ {.cpp}; /// tree.Draw(""e1:e2"","""",""A*"");; /// ~~~; /// a scatter plot is produced (with stars in that case) but the axis creation is; /// delegated to TGraph and `htemp` is not created.; ///; /// ### Saving the result of Draw to a histogram; ///; /// If `varexp` contains `>>hnew` (following the variable(s) name(s)),; /// the new histogram called `hnew` is created and it is kept in the current; /// directory (and also the current pad). This works for all dimensions.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>hsqrt"",""y>0""); /// ~~~; /// will draw `sqrt(x)` and save the histogram as ""hsqrt"" in the current; /// directory. To retrieve it do:; /// ~~~ {.cpp}; /// TH1F *hsqrt = (TH1F*)gDirectory->Get(""hsqrt"");; /// ~~~; /// The binning information is taken from the environment variables; /// ~~~ {.cpp}; /// Hist.Binning.?D.?; /// ~~~; /// In addition, the name of the histogram can be followed by up to 9; /// numbers between '(' and ')', where the numbers describe the; /// following:; ///; /// - 1 - bins in x-direction; /// - 2 - lower limit in x-direction; /// - 3 - upper limit in x-direction; /// - 4-6 same for y-direction; /// - 7-9 same for z-direction; ///; /// When a new binning is used the new value will become the default.; /// Values can be skipped.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>hsqrt(500,10,20)""); /// // plot sqrt(x) between 10 and 20 using 500 bins; /// tree.Draw(""sqrt(x):sin(y)>>hsqrt(100,10,60,50,.1,.5)""); /// // plot sqrt(x) against sin(y); /// // 100 bins in x-direction; lower limit on x-axis is 10; upper limit is 60; /// // 50 bins in y-direction; lower limit on y-axis is .1; upper limit is .5; /// ~~~; /// By default, the specified histogram is reset.; /// To co",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:13371,Modifiability,variab,variable,13371,"ed by; /// binning information as described in the previous paragraph.; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>+hsqrt"",""y>0""); /// ~~~; /// will not reset `hsqrt`, but will continue filling. This works for 1-D, 2-D; /// and 3-D histograms.; ///; /// ### Accessing collection objects; ///; /// TTree::Draw default's handling of collections is to assume that any; /// request on a collection pertain to it content. For example, if fTracks; /// is a collection of Track objects, the following:; /// ~~~ {.cpp}; /// tree->Draw(""event.fTracks.fPx"");; /// ~~~; /// will plot the value of fPx for each Track objects inside the collection.; /// Also; /// ~~~ {.cpp}; /// tree->Draw(""event.fTracks.size()"");; /// ~~~; /// would plot the result of the member function Track::size() for each; /// Track object inside the collection.; /// To access information about the collection itself, TTree::Draw support; /// the '@' notation. If a variable which points to a collection is prefixed; /// or postfixed with '@', the next part of the expression will pertain to; /// the collection object. For example:; /// ~~~ {.cpp}; /// tree->Draw(""event.@fTracks.size()"");; /// ~~~; /// will plot the size of the collection referred to by `fTracks` (i.e the number; /// of Track objects).; ///; /// ### Drawing 'objects'; ///; /// When a class has a member function named AsDouble or AsString, requesting; /// to directly draw the object will imply a call to one of the 2 functions.; /// If both AsDouble and AsString are present, AsDouble will be used.; /// AsString can return either a char*, a std::string or a TString.s; /// For example, the following; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp"");; /// ~~~; /// will draw the same histogram as; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp.AsDouble()"");; /// ~~~; /// In addition, when the object is a type TString or std::string, TTree::Draw; /// will call respectively `TString::Data` and `std::string::c_str()`; ///; /// If the object is a TBits, the",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:15027,Modifiability,variab,variables,15027,"ing; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp"");; /// ~~~; /// will draw the same histogram as; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp.AsDouble()"");; /// ~~~; /// In addition, when the object is a type TString or std::string, TTree::Draw; /// will call respectively `TString::Data` and `std::string::c_str()`; ///; /// If the object is a TBits, the histogram will contain the index of the bit; /// that are turned on.; ///; /// ### Retrieving information about the tree itself.; ///; /// You can refer to the tree (or chain) containing the data by using the; /// string 'This'.; /// You can then could any TTree methods. For example:; /// ~~~ {.cpp}; /// tree->Draw(""This->GetReadEntry()"");; /// ~~~; /// will display the local entry numbers be read.; /// ~~~ {.cpp}; /// tree->Draw(""This->GetUserInfo()->At(0)->GetName()"");; /// ~~~; /// will display the name of the first 'user info' object.; ///; /// ### Special functions and variables; ///; /// `Entry$`: A TTree::Draw formula can use the special variable `Entry$`; /// to access the entry number being read. For example to draw every; /// other entry use:; /// ~~~ {.cpp}; /// tree.Draw(""myvar"",""Entry$%2==0"");; /// ~~~; /// - `Entry$` : return the current entry number (`== TTree::GetReadEntry()`); /// - `LocalEntry$` : return the current entry number in the current tree of a; /// chain (`== GetTree()->GetReadEntry()`); /// - `Entries$` : return the total number of entries (== TTree::GetEntries()); /// - `LocalEntries$` : return the total number of entries in the current tree; /// of a chain (== GetTree()->TTree::GetEntries()); /// - `Length$` : return the total number of element of this formula for this; /// entry (`==TTreeFormula::GetNdata()`); /// - `Iteration$` : return the current iteration over this formula for this; /// entry (i.e. varies from 0 to `Length$`).; /// - `Length$(formula )` : return the total number of element of the formula; /// given as a parameter.; /// - `Sum$(formula )` : return the",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:15099,Modifiability,variab,variable,15099,"ing; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp"");; /// ~~~; /// will draw the same histogram as; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp.AsDouble()"");; /// ~~~; /// In addition, when the object is a type TString or std::string, TTree::Draw; /// will call respectively `TString::Data` and `std::string::c_str()`; ///; /// If the object is a TBits, the histogram will contain the index of the bit; /// that are turned on.; ///; /// ### Retrieving information about the tree itself.; ///; /// You can refer to the tree (or chain) containing the data by using the; /// string 'This'.; /// You can then could any TTree methods. For example:; /// ~~~ {.cpp}; /// tree->Draw(""This->GetReadEntry()"");; /// ~~~; /// will display the local entry numbers be read.; /// ~~~ {.cpp}; /// tree->Draw(""This->GetUserInfo()->At(0)->GetName()"");; /// ~~~; /// will display the name of the first 'user info' object.; ///; /// ### Special functions and variables; ///; /// `Entry$`: A TTree::Draw formula can use the special variable `Entry$`; /// to access the entry number being read. For example to draw every; /// other entry use:; /// ~~~ {.cpp}; /// tree.Draw(""myvar"",""Entry$%2==0"");; /// ~~~; /// - `Entry$` : return the current entry number (`== TTree::GetReadEntry()`); /// - `LocalEntry$` : return the current entry number in the current tree of a; /// chain (`== GetTree()->GetReadEntry()`); /// - `Entries$` : return the total number of entries (== TTree::GetEntries()); /// - `LocalEntries$` : return the total number of entries in the current tree; /// of a chain (== GetTree()->TTree::GetEntries()); /// - `Length$` : return the total number of element of this formula for this; /// entry (`==TTreeFormula::GetNdata()`); /// - `Iteration$` : return the current iteration over this formula for this; /// entry (i.e. varies from 0 to `Length$`).; /// - `Length$(formula )` : return the total number of element of the formula; /// given as a parameter.; /// - `Sum$(formula )` : return the",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:17430,Modifiability,variab,variable,17430,"rmula given as a parameter.; /// - `Max$(formula )` : return the maximum (within one TTree entry) of the value of the; /// elements of the formula given as a parameter.; /// - `MinIf$(formula,condition)`; /// - `MaxIf$(formula,condition)` : return the minimum (maximum) (within one TTree entry); /// of the value of the elements of the formula given as a parameter; /// if they match the condition. If no element matches the condition,; /// the result is zero. To avoid the resulting peak at zero, use the; /// pattern:; /// ~~~ {.cpp}; /// tree->Draw(""MinIf$(formula,condition)"",""condition"");; /// ~~~; /// which will avoid calculation `MinIf$` for the entries that have no match; /// for the condition.; /// - `Alt$(primary,alternate)` : return the value of ""primary"" if it is available; /// for the current iteration otherwise return the value of ""alternate"".; /// For example, with arr1[3] and arr2[2]; /// ~~~ {.cpp}; /// tree->Draw(""arr1+Alt$(arr2,0)"");; /// ~~~; /// will draw arr1[0]+arr2[0] ; arr1[1]+arr2[1] and arr1[2]+0; /// Or with a variable size array arr3; /// ~~~ {.cpp}; /// tree->Draw(""Alt$(arr3[0],0)+Alt$(arr3[1],0)+Alt$(arr3[2],0)"");; /// ~~~; /// will draw the sum arr3 for the index 0 to min(2,actual_size_of_arr3-1); /// As a comparison; /// ~~~ {.cpp}; /// tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; /// ~~~; /// will draw the sum arr3 for the index 0 to 2 only if the; /// actual_size_of_arr3 is greater or equal to 3.; /// Note that the array in 'primary' is flattened/linearized thus using; /// `Alt$` with multi-dimensional arrays of different dimensions in unlikely; /// to yield the expected results. To visualize a bit more what elements; /// would be matched by TTree::Draw, TTree::Scan can be used:; /// ~~~ {.cpp}; /// tree->Scan(""arr1:Alt$(arr2,0)"");; /// ~~~; /// will print on one line the value of arr1 and (arr2,0) that will be; /// matched by; /// ~~~ {.cpp}; /// tree->Draw(""arr1-Alt$(arr2,0)"");; /// ~~~; /// The ternary operator is not directly supported in ",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:18928,Modifiability,variab,variable,18928,"nearized thus using; /// `Alt$` with multi-dimensional arrays of different dimensions in unlikely; /// to yield the expected results. To visualize a bit more what elements; /// would be matched by TTree::Draw, TTree::Scan can be used:; /// ~~~ {.cpp}; /// tree->Scan(""arr1:Alt$(arr2,0)"");; /// ~~~; /// will print on one line the value of arr1 and (arr2,0) that will be; /// matched by; /// ~~~ {.cpp}; /// tree->Draw(""arr1-Alt$(arr2,0)"");; /// ~~~; /// The ternary operator is not directly supported in TTree::Draw however, to plot the; /// equivalent of `var2<20 ? -99 : var1`, you can use:; /// ~~~ {.cpp}; /// tree->Draw(""(var2<20)*99+(var2>=20)*var1"","""");; /// ~~~; ///; /// ### Drawing a user function accessing the TTree data directly; ///; /// If the formula contains a file name, TTree::MakeProxy will be used; /// to load and execute this file. In particular it will draw the; /// result of a function with the same name as the file. The function; /// will be executed in a context where the name of the branches can; /// be used as a C++ variable.; ///; /// For example draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// `h1analysisProxy.cxx`, `h1analysProxy.h` and `h1analysisProxyCut.C`; /// which reimplement the selector found in `h1analysis.C`; ///; /// The main features of this facility are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// See TTree::MakeProxy for more details.; ///; /// ### Maki",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:20936,Modifiability,variab,variables,20936," In case of a 2-Dim expression, one can generate a TProfile histogram; /// instead of a TH2F histogram by specifying option=prof or option=profs; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of y:x>>pf; /// where pf is an existing TProfile histogram.; ///; /// ### Making a 2D Profile histogram; ///; /// In case of a 3-Dim expression, one can generate a TProfile2D histogram; /// instead of a TH3F histogram by specifying option=prof or option=profs.; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of z:y:x>>pf; /// where pf is an existing TProfile2D histogram.; ///; /// ### Making a 5D plot using GL; ///; /// If option GL5D is specified together with 5 variables, a 5D plot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Normalizing the output histogram to 1; ///; /// When option contains ""norm"" the output histogram is normalized to 1.; ///; /// ### Saving the result of Draw to a TEventList, a TEntryList",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:21284,Modifiability,variab,variables,21284,"isting TProfile histogram.; ///; /// ### Making a 2D Profile histogram; ///; /// In case of a 3-Dim expression, one can generate a TProfile2D histogram; /// instead of a TH3F histogram by specifying option=prof or option=profs.; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of z:y:x>>pf; /// where pf is an existing TProfile2D histogram.; ///; /// ### Making a 5D plot using GL; ///; /// If option GL5D is specified together with 5 variables, a 5D plot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Normalizing the output histogram to 1; ///; /// When option contains ""norm"" the output histogram is normalized to 1.; ///; /// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; ///; /// TTree::Draw can be used to fill a TEventList object (list of entry numbers); /// instead of histogramming one variable.; /// If varexp0 has the form >>elist , a TEventList object named ""elist""; /// is created in the current directory. elist will contain the list; /// of entry numbers satisfying the current selection.; /// If option ""entrylist"" is used, a TEntryList object i",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:21619,Modifiability,variab,variables,21619,"See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of z:y:x>>pf; /// where pf is an existing TProfile2D histogram.; ///; /// ### Making a 5D plot using GL; ///; /// If option GL5D is specified together with 5 variables, a 5D plot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Normalizing the output histogram to 1; ///; /// When option contains ""norm"" the output histogram is normalized to 1.; ///; /// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; ///; /// TTree::Draw can be used to fill a TEventList object (list of entry numbers); /// instead of histogramming one variable.; /// If varexp0 has the form >>elist , a TEventList object named ""elist""; /// is created in the current directory. elist will contain the list; /// of entry numbers satisfying the current selection.; /// If option ""entrylist"" is used, a TEntryList object is created; /// If the selection contains arrays, vectors or any container class and option; /// ""entrylistarray"" is used, a TEntryListArray object is created; /// containing also the subentries satisfying the selection, i.e. the indices of; /// the branches which hold containers classes.; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:22055,Modifiability,variab,variable,22055,"lot is drawn; /// using OpenGL. See $ROOTSYS/tutorials/tree/staff.C as example.; ///; /// ### Making a parallel coordinates plot; ///; /// In case of a 2-Dim or more expression with the option=para, one can generate; /// a parallel coordinates plot. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Making a candle sticks chart; ///; /// In case of a 2-Dim or more expression with the option=candle, one can generate; /// a candle sticks chart. With that option, the number of dimensions is; /// arbitrary. Giving more than 4 variables without the option=para or; /// option=candle or option=goff will produce an error.; ///; /// ### Normalizing the output histogram to 1; ///; /// When option contains ""norm"" the output histogram is normalized to 1.; ///; /// ### Saving the result of Draw to a TEventList, a TEntryList or a TEntryListArray; ///; /// TTree::Draw can be used to fill a TEventList object (list of entry numbers); /// instead of histogramming one variable.; /// If varexp0 has the form >>elist , a TEventList object named ""elist""; /// is created in the current directory. elist will contain the list; /// of entry numbers satisfying the current selection.; /// If option ""entrylist"" is used, a TEntryList object is created; /// If the selection contains arrays, vectors or any container class and option; /// ""entrylistarray"" is used, a TEntryListArray object is created; /// containing also the subentries satisfying the selection, i.e. the indices of; /// the branches which hold containers classes.; /// Example:; /// ~~~ {.cpp}; /// tree.Draw("">>yplus"",""y>0""); /// ~~~; /// will create a TEventList object named ""yplus"" in the current directory.; /// In an interactive session, one can type (after TTree::Draw); /// ~~~ {.cpp}; /// yplus.Print(""all""); /// ~~~; /// to print the list of entry numbers in the list.; /// ~~~ {.cpp}; /// tree.Dra",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3295,Performance,perform,perform,3295,"ent.GetHistogram()->GetXaxis()->GetXmax(); /// ~~~; /// \endparblock; /// \param [in] selection; /// \parblock; /// A string containing a selection expression.; /// In a selection all usual C++ mathematical and logical operators are allowed.; /// The value corresponding to the selection expression is used as a weight; /// to fill the histogram (a weight of 0 is equivalent to not filling the histogram).\n; /// \n; /// Examples:; /// - ""x<y && sqrt(z)>3.2"": returns a weight = 0 or 1; /// - ""(x+y)*(sqrt(z)>3.2)"": returns a weight = x+y if sqrt(z)>3.2, 0 otherwise\n; /// \n; /// If the selection expression returns an array, it is iterated over in sync with the; /// array returned by the varexp argument (as described below in ""Drawing expressions using arrays and array; /// elements""). For example, if, for a given event, varexp evaluates to; /// `{1., 2., 3.}` and selection evaluates to `{0, 1, 0}`, the resulting histogram is filled with the value 2. For example, for each event here we perform a simple object selection:; /// ~~~{.cpp}; /// // Muon_pt is an array: fill a histogram with the array elements > 100 in each event; /// tree->Draw('Muon_pt', 'Muon_pt > 100'); /// ~~~; /// \endparblock; /// \param [in] option; /// \parblock; /// The drawing option.; /// - When an histogram is produced it can be any histogram drawing option; /// listed in THistPainter.; /// - when no option is specified:; /// - the default histogram drawing option is used; /// if the expression is of the form ""e1"".; /// - if the expression is of the form ""e1:e2""or ""e1:e2:e3"" a cloud of; /// unbinned 2D or 3D points is drawn respectively.; /// - if the expression has four fields ""e1:e2:e3:e4"" a cloud of unbinned 3D; /// points is produced with e1 vs e2 vs e3, and e4 is mapped on the current color; /// palette.; /// - If option COL is specified when varexp has three fields:; /// ~~~ {.cpp}; /// tree.Draw(""e1:e2:e3"","""",""col"");; /// ~~~; /// a 2D scatter is produced with e1 vs e2, and e3 is mapped on t",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:18706,Performance,load,load,18706,"size_of_arr3-1); /// As a comparison; /// ~~~ {.cpp}; /// tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; /// ~~~; /// will draw the sum arr3 for the index 0 to 2 only if the; /// actual_size_of_arr3 is greater or equal to 3.; /// Note that the array in 'primary' is flattened/linearized thus using; /// `Alt$` with multi-dimensional arrays of different dimensions in unlikely; /// to yield the expected results. To visualize a bit more what elements; /// would be matched by TTree::Draw, TTree::Scan can be used:; /// ~~~ {.cpp}; /// tree->Scan(""arr1:Alt$(arr2,0)"");; /// ~~~; /// will print on one line the value of arr1 and (arr2,0) that will be; /// matched by; /// ~~~ {.cpp}; /// tree->Draw(""arr1-Alt$(arr2,0)"");; /// ~~~; /// The ternary operator is not directly supported in TTree::Draw however, to plot the; /// equivalent of `var2<20 ? -99 : var1`, you can use:; /// ~~~ {.cpp}; /// tree->Draw(""(var2<20)*99+(var2>=20)*var1"","""");; /// ~~~; ///; /// ### Drawing a user function accessing the TTree data directly; ///; /// If the formula contains a file name, TTree::MakeProxy will be used; /// to load and execute this file. In particular it will draw the; /// result of a function with the same name as the file. The function; /// will be executed in a context where the name of the branches can; /// be used as a C++ variable.; ///; /// For example draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// `h1analysisProxy.cxx`, `h1analysProxy.h` and `h1analysisProxyCut.C`; /// which reimplement the selector found in `h1analysis.C`; ///; /// The main features of this facility are:; ///; /// * on-demand loading ",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:19600,Performance,load,loading,19600,"used; /// to load and execute this file. In particular it will draw the; /// result of a function with the same name as the file. The function; /// will be executed in a context where the name of the branches can; /// be used as a C++ variable.; ///; /// For example draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// `h1analysisProxy.cxx`, `h1analysProxy.h` and `h1analysisProxyCut.C`; /// which reimplement the selector found in `h1analysis.C`; ///; /// The main features of this facility are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// See TTree::MakeProxy for more details.; ///; /// ### Making a Profile histogram; ///; /// In case of a 2-Dim expression, one can generate a TProfile histogram; /// instead of a TH2F histogram by specifying option=prof or option=profs; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; /// details on the differences.; /// The option=prof is automatically selected in case of y:x>>pf; /// where pf is an existing TProfile histogram.; ///; /// ### Making a 2D Profile histogram; ///; /// In case of a 3-Dim expression, one can generate a TProfile2D histogram; /// instead of a TH3F histogram by specifying option=prof or option=profs.; /// or option=profi or option=profg ; the trailing letter select the way; /// the bin error are computed, See TProfile2D::SetErrorOption for; //",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:24297,Performance,load,loaded,24297," continue to append data to an existing list, use ""+"" in front; /// of the list name;; /// ~~~ {.cpp}; /// tree.Draw("">>+yplus"",""y>0""); /// ~~~; /// will not reset yplus, but will enter the selected entries at the end; /// of the existing list.; ///; /// ### Using a TEventList, TEntryList or TEntryListArray as Input; ///; /// Once a TEventList or a TEntryList object has been generated, it can be used as input; /// for TTree::Draw. Use TTree::SetEventList or TTree::SetEntryList to set the; /// current event list; ///; /// Example 1:; /// ~~~ {.cpp}; /// TEventList *elist = (TEventList*)gDirectory->Get(""yplus"");; /// tree->SetEventList(elist);; /// tree->Draw(""py"");; /// ~~~; /// Example 2:; /// ~~~ {.cpp}; /// TEntryList *elist = (TEntryList*)gDirectory->Get(""yplus"");; /// tree->SetEntryList(elist);; /// tree->Draw(""py"");; /// ~~~; /// If a TEventList object is used as input, a new TEntryList object is created; /// inside the SetEventList function. In case of a TChain, all tree headers are loaded; /// for this transformation. This new object is owned by the chain and is deleted; /// with it, unless the user extracts it by calling GetEntryList() function.; /// See also comments to SetEventList() function of TTree and TChain.; ///; /// If arrays are used in the selection criteria and TEntryListArray is not used,; /// all the entries that have at least one element of the array that satisfy the selection; /// are entered in the list.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw("">>pyplus"",""fTracks.fPy>0"");; /// tree->SetEventList(pyplus);; /// tree->Draw(""fTracks.fPy"");; /// ~~~; /// will draw the fPy of ALL tracks in event with at least one track with; /// a positive fPy.; ///; /// To select only the elements that did match the original selection; /// use TEventList::SetReapplyCut or TEntryList::SetReapplyCut.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw("">>pyplus"",""fTracks.fPy>0"");; /// pyplus->SetReapplyCut(true);; /// tree->SetEventList(pyplus);; /// tree->D",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:16847,Safety,avoid,avoid,16847,"for this; /// entry (i.e. varies from 0 to `Length$`).; /// - `Length$(formula )` : return the total number of element of the formula; /// given as a parameter.; /// - `Sum$(formula )` : return the sum of the value of the elements of the; /// formula given as a parameter. For example the mean for all the elements in; /// one entry can be calculated with: `Sum$(formula )/Length$(formula )`; /// - `Min$(formula )` : return the minimum (within one TTree entry) of the value of the; /// elements of the formula given as a parameter.; /// - `Max$(formula )` : return the maximum (within one TTree entry) of the value of the; /// elements of the formula given as a parameter.; /// - `MinIf$(formula,condition)`; /// - `MaxIf$(formula,condition)` : return the minimum (maximum) (within one TTree entry); /// of the value of the elements of the formula given as a parameter; /// if they match the condition. If no element matches the condition,; /// the result is zero. To avoid the resulting peak at zero, use the; /// pattern:; /// ~~~ {.cpp}; /// tree->Draw(""MinIf$(formula,condition)"",""condition"");; /// ~~~; /// which will avoid calculation `MinIf$` for the entries that have no match; /// for the condition.; /// - `Alt$(primary,alternate)` : return the value of ""primary"" if it is available; /// for the current iteration otherwise return the value of ""alternate"".; /// For example, with arr1[3] and arr2[2]; /// ~~~ {.cpp}; /// tree->Draw(""arr1+Alt$(arr2,0)"");; /// ~~~; /// will draw arr1[0]+arr2[0] ; arr1[1]+arr2[1] and arr1[2]+0; /// Or with a variable size array arr3; /// ~~~ {.cpp}; /// tree->Draw(""Alt$(arr3[0],0)+Alt$(arr3[1],0)+Alt$(arr3[2],0)"");; /// ~~~; /// will draw the sum arr3 for the index 0 to min(2,actual_size_of_arr3-1); /// As a comparison; /// ~~~ {.cpp}; /// tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; /// ~~~; /// will draw the sum arr3 for the index 0 to 2 only if the; /// actual_size_of_arr3 is greater or equal to 3.; /// Note that the array in 'primary' is flattened/li",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:17002,Safety,avoid,avoid,17002,"the formula; /// given as a parameter.; /// - `Sum$(formula )` : return the sum of the value of the elements of the; /// formula given as a parameter. For example the mean for all the elements in; /// one entry can be calculated with: `Sum$(formula )/Length$(formula )`; /// - `Min$(formula )` : return the minimum (within one TTree entry) of the value of the; /// elements of the formula given as a parameter.; /// - `Max$(formula )` : return the maximum (within one TTree entry) of the value of the; /// elements of the formula given as a parameter.; /// - `MinIf$(formula,condition)`; /// - `MaxIf$(formula,condition)` : return the minimum (maximum) (within one TTree entry); /// of the value of the elements of the formula given as a parameter; /// if they match the condition. If no element matches the condition,; /// the result is zero. To avoid the resulting peak at zero, use the; /// pattern:; /// ~~~ {.cpp}; /// tree->Draw(""MinIf$(formula,condition)"",""condition"");; /// ~~~; /// which will avoid calculation `MinIf$` for the entries that have no match; /// for the condition.; /// - `Alt$(primary,alternate)` : return the value of ""primary"" if it is available; /// for the current iteration otherwise return the value of ""alternate"".; /// For example, with arr1[3] and arr2[2]; /// ~~~ {.cpp}; /// tree->Draw(""arr1+Alt$(arr2,0)"");; /// ~~~; /// will draw arr1[0]+arr2[0] ; arr1[1]+arr2[1] and arr1[2]+0; /// Or with a variable size array arr3; /// ~~~ {.cpp}; /// tree->Draw(""Alt$(arr3[0],0)+Alt$(arr3[1],0)+Alt$(arr3[2],0)"");; /// ~~~; /// will draw the sum arr3 for the index 0 to min(2,actual_size_of_arr3-1); /// As a comparison; /// ~~~ {.cpp}; /// tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; /// ~~~; /// will draw the sum arr3 for the index 0 to 2 only if the; /// actual_size_of_arr3 is greater or equal to 3.; /// Note that the array in 'primary' is flattened/linearized thus using; /// `Alt$` with multi-dimensional arrays of different dimensions in unlikely; /// to yield the expect",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:5036,Security,access,access,5036,"he colors for e3 are evaluated once in linear scale before; /// painting. Therefore changing the pad to log scale along Z as no effect; /// on the colors.; /// - if expression has more than four fields the option ""PARA""or ""CANDLE""; /// can be used.; /// - If option contains the string ""goff"", no graphics is generated.; /// \endparblock; /// \param [in] nentries The number of entries to process (default is all); /// \param [in] firstentry The first entry to process (default is 0); ///; /// ### Drawing expressions using arrays and array elements; ///; /// Let assumes, a leaf fMatrix, on the branch fEvent, which is a 3 by 3 array,; /// or a TClonesArray.; /// In a TTree::Draw expression you can now access fMatrix using the following; /// syntaxes:; ///; /// | String passed | What is used for each entry of the tree; /// |-----------------|--------------------------------------------------------|; /// | `fMatrix` | the 9 elements of fMatrix |; /// | `fMatrix[][]` | the 9 elements of fMatrix |; /// | `fMatrix[2][2]` | only the elements fMatrix[2][2] |; /// | `fMatrix[1]` | the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2] |; /// | `fMatrix[1][]` | the 3 elements fMatrix[1][0], fMatrix[1][1] and fMatrix[1][2] |; /// | `fMatrix[][0]` | the 3 elements fMatrix[0][0], fMatrix[1][0] and fMatrix[2][0] |; ///; /// ""fEvent.fMatrix...."" same as ""fMatrix..."" (unless there is more than one leaf named fMatrix!).; ///; /// In summary, if a specific index is not specified for a dimension, TTree::Draw; /// will loop through all the indices along this dimension. Leaving off the; /// last (right most) dimension of specifying then with the two characters '[]'; /// is equivalent. For variable size arrays (and TClonesArray) the range; /// of the first dimension is recalculated for each entry of the tree.; /// You can also specify the index as an expression of any other variables from the; /// tree.; ///; /// TTree::Draw also now properly handling operations involving 2 or more arra",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:10246,Security,access,access,10246,"whatever the drawing; /// option is.; ///; /// In the two and three dimensional cases, with the default drawing option (`""""`),; /// a cloud of points is drawn and the histogram `htemp` is not filled. For all the other; /// drawing options `htemp` will be filled.; ///; /// In all cases `htemp` can be retrieved by calling:; ///; /// ~~~ {.cpp}; /// auto htemp = (TH1F*)gPad->GetPrimitive(""htemp""); // 1D; /// auto htemp = (TH2F*)gPad->GetPrimitive(""htemp""); // 2D; /// auto htemp = (TH3F*)gPad->GetPrimitive(""htemp""); // 3D; /// ~~~; ///; /// In the two dimensional case (`Draw(""e1;e2"")`), with the default drawing option, the; /// data is filled into a TGraph named `Graph`. This TGraph can be retrieved by; /// calling; ///; /// ~~~ {.cpp}; /// auto graph = (TGraph*)gPad->GetPrimitive(""Graph"");; /// ~~~; ///; /// For the three and four dimensional cases, with the default drawing option, an unnamed; /// TPolyMarker3D is produced, and therefore cannot be retrieved.; ///; /// In all cases `htemp` can be used to access the axes. For instance in the 2D case:; ///; /// ~~~ {.cpp}; /// auto htemp = (TH2F*)gPad->GetPrimitive(""htemp"");; /// auto xaxis = htemp->GetXaxis();; /// ~~~; ///; /// When the option `""A""` is used (with TGraph painting option) to draw a 2D; /// distribution:; /// ~~~ {.cpp}; /// tree.Draw(""e1:e2"","""",""A*"");; /// ~~~; /// a scatter plot is produced (with stars in that case) but the axis creation is; /// delegated to TGraph and `htemp` is not created.; ///; /// ### Saving the result of Draw to a histogram; ///; /// If `varexp` contains `>>hnew` (following the variable(s) name(s)),; /// the new histogram called `hnew` is created and it is kept in the current; /// directory (and also the current pad). This works for all dimensions.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>hsqrt"",""y>0""); /// ~~~; /// will draw `sqrt(x)` and save the histogram as ""hsqrt"" in the current; /// directory. To retrieve it do:; /// ~~~ {.cpp}; /// TH1F *hsqrt = (TH1F*)gDir",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:12699,Security,Access,Accessing,12699,"the default.; /// Values can be skipped.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>hsqrt(500,10,20)""); /// // plot sqrt(x) between 10 and 20 using 500 bins; /// tree.Draw(""sqrt(x):sin(y)>>hsqrt(100,10,60,50,.1,.5)""); /// // plot sqrt(x) against sin(y); /// // 100 bins in x-direction; lower limit on x-axis is 10; upper limit is 60; /// // 50 bins in y-direction; lower limit on y-axis is .1; upper limit is .5; /// ~~~; /// By default, the specified histogram is reset.; /// To continue to append data to an existing histogram, use ""+"" in front; /// of the histogram name.; ///; /// A '+' in front of the histogram name is ignored, when the name is followed by; /// binning information as described in the previous paragraph.; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>+hsqrt"",""y>0""); /// ~~~; /// will not reset `hsqrt`, but will continue filling. This works for 1-D, 2-D; /// and 3-D histograms.; ///; /// ### Accessing collection objects; ///; /// TTree::Draw default's handling of collections is to assume that any; /// request on a collection pertain to it content. For example, if fTracks; /// is a collection of Track objects, the following:; /// ~~~ {.cpp}; /// tree->Draw(""event.fTracks.fPx"");; /// ~~~; /// will plot the value of fPx for each Track objects inside the collection.; /// Also; /// ~~~ {.cpp}; /// tree->Draw(""event.fTracks.size()"");; /// ~~~; /// would plot the result of the member function Track::size() for each; /// Track object inside the collection.; /// To access information about the collection itself, TTree::Draw support; /// the '@' notation. If a variable which points to a collection is prefixed; /// or postfixed with '@', the next part of the expression will pertain to; /// the collection object. For example:; /// ~~~ {.cpp}; /// tree->Draw(""event.@fTracks.size()"");; /// ~~~; /// will plot the size of the collection referred to by `fTracks` (i.e the number; /// of Track objects).; ///; /// ### Drawing 'objects'; ///; /// When a class has ",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:13275,Security,access,access,13275,", use ""+"" in front; /// of the histogram name.; ///; /// A '+' in front of the histogram name is ignored, when the name is followed by; /// binning information as described in the previous paragraph.; /// ~~~ {.cpp}; /// tree.Draw(""sqrt(x)>>+hsqrt"",""y>0""); /// ~~~; /// will not reset `hsqrt`, but will continue filling. This works for 1-D, 2-D; /// and 3-D histograms.; ///; /// ### Accessing collection objects; ///; /// TTree::Draw default's handling of collections is to assume that any; /// request on a collection pertain to it content. For example, if fTracks; /// is a collection of Track objects, the following:; /// ~~~ {.cpp}; /// tree->Draw(""event.fTracks.fPx"");; /// ~~~; /// will plot the value of fPx for each Track objects inside the collection.; /// Also; /// ~~~ {.cpp}; /// tree->Draw(""event.fTracks.size()"");; /// ~~~; /// would plot the result of the member function Track::size() for each; /// Track object inside the collection.; /// To access information about the collection itself, TTree::Draw support; /// the '@' notation. If a variable which points to a collection is prefixed; /// or postfixed with '@', the next part of the expression will pertain to; /// the collection object. For example:; /// ~~~ {.cpp}; /// tree->Draw(""event.@fTracks.size()"");; /// ~~~; /// will plot the size of the collection referred to by `fTracks` (i.e the number; /// of Track objects).; ///; /// ### Drawing 'objects'; ///; /// When a class has a member function named AsDouble or AsString, requesting; /// to directly draw the object will imply a call to one of the 2 functions.; /// If both AsDouble and AsString are present, AsDouble will be used.; /// AsString can return either a char*, a std::string or a TString.s; /// For example, the following; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp"");; /// ~~~; /// will draw the same histogram as; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp.AsDouble()"");; /// ~~~; /// In addition, when the object is a type TString or std::s",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:15125,Security,access,access,15125,"ing; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp"");; /// ~~~; /// will draw the same histogram as; /// ~~~ {.cpp}; /// tree->Draw(""event.myTTimeStamp.AsDouble()"");; /// ~~~; /// In addition, when the object is a type TString or std::string, TTree::Draw; /// will call respectively `TString::Data` and `std::string::c_str()`; ///; /// If the object is a TBits, the histogram will contain the index of the bit; /// that are turned on.; ///; /// ### Retrieving information about the tree itself.; ///; /// You can refer to the tree (or chain) containing the data by using the; /// string 'This'.; /// You can then could any TTree methods. For example:; /// ~~~ {.cpp}; /// tree->Draw(""This->GetReadEntry()"");; /// ~~~; /// will display the local entry numbers be read.; /// ~~~ {.cpp}; /// tree->Draw(""This->GetUserInfo()->At(0)->GetName()"");; /// ~~~; /// will display the name of the first 'user info' object.; ///; /// ### Special functions and variables; ///; /// `Entry$`: A TTree::Draw formula can use the special variable `Entry$`; /// to access the entry number being read. For example to draw every; /// other entry use:; /// ~~~ {.cpp}; /// tree.Draw(""myvar"",""Entry$%2==0"");; /// ~~~; /// - `Entry$` : return the current entry number (`== TTree::GetReadEntry()`); /// - `LocalEntry$` : return the current entry number in the current tree of a; /// chain (`== GetTree()->GetReadEntry()`); /// - `Entries$` : return the total number of entries (== TTree::GetEntries()); /// - `LocalEntries$` : return the total number of entries in the current tree; /// of a chain (== GetTree()->TTree::GetEntries()); /// - `Length$` : return the total number of element of this formula for this; /// entry (`==TTreeFormula::GetNdata()`); /// - `Iteration$` : return the current iteration over this formula for this; /// entry (i.e. varies from 0 to `Length$`).; /// - `Length$(formula )` : return the total number of element of the formula; /// given as a parameter.; /// - `Sum$(formula )` : return the",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:18587,Security,access,accessing,18587,"size_of_arr3-1); /// As a comparison; /// ~~~ {.cpp}; /// tree->Draw(""arr3[0]+arr3[1]+arr3[2]"");; /// ~~~; /// will draw the sum arr3 for the index 0 to 2 only if the; /// actual_size_of_arr3 is greater or equal to 3.; /// Note that the array in 'primary' is flattened/linearized thus using; /// `Alt$` with multi-dimensional arrays of different dimensions in unlikely; /// to yield the expected results. To visualize a bit more what elements; /// would be matched by TTree::Draw, TTree::Scan can be used:; /// ~~~ {.cpp}; /// tree->Scan(""arr1:Alt$(arr2,0)"");; /// ~~~; /// will print on one line the value of arr1 and (arr2,0) that will be; /// matched by; /// ~~~ {.cpp}; /// tree->Draw(""arr1-Alt$(arr2,0)"");; /// ~~~; /// The ternary operator is not directly supported in TTree::Draw however, to plot the; /// equivalent of `var2<20 ? -99 : var1`, you can use:; /// ~~~ {.cpp}; /// tree->Draw(""(var2<20)*99+(var2>=20)*var1"","""");; /// ~~~; ///; /// ### Drawing a user function accessing the TTree data directly; ///; /// If the formula contains a file name, TTree::MakeProxy will be used; /// to load and execute this file. In particular it will draw the; /// result of a function with the same name as the file. The function; /// will be executed in a context where the name of the branches can; /// be used as a C++ variable.; ///; /// For example draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// `h1analysisProxy.cxx`, `h1analysProxy.h` and `h1analysisProxyCut.C`; /// which reimplement the selector found in `h1analysis.C`; ///; /// The main features of this facility are:; ///; /// * on-demand loading ",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:26033,Security,access,access,26033,"n; /// use TEventList::SetReapplyCut or TEntryList::SetReapplyCut.; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw("">>pyplus"",""fTracks.fPy>0"");; /// pyplus->SetReapplyCut(true);; /// tree->SetEventList(pyplus);; /// tree->Draw(""fTracks.fPy"");; /// ~~~; /// will draw the fPy of only the tracks that have a positive fPy.; ///; /// To draw only the elements that match a selection in case of arrays,; /// you can also use TEntryListArray (faster in case of a more general selection).; ///; /// Example:; /// ~~~ {.cpp}; /// tree.Draw("">>pyplus"",""fTracks.fPy>0"", ""entrylistarray"");; /// tree->SetEntryList(pyplus);; /// tree->Draw(""fTracks.fPy"");; /// ~~~; /// will draw the fPy of only the tracks that have a positive fPy,; /// but without redoing the selection.; ///; /// Note: Use tree->SetEventList(0) if you do not want use the list as input.; ///; /// ### How to obtain more info from TTree::Draw; ///; /// Once TTree::Draw has been called, it is possible to access useful; /// information still stored in the TTree object via the following functions:; ///; /// - GetSelectedRows() // return the number of values accepted by the selection expression. In case where no selection was specified, returns the number of values processed.; /// - GetV1() // returns a pointer to the double array of V1; /// - GetV2() // returns a pointer to the double array of V2; /// - GetV3() // returns a pointer to the double array of V3; /// - GetV4() // returns a pointer to the double array of V4; /// - GetW() // returns a pointer to the double array of Weights where weight equal the result of the selection expression.; ///; /// where V1,V2,V3 correspond to the expressions in; /// ~~~ {.cpp}; /// TTree::Draw(""V1:V2:V3:V4"",selection);; /// ~~~; /// If the expression has more than 4 component use GetVal(index); ///; /// Example:; /// ~~~ {.cpp}; /// Root > ntuple->Draw(""py:px"",""pz>4"");; /// Root > TGraph *gr = new TGraph(ntuple->GetSelectedRows(),; /// ntuple->GetV2(), ntuple->GetV1());; /// Root > gr->D",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2510,Testability,log,logical,2510,"versus sqrt(x); /// - ""px:py:pz:2.5*E"": produces a 3-d scatter-plot of px vs py ps pz; /// and the color number of each marker will be 2.5*E.; /// If the color number is negative it is set to 0.; /// If the color number is greater than the current number of colors; /// it is set to the highest color number. The default number of; /// colors is 50. See TStyle::SetPalette for setting a new color palette.; ///; /// The expressions can use all the operations and built-in functions; /// supported by TFormula (see TFormula::Analyze()), including free; /// functions taking numerical arguments (e.g. TMath::Bessel()).; /// In addition, you can call member functions taking numerical; /// arguments. For example, these are two valid expressions:; /// ~~~ {.cpp}; /// TMath::BreitWigner(fPx,3,2); /// event.GetHistogram()->GetXaxis()->GetXmax(); /// ~~~; /// \endparblock; /// \param [in] selection; /// \parblock; /// A string containing a selection expression.; /// In a selection all usual C++ mathematical and logical operators are allowed.; /// The value corresponding to the selection expression is used as a weight; /// to fill the histogram (a weight of 0 is equivalent to not filling the histogram).\n; /// \n; /// Examples:; /// - ""x<y && sqrt(z)>3.2"": returns a weight = 0 or 1; /// - ""(x+y)*(sqrt(z)>3.2)"": returns a weight = x+y if sqrt(z)>3.2, 0 otherwise\n; /// \n; /// If the selection expression returns an array, it is iterated over in sync with the; /// array returned by the varexp argument (as described below in ""Drawing expressions using arrays and array; /// elements""). For example, if, for a given event, varexp evaluates to; /// `{1., 2., 3.}` and selection evaluates to `{0, 1, 0}`, the resulting histogram is filled with the value 2. For example, for each event here we perform a simple object selection:; /// ~~~{.cpp}; /// // Muon_pt is an array: fill a histogram with the array elements > 100 in each event; /// tree->Draw('Muon_pt', 'Muon_pt > 100'); /// ~~~; /// \endpa",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4435,Testability,log,log,4435,"->Draw('Muon_pt', 'Muon_pt > 100'); /// ~~~; /// \endparblock; /// \param [in] option; /// \parblock; /// The drawing option.; /// - When an histogram is produced it can be any histogram drawing option; /// listed in THistPainter.; /// - when no option is specified:; /// - the default histogram drawing option is used; /// if the expression is of the form ""e1"".; /// - if the expression is of the form ""e1:e2""or ""e1:e2:e3"" a cloud of; /// unbinned 2D or 3D points is drawn respectively.; /// - if the expression has four fields ""e1:e2:e3:e4"" a cloud of unbinned 3D; /// points is produced with e1 vs e2 vs e3, and e4 is mapped on the current color; /// palette.; /// - If option COL is specified when varexp has three fields:; /// ~~~ {.cpp}; /// tree.Draw(""e1:e2:e3"","""",""col"");; /// ~~~; /// a 2D scatter is produced with e1 vs e2, and e3 is mapped on the current; /// color palette. The colors for e3 are evaluated once in linear scale before; /// painting. Therefore changing the pad to log scale along Z as no effect; /// on the colors.; /// - if expression has more than four fields the option ""PARA""or ""CANDLE""; /// can be used.; /// - If option contains the string ""goff"", no graphics is generated.; /// \endparblock; /// \param [in] nentries The number of entries to process (default is all); /// \param [in] firstentry The first entry to process (default is 0); ///; /// ### Drawing expressions using arrays and array elements; ///; /// Let assumes, a leaf fMatrix, on the branch fEvent, which is a 3 by 3 array,; /// or a TClonesArray.; /// In a TTree::Draw expression you can now access fMatrix using the following; /// syntaxes:; ///; /// | String passed | What is used for each entry of the tree; /// |-----------------|--------------------------------------------------------|; /// | `fMatrix` | the 9 elements of fMatrix |; /// | `fMatrix[][]` | the 9 elements of fMatrix |; /// | `fMatrix[2][2]` | only the elements fMatrix[2][2] |; /// | `fMatrix[1]` | the 3 elements fMatrix[1][0], ",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1288,Usability,simpl,simplest,1288,"parblock; /// A string that takes one of these general forms:; /// - ""e1"" produces a 1-d histogram (TH1F) of expression ""e1""; /// - ""e1:e2"" produces an unbinned 2-d scatter-plot (TGraph) of ""e1""; /// on the y-axis versus ""e2"" on the x-axis; /// - ""e1:e2:e3"" produces an unbinned 3-d scatter-plot (TPolyMarker3D) of ""e1""; /// vs ""e2"" vs ""e3"" on the z-, y-, x-axis, respectively; /// - ""e1:e2:e3:e4"" produces an unbinned 3-d scatter-plot (TPolyMarker3D) of ""e1""; /// vs ""e2"" vs ""e3"" and ""e4"" mapped on the current color palette.; /// (to create histograms in the 2, 3, and 4 dimensional case,; /// see section ""Saving the result of Draw to an histogram""); /// - ""e1:e2:e3:e4:e5"" with option ""GL5D"" produces a 5D plot using OpenGL. `gStyle->SetCanvasPreferGL(true)` is needed.; /// - Any number of variables no fewer than two can be used with the options ""CANDLE"" and ""PARA""; /// - An arbitrary number of variables can be used with the option ""GOFF""; ///; /// Examples:; /// - ""x"": the simplest case, it draws a 1-Dim histogram of column x; /// - ""sqrt(x)"", ""x*y/z"": draw histogram with the values of the specified numerical expression across TTree events; /// - ""y:sqrt(x)"": 2-Dim histogram of y versus sqrt(x); /// - ""px:py:pz:2.5*E"": produces a 3-d scatter-plot of px vs py ps pz; /// and the color number of each marker will be 2.5*E.; /// If the color number is negative it is set to 0.; /// If the color number is greater than the current number of colors; /// it is set to the highest color number. The default number of; /// colors is 50. See TStyle::SetPalette for setting a new color palette.; ///; /// The expressions can use all the operations and built-in functions; /// supported by TFormula (see TFormula::Analyze()), including free; /// functions taking numerical arguments (e.g. TMath::Bessel()).; /// In addition, you can call member functions taking numerical; /// arguments. For example, these are two valid expressions:; /// ~~~ {.cpp}; /// TMath::BreitWigner(fPx,3,2); /// event.Get",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3305,Usability,simpl,simple,3305,"ent.GetHistogram()->GetXaxis()->GetXmax(); /// ~~~; /// \endparblock; /// \param [in] selection; /// \parblock; /// A string containing a selection expression.; /// In a selection all usual C++ mathematical and logical operators are allowed.; /// The value corresponding to the selection expression is used as a weight; /// to fill the histogram (a weight of 0 is equivalent to not filling the histogram).\n; /// \n; /// Examples:; /// - ""x<y && sqrt(z)>3.2"": returns a weight = 0 or 1; /// - ""(x+y)*(sqrt(z)>3.2)"": returns a weight = x+y if sqrt(z)>3.2, 0 otherwise\n; /// \n; /// If the selection expression returns an array, it is iterated over in sync with the; /// array returned by the varexp argument (as described below in ""Drawing expressions using arrays and array; /// elements""). For example, if, for a given event, varexp evaluates to; /// `{1., 2., 3.}` and selection evaluates to `{0, 1, 0}`, the resulting histogram is filled with the value 2. For example, for each event here we perform a simple object selection:; /// ~~~{.cpp}; /// // Muon_pt is an array: fill a histogram with the array elements > 100 in each event; /// tree->Draw('Muon_pt', 'Muon_pt > 100'); /// ~~~; /// \endparblock; /// \param [in] option; /// \parblock; /// The drawing option.; /// - When an histogram is produced it can be any histogram drawing option; /// listed in THistPainter.; /// - when no option is specified:; /// - the default histogram drawing option is used; /// if the expression is of the form ""e1"".; /// - if the expression is of the form ""e1:e2""or ""e1:e2:e3"" a cloud of; /// unbinned 2D or 3D points is drawn respectively.; /// - if the expression has four fields ""e1:e2:e3:e4"" a cloud of unbinned 3D; /// points is produced with e1 vs e2 vs e3, and e4 is mapped on the current color; /// palette.; /// - If option COL is specified when varexp has three fields:; /// ~~~ {.cpp}; /// tree.Draw(""e1:e2:e3"","""",""col"");; /// ~~~; /// a 2D scatter is produced with e1 vs e2, and e3 is mapped on t",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:880,Availability,error,error,880,"////////////////////////////////////////////////////////////////////////////////; /// Fill all branches.; ///; /// This function loops on all the branches of this tree. For; /// each branch, it copies to the branch buffer (basket) the current; /// values of the leaves data types. If a leaf is a simple data type,; /// a simple conversion to a machine independent format has to be done.; ///; /// This machine independent version of the data is copied into a; /// basket (each branch has its own basket). When a basket is full; /// (32k worth of data by default), it is then optionally compressed; /// and written to disk (this operation is also called committing or; /// 'flushing' the basket). The committed baskets are then; /// immediately removed from memory.; ///; /// The function returns the number of bytes committed to the; /// individual branches.; ///; /// If a write error occurs, the number of bytes returned is -1.; ///; /// If no data are written, because, e.g., the branch is disabled,; /// the number of bytes returned is 0.; ///; /// __The baskets are flushed and the Tree header saved at regular intervals__; ///; /// At regular intervals, when the amount of data written so far is; /// greater than fAutoFlush (see SetAutoFlush) all the baskets are flushed to disk.; /// This makes future reading faster as it guarantees that baskets belonging to nearby; /// entries will be on the same disk region.; /// When the first call to flush the baskets happen, we also take this opportunity; /// to optimize the baskets buffers.; /// We also check if the amount of data written is greater than fAutoSave (see SetAutoSave).; /// In this case we also write the Tree header. This makes the Tree recoverable up to this point; /// in case the program writing the Tree crashes.; /// The decisions to FlushBaskets and Auto Save can be made based either on the number; /// of bytes written (fAutoFlush and fAutoSave negative) or on the number of entries; /// written (fAutoFlush and fAutoSave po",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1706,Availability,recover,recoverable,1706,"it is then optionally compressed; /// and written to disk (this operation is also called committing or; /// 'flushing' the basket). The committed baskets are then; /// immediately removed from memory.; ///; /// The function returns the number of bytes committed to the; /// individual branches.; ///; /// If a write error occurs, the number of bytes returned is -1.; ///; /// If no data are written, because, e.g., the branch is disabled,; /// the number of bytes returned is 0.; ///; /// __The baskets are flushed and the Tree header saved at regular intervals__; ///; /// At regular intervals, when the amount of data written so far is; /// greater than fAutoFlush (see SetAutoFlush) all the baskets are flushed to disk.; /// This makes future reading faster as it guarantees that baskets belonging to nearby; /// entries will be on the same disk region.; /// When the first call to flush the baskets happen, we also take this opportunity; /// to optimize the baskets buffers.; /// We also check if the amount of data written is greater than fAutoSave (see SetAutoSave).; /// In this case we also write the Tree header. This makes the Tree recoverable up to this point; /// in case the program writing the Tree crashes.; /// The decisions to FlushBaskets and Auto Save can be made based either on the number; /// of bytes written (fAutoFlush and fAutoSave negative) or on the number of entries; /// written (fAutoFlush and fAutoSave positive).; /// Note that the user can decide to call FlushBaskets and AutoSave in her event loop; /// base on the number of events written instead of the number of bytes written.; ///; /// \note Calling `TTree::FlushBaskets` too often increases the IO time.; ///; /// \note Calling `TTree::AutoSave` too often increases the IO time and also the; /// file size.; ///; /// \note This method calls `TTree::ChangeFile` when the tree reaches a size; /// greater than `TTree::fgMaxTreeSize`. This doesn't happen if the tree is; /// attached to a `TMemFile` or derivate.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1513,Performance,optimiz,optimize,1513,"ch has its own basket). When a basket is full; /// (32k worth of data by default), it is then optionally compressed; /// and written to disk (this operation is also called committing or; /// 'flushing' the basket). The committed baskets are then; /// immediately removed from memory.; ///; /// The function returns the number of bytes committed to the; /// individual branches.; ///; /// If a write error occurs, the number of bytes returned is -1.; ///; /// If no data are written, because, e.g., the branch is disabled,; /// the number of bytes returned is 0.; ///; /// __The baskets are flushed and the Tree header saved at regular intervals__; ///; /// At regular intervals, when the amount of data written so far is; /// greater than fAutoFlush (see SetAutoFlush) all the baskets are flushed to disk.; /// This makes future reading faster as it guarantees that baskets belonging to nearby; /// entries will be on the same disk region.; /// When the first call to flush the baskets happen, we also take this opportunity; /// to optimize the baskets buffers.; /// We also check if the amount of data written is greater than fAutoSave (see SetAutoSave).; /// In this case we also write the Tree header. This makes the Tree recoverable up to this point; /// in case the program writing the Tree crashes.; /// The decisions to FlushBaskets and Auto Save can be made based either on the number; /// of bytes written (fAutoFlush and fAutoSave negative) or on the number of entries; /// written (fAutoFlush and fAutoSave positive).; /// Note that the user can decide to call FlushBaskets and AutoSave in her event loop; /// base on the number of events written instead of the number of bytes written.; ///; /// \note Calling `TTree::FlushBaskets` too often increases the IO time.; ///; /// \note Calling `TTree::AutoSave` too often increases the IO time and also the; /// file size.; ///; /// \note This method calls `TTree::ChangeFile` when the tree reaches a size; /// greater than `TTree::fgMaxTreeSi",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1706,Safety,recover,recoverable,1706,"it is then optionally compressed; /// and written to disk (this operation is also called committing or; /// 'flushing' the basket). The committed baskets are then; /// immediately removed from memory.; ///; /// The function returns the number of bytes committed to the; /// individual branches.; ///; /// If a write error occurs, the number of bytes returned is -1.; ///; /// If no data are written, because, e.g., the branch is disabled,; /// the number of bytes returned is 0.; ///; /// __The baskets are flushed and the Tree header saved at regular intervals__; ///; /// At regular intervals, when the amount of data written so far is; /// greater than fAutoFlush (see SetAutoFlush) all the baskets are flushed to disk.; /// This makes future reading faster as it guarantees that baskets belonging to nearby; /// entries will be on the same disk region.; /// When the first call to flush the baskets happen, we also take this opportunity; /// to optimize the baskets buffers.; /// We also check if the amount of data written is greater than fAutoSave (see SetAutoSave).; /// In this case we also write the Tree header. This makes the Tree recoverable up to this point; /// in case the program writing the Tree crashes.; /// The decisions to FlushBaskets and Auto Save can be made based either on the number; /// of bytes written (fAutoFlush and fAutoSave negative) or on the number of entries; /// written (fAutoFlush and fAutoSave positive).; /// Note that the user can decide to call FlushBaskets and AutoSave in her event loop; /// base on the number of events written instead of the number of bytes written.; ///; /// \note Calling `TTree::FlushBaskets` too often increases the IO time.; ///; /// \note Calling `TTree::AutoSave` too often increases the IO time and also the; /// file size.; ///; /// \note This method calls `TTree::ChangeFile` when the tree reaches a size; /// greater than `TTree::fgMaxTreeSize`. This doesn't happen if the tree is; /// attached to a `TMemFile` or derivate.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:296,Usability,simpl,simple,296,"////////////////////////////////////////////////////////////////////////////////; /// Fill all branches.; ///; /// This function loops on all the branches of this tree. For; /// each branch, it copies to the branch buffer (basket) the current; /// values of the leaves data types. If a leaf is a simple data type,; /// a simple conversion to a machine independent format has to be done.; ///; /// This machine independent version of the data is copied into a; /// basket (each branch has its own basket). When a basket is full; /// (32k worth of data by default), it is then optionally compressed; /// and written to disk (this operation is also called committing or; /// 'flushing' the basket). The committed baskets are then; /// immediately removed from memory.; ///; /// The function returns the number of bytes committed to the; /// individual branches.; ///; /// If a write error occurs, the number of bytes returned is -1.; ///; /// If no data are written, because, e.g., the branch is disabled,; /// the number of bytes returned is 0.; ///; /// __The baskets are flushed and the Tree header saved at regular intervals__; ///; /// At regular intervals, when the amount of data written so far is; /// greater than fAutoFlush (see SetAutoFlush) all the baskets are flushed to disk.; /// This makes future reading faster as it guarantees that baskets belonging to nearby; /// entries will be on the same disk region.; /// When the first call to flush the baskets happen, we also take this opportunity; /// to optimize the baskets buffers.; /// We also check if the amount of data written is greater than fAutoSave (see SetAutoSave).; /// In this case we also write the Tree header. This makes the Tree recoverable up to this point; /// in case the program writing the Tree crashes.; /// The decisions to FlushBaskets and Auto Save can be made based either on the number; /// of bytes written (fAutoFlush and fAutoSave negative) or on the number of entries; /// written (fAutoFlush and fAutoSave po",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:321,Usability,simpl,simple,321,"////////////////////////////////////////////////////////////////////////////////; /// Fill all branches.; ///; /// This function loops on all the branches of this tree. For; /// each branch, it copies to the branch buffer (basket) the current; /// values of the leaves data types. If a leaf is a simple data type,; /// a simple conversion to a machine independent format has to be done.; ///; /// This machine independent version of the data is copied into a; /// basket (each branch has its own basket). When a basket is full; /// (32k worth of data by default), it is then optionally compressed; /// and written to disk (this operation is also called committing or; /// 'flushing' the basket). The committed baskets are then; /// immediately removed from memory.; ///; /// The function returns the number of bytes committed to the; /// individual branches.; ///; /// If a write error occurs, the number of bytes returned is -1.; ///; /// If no data are written, because, e.g., the branch is disabled,; /// the number of bytes returned is 0.; ///; /// __The baskets are flushed and the Tree header saved at regular intervals__; ///; /// At regular intervals, when the amount of data written so far is; /// greater than fAutoFlush (see SetAutoFlush) all the baskets are flushed to disk.; /// This makes future reading faster as it guarantees that baskets belonging to nearby; /// entries will be on the same disk region.; /// When the first call to flush the baskets happen, we also take this opportunity; /// to optimize the baskets buffers.; /// We also check if the amount of data written is greater than fAutoSave (see SetAutoSave).; /// In this case we also write the Tree header. This makes the Tree recoverable up to this point; /// in case the program writing the Tree crashes.; /// The decisions to FlushBaskets and Auto Save can be made based either on the number; /// of bytes written (fAutoFlush and fAutoSave negative) or on the number of entries; /// written (fAutoFlush and fAutoSave po",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:50,Deployability,update,update,50,"// Case of one single super branch. Automatically update; // all the branch addresses if a new object was created.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:70,Availability,error,error,70,"// Loop over all branches, filling and accumulating bytes written and error counts.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:103,Performance,optimiz,optimize,103,"// avoid auto flushing again later; // When we are in one-basket-per-cluster mode, there is no need to optimize basket:; // they will automatically grow to the size needed for an event cluster (with the basket; // shrinking preventing them from growing too much larger than the actually-used space).",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3,Safety,avoid,avoid,3,"// avoid auto flushing again later; // When we are in one-basket-per-cluster mode, there is no need to optimize basket:; // they will automatically grow to the size needed for an event cluster (with the basket; // shrinking preventing them from growing too much larger than the actually-used space).",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:7,Testability,test,test,7,"// Use test on entries rather than bytes; // subsequently in run",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1565,Availability,error,error,1565,"////////////////////////////////////////////////////////////////////////////////; /// Write to disk all the basket that have not yet been individually written and; /// create an event cluster boundary (by default).; ///; /// If the caller wishes to flush the baskets but not create an event cluster,; /// then set create_cluster to false.; ///; /// If ROOT has IMT-mode enabled, this will launch multiple TBB tasks in parallel; /// via TThreadExecutor to do this operation; one per basket compression. If the; /// caller utilizes TBB also, care must be taken to prevent deadlocks.; ///; /// For example, let's say the caller holds mutex A and calls FlushBaskets; while; /// TBB is waiting for the ROOT compression tasks to complete, it may decide to; /// run another one of the user's tasks in this thread. If the second user task; /// tries to acquire A, then a deadlock will occur. The example call sequence; /// looks like this:; ///; /// - User acquires mutex A; /// - User calls FlushBaskets.; /// - ROOT launches N tasks and calls wait.; /// - TBB schedules another user task, T2.; /// - T2 tries to acquire mutex A.; ///; /// At this point, the thread will deadlock: the code may function with IMT-mode; /// disabled if the user assumed the legacy code never would run their own TBB; /// tasks.; ///; /// SO: users of TBB who want to enable IMT-mode should carefully review their; /// locking patterns and make sure they hold no coarse-grained application; /// locks when they invoke ROOT.; ///; /// Return the number of bytes written or -1 in case of write error.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1054,Energy Efficiency,schedul,schedules,1054,"////////////////////////////////////////////////////////////////////////////////; /// Write to disk all the basket that have not yet been individually written and; /// create an event cluster boundary (by default).; ///; /// If the caller wishes to flush the baskets but not create an event cluster,; /// then set create_cluster to false.; ///; /// If ROOT has IMT-mode enabled, this will launch multiple TBB tasks in parallel; /// via TThreadExecutor to do this operation; one per basket compression. If the; /// caller utilizes TBB also, care must be taken to prevent deadlocks.; ///; /// For example, let's say the caller holds mutex A and calls FlushBaskets; while; /// TBB is waiting for the ROOT compression tasks to complete, it may decide to; /// run another one of the user's tasks in this thread. If the second user task; /// tries to acquire A, then a deadlock will occur. The example call sequence; /// looks like this:; ///; /// - User acquires mutex A; /// - User calls FlushBaskets.; /// - ROOT launches N tasks and calls wait.; /// - TBB schedules another user task, T2.; /// - T2 tries to acquire mutex A.; ///; /// At this point, the thread will deadlock: the code may function with IMT-mode; /// disabled if the user assumed the legacy code never would run their own TBB; /// tasks.; ///; /// SO: users of TBB who want to enable IMT-mode should carefully review their; /// locking patterns and make sure they hold no coarse-grained application; /// locks when they invoke ROOT.; ///; /// Return the number of bytes written or -1 in case of write error.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:164,Integrability,interface,interface,164,"////////////////////////////////////////////////////////////////////////////////; /// Internal implementation of the FlushBaskets algorithm.; /// Unlike the public interface, this does NOT create an explicit event cluster; /// boundary; it is up to the (internal) caller to determine whether that should; /// done.; ///; /// Otherwise, the comments for FlushBaskets applies.; ///",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:237,Energy Efficiency,schedul,scheduler,237,"// The branch to process is obtained when the task starts to run.; // This way, since branches are sorted, we make sure that branches; // leading to big tasks are processed first. If we assigned the; // branch at task creation time, the scheduler would not necessarily; // respect our sorting.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:86,Safety,avoid,avoid,86,"/// Do a breadth first search through the implied hierarchy; /// of branches.; /// To avoid scanning through the list multiple time; /// we also remember the 'depth-first' match.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:246,Deployability,configurat,configuration,246,"////////////////////////////////////////////////////////////////////////////////; /// Used for automatic sizing of the cache.; ///; /// Estimates a suitable size for the tree cache based on AutoFlush.; /// A cache sizing factor is taken from the configuration. If this yields zero; /// and withDefault is true the historical algorithm for default size is used.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:246,Modifiability,config,configuration,246,"////////////////////////////////////////////////////////////////////////////////; /// Used for automatic sizing of the cache.; ///; /// Estimates a suitable size for the tree cache based on AutoFlush.; /// A cache sizing factor is taken from the configuration. If this yields zero; /// and withDefault is true the historical algorithm for default size is used.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:119,Performance,cache,cache,119,"////////////////////////////////////////////////////////////////////////////////; /// Used for automatic sizing of the cache.; ///; /// Estimates a suitable size for the tree cache based on AutoFlush.; /// A cache sizing factor is taken from the configuration. If this yields zero; /// and withDefault is true the historical algorithm for default size is used.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:175,Performance,cache,cache,175,"////////////////////////////////////////////////////////////////////////////////; /// Used for automatic sizing of the cache.; ///; /// Estimates a suitable size for the tree cache based on AutoFlush.; /// A cache sizing factor is taken from the configuration. If this yields zero; /// and withDefault is true the historical algorithm for default size is used.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:208,Performance,cache,cache,208,"////////////////////////////////////////////////////////////////////////////////; /// Used for automatic sizing of the cache.; ///; /// Estimates a suitable size for the tree cache based on AutoFlush.; /// A cache sizing factor is taken from the configuration. If this yields zero; /// and withDefault is true the historical algorithm for default size is used.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:10,Performance,cache,cache,10,"// create cache if wanted",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:165,Availability,error,errors,165,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of entries matching the selection.; /// Return -1 in case of errors.; ///; /// If the selection uses any arrays or containers, we return the number; /// of entries where at least one element match the selection.; /// GetEntries is implemented using the selector class TSelectorEntries,; /// which can be used directly (see code in TTreePlayer::GetEntries) for; /// additional option.; /// If SetEventList was used on the TTree or TChain, only that subset; /// of entries will be considered.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:390,Availability,error,error,390,"////////////////////////////////////////////////////////////////////////////////; /// Read all branches of entry and return total number of bytes read.; ///; /// - `getall = 0` : get only active branches; /// - `getall = 1` : get all branches; ///; /// The function returns the number of bytes read from the input buffer.; /// If entry does not exist the function returns 0.; /// If an I/O error occurs, the function returns -1.; ///; /// If the Tree has friends, also read the friends entry.; ///; /// To activate/deactivate one or more branches, use TBranch::SetBranchStatus; /// For example, if you have a Tree with several hundred branches, and you; /// are interested only by branches named ""a"" and ""b"", do; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""*"",0); //disable all branches; /// mytree.SetBranchStatus(""a"",1);; /// mytree.SetBranchStatus(""b"",1);; /// ~~~; /// when calling mytree.GetEntry(i); only branches ""a"" and ""b"" will be read.; ///; /// __WARNING!!__; /// If your Tree has been created in split mode with a parent branch ""parent."",; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent"",1);; /// ~~~; /// will not activate the sub-branches of ""parent"". You should do:; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent*"",1);; /// ~~~; /// Without the trailing dot in the branch creation you have no choice but to; /// call SetBranchStatus explicitly for each of the sub branches.; ///; /// An alternative is to call directly; /// ~~~ {.cpp}; /// brancha.GetEntry(i); /// branchb.GetEntry(i);; /// ~~~; /// ## IMPORTANT NOTE; ///; /// By default, GetEntry reuses the space allocated by the previous object; /// for each branch. You can force the previous object to be automatically; /// deleted if you call mybranch.SetAutoDelete(true) (default is false).; ///; /// Example:; ///; /// Consider the example in $ROOTSYS/test/Event.h; /// The top level branch in the tree T is declared with:; /// ~~~ {.cpp}; /// Event *event = 0; //event must be null or point to a valid object; /// //i",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4324,Availability,avail,available,4324," event will be overwritten by the new data. All internal members that are; /// TObject* are automatically deleted. It is important that these members; /// be in a valid state when GetEntry is called. Pointers must be correctly; /// initialized. However these internal members will not be deleted if the; /// characters ""->"" are specified as the first characters in the comment; /// field of the data member declaration.; ///; /// If ""->"" is specified, the pointer member is read via pointer->Streamer(buf).; /// In this case, it is assumed that the pointer is never null (case of; /// pointer TClonesArray *fTracks in the Event example). If ""->"" is not; /// specified, the pointer member is read via buf >> pointer. In this case; /// the pointer may be null. Note that the option with ""->"" is faster to; /// read or write and it also consumes less space in the file.; ///; /// ## OPTION 2; ///; /// The option AutoDelete is set; /// ~~~ {.cpp}; /// TBranch *branch = T.GetBranch(""event"");; /// branch->SetAddress(&event);; /// branch->SetAutoDelete(true);; /// for (Long64_t i=0;i<nentries;i++) {; /// T.GetEntry(i);; /// // the object event has been filled at this point; /// }; /// ~~~; /// In this case, at each iteration, the object event is deleted by GetEntry; /// and a new instance of Event is created and filled.; ///; /// ## OPTION 3; ///; /// ~~~ {.cpp}; /// Same as option 1, but you delete yourself the event.; ///; /// for (Long64_t i=0;i<nentries;i++) {; /// delete event;; /// event = 0; // EXTREMELY IMPORTANT; /// T.GetEntry(i);; /// // the object event has been filled at this point; /// }; /// ~~~; /// It is strongly recommended to use the default option 1. It has the; /// additional advantage that functions like TTree::Draw (internally calling; /// TTree::GetEntry) will be functional even when the classes in the file are; /// not available.; ///; /// Note: See the comments in TBranchElement::SetAddress() for the; /// object ownership policy of the underlying (user) data.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1590,Energy Efficiency,allocate,allocated,1590,"Status; /// For example, if you have a Tree with several hundred branches, and you; /// are interested only by branches named ""a"" and ""b"", do; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""*"",0); //disable all branches; /// mytree.SetBranchStatus(""a"",1);; /// mytree.SetBranchStatus(""b"",1);; /// ~~~; /// when calling mytree.GetEntry(i); only branches ""a"" and ""b"" will be read.; ///; /// __WARNING!!__; /// If your Tree has been created in split mode with a parent branch ""parent."",; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent"",1);; /// ~~~; /// will not activate the sub-branches of ""parent"". You should do:; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent*"",1);; /// ~~~; /// Without the trailing dot in the branch creation you have no choice but to; /// call SetBranchStatus explicitly for each of the sub branches.; ///; /// An alternative is to call directly; /// ~~~ {.cpp}; /// brancha.GetEntry(i); /// branchb.GetEntry(i);; /// ~~~; /// ## IMPORTANT NOTE; ///; /// By default, GetEntry reuses the space allocated by the previous object; /// for each branch. You can force the previous object to be automatically; /// deleted if you call mybranch.SetAutoDelete(true) (default is false).; ///; /// Example:; ///; /// Consider the example in $ROOTSYS/test/Event.h; /// The top level branch in the tree T is declared with:; /// ~~~ {.cpp}; /// Event *event = 0; //event must be null or point to a valid object; /// //it must be initialized; /// T.SetBranchAddress(""event"",&event);; /// ~~~; /// When reading the Tree, one can choose one of these 3 options:; ///; /// ## OPTION 1; ///; /// ~~~ {.cpp}; /// for (Long64_t i=0;i<nentries;i++) {; /// T.GetEntry(i);; /// // the object event has been filled at this point; /// }; /// ~~~; /// The default (recommended). At the first entry an object of the class; /// Event will be created and pointed by event. At the following entries,; /// event will be overwritten by the new data. All internal members that are; /// TObject* are automatical",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1835,Testability,test,test,1835,"tatus(""a"",1);; /// mytree.SetBranchStatus(""b"",1);; /// ~~~; /// when calling mytree.GetEntry(i); only branches ""a"" and ""b"" will be read.; ///; /// __WARNING!!__; /// If your Tree has been created in split mode with a parent branch ""parent."",; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent"",1);; /// ~~~; /// will not activate the sub-branches of ""parent"". You should do:; /// ~~~ {.cpp}; /// mytree.SetBranchStatus(""parent*"",1);; /// ~~~; /// Without the trailing dot in the branch creation you have no choice but to; /// call SetBranchStatus explicitly for each of the sub branches.; ///; /// An alternative is to call directly; /// ~~~ {.cpp}; /// brancha.GetEntry(i); /// branchb.GetEntry(i);; /// ~~~; /// ## IMPORTANT NOTE; ///; /// By default, GetEntry reuses the space allocated by the previous object; /// for each branch. You can force the previous object to be automatically; /// deleted if you call mybranch.SetAutoDelete(true) (default is false).; ///; /// Example:; ///; /// Consider the example in $ROOTSYS/test/Event.h; /// The top level branch in the tree T is declared with:; /// ~~~ {.cpp}; /// Event *event = 0; //event must be null or point to a valid object; /// //it must be initialized; /// T.SetBranchAddress(""event"",&event);; /// ~~~; /// When reading the Tree, one can choose one of these 3 options:; ///; /// ## OPTION 1; ///; /// ~~~ {.cpp}; /// for (Long64_t i=0;i<nentries;i++) {; /// T.GetEntry(i);; /// // the object event has been filled at this point; /// }; /// ~~~; /// The default (recommended). At the first entry an object of the class; /// Event will be created and pointed by event. At the following entries,; /// event will be overwritten by the new data. All internal members that are; /// TObject* are automatically deleted. It is important that these members; /// be in a valid state when GetEntry is called. Pointers must be correctly; /// initialized. However these internal members will not be deleted if the; /// characters ""->"" are specified as ",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:10,Performance,cache,cache,10,"// create cache if wanted",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:237,Energy Efficiency,schedul,scheduler,237,"// The branch to process is obtained when the task starts to run.; // This way, since branches are sorted, we make sure that branches; // leading to big tasks are processed first. If we assigned the; // branch at task creation time, the scheduler would not necessarily; // respect our sorting.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:674,Integrability,depend,depends,674,"////////////////////////////////////////////////////////////////////////////////; /// Divides the top-level branches into two vectors: (i) branches to be; /// processed sequentially and (ii) branches to be processed in parallel.; /// Even if IMT is on, some branches might need to be processed first and in a; /// sequential fashion: in the parallelization of GetEntry, those are the; /// branches that store the size of another branch for every entry; /// (e.g. the size of an array branch). If such branches were processed; /// in parallel with the rest, there could be two threads invoking; /// TBranch::GetEntry on one of them at the same time, since a branch that; /// depends on a size (or count) branch will also invoke GetEntry on the latter.; /// This method can be invoked several times during the event loop if the TTree; /// is being written, for example when adding new branches. In these cases, the; /// `checkLeafCount` parameter is false.; /// \param[in] checkLeafCount True if we need to check whether some branches are; /// count leaves.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:46,Safety,safe,safely,46,"// Any branch that is not a leaf count can be safely processed in parallel when reading; // We need to reset the vector to make sure we do not re-add several times the same branch.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:449,Performance,perform,performs,449,"////////////////////////////////////////////////////////////////////////////////; /// Return entry number corresponding to major and minor number.; /// Note that this function returns only the entry number, not the data; /// To read the data corresponding to an entry number, use TTree::GetEntryWithIndex; /// the BuildIndex function has created a table of Long64_t* of sorted values; /// corresponding to val = major<<31 + minor;; /// The function performs binary search in this sorted table.; /// If it finds a pair that matches val, it returns directly the; /// index in the table.; /// If an entry corresponding to major and minor is not found, the function; /// returns the index of the major,minor pair immediately lower than the; /// requested value, ie it will return -1 if the pair is lower than; /// the first entry in the index.; ///; /// See also GetEntryNumberWithIndex",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:449,Performance,perform,performs,449,"////////////////////////////////////////////////////////////////////////////////; /// Return entry number corresponding to major and minor number.; /// Note that this function returns only the entry number, not the data; /// To read the data corresponding to an entry number, use TTree::GetEntryWithIndex; /// the BuildIndex function has created a table of Long64_t* of sorted values; /// corresponding to val = major<<31 + minor;; /// The function performs binary search in this sorted table.; /// If it finds a pair that matches val, it returns directly the; /// index in the table, otherwise it returns -1.; ///; /// See also GetEntryNumberWithBestIndex",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:10,Performance,cache,cache,10,"// create cache if wanted",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:161,Safety,avoid,avoid,161,"// The start of the branch name is identical to the content; // of 'aname' before the first '/'.; // Let's make sure that it is not longer (we are trying; // to avoid having jet2/value match the branch jet23",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:10,Performance,cache,cache,10,"// create cache if wanted",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:10,Performance,cache,cache,10,"// create cache if wanted",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the TTreePlayer (if not already done).",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:220,Performance,cache,cache,220,"////////////////////////////////////////////////////////////////////////////////; /// Find and return the TTreeCache registered with the file and which may; /// contain branches for us. If create is true and there is no cache; /// a new cache is created with default size.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:237,Performance,cache,cache,237,"////////////////////////////////////////////////////////////////////////////////; /// Find and return the TTreeCache registered with the file and which may; /// contain branches for us. If create is true and there is no cache; /// a new cache is created with default size.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:422,Usability,Clear,Clear,422,"////////////////////////////////////////////////////////////////////////////////; /// Return a pointer to the list containing user objects associated to this tree.; ///; /// The list is automatically created if it does not exist.; ///; /// WARNING: By default the TTree destructor will delete all objects added; /// to this list. If you do not want these objects to be deleted,; /// call:; ///; /// mytree->GetUserInfo()->Clear();; ///; /// before deleting the tree.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:407,Availability,error,error,407,"////////////////////////////////////////////////////////////////////////////////; /// Read in memory all baskets from all branches up to the limit of maxmemory bytes.; ///; /// If maxmemory is non null and positive SetMaxVirtualSize is called; /// with this value. Default for maxmemory is 2000000000 (2 Gigabytes).; /// The function returns the total number of baskets read into memory; /// if negative an error occurred while loading the branches.; /// This method may be called to force branch baskets in memory; /// when random access to branch entries is required.; /// If random access to only a few branches is required, you should; /// call directly TBranch::LoadBaskets.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:428,Performance,load,loading,428,"////////////////////////////////////////////////////////////////////////////////; /// Read in memory all baskets from all branches up to the limit of maxmemory bytes.; ///; /// If maxmemory is non null and positive SetMaxVirtualSize is called; /// with this value. Default for maxmemory is 2000000000 (2 Gigabytes).; /// The function returns the total number of baskets read into memory; /// if negative an error occurred while loading the branches.; /// This method may be called to force branch baskets in memory; /// when random access to branch entries is required.; /// If random access to only a few branches is required, you should; /// call directly TBranch::LoadBaskets.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:667,Performance,Load,LoadBaskets,667,"////////////////////////////////////////////////////////////////////////////////; /// Read in memory all baskets from all branches up to the limit of maxmemory bytes.; ///; /// If maxmemory is non null and positive SetMaxVirtualSize is called; /// with this value. Default for maxmemory is 2000000000 (2 Gigabytes).; /// The function returns the total number of baskets read into memory; /// if negative an error occurred while loading the branches.; /// This method may be called to force branch baskets in memory; /// when random access to branch entries is required.; /// If random access to only a few branches is required, you should; /// call directly TBranch::LoadBaskets.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:532,Security,access,access,532,"////////////////////////////////////////////////////////////////////////////////; /// Read in memory all baskets from all branches up to the limit of maxmemory bytes.; ///; /// If maxmemory is non null and positive SetMaxVirtualSize is called; /// with this value. Default for maxmemory is 2000000000 (2 Gigabytes).; /// The function returns the total number of baskets read into memory; /// if negative an error occurred while loading the branches.; /// This method may be called to force branch baskets in memory; /// when random access to branch entries is required.; /// If random access to only a few branches is required, you should; /// call directly TBranch::LoadBaskets.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:585,Security,access,access,585,"////////////////////////////////////////////////////////////////////////////////; /// Read in memory all baskets from all branches up to the limit of maxmemory bytes.; ///; /// If maxmemory is non null and positive SetMaxVirtualSize is called; /// with this value. Default for maxmemory is 2000000000 (2 Gigabytes).; /// The function returns the total number of baskets read into memory; /// if negative an error occurred while loading the branches.; /// This method may be called to force branch baskets in memory; /// when random access to branch entries is required.; /// If random access to only a few branches is required, you should; /// call directly TBranch::LoadBaskets.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:202,Availability,error,error,202,"////////////////////////////////////////////////////////////////////////////////; /// Set current entry.; ///; /// Returns -2 if entry does not exist (just as TChain::LoadTree()).; /// Returns -6 if an error occurs in the notification callback (just as TChain::LoadTree()).; ///; /// Calls fNotify->Notify() (if fNotify is not null) when starting the processing of a new tree.; ///; /// \note This function is overloaded in TChain.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:167,Performance,Load,LoadTree,167,"////////////////////////////////////////////////////////////////////////////////; /// Set current entry.; ///; /// Returns -2 if entry does not exist (just as TChain::LoadTree()).; /// Returns -6 if an error occurs in the notification callback (just as TChain::LoadTree()).; ///; /// Calls fNotify->Notify() (if fNotify is not null) when starting the processing of a new tree.; ///; /// \note This function is overloaded in TChain.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:261,Performance,Load,LoadTree,261,"////////////////////////////////////////////////////////////////////////////////; /// Set current entry.; ///; /// Returns -2 if entry does not exist (just as TChain::LoadTree()).; /// Returns -6 if an error occurs in the notification callback (just as TChain::LoadTree()).; ///; /// Calls fNotify->Notify() (if fNotify is not null) when starting the processing of a new tree.; ///; /// \note This function is overloaded in TChain.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:41,Safety,avoid,avoid,41,"// We need to return a negative value to avoid a circular list of friends; // to think that there is always an entry somewhere in the list.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:10,Performance,cache,cache,10,"// create cache if wanted",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:122,Performance,Load,LoadTree,122,"// Set current entry in friends as well.; //; // An alternative would move this code to each of the; // functions calling LoadTree (and to overload a few more).",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:44,Deployability,release,released,44,"// This scope is need to insure the lock is released at the right time",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:96,Performance,load,loading,96,"// This friend element was added by the chain that owns this; // tree, the chain will deal with loading the correct entry.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2,Deployability,update,update,2,"//update list of leaves in all TTreeFormula of the TTreePlayer (if any)",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load entry on behalf of our master tree, we may use an index.; ///; /// Called by LoadTree() when the masterTree looks for the entry; /// number in a friend tree (us) corresponding to the passed entry; /// number in the masterTree.; ///; /// If we have no index, our entry number and the masterTree entry; /// number are the same.; ///; /// If we *do* have an index, we must find the (major, minor) value pair; /// in masterTree to locate our corresponding entry.; ///",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:168,Performance,Load,LoadTree,168,"////////////////////////////////////////////////////////////////////////////////; /// Load entry on behalf of our master tree, we may use an index.; ///; /// Called by LoadTree() when the masterTree looks for the entry; /// number in a friend tree (us) corresponding to the passed entry; /// number in the masterTree.; ///; /// If we have no index, our entry number and the masterTree entry; /// number are the same.; ///; /// If we *do* have an index, we must find the (major, minor) value pair; /// in masterTree to locate our corresponding entry.; ///",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:416,Modifiability,variab,variables,416,"////////////////////////////////////////////////////////////////////////////////; /// Generate a skeleton function for this tree.; ///; /// The function code is written on filename.; /// If filename is 0, filename will be called nameoftree.C; ///; /// The generated code includes the following:; /// - Identification of the original Tree and Input file name,; /// - Opening the Tree file,; /// - Declaration of Tree variables,; /// - Setting of branches addresses,; /// - A skeleton for the entry loop.; ///; /// To use this function:; ///; /// - Open your Tree file (eg: TFile f(""myfile.root"");); /// - T->MakeCode(""MyAnalysis.C"");; ///; /// where T is the name of the TTree in file myfile.root; /// and MyAnalysis.C the name of the file created by this function.; ///; /// NOTE: Since the implementation of this function, a new and better; /// function TTree::MakeClass() has been developed.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1650,Availability,error,errors,1650,"prefix'; ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source files which will be included by the generated skeleton.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~ {.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; ///; /// - nohist : indicates that the generated ProcessFill should not fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' classes that are not split. Unrolling a class; /// allows direct access to its data members (this emulates the behavior; /// of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1731,Availability,avail,available,1731,"prefix'; ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source files which will be included by the generated skeleton.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~ {.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; ///; /// - nohist : indicates that the generated ProcessFill should not fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' classes that are not split. Unrolling a class; /// allows direct access to its data members (this emulates the behavior; /// of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2626,Availability,avail,available,2626,"///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - No",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4679,Availability,avail,available,4679,"tNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1920,Deployability,update,updated,1920,"follow:; /// ~~~ {.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; ///; /// - nohist : indicates that the generated ProcessFill should not fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' classes that are not split. Unrolling a class; /// allows direct access to its data members (this emulates the behavior; /// of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2757,Energy Efficiency,efficient,efficient,2757,"); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name ma",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2926,Energy Efficiency,efficient,efficient,2926,"d with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files ne",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4531,Integrability,interface,interface,4531,"tNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2645,Modifiability,variab,variables,2645,"///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - No",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2729,Modifiability,variab,variable,2729,"); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name ma",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4030,Modifiability,variab,variable,4030,"tNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1518,Performance,load,loading,1518,"prefix'; ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source files which will be included by the generated skeleton.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~ {.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; ///; /// - nohist : indicates that the generated ProcessFill should not fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' classes that are not split. Unrolling a class; /// allows direct access to its data members (this emulates the behavior; /// of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2776,Performance,cache,cache,2776,"); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; ///; /// if (cutfilename()) htemp->Fill(macrofilename());; ///; /// These two functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example:; /// ~~~ {.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name ma",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3968,Performance,load,loaded,3968,"tNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4136,Performance,load,loaded,4136,"tNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:241,Security,access,access,241,"////////////////////////////////////////////////////////////////////////////////; /// Generate a skeleton analysis class for this Tree using TBranchProxy.; ///; /// TBranchProxy is the base of a class hierarchy implementing an; /// indirect access to the content of the branches of a TTree.; ///; /// ""proxyClassname"" is expected to be of the form:; /// ~~~ {.cpp}; /// [path/]fileprefix; /// ~~~; /// The skeleton will then be generated in the file:; /// ~~~ {.cpp}; /// fileprefix.h; /// ~~~; /// located in the current directory or in 'path/' if it is specified.; /// The class generated will be named 'fileprefix'; ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source files which will be included by the generated skeleton.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~ {.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; ///; /// - nohist : indicates that the generated ProcessFill should not fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' classes that are not split. Unrolling a class; /// allows direct access to its data members (this emulates the behavior; /// of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilen",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1368,Security,access,access,1368,"; /// ~~~; /// The skeleton will then be generated in the file:; /// ~~~ {.cpp}; /// fileprefix.h; /// ~~~; /// located in the current directory or in 'path/' if it is specified.; /// The class generated will be named 'fileprefix'; ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source files which will be included by the generated skeleton.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~ {.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; ///; /// - nohist : indicates that the generated ProcessFill should not fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' classes that are not split. Unrolling a class; /// allows direct access to its data members (this emulates the behavior; /// of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bounds errors; /// * ability to use the branch data as an object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~ {.cpp}; /// Double_t somePx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somePx will updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~ {.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~ {.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be ",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4011,Security,access,accessible,4011,"tNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:4227,Security,access,access,4227,"tNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~ {.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; /// ~~~ {.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~ {.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:56,Safety,avoid,avoid,56,"// Once the cloning is done, separate the trees,; // to avoid as many side-effects as possible; // The list of clones is guaranteed to exist since we; // just cloned the tree.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:93,Performance,cache,cache,93,"////////////////////////////////////////////////////////////////////////////////; /// Move a cache from a file to the current file in dir.; /// if src is null no operation is done, if dir is null or there is no; /// current file the cache is deleted.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:233,Performance,cache,cache,233,"////////////////////////////////////////////////////////////////////////////////; /// Move a cache from a file to the current file in dir.; /// if src is null no operation is done, if dir is null or there is no; /// current file the cache is deleted.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:122,Deployability,update,update,122,"////////////////////////////////////////////////////////////////////////////////; /// Copy the content to a new new file, update this TTree with the new; /// location information and attach this TTree to the new directory.; ///; /// options: Indicates a basket sorting method, see TTreeCloner::TTreeCloner for; /// details; ///; /// If new and old directory are in the same file, the data is untouched,; /// this ""just"" does a call to SetDirectory.; /// Equivalent to an ""in place"" cloning of the TTree.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:107,Performance,load,loading,107,"////////////////////////////////////////////////////////////////////////////////; /// Function called when loading a new class library.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:266,Performance,optimiz,optimize,266,"////////////////////////////////////////////////////////////////////////////////; /// This function may be called after having filled some entries in a Tree.; /// Using the information in the existing branch buffers, it will reassign; /// new branch buffer sizes to optimize time and memory.; ///; /// The function computes the best values for branch buffer sizes such that; /// the total buffer sizes is less than maxMemory and nearby entries written; /// at the same time.; /// In case the branch compression factor for the data written so far is less; /// than compMin, the compression is disabled.; ///; /// if option =""d"" an analysis report is printed.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:368,Energy Efficiency,reduce,reduces,368,"// We used ATLAS fully-split xAOD for testing, which is a rather unbalanced TTree, 10K branches,; // with 8K having baskets smaller than 512 bytes. To achieve good I/O performance ATLAS uses auto-flush 100,; // resulting in the smallest baskets being ~300-400 bytes, so this change increases their memory by about 8k*150B =~ 1MB,; // at the same time it significantly reduces the number of total baskets because it ensures that all 100 entries can be; // stored in a single basket (the old optimization tended to make baskets too small). In a toy example with fixed sized; // structures we found a factor of 2 fewer baskets needed in the new scheme.; // rounds up, increases basket size to ensure all entries fit into single basket as intended",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:168,Performance,perform,performance,168,"// We used ATLAS fully-split xAOD for testing, which is a rather unbalanced TTree, 10K branches,; // with 8K having baskets smaller than 512 bytes. To achieve good I/O performance ATLAS uses auto-flush 100,; // resulting in the smallest baskets being ~300-400 bytes, so this change increases their memory by about 8k*150B =~ 1MB,; // at the same time it significantly reduces the number of total baskets because it ensures that all 100 entries can be; // stored in a single basket (the old optimization tended to make baskets too small). In a toy example with fixed sized; // structures we found a factor of 2 fewer baskets needed in the new scheme.; // rounds up, increases basket size to ensure all entries fit into single basket as intended",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:490,Performance,optimiz,optimization,490,"// We used ATLAS fully-split xAOD for testing, which is a rather unbalanced TTree, 10K branches,; // with 8K having baskets smaller than 512 bytes. To achieve good I/O performance ATLAS uses auto-flush 100,; // resulting in the smallest baskets being ~300-400 bytes, so this change increases their memory by about 8k*150B =~ 1MB,; // at the same time it significantly reduces the number of total baskets because it ensures that all 100 entries can be; // stored in a single basket (the old optimization tended to make baskets too small). In a toy example with fixed sized; // structures we found a factor of 2 fewer baskets needed in the new scheme.; // rounds up, increases basket size to ensure all entries fit into single basket as intended",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:38,Testability,test,testing,38,"// We used ATLAS fully-split xAOD for testing, which is a rather unbalanced TTree, 10K branches,; // with 8K having baskets smaller than 512 bytes. To achieve good I/O performance ATLAS uses auto-flush 100,; // resulting in the smallest baskets being ~300-400 bytes, so this change increases their memory by about 8k*150B =~ 1MB,; // at the same time it significantly reduces the number of total baskets because it ensures that all 100 entries can be; // stored in a single basket (the old optimization tended to make baskets too small). In a toy example with fixed sized; // structures we found a factor of 2 fewer baskets needed in the new scheme.; // rounds up, increases basket size to ensure all entries fit into single basket as intended",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to the Principal Components Analysis class.; ///; /// Create an instance of TPrincipal; ///; /// Fill it with the selected variables; ///; /// - if option ""n"" is specified, the TPrincipal object is filled with; /// normalized variables.; /// - If option ""p"" is specified, compute the principal components; /// - If option ""p"" and ""d"" print results of analysis; /// - If option ""p"" and ""h"" generate standard histograms; /// - If option ""p"" and ""c"" generate code of conversion functions; /// - return a pointer to the TPrincipal object. It is the user responsibility; /// - to delete this object.; /// - The option default value is ""np""; ///; /// see TTree::Draw for explanation of the other parameters.; ///; /// The created object is named ""principal"" and a reference to it; /// is added to the list of specials Root objects.; /// you can retrieve a pointer to the created object via:; /// ~~~ {.cpp}; /// TPrincipal *principal =; /// (TPrincipal*)gROOT->GetListOfSpecials()->FindObject(""principal"");; /// ~~~",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:219,Modifiability,variab,variables,219,"////////////////////////////////////////////////////////////////////////////////; /// Interface to the Principal Components Analysis class.; ///; /// Create an instance of TPrincipal; ///; /// Fill it with the selected variables; ///; /// - if option ""n"" is specified, the TPrincipal object is filled with; /// normalized variables.; /// - If option ""p"" is specified, compute the principal components; /// - If option ""p"" and ""d"" print results of analysis; /// - If option ""p"" and ""h"" generate standard histograms; /// - If option ""p"" and ""c"" generate code of conversion functions; /// - return a pointer to the TPrincipal object. It is the user responsibility; /// - to delete this object.; /// - The option default value is ""np""; ///; /// see TTree::Draw for explanation of the other parameters.; ///; /// The created object is named ""principal"" and a reference to it; /// is added to the list of specials Root objects.; /// you can retrieve a pointer to the created object via:; /// ~~~ {.cpp}; /// TPrincipal *principal =; /// (TPrincipal*)gROOT->GetListOfSpecials()->FindObject(""principal"");; /// ~~~",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:322,Modifiability,variab,variables,322,"////////////////////////////////////////////////////////////////////////////////; /// Interface to the Principal Components Analysis class.; ///; /// Create an instance of TPrincipal; ///; /// Fill it with the selected variables; ///; /// - if option ""n"" is specified, the TPrincipal object is filled with; /// normalized variables.; /// - If option ""p"" is specified, compute the principal components; /// - If option ""p"" and ""d"" print results of analysis; /// - If option ""p"" and ""h"" generate standard histograms; /// - If option ""p"" and ""c"" generate code of conversion functions; /// - return a pointer to the TPrincipal object. It is the user responsibility; /// - to delete this object.; /// - The option default value is ""np""; ///; /// see TTree::Draw for explanation of the other parameters.; ///; /// The created object is named ""principal"" and a reference to it; /// is added to the list of specials Root objects.; /// you can retrieve a pointer to the created object via:; /// ~~~ {.cpp}; /// TPrincipal *principal =; /// (TPrincipal*)gROOT->GetListOfSpecials()->FindObject(""principal"");; /// ~~~",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3,Safety,Avoid,Avoid,3,"// Avoid many check of option validity",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:350,Performance,cache,cache,350,"////////////////////////////////////////////////////////////////////////////////; /// Print statistics about the TreeCache for this tree.; /// Like:; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Reading 73921562 bytes in 716 transactions; /// Average transaction = 103.242405 Kbytes; /// Number of blocks in current cache: 202, total size : 6001193; /// ~~~; /// if option = ""a"" the list of blocks in the cache is printed",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:439,Performance,cache,cache,439,"////////////////////////////////////////////////////////////////////////////////; /// Print statistics about the TreeCache for this tree.; /// Like:; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Reading 73921562 bytes in 716 transactions; /// Average transaction = 103.242405 Kbytes; /// Number of blocks in current cache: 202, total size : 6001193; /// ~~~; /// if option = ""a"" the list of blocks in the cache is printed",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:199,Availability,error,error,199,"////////////////////////////////////////////////////////////////////////////////; /// Process this tree executing the TSelector code in the specified filename.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The code in filename is loaded (interpreted or compiled, see below),; /// filename must contain a valid class implementation derived from TSelector,; /// where TSelector has the following member functions:; ///; /// - `Begin()`: called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - `SlaveBegin()`: called after Begin(), when on PROOF called only on the; /// slave servers.; /// - `Process()`: called for each event, in this function you decide what; /// to read and fill your histograms.; /// - `SlaveTerminate`: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - `Terminate()`: called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; ///; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ## NOTE1; ///; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~ {.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ## NOTE2; //; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; //",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:294,Performance,load,loaded,294,"////////////////////////////////////////////////////////////////////////////////; /// Process this tree executing the TSelector code in the specified filename.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The code in filename is loaded (interpreted or compiled, see below),; /// filename must contain a valid class implementation derived from TSelector,; /// where TSelector has the following member functions:; ///; /// - `Begin()`: called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - `SlaveBegin()`: called after Begin(), when on PROOF called only on the; /// slave servers.; /// - `Process()`: called for each event, in this function you decide what; /// to read and fill your histograms.; /// - `SlaveTerminate`: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - `Terminate()`: called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; ///; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ## NOTE1; ///; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~ {.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ## NOTE2; //; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; //",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1223,Performance,load,loaded,1223,"nd TSelector::GetStatus() in; /// in case of success.; ///; /// The code in filename is loaded (interpreted or compiled, see below),; /// filename must contain a valid class implementation derived from TSelector,; /// where TSelector has the following member functions:; ///; /// - `Begin()`: called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - `SlaveBegin()`: called after Begin(), when on PROOF called only on the; /// slave servers.; /// - `Process()`: called for each event, in this function you decide what; /// to read and fill your histograms.; /// - `SlaveTerminate`: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - `Terminate()`: called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; ///; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ## NOTE1; ///; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~ {.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ## NOTE2; //; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; ///; /// ### Workaround 1; ///; /// ~~~ {.cpp}; /// void stubs1() {; /// TSelector *selector = TSelector::GetSelector(""h1test.C"");; /// TFile *f1 = new TFile(""stubs_nood_le1.root"");; /// TTree *h1 = (TTree*)f",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1331,Performance,load,loaded,1331,"or compiled, see below),; /// filename must contain a valid class implementation derived from TSelector,; /// where TSelector has the following member functions:; ///; /// - `Begin()`: called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - `SlaveBegin()`: called after Begin(), when on PROOF called only on the; /// slave servers.; /// - `Process()`: called for each event, in this function you decide what; /// to read and fill your histograms.; /// - `SlaveTerminate`: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - `Terminate()`: called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; ///; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ## NOTE1; ///; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~ {.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ## NOTE2; //; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; ///; /// ### Workaround 1; ///; /// ~~~ {.cpp}; /// void stubs1() {; /// TSelector *selector = TSelector::GetSelector(""h1test.C"");; /// TFile *f1 = new TFile(""stubs_nood_le1.root"");; /// TTree *h1 = (TTree*)f1->Get(""h1"");; /// h1->Process(selector);; /// TFile *f2 = new TFile(""stubs_nood_le1_coarse.root"");; /// TTr",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1446,Performance,load,loaded,1446,"e following member functions:; ///; /// - `Begin()`: called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - `SlaveBegin()`: called after Begin(), when on PROOF called only on the; /// slave servers.; /// - `Process()`: called for each event, in this function you decide what; /// to read and fill your histograms.; /// - `SlaveTerminate`: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - `Terminate()`: called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; ///; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ## NOTE1; ///; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~ {.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ## NOTE2; //; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; ///; /// ### Workaround 1; ///; /// ~~~ {.cpp}; /// void stubs1() {; /// TSelector *selector = TSelector::GetSelector(""h1test.C"");; /// TFile *f1 = new TFile(""stubs_nood_le1.root"");; /// TTree *h1 = (TTree*)f1->Get(""h1"");; /// h1->Process(selector);; /// TFile *f2 = new TFile(""stubs_nood_le1_coarse.root"");; /// TTree *h2 = (TTree*)f2->Get(""h1"");; /// h2->Process(selector);; /// }; /// ~~~; /// or use ACLIC to compile the selector; ///; /// ### ",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:189,Availability,error,error,189,"////////////////////////////////////////////////////////////////////////////////; /// Process this tree executing the code in the specified selector.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The TSelector class has the following member functions:; ///; /// - `Begin()`: called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - `SlaveBegin()`: called after Begin(), when on PROOF called only on the; /// slave servers.; /// - `Process()`: called for each event, in this function you decide what; /// to read and fill your histograms.; /// - `SlaveTerminate`: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - `Terminate()`: called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If the Tree (Chain) has an associated EventList, the loop is on the nentries; /// of the EventList, starting at firstentry, otherwise the loop is on the; /// specified Tree entries.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:142,Integrability,Depend,Depending,142,"////////////////////////////////////////////////////////////////////////////////; /// Make a projection of a tree using selections.; ///; /// Depending on the value of varexp (described in Draw) a 1-D, 2-D, etc.,; /// projection of the tree will be filled in histogram hname.; /// Note that the dimension of hname must match with the dimension of varexp.; ///",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:455,Modifiability,variab,variable,455,"////////////////////////////////////////////////////////////////////////////////; /// Create or simply read branches from filename.; ///; /// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; /// is given in the first line of the file with a syntax like; /// ~~~ {.cpp}; /// A/D:Table[2]/F:Ntracks/I:astring/C; /// ~~~; /// otherwise branchDescriptor must be specified with the above syntax.; ///; /// - If the type of the first variable is not specified, it is assumed to be ""/F""; /// - If the type of any other variable is not specified, the type of the previous; /// variable is assumed. eg; /// - `x:y:z` (all variables are assumed of type ""F""); /// - `x/D:y:z` (all variables are of type ""D""); /// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); ///; /// delimiter allows for the use of another delimiter besides whitespace.; /// This provides support for direct import of common data file formats; /// like csv. If delimiter != ' ' and branchDescriptor == """", then the; /// branch description is taken from the first line in the file, but; /// delimiter is used for the branch names tokenization rather than ':'.; /// Note however that if the values in the first line do not use the; /// /[type] syntax, all variables are assumed to be of type ""F"".; /// If the filename ends with extensions .csv or .CSV and a delimiter is; /// not specified (besides ' '), the delimiter is automatically set to ','.; ///; /// Lines in the input file starting with ""#"" are ignored. Leading whitespace; /// for each column data is skipped. Empty lines are skipped.; ///; /// A TBranch object is created for each variable in the expression.; /// The total number of rows read from the file is returned.; ///; /// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; ///; /// To fill a TTree with multiple input text files, proceed as indicated above; /// for the first input file and omit the second argument for subsequent calls; /// ~~~ {.cpp}; /// T.ReadFile(""file1.dat"",""branch descri",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:539,Modifiability,variab,variable,539,"////////////////////////////////////////////////////////////////////////////////; /// Create or simply read branches from filename.; ///; /// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; /// is given in the first line of the file with a syntax like; /// ~~~ {.cpp}; /// A/D:Table[2]/F:Ntracks/I:astring/C; /// ~~~; /// otherwise branchDescriptor must be specified with the above syntax.; ///; /// - If the type of the first variable is not specified, it is assumed to be ""/F""; /// - If the type of any other variable is not specified, the type of the previous; /// variable is assumed. eg; /// - `x:y:z` (all variables are assumed of type ""F""); /// - `x/D:y:z` (all variables are of type ""D""); /// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); ///; /// delimiter allows for the use of another delimiter besides whitespace.; /// This provides support for direct import of common data file formats; /// like csv. If delimiter != ' ' and branchDescriptor == """", then the; /// branch description is taken from the first line in the file, but; /// delimiter is used for the branch names tokenization rather than ':'.; /// Note however that if the values in the first line do not use the; /// /[type] syntax, all variables are assumed to be of type ""F"".; /// If the filename ends with extensions .csv or .CSV and a delimiter is; /// not specified (besides ' '), the delimiter is automatically set to ','.; ///; /// Lines in the input file starting with ""#"" are ignored. Leading whitespace; /// for each column data is skipped. Empty lines are skipped.; ///; /// A TBranch object is created for each variable in the expression.; /// The total number of rows read from the file is returned.; ///; /// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; ///; /// To fill a TTree with multiple input text files, proceed as indicated above; /// for the first input file and omit the second argument for subsequent calls; /// ~~~ {.cpp}; /// T.ReadFile(""file1.dat"",""branch descri",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:596,Modifiability,variab,variable,596,"////////////////////////////////////////////////////////////////////////////////; /// Create or simply read branches from filename.; ///; /// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; /// is given in the first line of the file with a syntax like; /// ~~~ {.cpp}; /// A/D:Table[2]/F:Ntracks/I:astring/C; /// ~~~; /// otherwise branchDescriptor must be specified with the above syntax.; ///; /// - If the type of the first variable is not specified, it is assumed to be ""/F""; /// - If the type of any other variable is not specified, the type of the previous; /// variable is assumed. eg; /// - `x:y:z` (all variables are assumed of type ""F""); /// - `x/D:y:z` (all variables are of type ""D""); /// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); ///; /// delimiter allows for the use of another delimiter besides whitespace.; /// This provides support for direct import of common data file formats; /// like csv. If delimiter != ' ' and branchDescriptor == """", then the; /// branch description is taken from the first line in the file, but; /// delimiter is used for the branch names tokenization rather than ':'.; /// Note however that if the values in the first line do not use the; /// /[type] syntax, all variables are assumed to be of type ""F"".; /// If the filename ends with extensions .csv or .CSV and a delimiter is; /// not specified (besides ' '), the delimiter is automatically set to ','.; ///; /// Lines in the input file starting with ""#"" are ignored. Leading whitespace; /// for each column data is skipped. Empty lines are skipped.; ///; /// A TBranch object is created for each variable in the expression.; /// The total number of rows read from the file is returned.; ///; /// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; ///; /// To fill a TTree with multiple input text files, proceed as indicated above; /// for the first input file and omit the second argument for subsequent calls; /// ~~~ {.cpp}; /// T.ReadFile(""file1.dat"",""branch descri",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:640,Modifiability,variab,variables,640,"////////////////////////////////////////////////////////////////////////////////; /// Create or simply read branches from filename.; ///; /// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; /// is given in the first line of the file with a syntax like; /// ~~~ {.cpp}; /// A/D:Table[2]/F:Ntracks/I:astring/C; /// ~~~; /// otherwise branchDescriptor must be specified with the above syntax.; ///; /// - If the type of the first variable is not specified, it is assumed to be ""/F""; /// - If the type of any other variable is not specified, the type of the previous; /// variable is assumed. eg; /// - `x:y:z` (all variables are assumed of type ""F""); /// - `x/D:y:z` (all variables are of type ""D""); /// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); ///; /// delimiter allows for the use of another delimiter besides whitespace.; /// This provides support for direct import of common data file formats; /// like csv. If delimiter != ' ' and branchDescriptor == """", then the; /// branch description is taken from the first line in the file, but; /// delimiter is used for the branch names tokenization rather than ':'.; /// Note however that if the values in the first line do not use the; /// /[type] syntax, all variables are assumed to be of type ""F"".; /// If the filename ends with extensions .csv or .CSV and a delimiter is; /// not specified (besides ' '), the delimiter is automatically set to ','.; ///; /// Lines in the input file starting with ""#"" are ignored. Leading whitespace; /// for each column data is skipped. Empty lines are skipped.; ///; /// A TBranch object is created for each variable in the expression.; /// The total number of rows read from the file is returned.; ///; /// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; ///; /// To fill a TTree with multiple input text files, proceed as indicated above; /// for the first input file and omit the second argument for subsequent calls; /// ~~~ {.cpp}; /// T.ReadFile(""file1.dat"",""branch descri",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:697,Modifiability,variab,variables,697,"////////////////////////////////////////////////////////////////////////////////; /// Create or simply read branches from filename.; ///; /// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; /// is given in the first line of the file with a syntax like; /// ~~~ {.cpp}; /// A/D:Table[2]/F:Ntracks/I:astring/C; /// ~~~; /// otherwise branchDescriptor must be specified with the above syntax.; ///; /// - If the type of the first variable is not specified, it is assumed to be ""/F""; /// - If the type of any other variable is not specified, the type of the previous; /// variable is assumed. eg; /// - `x:y:z` (all variables are assumed of type ""F""); /// - `x/D:y:z` (all variables are of type ""D""); /// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); ///; /// delimiter allows for the use of another delimiter besides whitespace.; /// This provides support for direct import of common data file formats; /// like csv. If delimiter != ' ' and branchDescriptor == """", then the; /// branch description is taken from the first line in the file, but; /// delimiter is used for the branch names tokenization rather than ':'.; /// Note however that if the values in the first line do not use the; /// /[type] syntax, all variables are assumed to be of type ""F"".; /// If the filename ends with extensions .csv or .CSV and a delimiter is; /// not specified (besides ' '), the delimiter is automatically set to ','.; ///; /// Lines in the input file starting with ""#"" are ignored. Leading whitespace; /// for each column data is skipped. Empty lines are skipped.; ///; /// A TBranch object is created for each variable in the expression.; /// The total number of rows read from the file is returned.; ///; /// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; ///; /// To fill a TTree with multiple input text files, proceed as indicated above; /// for the first input file and omit the second argument for subsequent calls; /// ~~~ {.cpp}; /// T.ReadFile(""file1.dat"",""branch descri",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1242,Modifiability,variab,variables,1242,"////////////////////////////////; /// Create or simply read branches from filename.; ///; /// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; /// is given in the first line of the file with a syntax like; /// ~~~ {.cpp}; /// A/D:Table[2]/F:Ntracks/I:astring/C; /// ~~~; /// otherwise branchDescriptor must be specified with the above syntax.; ///; /// - If the type of the first variable is not specified, it is assumed to be ""/F""; /// - If the type of any other variable is not specified, the type of the previous; /// variable is assumed. eg; /// - `x:y:z` (all variables are assumed of type ""F""); /// - `x/D:y:z` (all variables are of type ""D""); /// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); ///; /// delimiter allows for the use of another delimiter besides whitespace.; /// This provides support for direct import of common data file formats; /// like csv. If delimiter != ' ' and branchDescriptor == """", then the; /// branch description is taken from the first line in the file, but; /// delimiter is used for the branch names tokenization rather than ':'.; /// Note however that if the values in the first line do not use the; /// /[type] syntax, all variables are assumed to be of type ""F"".; /// If the filename ends with extensions .csv or .CSV and a delimiter is; /// not specified (besides ' '), the delimiter is automatically set to ','.; ///; /// Lines in the input file starting with ""#"" are ignored. Leading whitespace; /// for each column data is skipped. Empty lines are skipped.; ///; /// A TBranch object is created for each variable in the expression.; /// The total number of rows read from the file is returned.; ///; /// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; ///; /// To fill a TTree with multiple input text files, proceed as indicated above; /// for the first input file and omit the second argument for subsequent calls; /// ~~~ {.cpp}; /// T.ReadFile(""file1.dat"",""branch descriptor"");; /// T.ReadFile(""file2.dat"");; /// ~~~",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1628,Modifiability,variab,variable,1628,"////////////////////////////////; /// Create or simply read branches from filename.; ///; /// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; /// is given in the first line of the file with a syntax like; /// ~~~ {.cpp}; /// A/D:Table[2]/F:Ntracks/I:astring/C; /// ~~~; /// otherwise branchDescriptor must be specified with the above syntax.; ///; /// - If the type of the first variable is not specified, it is assumed to be ""/F""; /// - If the type of any other variable is not specified, the type of the previous; /// variable is assumed. eg; /// - `x:y:z` (all variables are assumed of type ""F""); /// - `x/D:y:z` (all variables are of type ""D""); /// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); ///; /// delimiter allows for the use of another delimiter besides whitespace.; /// This provides support for direct import of common data file formats; /// like csv. If delimiter != ' ' and branchDescriptor == """", then the; /// branch description is taken from the first line in the file, but; /// delimiter is used for the branch names tokenization rather than ':'.; /// Note however that if the values in the first line do not use the; /// /[type] syntax, all variables are assumed to be of type ""F"".; /// If the filename ends with extensions .csv or .CSV and a delimiter is; /// not specified (besides ' '), the delimiter is automatically set to ','.; ///; /// Lines in the input file starting with ""#"" are ignored. Leading whitespace; /// for each column data is skipped. Empty lines are skipped.; ///; /// A TBranch object is created for each variable in the expression.; /// The total number of rows read from the file is returned.; ///; /// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; ///; /// To fill a TTree with multiple input text files, proceed as indicated above; /// for the first input file and omit the second argument for subsequent calls; /// ~~~ {.cpp}; /// T.ReadFile(""file1.dat"",""branch descriptor"");; /// T.ReadFile(""file2.dat"");; /// ~~~",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:96,Usability,simpl,simply,96,"////////////////////////////////////////////////////////////////////////////////; /// Create or simply read branches from filename.; ///; /// if branchDescriptor = """" (default), it is assumed that the Tree descriptor; /// is given in the first line of the file with a syntax like; /// ~~~ {.cpp}; /// A/D:Table[2]/F:Ntracks/I:astring/C; /// ~~~; /// otherwise branchDescriptor must be specified with the above syntax.; ///; /// - If the type of the first variable is not specified, it is assumed to be ""/F""; /// - If the type of any other variable is not specified, the type of the previous; /// variable is assumed. eg; /// - `x:y:z` (all variables are assumed of type ""F""); /// - `x/D:y:z` (all variables are of type ""D""); /// - `x:y/D:z` (x is type ""F"", y and z of type ""D""); ///; /// delimiter allows for the use of another delimiter besides whitespace.; /// This provides support for direct import of common data file formats; /// like csv. If delimiter != ' ' and branchDescriptor == """", then the; /// branch description is taken from the first line in the file, but; /// delimiter is used for the branch names tokenization rather than ':'.; /// Note however that if the values in the first line do not use the; /// /[type] syntax, all variables are assumed to be of type ""F"".; /// If the filename ends with extensions .csv or .CSV and a delimiter is; /// not specified (besides ' '), the delimiter is automatically set to ','.; ///; /// Lines in the input file starting with ""#"" are ignored. Leading whitespace; /// for each column data is skipped. Empty lines are skipped.; ///; /// A TBranch object is created for each variable in the expression.; /// The total number of rows read from the file is returned.; ///; /// ## FILLING a TTree WITH MULTIPLE INPUT TEXT FILES; ///; /// To fill a TTree with multiple input text files, proceed as indicated above; /// for the first input file and omit the second argument for subsequent calls; /// ~~~ {.cpp}; /// T.ReadFile(""file1.dat"",""branch descri",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:96,Usability,simpl,simply,96,"////////////////////////////////////////////////////////////////////////////////; /// Create or simply read branches from an input stream.; ///; /// \see reference information for TTree::ReadFile",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3,Availability,Error,Error,3,"// Error handling",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:239,Deployability,update,updated,239,"////////////////////////////////////////////////////////////////////////////////; /// Refresh contents of this tree and its branches from the current status on disk.; ///; /// One can call this function in case the tree file is being; /// updated by another process.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:27,Deployability,update,update,27,"//loop on all branches and update them",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:145,Energy Efficiency,allocate,allocate,145,"////////////////////////////////////////////////////////////////////////////////; /// Tell all of our branches to drop their current objects and allocate new ones.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:97,Modifiability,variab,variable,97,"////////////////////////////////////////////////////////////////////////////////; /// Set a tree variable alias.; ///; /// Set an alias for an expression/formula based on the tree 'variables'.; ///; /// The content of 'aliasName' can be used in TTreeFormula (i.e. TTree::Draw,; /// TTree::Scan, TTreeViewer) and will be evaluated as the content of; /// 'aliasFormula'.; ///; /// If the content of 'aliasFormula' only contains symbol names, periods and; /// array index specification (for example event.fTracks[3]), then; /// the content of 'aliasName' can be used as the start of symbol.; ///; /// If the alias 'aliasName' already existed, it is replaced by the new; /// value.; ///; /// When being used, the alias can be preceded by an eventual 'Friend Alias'; /// (see TTree::GetFriendAlias); ///; /// Return true if it was added properly.; ///; /// For example:; /// ~~~ {.cpp}; /// tree->SetAlias(""x1"",""(tdc1[1]-tdc1[0])/49"");; /// tree->SetAlias(""y1"",""(tdc1[3]-tdc1[2])/47"");; /// tree->SetAlias(""x2"",""(tdc2[1]-tdc2[0])/49"");; /// tree->SetAlias(""y2"",""(tdc2[3]-tdc2[2])/47"");; /// tree->Draw(""y2-y1:x2-x1"");; ///; /// tree->SetAlias(""theGoodTrack"",""event.fTracks[3]"");; /// tree->Draw(""theGoodTrack.fPx""); // same as ""event.fTracks[3].fPx""; /// ~~~",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:181,Modifiability,variab,variables,181,"////////////////////////////////////////////////////////////////////////////////; /// Set a tree variable alias.; ///; /// Set an alias for an expression/formula based on the tree 'variables'.; ///; /// The content of 'aliasName' can be used in TTreeFormula (i.e. TTree::Draw,; /// TTree::Scan, TTreeViewer) and will be evaluated as the content of; /// 'aliasFormula'.; ///; /// If the content of 'aliasFormula' only contains symbol names, periods and; /// array index specification (for example event.fTracks[3]), then; /// the content of 'aliasName' can be used as the start of symbol.; ///; /// If the alias 'aliasName' already existed, it is replaced by the new; /// value.; ///; /// When being used, the alias can be preceded by an eventual 'Friend Alias'; /// (see TTree::GetFriendAlias); ///; /// Return true if it was added properly.; ///; /// For example:; /// ~~~ {.cpp}; /// tree->SetAlias(""x1"",""(tdc1[1]-tdc1[0])/49"");; /// tree->SetAlias(""y1"",""(tdc1[3]-tdc1[2])/47"");; /// tree->SetAlias(""x2"",""(tdc2[1]-tdc2[0])/49"");; /// tree->SetAlias(""y2"",""(tdc2[3]-tdc2[2])/47"");; /// tree->Draw(""y2-y1:x2-x1"");; ///; /// tree->SetAlias(""theGoodTrack"",""event.fTracks[3]"");; /// tree->Draw(""theGoodTrack.fPx""); // same as ""event.fTracks[3].fPx""; /// ~~~",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1075,Performance,optimiz,optimize,1075,"////////////////////////////////////////////////////////////////////////////////; /// This function may be called at the start of a program to change; /// the default value for fAutoFlush.; ///; /// ### CASE 1 : autof > 0; ///; /// autof is the number of consecutive entries after which TTree::Fill will; /// flush all branch buffers to disk.; ///; /// ### CASE 2 : autof < 0; ///; /// When filling the Tree the branch buffers will be flushed to disk when; /// more than autof bytes have been written to the file. At the first FlushBaskets; /// TTree::Fill will replace fAutoFlush by the current value of fEntries.; ///; /// Calling this function with autof<0 is interesting when it is hard to estimate; /// the size of one entry. This value is also independent of the Tree.; ///; /// The Tree is initialized with fAutoFlush=-30000000, ie that, by default,; /// the first AutoFlush will be done when 30 MBytes of data are written to the file.; ///; /// ### CASE 3 : autof = 0; ///; /// The AutoFlush mechanism is disabled.; ///; /// Flushing the buffers at regular intervals optimize the location of; /// consecutive entries on the disk by creating clusters of baskets.; ///; /// A cluster of baskets is a set of baskets that contains all; /// the data for a (consecutive) set of entries and that is stored; /// consecutively on the disk. When reading all the branches, this; /// is the minimum set of baskets that the TTreeCache will read.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:678,Energy Efficiency,allocate,allocated,678,"// Implementation note:; //; // A positive value of autoflush determines the size (in number of entries) of; // a cluster of baskets.; //; // If the value of autoflush is changed over time (this happens in; // particular when the TTree results from fast merging many trees),; // we record the values of fAutoFlush in the data members:; // fClusterRangeEnd and fClusterSize.; // In the code we refer to a range of entries where the size of the; // cluster of baskets is the same (i.e the value of AutoFlush was; // constant) is called a ClusterRange.; //; // The 2 arrays (fClusterRangeEnd and fClusterSize) have fNClusterRange; // active (used) values and have fMaxClusterRange allocated entries.; //; // fClusterRangeEnd contains the last entries number of a cluster range.; // In particular this means that the 'next' cluster starts at fClusterRangeEnd[]+1; // fClusterSize contains the size in number of entries of all the cluster; // within the given range.; // The last range (and the only one if fNClusterRange is zero) start at; // fNClusterRange[fNClusterRange-1]+1 and ends at the end of the TTree. The; // size of the cluster in this range is given by the value of fAutoFlush.; //; // For example printing the beginning and end of each the ranges can be done by:; //; // Printf(""%-16s %-16s %-16s %5s"",; // ""Cluster Range #"", ""Entry Start"", ""Last Entry"", ""Size"");; // Int_t index= 0;; // Long64_t clusterRangeStart = 0;; // if (fNClusterRange) {; // for( ; index < fNClusterRange; ++index) {; // Printf(""%-16d %-16lld %-16lld %5lld"",; // index, clusterRangeStart, fClusterRangeEnd[index], fClusterSize[index]);; // clusterRangeStart = fClusterRangeEnd[index] + 1;; // }; // }; // Printf(""%-16d %-16lld %-16lld %5lld"",; // index, prevEntry, fEntries - 1, fAutoFlush);; //; // Note: We store the entry number corresponding to the end of the cluster; // rather than its start in order to avoid using the array if the cluster; // size never varies (If there is only one value of AutoFlush for th",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1895,Safety,avoid,avoid,1895," note:; //; // A positive value of autoflush determines the size (in number of entries) of; // a cluster of baskets.; //; // If the value of autoflush is changed over time (this happens in; // particular when the TTree results from fast merging many trees),; // we record the values of fAutoFlush in the data members:; // fClusterRangeEnd and fClusterSize.; // In the code we refer to a range of entries where the size of the; // cluster of baskets is the same (i.e the value of AutoFlush was; // constant) is called a ClusterRange.; //; // The 2 arrays (fClusterRangeEnd and fClusterSize) have fNClusterRange; // active (used) values and have fMaxClusterRange allocated entries.; //; // fClusterRangeEnd contains the last entries number of a cluster range.; // In particular this means that the 'next' cluster starts at fClusterRangeEnd[]+1; // fClusterSize contains the size in number of entries of all the cluster; // within the given range.; // The last range (and the only one if fNClusterRange is zero) start at; // fNClusterRange[fNClusterRange-1]+1 and ends at the end of the TTree. The; // size of the cluster in this range is given by the value of fAutoFlush.; //; // For example printing the beginning and end of each the ranges can be done by:; //; // Printf(""%-16s %-16s %-16s %5s"",; // ""Cluster Range #"", ""Entry Start"", ""Last Entry"", ""Size"");; // Int_t index= 0;; // Long64_t clusterRangeStart = 0;; // if (fNClusterRange) {; // for( ; index < fNClusterRange; ++index) {; // Printf(""%-16d %-16lld %-16lld %5lld"",; // index, clusterRangeStart, fClusterRangeEnd[index], fClusterSize[index]);; // clusterRangeStart = fClusterRangeEnd[index] + 1;; // }; // }; // Printf(""%-16d %-16lld %-16lld %5lld"",; // index, prevEntry, fEntries - 1, fAutoFlush);; //; // Note: We store the entry number corresponding to the end of the cluster; // rather than its start in order to avoid using the array if the cluster; // size never varies (If there is only one value of AutoFlush for the whole TTree).",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:95,Performance,cache,cache,95,"/// Estimate the median cluster size for the TTree.; /// This value provides e.g. a reasonable cache size default if other heuristics fail.; /// Clusters with size 0 and the very last cluster range, that might not have been committed to fClusterSize yet,; /// are ignored for the purposes of the calculation.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:137,Availability,recover,recover,137,"////////////////////////////////////////////////////////////////////////////////; /// In case of a program crash, it will be possible to recover the data in the; /// tree up to the last AutoSave point.; /// This function may be called before filling a TTree to specify when the; /// branch buffers and TTree header are flushed to disk as part of; /// TTree::Fill().; /// The default is -300000000, ie the TTree will write data to disk once it; /// exceeds 300 MBytes.; /// CASE 1: If fAutoSave is positive the watermark is reached when a multiple of; /// fAutoSave entries have been filled.; /// CASE 2: If fAutoSave is negative the watermark is reached when -fAutoSave; /// bytes can be written to the file.; /// CASE 3: If fAutoSave is 0, AutoSave() will never be called automatically; /// as part of TTree::Fill().",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:137,Safety,recover,recover,137,"////////////////////////////////////////////////////////////////////////////////; /// In case of a program crash, it will be possible to recover the data in the; /// tree up to the last AutoSave point.; /// This function may be called before filling a TTree to specify when the; /// branch buffers and TTree header are flushed to disk as part of; /// TTree::Fill().; /// The default is -300000000, ie the TTree will write data to disk once it; /// exceeds 300 MBytes.; /// CASE 1: If fAutoSave is positive the watermark is reached when a multiple of; /// fAutoSave entries have been filled.; /// CASE 2: If fAutoSave is negative the watermark is reached when -fAutoSave; /// bytes can be written to the file.; /// CASE 3: If fAutoSave is 0, AutoSave() will never be called automatically; /// as part of TTree::Fill().",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2678,Availability,error,error,2678,"GetEntry(i) all branches are read for entry i.; /// to read only the branches c and e, one can do; /// ~~~ {.cpp}; /// T.SetBranchStatus(""*"",0); //disable all branches; /// T.SetBranchStatus(""c"",1);; /// T.setBranchStatus(""e"",1);; /// T.GetEntry(i);; /// ~~~; /// bname is interpreted as a wild-carded TRegexp (see TRegexp::MakeWildcard).; /// Thus, ""a*b"" or ""a.*b"" matches branches starting with ""a"" and ending with; /// ""b"", but not any other branch with an ""a"" followed at some point by a; /// ""b"". For this second behavior, use ""*a*b*"". Note that TRegExp does not; /// support '|', and so you cannot select, e.g. track and shower branches; /// with ""track|shower"".; ///; /// __WARNING! WARNING! WARNING!__; ///; /// SetBranchStatus is matching the branch based on match of the branch; /// 'name' and not on the branch hierarchy! In order to be able to; /// selectively enable a top level object that is 'split' you need to make; /// sure the name of the top level branch is prefixed to the sub-branches'; /// name (by adding a dot ('.') at the end of the Branch creation and use the; /// corresponding bname.; ///; /// I.e If your Tree has been created in split mode with a parent branch ""parent.""; /// (note the trailing dot).; /// ~~~ {.cpp}; /// T.SetBranchStatus(""parent"",1);; /// ~~~; /// will not activate the sub-branches of ""parent"". You should do:; /// ~~~ {.cpp}; /// T.SetBranchStatus(""parent*"",1);; /// ~~~; /// Without the trailing dot in the branch creation you have no choice but to; /// call SetBranchStatus explicitly for each of the sub branches.; ///; /// An alternative to this function is to read directly and only; /// the interesting branches. Example:; /// ~~~ {.cpp}; /// TBranch *brc = T.GetBranch(""c"");; /// TBranch *bre = T.GetBranch(""e"");; /// brc->GetEntry(i);; /// bre->GetEntry(i);; /// ~~~; /// If found is not 0, the number of branch(es) found matching the regular; /// expression is returned in *found AND the error message 'unknown branch'; /// is suppressed.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2684,Integrability,message,message,2684,"GetEntry(i) all branches are read for entry i.; /// to read only the branches c and e, one can do; /// ~~~ {.cpp}; /// T.SetBranchStatus(""*"",0); //disable all branches; /// T.SetBranchStatus(""c"",1);; /// T.setBranchStatus(""e"",1);; /// T.GetEntry(i);; /// ~~~; /// bname is interpreted as a wild-carded TRegexp (see TRegexp::MakeWildcard).; /// Thus, ""a*b"" or ""a.*b"" matches branches starting with ""a"" and ending with; /// ""b"", but not any other branch with an ""a"" followed at some point by a; /// ""b"". For this second behavior, use ""*a*b*"". Note that TRegExp does not; /// support '|', and so you cannot select, e.g. track and shower branches; /// with ""track|shower"".; ///; /// __WARNING! WARNING! WARNING!__; ///; /// SetBranchStatus is matching the branch based on match of the branch; /// 'name' and not on the branch hierarchy! In order to be able to; /// selectively enable a top level object that is 'split' you need to make; /// sure the name of the top level branch is prefixed to the sub-branches'; /// name (by adding a dot ('.') at the end of the Branch creation and use the; /// corresponding bname.; ///; /// I.e If your Tree has been created in split mode with a parent branch ""parent.""; /// (note the trailing dot).; /// ~~~ {.cpp}; /// T.SetBranchStatus(""parent"",1);; /// ~~~; /// will not activate the sub-branches of ""parent"". You should do:; /// ~~~ {.cpp}; /// T.SetBranchStatus(""parent*"",1);; /// ~~~; /// Without the trailing dot in the branch creation you have no choice but to; /// call SetBranchStatus explicitly for each of the sub branches.; ///; /// An alternative to this function is to read directly and only; /// the interesting branches. Example:; /// ~~~ {.cpp}; /// TBranch *brc = T.GetBranch(""c"");; /// TBranch *bre = T.GetBranch(""e"");; /// brc->GetEntry(i);; /// bre->GetEntry(i);; /// ~~~; /// If found is not 0, the number of branch(es) found matching the regular; /// expression is returned in *found AND the error message 'unknown branch'; /// is suppressed.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:299,Modifiability,variab,variables,299,"////////////////////////////////////////////////////////////////////////////////; /// Set branch status to Process or DoNotProcess.; ///; /// When reading a Tree, by default, all branches are read.; /// One can speed up considerably the analysis phase by activating; /// only the branches that hold variables involved in a query.; ///; /// bname is the name of a branch.; ///; /// - if bname=""*"", apply to all branches.; /// - if bname=""xxx*"", apply to all branches with name starting with xxx; ///; /// see TRegexp for wildcarding options; ///; /// - status = 1 branch will be processed; /// - = 0 branch will not be processed; ///; /// Example:; ///; /// Assume a tree T with sub-branches a,b,c,d,e,f,g,etc..; /// when doing T.GetEntry(i) all branches are read for entry i.; /// to read only the branches c and e, one can do; /// ~~~ {.cpp}; /// T.SetBranchStatus(""*"",0); //disable all branches; /// T.SetBranchStatus(""c"",1);; /// T.setBranchStatus(""e"",1);; /// T.GetEntry(i);; /// ~~~; /// bname is interpreted as a wild-carded TRegexp (see TRegexp::MakeWildcard).; /// Thus, ""a*b"" or ""a.*b"" matches branches starting with ""a"" and ending with; /// ""b"", but not any other branch with an ""a"" followed at some point by a; /// ""b"". For this second behavior, use ""*a*b*"". Note that TRegExp does not; /// support '|', and so you cannot select, e.g. track and shower branches; /// with ""track|shower"".; ///; /// __WARNING! WARNING! WARNING!__; ///; /// SetBranchStatus is matching the branch based on match of the branch; /// 'name' and not on the branch hierarchy! In order to be able to; /// selectively enable a top level object that is 'split' you need to make; /// sure the name of the top level branch is prefixed to the sub-branches'; /// name (by adding a dot ('.') at the end of the Branch creation and use the; /// corresponding bname.; ///; /// I.e If your Tree has been created in split mode with a parent branch ""parent.""; /// (note the trailing dot).; /// ~~~ {.cpp}; /// T.SetBranchStatus(""",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:467,Availability,error,error,467,"////////////////////////////////////////////////////////////////////////////////; /// Set maximum size of the file cache .; //; /// - if cachesize = 0 the existing cache (if any) is deleted.; /// - if cachesize = -1 (default) it is set to the AutoFlush value when writing; /// the Tree (default is 30 MBytes).; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, cache was created if possible; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:115,Performance,cache,cache,115,"////////////////////////////////////////////////////////////////////////////////; /// Set maximum size of the file cache .; //; /// - if cachesize = 0 the existing cache (if any) is deleted.; /// - if cachesize = -1 (default) it is set to the AutoFlush value when writing; /// the Tree (default is 30 MBytes).; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, cache was created if possible; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:137,Performance,cache,cachesize,137,"////////////////////////////////////////////////////////////////////////////////; /// Set maximum size of the file cache .; //; /// - if cachesize = 0 the existing cache (if any) is deleted.; /// - if cachesize = -1 (default) it is set to the AutoFlush value when writing; /// the Tree (default is 30 MBytes).; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, cache was created if possible; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:164,Performance,cache,cache,164,"////////////////////////////////////////////////////////////////////////////////; /// Set maximum size of the file cache .; //; /// - if cachesize = 0 the existing cache (if any) is deleted.; /// - if cachesize = -1 (default) it is set to the AutoFlush value when writing; /// the Tree (default is 30 MBytes).; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, cache was created if possible; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:201,Performance,cache,cachesize,201,"////////////////////////////////////////////////////////////////////////////////; /// Set maximum size of the file cache .; //; /// - if cachesize = 0 the existing cache (if any) is deleted.; /// - if cachesize = -1 (default) it is set to the AutoFlush value when writing; /// the Tree (default is 30 MBytes).; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, cache was created if possible; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:324,Performance,cache,cacheSize,324,"////////////////////////////////////////////////////////////////////////////////; /// Set maximum size of the file cache .; //; /// - if cachesize = 0 the existing cache (if any) is deleted.; /// - if cachesize = -1 (default) it is set to the AutoFlush value when writing; /// the Tree (default is 30 MBytes).; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, cache was created if possible; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:424,Performance,cache,cache,424,"////////////////////////////////////////////////////////////////////////////////; /// Set maximum size of the file cache .; //; /// - if cachesize = 0 the existing cache (if any) is deleted.; /// - if cachesize = -1 (default) it is set to the AutoFlush value when writing; /// the Tree (default is 30 MBytes).; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, cache was created if possible; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:52,Performance,cache,cache,52,"// remember that the user has requested an explicit cache setup",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:831,Availability,error,error,831,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:111,Performance,cache,cache,111,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:208,Performance,cache,cache,208,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:263,Performance,cache,cache,263,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:314,Performance,cache,cacheSize,314,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:332,Performance,cache,cacheSize,332,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:351,Performance,cache,cache,351,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:368,Performance,cache,cache,368,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:401,Performance,cache,cacheSize,401,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:437,Performance,cache,cache,437,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:518,Performance,cache,cache,518,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:525,Performance,cache,cacheSize,525,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:555,Performance,cache,cache,555,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:572,Performance,cache,cache,572,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:632,Performance,cache,cacheSize,632,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:754,Performance,cache,cache,754,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:787,Performance,cache,cache,787,"////////////////////////////////////////////////////////////////////////////////; /// Set the size of the file cache and create it if possible.; ///; /// If autocache is true:; /// this may be an autocreated cache, possibly enlarging an existing; /// autocreated cache. The size is calculated. The value passed in cacheSize:; /// - cacheSize = 0 make cache if default cache creation is enabled; /// - cacheSize = -1 make a default sized cache in any case; ///; /// If autocache is false:; /// this is a user requested cache. cacheSize is used to size the cache.; /// This cache should never be automatically adjusted.; ///; /// The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; ///; /// Returns:; /// - 0 size set, or existing autosized cache almost large enough.; /// (cache was created if possible); /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:45,Performance,cache,cache,45,"// used as a once only control for automatic cache setup",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:94,Performance,cache,cache,94,"// if there's no file or we are not a plain tree (e.g. if we're a TChain); // do not create a cache, only record the size if one was given",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:25,Performance,cache,cache,25,"// Check for an existing cache",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:13,Performance,cache,cache,13,"// reset our cache status tracking in case existing cache was added; // by the user without using one of the TTree methods",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:52,Performance,cache,cache,52,"// reset our cache status tracking in case existing cache was added; // by the user without using one of the TTree methods",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:12,Performance,cache,cache,12,"// existing cache was created by the user, don't change it",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3,Deployability,update,update,3,"// update the cache to ensure it records the user has explicitly; // requested it",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:14,Performance,cache,cache,14,"// update the cache to ensure it records the user has explicitly; // requested it",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:72,Performance,cache,cache,72,"// if we're using an automatically calculated size and the existing; // cache is already almost large enough don't resize",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:19,Performance,cache,cache,19,"// delete existing cache",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3,Deployability,update,update,3,"// update after potential clamp",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:15,Performance,cache,cache,15,"// no existing cache",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:14,Performance,cache,cache,14,"// Expected a cache should exist; perhaps the user moved it; // Do nothing more here.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:195,Availability,error,error,195,"////////////////////////////////////////////////////////////////////////////////; ///interface to TTreeCache to set the cache entry range; ///; /// Returns:; /// - 0 entry range set; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:85,Integrability,interface,interface,85,"////////////////////////////////////////////////////////////////////////////////; ///interface to TTreeCache to set the cache entry range; ///; /// Returns:; /// - 0 entry range set; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:120,Performance,cache,cache,120,"////////////////////////////////////////////////////////////////////////////////; ///interface to TTreeCache to set the cache entry range; ///; /// Returns:; /// - 0 entry range set; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to TTreeCache to set the number of entries for the learning phase",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:147,Usability,learn,learning,147,"////////////////////////////////////////////////////////////////////////////////; /// Interface to TTreeCache to set the number of entries for the learning phase",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the default value for the branch's fEntryOffsetLen.; /// If updateExisting is true, also update all the existing branches.; /// If newdefault is less than 10, the new default value will be 10.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:153,Deployability,update,updateExisting,153,"////////////////////////////////////////////////////////////////////////////////; /// Update the default value for the branch's fEntryOffsetLen.; /// If updateExisting is true, also update all the existing branches.; /// If newdefault is less than 10, the new default value will be 10.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:182,Deployability,update,update,182,"////////////////////////////////////////////////////////////////////////////////; /// Update the default value for the branch's fEntryOffsetLen.; /// If updateExisting is true, also update all the existing branches.; /// If newdefault is less than 10, the new default value will be 10.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:27,Performance,cache,cache,27,"// Delete or move the file cache if it points to this Tree",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:3,Safety,Avoid,Avoid,3,"// Avoid problem with RecursiveRemove.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:120,Modifiability,variab,variable,120,"////////////////////////////////////////////////////////////////////////////////; /// Set number of entries to estimate variable limits.; /// If n is -1, the estimate is set to be the current maximum; /// for the tree (i.e. GetEntries() + 1); /// If n is less than -1, the behavior is undefined.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:107,Availability,error,error,107,"// Purposely ignore all unsupported bits; TIOFeatures implementation already warned the user about the; // error of their ways; this is just a safety check.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:143,Safety,safe,safety,143,"// Purposely ignore all unsupported bits; TIOFeatures implementation already warned the user about the; // error of their ways; this is just a safety check.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:495,Modifiability,variab,variable,495,"////////////////////////////////////////////////////////////////////////////////; /// Set all the branches in this TTree to be in decomposed object mode; /// (also known as MakeClass mode).; ///; /// For MakeClass mode 0, the TTree expects the address where the data is stored; /// to be set by either the user or the TTree to the address of a full object; /// through the top level branch.; /// For MakeClass mode 1, this address is expected to point to a numerical type; /// or C-style array (variable or not) of numerical type, representing the; /// primitive data members.; /// The function's primary purpose is to allow the user to access the data; /// directly with numerical type variable rather than having to have the original; /// set of classes (or a reproduction thereof).",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:687,Modifiability,variab,variable,687,"////////////////////////////////////////////////////////////////////////////////; /// Set all the branches in this TTree to be in decomposed object mode; /// (also known as MakeClass mode).; ///; /// For MakeClass mode 0, the TTree expects the address where the data is stored; /// to be set by either the user or the TTree to the address of a full object; /// through the top level branch.; /// For MakeClass mode 1, this address is expected to point to a numerical type; /// or C-style array (variable or not) of numerical type, representing the; /// primitive data members.; /// The function's primary purpose is to allow the user to access the data; /// directly with numerical type variable rather than having to have the original; /// set of classes (or a reproduction thereof).",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:637,Security,access,access,637,"////////////////////////////////////////////////////////////////////////////////; /// Set all the branches in this TTree to be in decomposed object mode; /// (also known as MakeClass mode).; ///; /// For MakeClass mode 0, the TTree expects the address where the data is stored; /// to be set by either the user or the TTree to the address of a full object; /// through the top level branch.; /// For MakeClass mode 1, this address is expected to point to a numerical type; /// or C-style array (variable or not) of numerical type, representing the; /// primitive data members.; /// The function's primary purpose is to allow the user to access the data; /// directly with numerical type variable rather than having to have the original; /// set of classes (or a reproduction thereof).",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:55,Deployability,update,update,55,"// Trees are named objects in a THashList.; // We must update hashlists if we change the name.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:62,Security,hash,hashlists,62,"// Trees are named objects in a THashList.; // We must update hashlists if we change the name.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:20,Security,hash,hash,20,"// This changes our hash value.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:55,Deployability,update,update,55,"// Trees are named objects in a THashList.; // We must update hashlists if we change the name",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:62,Security,hash,hashlists,62,"// Trees are named objects in a THashList.; // We must update hashlists if we change the name",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:20,Security,hash,hash,20,"// This changes our hash value.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:194,Availability,error,error,194,"////////////////////////////////////////////////////////////////////////////////; /// Stop the cache learning phase; ///; /// Returns:; /// - 0 learning phase stopped or not active; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:95,Performance,cache,cache,95,"////////////////////////////////////////////////////////////////////////////////; /// Stop the cache learning phase; ///; /// Returns:; /// - 0 learning phase stopped or not active; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:101,Usability,learn,learning,101,"////////////////////////////////////////////////////////////////////////////////; /// Stop the cache learning phase; ///; /// Returns:; /// - 0 learning phase stopped or not active; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:144,Usability,learn,learning,144,"////////////////////////////////////////////////////////////////////////////////; /// Stop the cache learning phase; ///; /// Returns:; /// - 0 learning phase stopped or not active; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:18,Performance,cache,cache,18,"//delete the file cache if it points to this Tree",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:11,Energy Efficiency,allocate,allocated,11,"// The I/O allocated just enough memory to hold the; // current set of ranges.",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:103,Performance,cache,cache,103,"// Throughs calls to `GetCacheAutoSize` or `EnableCache` (for example; // by TTreePlayer::Process, the cache size will be automatically; // determined unless the user explicitly call `SetCacheSize`",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:574,Availability,Error,Errors,574,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a tree.; ///; /// funcname is a TF1 function.; ///; /// \see TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup:; ///; /// - Parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~ {.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; /// 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; ///; /// Return status:; ///; //",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:2246,Availability,error,error,2246,"Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup:; ///; /// - Parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~ {.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; /// 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; ///; /// Return status:; ///; /// - The function return the status of the fit in the following form; /// fitResult = migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult; /// - The fitResult is 0 is the fit is OK.; /// - The fitResult is negative in case of an error not connected with the fit.; /// - The number of entries used in the fit can be obtained via mytree.GetSelectedRows();; /// - If the number of selected entries is null the function returns -1",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:114,Modifiability,variab,variable,114,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a tree.; ///; /// funcname is a TF1 function.; ///; /// \see TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup:; ///; /// - Parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~ {.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; /// 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; ///; /// Return status:; ///; //",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:264,Modifiability,variab,variable,264,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a tree.; ///; /// funcname is a TF1 function.; ///; /// \see TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup:; ///; /// - Parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~ {.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; /// 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; ///; /// Return status:; ///; //",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:1595,Modifiability,variab,variable,1595,"Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup:; ///; /// - Parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~ {.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; /// 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; ///; /// Return status:; ///; /// - The function return the status of the fit in the following form; /// fitResult = migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult; /// - The fitResult is 0 is the fit is OK.; /// - The fitResult is negative in case of an error not connected with the fit.; /// - The number of entries used in the fit can be obtained via mytree.GetSelectedRows();; /// - If the number of selected entries is null the function returns -1",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx:559,Performance,Perform,Perform,559,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a tree.; ///; /// funcname is a TF1 function.; ///; /// \see TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~ {.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~ {.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup:; ///; /// - Parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~ {.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; /// 1, 2 and 3 Dimensional fits are supported. See also TTree::Fit; ///; /// Return status:; ///; //",MatchSource.CODE_COMMENT,tree/tree/src/TTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:1422,Availability,avail,available,1422,"/README/CREDITS. *; *************************************************************************/; /** \class TTreeCache; \ingroup tree; \brief A cache to speed-up the reading of ROOT datasets. # A cache to speed-up the reading of ROOT datasets. ## Table of Contents; - [Motivation](\ref motivation); - [General Description](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage o",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:6302,Integrability,interface,interfaces,6302,"is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry r",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3433,Modifiability,variab,variable,3433,"tion of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning perio",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:461,Performance,cache,cache,461,"// @(#)root/tree:$Id$; // Author: Rene Brun 04/06/2006; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeCache; \ingroup tree; \brief A cache to speed-up the reading of ROOT datasets. # A cache to speed-up the reading of ROOT datasets. ## Table of Contents; - [Motivation](\ref motivation); - [General Description](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the fil",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:513,Performance,cache,cache,513,"// @(#)root/tree:$Id$; // Author: Rene Brun 04/06/2006; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeCache; \ingroup tree; \brief A cache to speed-up the reading of ROOT datasets. # A cache to speed-up the reading of ROOT datasets. ## Table of Contents; - [Motivation](\ref motivation); - [General Description](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the fil",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:716,Performance,optimiz,optimization,716,"// @(#)root/tree:$Id$; // Author: Rene Brun 04/06/2006; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeCache; \ingroup tree; \brief A cache to speed-up the reading of ROOT datasets. # A cache to speed-up the reading of ROOT datasets. ## Table of Contents; - [Motivation](\ref motivation); - [General Description](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the fil",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:735,Performance,cache,cachemisses,735,"// @(#)root/tree:$Id$; // Author: Rene Brun 04/06/2006; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeCache; \ingroup tree; \brief A cache to speed-up the reading of ROOT datasets. # A cache to speed-up the reading of ROOT datasets. ## Table of Contents; - [Motivation](\ref motivation); - [General Description](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the fil",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:796,Performance,perform,performance,796,"// @(#)root/tree:$Id$; // Author: Rene Brun 04/06/2006; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeCache; \ingroup tree; \brief A cache to speed-up the reading of ROOT datasets. # A cache to speed-up the reading of ROOT datasets. ## Table of Contents; - [Motivation](\ref motivation); - [General Description](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the fil",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:884,Performance,cache,cache,884,"// @(#)root/tree:$Id$; // Author: Rene Brun 04/06/2006; /*************************************************************************; * Copyright (C) 1995-2018, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeCache; \ingroup tree; \brief A cache to speed-up the reading of ROOT datasets. # A cache to speed-up the reading of ROOT datasets. ## Table of Contents; - [Motivation](\ref motivation); - [General Description](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the fil",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:1244,Performance,perform,performance,1244,"/README/CREDITS. *; *************************************************************************/; /** \class TTreeCache; \ingroup tree; \brief A cache to speed-up the reading of ROOT datasets. # A cache to speed-up the reading of ROOT datasets. ## Table of Contents; - [Motivation](\ref motivation); - [General Description](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage o",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:1479,Performance,perform,performance,1479," the reading of ROOT datasets. # A cache to speed-up the reading of ROOT datasets. ## Table of Contents; - [Motivation](\ref motivation); - [General Description](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch b",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:1578,Performance,latency,latency,1578,"on](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being ",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:1635,Performance,cache,cache,1635,"on](\ref description); - [Changes in behaviour](\ref changesbehaviour); - [Self-optimization](\ref cachemisses); - [Examples of usage](\ref examples); - [Check performance and stats](\ref checkPerf). \anchor motivation; ## Motivation: why having a cache is needed?. When writing a TTree, the branch buffers are kept in memory.; A typical branch buffersize (before compression) is typically 32 KBytes.; After compression, the zipped buffer may be just a few Kbytes.; The branch buffers cannot be much larger in case of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being ",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:2203,Performance,cache,cache,2203," of TTrees with several; hundred or thousand branches. When writing, this does not generate a performance problem because branch; buffers are always written sequentially and, thanks to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache o",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:2350,Performance,perform,performance,2350," to OS optimisations,; content is flushed to the output file when a few MBytes of data are available.; On the other hand, when reading, one may hit performance problems because of; latencies e.g imposed by network.; For example in a WAN with 10ms latency, reading 1000 buffers of 10 KBytes each; with no cache will imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:2566,Performance,cache,cache,2566,"imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when u",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:2960,Performance,perform,performance,2960,"uch that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers;",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3088,Performance,latency,latency,3088,"ache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree a",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3298,Performance,cache,cache,3298," TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is n",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3527,Performance,cache,cache,3527,"is class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside ",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3747,Performance,cache,cache,3747,"w, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3857,Performance,cache,cache,3857,"default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior ",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4024,Performance,cache,cache,4024,"rformance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learnin",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4113,Performance,cache,cache,4113,"g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; fo",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4180,Performance,cache,cache,4180,"omatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed ",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4669,Performance,cache,cached,4669,"TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" f",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4721,Performance,cache,cachemisses,4721,"cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be p",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4742,Performance,optimiz,optimization,4742,"cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be p",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4770,Performance,cache,cache,4770,"cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be p",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4803,Performance,optimiz,optimize,4803,"the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; lat",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4830,Performance,cache,cache,4830,"the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; lat",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4853,Performance,optimiz,optimization,4853,"entlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usa",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4986,Performance,cache,cache,4986,"entlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usa",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5009,Performance,cache,cache,5009," phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5094,Performance,optimiz,optimization,5094," is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to r",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5434,Performance,optimiz,optimizing,5434,"he::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically whe",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5449,Performance,cache,cache,5449,"he::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically whe",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5518,Performance,cache,cache,5518,"he::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically whe",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5577,Performance,cache,cache,5577,"he::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically whe",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5699,Performance,cache,cache,5699,"s.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked wit",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5809,Performance,latency,latency,5809,"s behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of bran",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5848,Performance,cache,cache,5848,"imization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ##",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5978,Performance,cache,cache,5978,"cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatical",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:6787,Performance,cache,cache,6787,"ompared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a ",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:7036,Performance,cache,cache,7036,"y be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a subset of all branches. In the Process function we read a subset of the branches.; Only the branches used in the first entry will be put in the cache; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");;",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:7160,Performance,cache,cache,7160,"reeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a subset of all branches. In the Process function we read a subset of the branches.; Only the branches used in the first entry will be put in the cache; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; // We want to process only the 200 first entries; auto nentries=200UL;; auto efirst = 0;; auto elast = efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< ",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:7204,Performance,cache,cache,7204,"reeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a subset of all branches. In the Process function we read a subset of the branches.; Only the branches used in the first entry will be put in the cache; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; // We want to process only the 200 first entries; auto nentries=200UL;; auto efirst = 0;; auto elast = efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< ",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:7482,Performance,cache,cachesize,7482," the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a subset of all branches. In the Process function we read a subset of the branches.; Only the branches used in the first entry will be put in the cache; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; // We want to process only the 200 first entries; auto nentries=200UL;; auto efirst = 0;; auto elast = efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<<<; T->Process(""myselector.C+"","""",nentries,efirst);; // In the TSelector::Process we read only 2 branches; auto b1 = T->GetBranch(""branch1"");; b1->GetEntry(i);; if (somecondition) return;; auto b2 = T->GetBranch(""branc",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:7535,Performance,cache,cachesize,7535," the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a subset of all branches. In the Process function we read a subset of the branches.; Only the branches used in the first entry will be put in the cache; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; // We want to process only the 200 first entries; auto nentries=200UL;; auto efirst = 0;; auto elast = efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<<<; T->Process(""myselector.C+"","""",nentries,efirst);; // In the TSelector::Process we read only 2 branches; auto b1 = T->GetBranch(""branch1"");; b1->GetEntry(i);; if (somecondition) return;; auto b2 = T->GetBranch(""branc",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:7616,Performance,cache,cache,7616," the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a subset of all branches. In the Process function we read a subset of the branches.; Only the branches used in the first entry will be put in the cache; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; // We want to process only the 200 first entries; auto nentries=200UL;; auto efirst = 0;; auto elast = efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<<<; T->Process(""myselector.C+"","""",nentries,efirst);; // In the TSelector::Process we read only 2 branches; auto b1 = T->GetBranch(""branch1"");; b1->GetEntry(i);; if (somecondition) return;; auto b2 = T->GetBranch(""branc",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:7930,Performance,cache,cache,7930,"cally used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a subset of all branches. In the Process function we read a subset of the branches.; Only the branches used in the first entry will be put in the cache; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; // We want to process only the 200 first entries; auto nentries=200UL;; auto efirst = 0;; auto elast = efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<<<; T->Process(""myselector.C+"","""",nentries,efirst);; // In the TSelector::Process we read only 2 branches; auto b1 = T->GetBranch(""branch1"");; b1->GetEntry(i);; if (somecondition) return;; auto b2 = T->GetBranch(""branch2"");; b2->GetEntry(i);; ... Here the entry is processed; ~~~; ### Custom event loop. #### Always using the same two branches. In this example, exactly two branches are always used: those need to be; prefetched.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; auto nentries = T->GetEntries();; auto cachesiz",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:8114,Performance,cache,cachesize,8114,"e user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a subset of all branches. In the Process function we read a subset of the branches.; Only the branches used in the first entry will be put in the cache; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; // We want to process only the 200 first entries; auto nentries=200UL;; auto efirst = 0;; auto elast = efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<<<; T->Process(""myselector.C+"","""",nentries,efirst);; // In the TSelector::Process we read only 2 branches; auto b1 = T->GetBranch(""branch1"");; b1->GetEntry(i);; if (somecondition) return;; auto b2 = T->GetBranch(""branch2"");; b2->GetEntry(i);; ... Here the entry is processed; ~~~; ### Custom event loop. #### Always using the same two branches. In this example, exactly two branches are always used: those need to be; prefetched.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(b1, true); //<<< add branch1 and branch2 to the cache; T->AddBranchToCache(b2, true); //<<<; T->StopCacheLearningPhase(); //<<< we do not need the sy",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:8245,Performance,cache,cachesize,8245,"e user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a subset of all branches. In the Process function we read a subset of the branches.; Only the branches used in the first entry will be put in the cache; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; // We want to process only the 200 first entries; auto nentries=200UL;; auto efirst = 0;; auto elast = efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<<<; T->Process(""myselector.C+"","""",nentries,efirst);; // In the TSelector::Process we read only 2 branches; auto b1 = T->GetBranch(""branch1"");; b1->GetEntry(i);; if (somecondition) return;; auto b2 = T->GetBranch(""branch2"");; b2->GetEntry(i);; ... Here the entry is processed; ~~~; ### Custom event loop. #### Always using the same two branches. In this example, exactly two branches are always used: those need to be; prefetched.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(b1, true); //<<< add branch1 and branch2 to the cache; T->AddBranchToCache(b2, true); //<<<; T->StopCacheLearningPhase(); //<<< we do not need the sy",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:8897,Performance,cache,cachesize,8897," efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<<<; T->Process(""myselector.C+"","""",nentries,efirst);; // In the TSelector::Process we read only 2 branches; auto b1 = T->GetBranch(""branch1"");; b1->GetEntry(i);; if (somecondition) return;; auto b2 = T->GetBranch(""branch2"");; b2->GetEntry(i);; ... Here the entry is processed; ~~~; ### Custom event loop. #### Always using the same two branches. In this example, exactly two branches are always used: those need to be; prefetched.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(b1, true); //<<< add branch1 and branch2 to the cache; T->AddBranchToCache(b2, true); //<<<; T->StopCacheLearningPhase(); //<<< we do not need the system to guess anything; for (auto i : TSeqL(nentries)) {; T->LoadTree(i); //<<< important call when calling TBranch::GetEntry after; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; ... Here the entry is processed; }; ~~~; #### Always using at least the same two branches. In this example, two branches are always used: in addition, some analysis; functions are invoked and those may trigger the reading of other branches which; are a priori not known.; There is no point in prefetching branches that will be used very rarely: we can; rely on the system to cache the right branches.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesiz",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:8949,Performance,cache,cachesize,8949," efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<<<; T->Process(""myselector.C+"","""",nentries,efirst);; // In the TSelector::Process we read only 2 branches; auto b1 = T->GetBranch(""branch1"");; b1->GetEntry(i);; if (somecondition) return;; auto b2 = T->GetBranch(""branch2"");; b2->GetEntry(i);; ... Here the entry is processed; ~~~; ### Custom event loop. #### Always using the same two branches. In this example, exactly two branches are always used: those need to be; prefetched.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(b1, true); //<<< add branch1 and branch2 to the cache; T->AddBranchToCache(b2, true); //<<<; T->StopCacheLearningPhase(); //<<< we do not need the system to guess anything; for (auto i : TSeqL(nentries)) {; T->LoadTree(i); //<<< important call when calling TBranch::GetEntry after; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; ... Here the entry is processed; }; ~~~; #### Always using at least the same two branches. In this example, two branches are always used: in addition, some analysis; functions are invoked and those may trigger the reading of other branches which; are a priori not known.; There is no point in prefetching branches that will be used very rarely: we can; rely on the system to cache the right branches.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesiz",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:9036,Performance,cache,cache,9036," efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<<<; T->Process(""myselector.C+"","""",nentries,efirst);; // In the TSelector::Process we read only 2 branches; auto b1 = T->GetBranch(""branch1"");; b1->GetEntry(i);; if (somecondition) return;; auto b2 = T->GetBranch(""branch2"");; b2->GetEntry(i);; ... Here the entry is processed; ~~~; ### Custom event loop. #### Always using the same two branches. In this example, exactly two branches are always used: those need to be; prefetched.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(b1, true); //<<< add branch1 and branch2 to the cache; T->AddBranchToCache(b2, true); //<<<; T->StopCacheLearningPhase(); //<<< we do not need the system to guess anything; for (auto i : TSeqL(nentries)) {; T->LoadTree(i); //<<< important call when calling TBranch::GetEntry after; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; ... Here the entry is processed; }; ~~~; #### Always using at least the same two branches. In this example, two branches are always used: in addition, some analysis; functions are invoked and those may trigger the reading of other branches which; are a priori not known.; There is no point in prefetching branches that will be used very rarely: we can; rely on the system to cache the right branches.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesiz",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:9198,Performance,Load,LoadTree,9198," efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<<<; T->Process(""myselector.C+"","""",nentries,efirst);; // In the TSelector::Process we read only 2 branches; auto b1 = T->GetBranch(""branch1"");; b1->GetEntry(i);; if (somecondition) return;; auto b2 = T->GetBranch(""branch2"");; b2->GetEntry(i);; ... Here the entry is processed; ~~~; ### Custom event loop. #### Always using the same two branches. In this example, exactly two branches are always used: those need to be; prefetched.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(b1, true); //<<< add branch1 and branch2 to the cache; T->AddBranchToCache(b2, true); //<<<; T->StopCacheLearningPhase(); //<<< we do not need the system to guess anything; for (auto i : TSeqL(nentries)) {; T->LoadTree(i); //<<< important call when calling TBranch::GetEntry after; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; ... Here the entry is processed; }; ~~~; #### Always using at least the same two branches. In this example, two branches are always used: in addition, some analysis; functions are invoked and those may trigger the reading of other branches which; are a priori not known.; There is no point in prefetching branches that will be used very rarely: we can; rely on the system to cache the right branches.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesiz",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:9965,Performance,cache,cache,9965,"MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(b1, true); //<<< add branch1 and branch2 to the cache; T->AddBranchToCache(b2, true); //<<<; T->StopCacheLearningPhase(); //<<< we do not need the system to guess anything; for (auto i : TSeqL(nentries)) {; T->LoadTree(i); //<<< important call when calling TBranch::GetEntry after; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; ... Here the entry is processed; }; ~~~; #### Always using at least the same two branches. In this example, two branches are always used: in addition, some analysis; functions are invoked and those may trigger the reading of other branches which; are a priori not known.; There is no point in prefetching branches that will be used very rarely: we can; rely on the system to cache the right branches.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->SetCacheLearnEntries(5); //<<< we can take the decision after 5 entries; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; for (auto i : TSeqL(nentries)) {; T->LoadTree(i);; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; // At this point we may call a user function where a few more branches; // will be read conditionally. These branches will be put in the cache; // if they have been used in the first 10 entries; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; .. process the rare but interesting cases.; ... Here the en",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:10082,Performance,cache,cachesize,10082,"after; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; ... Here the entry is processed; }; ~~~; #### Always using at least the same two branches. In this example, two branches are always used: in addition, some analysis; functions are invoked and those may trigger the reading of other branches which; are a priori not known.; There is no point in prefetching branches that will be used very rarely: we can; rely on the system to cache the right branches.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->SetCacheLearnEntries(5); //<<< we can take the decision after 5 entries; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; for (auto i : TSeqL(nentries)) {; T->LoadTree(i);; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; // At this point we may call a user function where a few more branches; // will be read conditionally. These branches will be put in the cache; // if they have been used in the first 10 entries; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; .. process the rare but interesting cases.; ... Here the entry is processed; }; ~~~. \anchor checkPerf; ## How can the usage and performance of TTreeCache be verified?. Once the event loop terminated, the number of effective system reads for a; given file can be checked with a code like the following:; ~~~ {.cpp}; printf(""Reading %lld bytes in %d transactions\n"",myTFilePtr->GetBytesRead(), f->G",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:10133,Performance,cache,cachesize,10133,"after; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; ... Here the entry is processed; }; ~~~; #### Always using at least the same two branches. In this example, two branches are always used: in addition, some analysis; functions are invoked and those may trigger the reading of other branches which; are a priori not known.; There is no point in prefetching branches that will be used very rarely: we can; rely on the system to cache the right branches.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->SetCacheLearnEntries(5); //<<< we can take the decision after 5 entries; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; for (auto i : TSeqL(nentries)) {; T->LoadTree(i);; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; // At this point we may call a user function where a few more branches; // will be read conditionally. These branches will be put in the cache; // if they have been used in the first 10 entries; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; .. process the rare but interesting cases.; ... Here the entry is processed; }; ~~~. \anchor checkPerf; ## How can the usage and performance of TTreeCache be verified?. Once the event loop terminated, the number of effective system reads for a; given file can be checked with a code like the following:; ~~~ {.cpp}; printf(""Reading %lld bytes in %d transactions\n"",myTFilePtr->GetBytesRead(), f->G",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:10337,Performance,Load,LoadTree,10337,"after; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; ... Here the entry is processed; }; ~~~; #### Always using at least the same two branches. In this example, two branches are always used: in addition, some analysis; functions are invoked and those may trigger the reading of other branches which; are a priori not known.; There is no point in prefetching branches that will be used very rarely: we can; rely on the system to cache the right branches.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->SetCacheLearnEntries(5); //<<< we can take the decision after 5 entries; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; for (auto i : TSeqL(nentries)) {; T->LoadTree(i);; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; // At this point we may call a user function where a few more branches; // will be read conditionally. These branches will be put in the cache; // if they have been used in the first 10 entries; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; .. process the rare but interesting cases.; ... Here the entry is processed; }; ~~~. \anchor checkPerf; ## How can the usage and performance of TTreeCache be verified?. Once the event loop terminated, the number of effective system reads for a; given file can be checked with a code like the following:; ~~~ {.cpp}; printf(""Reading %lld bytes in %d transactions\n"",myTFilePtr->GetBytesRead(), f->G",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:10563,Performance,cache,cache,10563,"tinue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; ... Here the entry is processed; }; ~~~; #### Always using at least the same two branches. In this example, two branches are always used: in addition, some analysis; functions are invoked and those may trigger the reading of other branches which; are a priori not known.; There is no point in prefetching branches that will be used very rarely: we can; rely on the system to cache the right branches.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->SetCacheLearnEntries(5); //<<< we can take the decision after 5 entries; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; for (auto i : TSeqL(nentries)) {; T->LoadTree(i);; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; // At this point we may call a user function where a few more branches; // will be read conditionally. These branches will be put in the cache; // if they have been used in the first 10 entries; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; .. process the rare but interesting cases.; ... Here the entry is processed; }; ~~~. \anchor checkPerf; ## How can the usage and performance of TTreeCache be verified?. Once the event loop terminated, the number of effective system reads for a; given file can be checked with a code like the following:; ~~~ {.cpp}; printf(""Reading %lld bytes in %d transactions\n"",myTFilePtr->GetBytesRead(), f->GetReadCalls());; ~~~. Another handy command is:; ~~~ {.cpp}; myTreeOrChain.GetTree()->PrintCacheStats();; ~~~. */",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:10995,Performance,perform,performance,10995,"tinue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; ... Here the entry is processed; }; ~~~; #### Always using at least the same two branches. In this example, two branches are always used: in addition, some analysis; functions are invoked and those may trigger the reading of other branches which; are a priori not known.; There is no point in prefetching branches that will be used very rarely: we can; rely on the system to cache the right branches.; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000; //10 MBytes; T->SetCacheSize(cachesize); //<<<; T->SetCacheLearnEntries(5); //<<< we can take the decision after 5 entries; auto b1 = T->GetBranch(""branch1"");; auto b2 = T->GetBranch(""branch2"");; for (auto i : TSeqL(nentries)) {; T->LoadTree(i);; b1->GetEntry(i);; if (some condition not met) continue;; b2->GetEntry(i);; // At this point we may call a user function where a few more branches; // will be read conditionally. These branches will be put in the cache; // if they have been used in the first 10 entries; if (some condition not met) continue;; // Here we read the full event only in some rare cases.; // There is no point in caching the other branches as it might be; // more economical to read only the branch buffers really used.; T->GetEntry(i);; .. process the rare but interesting cases.; ... Here the entry is processed; }; ~~~. \anchor checkPerf; ## How can the usage and performance of TTreeCache be verified?. Once the event loop terminated, the number of effective system reads for a; given file can be checked with a code like the following:; ~~~ {.cpp}; printf(""Reading %lld bytes in %d transactions\n"",myTFilePtr->GetBytesRead(), f->GetReadCalls());; ~~~. Another handy command is:; ~~~ {.cpp}; myTreeOrChain.GetTree()->PrintCacheStats();; ~~~. */",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:6366,Safety,predict,predicting,6366," e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### ",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:7341,Safety,avoid,avoid,7341,"terfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cachesize = 10000000U; // 10 MBytes; T->SetCacheSize(cachesize); //<<<; T->AddBranchToCache(""*"", true); //<<< add all branches to the cache; T->Process(""myselector.C+"");; // In the TSelector::Process function we read all branches; T->GetEntry(i);; // ... Here the entry is processed; ~~~. #### Reading a subset of all branches. In the Process function we read a subset of the branches.; Only the branches used in the first entry will be put in the cache; ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; // We want to process only the 200 first entries; auto nentries=200UL;; auto efirst = 0;; auto elast = efirst+nentries;; auto cachesize = 10000000U; // 10 MBytes; TTreeCache::SetLearnEntries(1); //<<< we can take the decision after 1 entry; T->SetCacheSize(cachesize); //<<<; T->SetCacheEntryRange(efirst,elast); //<",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3053,Security,access,accessed,3053,"uch that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers;",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5151,Security,access,accessed,5151," is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to r",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:5179,Security,access,accessed,5179," is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to r",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:2783,Usability,learn,learning,2783,"imply 10s penalty where a local read of the 10 MBytes would; take about 1 second. The TreeCache tries to prefetch all the buffers for the selected branches; in order to transfer a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when u",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:2803,Usability,learn,learning,2803,"er a few multi-Megabytes large buffers instead of many; multi-kilobytes small buffers. In addition, TTreeCache can sort the blocks to; be read in increasing order such that the file is read sequentially. Systems like xrootd, dCache or httpd take advantage of the TTreeCache in; reading ahead as much data as they can and return to the application; the maximum data specified in the cache and have the next chunk of data ready; when the next request comes. ### Are there cases for which the usage of TTreeCache is detrimental for performance?; Yes, some corner cases. For example, when reading only a small fraction of all; entries such that not all branch buffers are read. \anchor description; ## General Description; This class acts as a file cache, registering automatically the baskets from; the branches being processed via direct manipulation of TTrees or with tools; such as TTree::Draw, TTree::Process, TSelector, TTreeReader and RDataFrame; when in the learning phase. The learning phase is by default 100 entries.; It can be changed via TTreeCache::SetLearnEntries. The usage of a TTreeCache can considerably improve the runtime performance at; the price of a modest investment in memory, in particular when the TTree is; accessed remotely, e.g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4035,Usability,learn,learning,4035,"g. via a high latency network. For each TTree being processed a TTreeCache object is created.; This object is automatically deleted when the Tree is deleted or; when the file is deleted.; The user can change the size of the cache with the TTree::SetCacheSize method; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; fo",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4307,Usability,learn,learning,4307,"ethod; (by default the size is 30 Megabytes). This feature can be controlled with the; environment variable `ROOT_TTREECACHE_SIZE` or the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in whic",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4417,Usability,learn,learning,4417," the TTreeCache.Size option.; The entry range for which the cache is active can also be set with the; SetEntryRange method. \anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4548,Usability,learn,learning,4548,"anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Ad",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4583,Usability,learn,learning,4583,"anchor changesbehaviour; ## Changes of behavior when using TChain and TEventList. The usage of TChain or TEventList have influence on the behaviour of the cache:. - Special case of a TChain; Once the training is done on the first Tree, the list of branches; in the cache is kept for the following files. - Special case of a TEventlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Ad",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:4956,Usability,learn,learning,4956,"entlist; if the Tree or TChain has a TEventlist, only the buffers; referenced by the list are put in the cache. The learning phase is started or restarted when:; - TTree automatically creates a cache.; - TTree::SetCacheSize is called with a non-zero size and a cache; did not previously exist; - TTreeCache::StartLearningPhase is called.; - TTreeCache::SetEntryRange is called; * and the learning is not yet finished; * and has not been set to manual; * and the new minimun entry is different. The learning period is stopped (and prefetching is started) when:; - TTreeCache::StopLearningPhase is called.; - An entry outside the 'learning' range is requested; The 'learning range is from fEntryMin (default to 0) to; fEntryMin + fgLearnEntries.; - A 'cached' TChain switches over to a new file. \anchor cachemisses; ## Self-optimization in presence of cache misses. The TTreeCache can optimize its behavior on a cache miss. When; miss optimization is enabled (see the SetOptimizeMisses method),; it tracks all branches utilized after the learning phase which caused a cache; miss.; When one cache miss occurs, all the utilized branches are be prefetched; for that event. This optimization utilizes the observation that infrequently; accessed branches are often accessed together.; An example scenario where such behavior is desirable, is an analysis where; a set of collections are read only for a few events in which a certain; condition is respected, e.g. a trigger fired. ### Additional memory and CPU usage when optimizing for cache misses; When this mode is enabled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usa",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:6527,Usability,learn,learning,6527,"bled, the memory dedicated to the cache can increase; by at most a factor two in the case of cache miss.; Additionally, on the first miss of an event, we must iterate through all the; ""active branches"" for the miss cache and find the correct basket.; This can be potentially a CPU-expensive operation compared to, e.g., the; latency of a SSD. This is why the miss cache is currently disabled by default. \anchor examples; ## Example usages of TTreeCache. A few use cases are discussed below. A cache may be created with automatic; sizing when a TTree is used:. In some applications, e.g. central processing workflows of experiments, the list; of branches to read is known a priori. For these cases, the TTreeCache can be; instructed about the branches which will be read via explicit calls to the TTree; or TTreeCache interfaces.; In less streamlined applications such as analysis, predicting the branches which; will be read can be difficult. In such cases, ROOT I/O flags used branches; automatically when a branch buffer is read during the learning phase. In the examples below, portions of analysis code are shown.; The few statements involving the TreeCache are marked with `//<<<`. ### ROOT::RDataFrame and TTreeReader Examples. If you use RDataFrame or TTreeReader, the system will automatically cache the; best set of branches: no action is required by the user. ### TTree::Draw Example. The TreeCache is automatically used by TTree::Draw. The method knows; which branches are used in the query and it puts automatically these branches; in the cache. The entry range is also inferred automatically. ### TTree::Process and TSelectors Examples. The user must enable the cache and tell the system which branches to cache; and also specify the entry range. It is important to specify the entry range; in case only a subset of the events is processed to avoid wasteful caching. #### Reading all branches. ~~~ {.cpp}; TTree *T;; f->GetObject(T, ""mytree"");; auto nentries = T->GetEntries();; auto cac",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:286,Availability,error,error,286,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch discovered by actual usage to the list of branches to be stored; /// in the cache this function is called by TBranch::GetBasket; /// If we are not longer in the training phase this is an error.; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:362,Availability,error,error,362,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch discovered by actual usage to the list of branches to be stored; /// in the cache this function is called by TBranch::GetBasket; /// If we are not longer in the training phase this is an error.; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:175,Performance,cache,cache,175,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch discovered by actual usage to the list of branches to be stored; /// in the cache this function is called by TBranch::GetBasket; /// If we are not longer in the training phase this is an error.; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:39,Performance,cache,cached,39,"// Reject branch that are not from the cached tree.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:156,Deployability,release,release,156,"// Is this the first addition of a branch (and we are learning and we are in; // the expected TTree), then prefill the cache. (We expect that in future; // release the Prefill-ing will be the default so we test for that inside the; // LearnPrefill call).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:119,Performance,cache,cache,119,"// Is this the first addition of a branch (and we are learning and we are in; // the expected TTree), then prefill the cache. (We expect that in future; // release the Prefill-ing will be the default so we test for that inside the; // LearnPrefill call).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:206,Testability,test,test,206,"// Is this the first addition of a branch (and we are learning and we are in; // the expected TTree), then prefill the cache. (We expect that in future; // release the Prefill-ing will be the default so we test for that inside the; // LearnPrefill call).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:54,Usability,learn,learning,54,"// Is this the first addition of a branch (and we are learning and we are in; // the expected TTree), then prefill the cache. (We expect that in future; // release the Prefill-ing will be the default so we test for that inside the; // LearnPrefill call).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:235,Usability,Learn,LearnPrefill,235,"// Is this the first addition of a branch (and we are learning and we are in; // the expected TTree), then prefill the cache. (We expect that in future; // release the Prefill-ing will be the default so we test for that inside the; // LearnPrefill call).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:359,Availability,error,error,359,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch to the list of branches to be stored in the cache; /// this function is called by the user via TTree::AddBranchToCache.; /// The branch is added even if we are outside of the training phase.; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:143,Performance,cache,cache,143,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch to the list of branches to be stored in the cache; /// this function is called by the user via TTree::AddBranchToCache.; /// The branch is added even if we are outside of the training phase.; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:39,Performance,cache,cached,39,"// Reject branch that are not from the cached tree.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:27,Performance,cache,cache,27,"//Is branch already in the cache?",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:148,Performance,cache,cache,148,"// If we have a TChain, we will need to use the branch name; // and we better disambiguate them (see atlasFlushed.root for example); // in order to cache all the requested branches.; // We do not do this all the time as GetMother is slow (it contains; // a linear search from list of top level branch).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:40,Safety,avoid,avoid,40,"// Maybe we ought to prefix the name to avoid ambiguity.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:659,Availability,error,error,659,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch to the list of branches to be stored in the cache; /// this is to be used by user (thats why we pass the name of the branch).; /// It works in exactly the same way as TTree::SetBranchStatus so you; /// probably want to look over there for details about the use of bname; /// with regular expressions.; /// The branches are taken with respect to the Owner of this TTreeCache; /// (i.e. the original Tree); /// NB: if bname=""*"" all branches are put in the cache and the learning phase stopped; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:143,Performance,cache,cache,143,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch to the list of branches to be stored in the cache; /// this is to be used by user (thats why we pass the name of the branch).; /// It works in exactly the same way as TTree::SetBranchStatus so you; /// probably want to look over there for details about the use of bname; /// with regular expressions.; /// The branches are taken with respect to the Owner of this TTreeCache; /// (i.e. the original Tree); /// NB: if bname=""*"" all branches are put in the cache and the learning phase stopped; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:553,Performance,cache,cache,553,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch to the list of branches to be stored in the cache; /// this is to be used by user (thats why we pass the name of the branch).; /// It works in exactly the same way as TTree::SetBranchStatus so you; /// probably want to look over there for details about the use of bname; /// with regular expressions.; /// The branches are taken with respect to the Owner of this TTreeCache; /// (i.e. the original Tree); /// NB: if bname=""*"" all branches are put in the cache and the learning phase stopped; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:567,Usability,learn,learning,567,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch to the list of branches to be stored in the cache; /// this is to be used by user (thats why we pass the name of the branch).; /// It works in exactly the same way as TTree::SetBranchStatus so you; /// probably want to look over there for details about the use of bname; /// with regular expressions.; /// The branches are taken with respect to the Owner of this TTreeCache; /// (i.e. the original Tree); /// NB: if bname=""*"" all branches are put in the cache and the learning phase stopped; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:40,Usability,learn,learning,40,"//if all branches are selected stop the learning phase",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:271,Availability,error,error,271,"////////////////////////////////////////////////////////////////////////////////; /// Remove a branch to the list of branches to be stored in the cache; /// this function is called by TBranch::GetBasket.; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:146,Performance,cache,cache,146,"////////////////////////////////////////////////////////////////////////////////; /// Remove a branch to the list of branches to be stored in the cache; /// this function is called by TBranch::GetBasket.; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:252,Performance,cache,cache,252,"////////////////////////////////////////////////////////////////////////////////; /// Remove a branch to the list of branches to be stored in the cache; /// this function is called by TBranch::GetBasket.; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:39,Performance,cache,cached,39,"// Reject branch that are not from the cached tree.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:27,Performance,cache,cache,27,"//Is branch already in the cache?",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:660,Availability,error,error,660,"////////////////////////////////////////////////////////////////////////////////; /// Remove a branch to the list of branches to be stored in the cache; /// this is to be used by user (thats why we pass the name of the branch).; /// It works in exactly the same way as TTree::SetBranchStatus so you; /// probably want to look over there for details about the use of bname; /// with regular expressions.; /// The branches are taken with respect to the Owner of this TTreeCache; /// (i.e. the original Tree); /// NB: if bname=""*"" all branches are put in the cache and the learning phase stopped; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:146,Performance,cache,cache,146,"////////////////////////////////////////////////////////////////////////////////; /// Remove a branch to the list of branches to be stored in the cache; /// this is to be used by user (thats why we pass the name of the branch).; /// It works in exactly the same way as TTree::SetBranchStatus so you; /// probably want to look over there for details about the use of bname; /// with regular expressions.; /// The branches are taken with respect to the Owner of this TTreeCache; /// (i.e. the original Tree); /// NB: if bname=""*"" all branches are put in the cache and the learning phase stopped; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:556,Performance,cache,cache,556,"////////////////////////////////////////////////////////////////////////////////; /// Remove a branch to the list of branches to be stored in the cache; /// this is to be used by user (thats why we pass the name of the branch).; /// It works in exactly the same way as TTree::SetBranchStatus so you; /// probably want to look over there for details about the use of bname; /// with regular expressions.; /// The branches are taken with respect to the Owner of this TTreeCache; /// (i.e. the original Tree); /// NB: if bname=""*"" all branches are put in the cache and the learning phase stopped; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:641,Performance,cache,cache,641,"////////////////////////////////////////////////////////////////////////////////; /// Remove a branch to the list of branches to be stored in the cache; /// this is to be used by user (thats why we pass the name of the branch).; /// It works in exactly the same way as TTree::SetBranchStatus so you; /// probably want to look over there for details about the use of bname; /// with regular expressions.; /// The branches are taken with respect to the Owner of this TTreeCache; /// (i.e. the original Tree); /// NB: if bname=""*"" all branches are put in the cache and the learning phase stopped; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:570,Usability,learn,learning,570,"////////////////////////////////////////////////////////////////////////////////; /// Remove a branch to the list of branches to be stored in the cache; /// this is to be used by user (thats why we pass the name of the branch).; /// It works in exactly the same way as TTree::SetBranchStatus so you; /// probably want to look over there for details about the use of bname; /// with regular expressions.; /// The branches are taken with respect to the Owner of this TTreeCache; /// (i.e. the original Tree); /// NB: if bname=""*"" all branches are put in the cache and the learning phase stopped; /// Returns:; /// - 0 branch dropped or not in cache; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:40,Usability,learn,learning,40,"//if all branches are selected stop the learning phase",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:436,Energy Efficiency,allocate,allocated,436,"////////////////////////////////////////////////////////////////////////////////; /// Start of methods for the miss cache.; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Enable / disable the miss cache.; ///; /// The first time this is called on a TTreeCache object, the corresponding; /// data structures will be allocated. Subsequent enable / disables will; /// simply turn the functionality on/off.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:116,Performance,cache,cache,116,"////////////////////////////////////////////////////////////////////////////////; /// Start of methods for the miss cache.; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Enable / disable the miss cache.; ///; /// The first time this is called on a TTreeCache object, the corresponding; /// data structures will be allocated. Subsequent enable / disables will; /// simply turn the functionality on/off.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:318,Performance,cache,cache,318,"////////////////////////////////////////////////////////////////////////////////; /// Start of methods for the miss cache.; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Enable / disable the miss cache.; ///; /// The first time this is called on a TTreeCache object, the corresponding; /// data structures will be allocated. Subsequent enable / disables will; /// simply turn the functionality on/off.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:486,Usability,simpl,simply,486,"////////////////////////////////////////////////////////////////////////////////; /// Start of methods for the miss cache.; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Enable / disable the miss cache.; ///; /// The first time this is called on a TTreeCache object, the corresponding; /// data structures will be allocated. Subsequent enable / disables will; /// simply turn the functionality on/off.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:105,Performance,cache,cache,105,"////////////////////////////////////////////////////////////////////////////////; /// Reset all the miss cache training.; ///; /// The contents of the miss cache will be emptied as well as the list of; /// branches used.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:156,Performance,cache,cache,156,"////////////////////////////////////////////////////////////////////////////////; /// Reset all the miss cache training.; ///; /// The contents of the miss cache will be emptied as well as the list of; /// branches used.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:346,Availability,failure,failure,346,"////////////////////////////////////////////////////////////////////////////////; /// For the event currently being fetched into the miss cache, find the IO; /// (offset / length tuple) to pull in the current basket for a given branch.; ///; /// Returns:; /// - IOPos describing the IO operation necessary for the basket on this branch; /// - On failure, IOPos.length will be set to 0.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:138,Performance,cache,cache,138,"////////////////////////////////////////////////////////////////////////////////; /// For the event currently being fetched into the miss cache, find the IO; /// (offset / length tuple) to pull in the current basket for a given branch.; ///; /// Returns:; /// - IOPos describing the IO operation necessary for the basket on this branch; /// - On failure, IOPos.length will be set to 0.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:81,Performance,cache,cache,81,"// Search for the basket that contains the event of interest. Unlike the primary cache, we; // are only interested in a single basket per branch - we don't try to fill the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:172,Performance,cache,cache,172,"// Search for the basket that contains the event of interest. Unlike the primary cache, we; // are only interested in a single basket per branch - we don't try to fill the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:27,Performance,cache,cache,27,"// Sanity check; // Do not cache a basket if it is bigger than the cache size!",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:67,Performance,cache,cache,67,"// Sanity check; // Do not cache a basket if it is bigger than the cache size!",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3,Safety,Sanity check,Sanity check,3,"// Sanity check; // Do not cache a basket if it is bigger than the cache size!",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:43,Performance,cache,cache,43,"// printf(""Basket size is greater than the cache size.\n"");",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:641,Availability,error,error,641,"////////////////////////////////////////////////////////////////////////////////; /// Given a particular IO description (offset / length) representing a 'miss' of; /// the TTreeCache's primary cache, calculate all the corresponding IO that; /// should be performed.; ///; /// `all` indicates that this function should search the set of _all_ branches; /// in this TTree. When set to false, we only search through branches that; /// have previously incurred a miss.; ///; /// Returns:; /// - TBranch pointer corresponding to the basket that will be retrieved by; /// this IO operation.; /// - If no corresponding branch could be found (or an error occurs), this; /// returns nullptr.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:193,Performance,cache,cache,193,"////////////////////////////////////////////////////////////////////////////////; /// Given a particular IO description (offset / length) representing a 'miss' of; /// the TTreeCache's primary cache, calculate all the corresponding IO that; /// should be performed.; ///; /// `all` indicates that this function should search the set of _all_ branches; /// in this TTree. When set to false, we only search through branches that; /// have previously incurred a miss.; ///; /// Returns:; /// - TBranch pointer corresponding to the basket that will be retrieved by; /// this IO operation.; /// - If no corresponding branch could be found (or an error occurs), this; /// returns nullptr.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:255,Performance,perform,performed,255,"////////////////////////////////////////////////////////////////////////////////; /// Given a particular IO description (offset / length) representing a 'miss' of; /// the TTreeCache's primary cache, calculate all the corresponding IO that; /// should be performed.; ///; /// `all` indicates that this function should search the set of _all_ branches; /// in this TTree. When set to false, we only search through branches that; /// have previously incurred a miss.; ///; /// Returns:; /// - TBranch pointer corresponding to the basket that will be retrieved by; /// this IO operation.; /// - If no corresponding branch could be found (or an error occurs), this; /// returns nullptr.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3,Availability,Error,Error,3,"// Error indicator",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:77,Performance,cache,cache,77,"// Note that we continue to iterate; fills up the rest of the entries in the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:135,Availability,error,error,135,"// We have gone through all the branches in this file and the requested basket; // doesn't appear to be in any of them. Likely a logic error / bug.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:129,Testability,log,logic,129,"// We have gone through all the branches in this file and the requested basket; // doesn't appear to be in any of them. Likely a logic error / bug.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:101,Performance,cache,cache,101,"////////////////////////////////////////////////////////////////////////////////; ///; /// Process a cache miss; (pos, len) isn't in the buffer.; ///; /// The first time we have a miss, we buffer as many baskets we can (up to the; /// maximum size of the TTreeCache) in memory from all branches that are not in; /// the prefetch list.; ///; /// Subsequent times, we fetch all the buffers corresponding to branches that; /// had previously seen misses. If it turns out the (pos, len) isn't in the; /// list of branches, we treat this as if it was the first miss.; ///; /// Returns true if we were able to pull the data into the miss cache.; ///",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:632,Performance,cache,cache,632,"////////////////////////////////////////////////////////////////////////////////; ///; /// Process a cache miss; (pos, len) isn't in the buffer.; ///; /// The first time we have a miss, we buffer as many baskets we can (up to the; /// maximum size of the TTreeCache) in memory from all branches that are not in; /// the prefetch list.; ///; /// Subsequent times, we fetch all the buffers corresponding to branches that; /// had previously seen misses. If it turns out the (pos, len) isn't in the; /// list of branches, we treat this as if it was the first miss.; ///; /// Returns true if we were able to pull the data into the miss cache.; ///",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:234,Availability,error,error,234,"// printf(""ProcessMiss: pos %ld does not appear to correspond to a buffer in this file.\n"", pos);; // We have gone through all the branches in this file and the requested basket; // doesn't appear to be in any of them. Likely a logic error / bug.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:228,Testability,log,logic,228,"// printf(""ProcessMiss: pos %ld does not appear to correspond to a buffer in this file.\n"", pos);; // We have gone through all the branches in this file and the requested basket; // doesn't appear to be in any of them. Likely a logic error / bug.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:39,Performance,cache,cache,39,"// printf(""Reading %lu bytes into miss cache for %lu entries.\n"", cumulative, fEntries->size());",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:130,Performance,cache,cache,130,"////////////////////////////////////////////////////////////////////////////////; /// Given an IO operation (pos, len) that was a cache miss in the primary TTC,; /// try the operation again with the miss cache.; ///; /// Returns true if the IO operation was successful and the contents of buf; /// were populated with the requested data.; ///",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:204,Performance,cache,cache,204,"////////////////////////////////////////////////////////////////////////////////; /// Given an IO operation (pos, len) that was a cache miss in the primary TTC,; /// try the operation again with the miss cache.; ///; /// Returns true if the IO operation was successful and the contents of buf; /// were populated with the requested data.; ///",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:29,Performance,cache,cache,29,"// printf(""Checking the miss cache for offset=%ld, length=%d\n"", pos, len);; // First, binary search to see if the desired basket is already cached.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:141,Performance,cache,cached,141,"// printf(""Checking the miss cache for offset=%ld, length=%d\n"", pos, len);; // First, binary search to see if the desired basket is already cached.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:47,Performance,cache,cache,47,"// printf(""Returning data from pos=%ld in miss cache.\n"", offset);",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:44,Deployability,Update,Update,44,"// printf(""Data not in miss cache.\n"");; // Update the cache, looking for this (pos, len).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:28,Performance,cache,cache,28,"// printf(""Data not in miss cache.\n"");; // Update the cache, looking for this (pos, len).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:55,Performance,cache,cache,55,"// printf(""Data not in miss cache.\n"");; // Update the cache, looking for this (pos, len).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:41,Performance,cache,cache,41,"// printf(""Unable to pull data into miss cache.\n"");",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:10,Deployability,update,updated,10,"// OK, we updated the cache with as much information as possible. Search again for; // the entry we want.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:22,Performance,cache,cache,22,"// OK, we updated the cache with as much information as possible. Search again for; // the entry we want.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:48,Performance,cache,cache,48,"// printf(""Expecting data at offset %ld in miss cache.\n"", offset);",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:18,Testability,log,logic,18,"// This must be a logic bug. ProcessMiss should return false if (pos, len); // wasn't put into fEntries.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:110,Performance,cache,cache,110,"////////////////////////////////////////////////////////////////////////////////; /// End of methods for miss cache.; ////////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:93,Performance,load,loaded,93,"// This returns a Range object where fMin is the maximum of all the minimun entry; // number loaded for each branch and fMax is the minimum of all the maximum entry; // number loaded for each branch.; // As such it is valid to have fMin > fMax, this is the case where there; // are no overlap between the branch's range. For example for 2 branches; // where we have for one the entry [50,99] and for the other [0,49] then; // we will have fMin = max(50,0) = 50 and fMax = min(99,49) = 49",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:176,Performance,load,loaded,176,"// This returns a Range object where fMin is the maximum of all the minimun entry; // number loaded for each branch and fMax is the minimum of all the maximum entry; // number loaded for each branch.; // As such it is valid to have fMin > fMax, this is the case where there; // are no overlap between the branch's range. For example for 2 branches; // where we have for one the entry [50,99] and for the other [0,49] then; // we will have fMin = max(50,0) = 50 and fMax = min(99,49) = 49",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:120,Performance,cache,cache,120,"// Anonymous namespace.; ////////////////////////////////////////////////////////////////////////////////; /// Fill the cache buffer with the branches in the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:158,Performance,cache,cache,158,"// Anonymous namespace.; ////////////////////////////////////////////////////////////////////////////////; /// Fill the cache buffer with the branches in the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3,Usability,Learn,Learning,3,"// Learning mode",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:24,Usability,learn,learn,24,"// entry is outside the learn range, need to stop the learning; // phase. Doing so may trigger a recursive call to FillBuffer in; // the process of filling both prefetching buffers",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:54,Usability,learn,learning,54,"// entry is outside the learn range, need to stop the learning; // phase. Doing so may trigger a recursive call to FillBuffer in; // the process of filling both prefetching buffers",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:83,Performance,cache,cache,83,"// Learning mode; // The learning phase should start from the minimum entry in the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:3,Usability,Learn,Learning,3,"// Learning mode; // The learning phase should start from the minimum entry in the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:25,Usability,learn,learning,25,"// Learning mode; // The learning phase should start from the minimum entry in the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:9,Safety,detect,detect,9,"//try to detect if it is normal or reverse read",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:34,Performance,cache,cache,34,"// Check if all the basket in the cache have already be used and; // thus we can reuse the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:91,Performance,cache,cache,91,"// Check if all the basket in the cache have already be used and; // thus we can reuse the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:34,Usability,learn,learning,34,"// Triggered by the user, not the learning phase",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:90,Security,authoriz,authorized,90,"// There is no overlap between the cluster we found [entryCurrent, entryNext[; // and the authorized range [fEntryMin, fEntryMax]; // so we have nothing to do",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:78,Deployability,update,update,78,"// If there is overlap between the found cluster and the authorized range; // update the cache data members with the information about the current cluster.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:89,Performance,cache,cache,89,"// If there is overlap between the found cluster and the authorized range; // update the cache data members with the information about the current cluster.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:57,Security,authoriz,authorized,57,"// If there is overlap between the found cluster and the authorized range; // update the cache data members with the information about the current cluster.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:50,Performance,optimiz,optimize,50,"// Check if owner has a TEventList set. If yes we optimize for this; // Special case reading only the baskets containing entries in the; // list.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:8,Performance,cache,cache,8,"//clear cache buffer",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:2,Usability,clear,clear,2,"//clear cache buffer",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:25,Performance,cache,cache,25,"// Main loop to fill the cache, inside each loop we will loop over; // all the cached branch and collect the baskets within the 'current'; // range/cluster. If there is still space in the cache after that, we; // will do another iteration to add one more cluster to the cache.; // i.e. essentially loop over the clusters.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:79,Performance,cache,cached,79,"// Main loop to fill the cache, inside each loop we will loop over; // all the cached branch and collect the baskets within the 'current'; // range/cluster. If there is still space in the cache after that, we; // will do another iteration to add one more cluster to the cache.; // i.e. essentially loop over the clusters.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:188,Performance,cache,cache,188,"// Main loop to fill the cache, inside each loop we will loop over; // all the cached branch and collect the baskets within the 'current'; // range/cluster. If there is still space in the cache after that, we; // will do another iteration to add one more cluster to the cache.; // i.e. essentially loop over the clusters.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:270,Performance,cache,cache,270,"// Main loop to fill the cache, inside each loop we will loop over; // all the cached branch and collect the baskets within the 'current'; // range/cluster. If there is still space in the cache after that, we; // will do another iteration to add one more cluster to the cache.; // i.e. essentially loop over the clusters.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:187,Performance,cache,cache,187,"// The first pass we add one basket per branches around the requested entry; // then in the second pass we add the other baskets of the cluster.; // This is to support the case where the cache is too small to hold a full cluster.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:67,Performance,cache,cache,67,"// First check if we have any cluster that is currently in the; // cache but was not used and would be reloaded in the next; // cluster.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:10,Performance,cache,cache,10,"// Do not cache a basket if it is bigger than the cache size!",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:50,Performance,cache,cache,50,"// Do not cache a basket if it is bigger than the cache size!",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:74,Performance,load,loaded,74,"// There is a gap between this basket and the max of the 'lowest' already loaded basket; // If we are tight in memory, reading this basket may prevent reading the basket (for the other branches); // that covers this gap, forcing those baskets to be read uncached (because the cache wont be reloaded; // until we use this basket).; // eg. We could end up with the cache contain; // b1: [428, 514[ // 'this' basket and we can assume [321 to 428[ is already in memory; // b2: [400, 424[; // and when reading entry 425 we will read b2's basket uncached.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:276,Performance,cache,cache,276,"// There is a gap between this basket and the max of the 'lowest' already loaded basket; // If we are tight in memory, reading this basket may prevent reading the basket (for the other branches); // that covers this gap, forcing those baskets to be read uncached (because the cache wont be reloaded; // until we use this basket).; // eg. We could end up with the cache contain; // b1: [428, 514[ // 'this' basket and we can assume [321 to 428[ is already in memory; // b2: [400, 424[; // and when reading entry 425 we will read b2's basket uncached.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:363,Performance,cache,cache,363,"// There is a gap between this basket and the max of the 'lowest' already loaded basket; // If we are tight in memory, reading this basket may prevent reading the basket (for the other branches); // that covers this gap, forcing those baskets to be read uncached (because the cache wont be reloaded; // until we use this basket).; // eg. We could end up with the cache contain; // b1: [428, 514[ // 'this' basket and we can assume [321 to 428[ is already in memory; // b2: [400, 424[; // and when reading entry 425 we will read b2's basket uncached.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:14,Performance,cache,cached,14,"// We already cached and used this basket during this cluster range,; // let's not redo it",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:35,Performance,cache,cache,35,"// This basket was in the previous cache/cluster and was not used,; // let's not read it again. I.e. we bet that it will continue to not; // be used. At worst it will be used and thus read by itself.; // Usually in this situation the basket is large so the penalty for; // (re)reading it uselessly is high and the penalty to read it by; // itself is 'small' (i.e. size bigger than latency).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:381,Performance,latency,latency,381,"// This basket was in the previous cache/cluster and was not used,; // let's not read it again. I.e. we bet that it will continue to not; // be used. At worst it will be used and thus read by itself.; // Usually in this situation the basket is large so the penalty for; // (re)reading it uselessly is high and the penalty to read it by; // itself is 'small' (i.e. size bigger than latency).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:37,Performance,load,loading,37,"// Actual registering the basket for loading from the file.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:31,Safety,avoid,avoid,31,"// 'Consume' the baskets (i.e. avoid looking at it during a subsequent pass)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:22,Performance,load,load,22,"// In the other pass, load the baskets until we get to the maximum loaded so far.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:67,Performance,load,loaded,67,"// In the other pass, load the baskets until we get to the maximum loaded so far.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:31,Safety,avoid,avoid,31,"// 'Consume' the baskets (i.e. avoid looking at it during a subsequent pass)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:890,Safety,avoid,avoid,890,"// Continue as long as we still make progress (prevNtot < ntotCurrentBuf), that the next entry range to be looked; // at,; // which start at 'minEntry', is not past the end of the requested range (minEntry < fEntryMax); // and we guess that we not going to go over the requested amount of memory by asking for another set; // of entries (fBufferSizeMin > ((Long64_t)ntotCurrentBuf*(clusterIterations+1))/clusterIterations).; // ntotCurrentBuf / clusterIterations is the average size we are accumulated so far at each loop.; // and thus (ntotCurrentBuf / clusterIterations) * (clusterIterations+1) is a good guess at what the next total; // size; // would be if we run the loop one more time. ntotCurrentBuf and clusterIterations are Int_t but can sometimes; // be 'large' (i.e. 30Mb * 300 intervals) and can overflow the numerical limit of Int_t (i.e. become; // artificially negative). To avoid this issue we promote ntotCurrentBuf to a long long (64 bits rather than 32; // bits)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:28,Performance,cache,cache,28,"// Nothing was added in the cache. This usually indicates that the baskets; // contains the requested entry are either already in memory or are too large; // on their own to fit in the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:185,Performance,cache,cache,185,"// Nothing was added in the cache. This usually indicates that the baskets; // contains the requested entry are either already in memory or are too large; // on their own to fit in the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:298,Performance,cache,cache,298,"// Something went very wrong and even-though we searched for the baskets; // holding 'entry' we somehow ended up with a range of entries that does; // validate. So we must have been unable to find or fit the needed basket.; // And thus even-though, we know the corresponding baskets wont be in the cache,; // Let's make it official that 'entry' is within the range of this TTreeCache ('s search.); // Without this, the next read will be flagged as 'out-of-range' and then we start at; // the exact same point as this FillBuffer execution resulting in both the requested; // entry still not being part of the cache **and** the beginning of the cluster being; // read **again**.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:608,Performance,cache,cache,608,"// Something went very wrong and even-though we searched for the baskets; // holding 'entry' we somehow ended up with a range of entries that does; // validate. So we must have been unable to find or fit the needed basket.; // And thus even-though, we know the corresponding baskets wont be in the cache,; // Let's make it official that 'entry' is within the range of this TTreeCache ('s search.); // Without this, the next read will be flagged as 'out-of-range' and then we start at; // the exact same point as this FillBuffer execution resulting in both the requested; // entry still not being part of the cache **and** the beginning of the cluster being; // read **again**.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:151,Security,validat,validate,151,"// Something went very wrong and even-though we searched for the baskets; // holding 'entry' we somehow ended up with a range of entries that does; // validate. So we must have been unable to find or fit the needed basket.; // And thus even-though, we know the corresponding baskets wont be in the cache,; // Let's make it official that 'entry' is within the range of this TTreeCache ('s search.); // Without this, the next read will be flagged as 'out-of-range' and then we start at; // the exact same point as this FillBuffer execution resulting in both the requested; // entry still not being part of the cache **and** the beginning of the cluster being; // read **again**.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:151,Modifiability,variab,variable,151,"////////////////////////////////////////////////////////////////////////////////; /// Return the desired prefill type from the environment or resource variable; /// - 0 - No prefill; /// - 1 - All branches",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:127,Performance,cache,cache,127,"////////////////////////////////////////////////////////////////////////////////; /// Give the total efficiency of the primary cache... defined as the ratio; /// of blocks found in the cache vs. the number of blocks prefetched; /// ( it could be more than 1 if we read the same block from the cache more; /// than once ); ///; /// Note: This should eb used at the end of the processing or we will; /// get incomplete stats",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:185,Performance,cache,cache,185,"////////////////////////////////////////////////////////////////////////////////; /// Give the total efficiency of the primary cache... defined as the ratio; /// of blocks found in the cache vs. the number of blocks prefetched; /// ( it could be more than 1 if we read the same block from the cache more; /// than once ); ///; /// Note: This should eb used at the end of the processing or we will; /// get incomplete stats",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:293,Performance,cache,cache,293,"////////////////////////////////////////////////////////////////////////////////; /// Give the total efficiency of the primary cache... defined as the ratio; /// of blocks found in the cache vs. the number of blocks prefetched; /// ( it could be more than 1 if we read the same block from the cache more; /// than once ); ///; /// Note: This should eb used at the end of the processing or we will; /// get incomplete stats",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:120,Performance,cache,cache,120,"////////////////////////////////////////////////////////////////////////////////; /// The total efficiency of the 'miss cache' - defined as the ratio; /// of blocks found in the cache versus the number of blocks prefetched",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:178,Performance,cache,cache,178,"////////////////////////////////////////////////////////////////////////////////; /// The total efficiency of the 'miss cache' - defined as the ratio; /// of blocks found in the cache versus the number of blocks prefetched",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:177,Performance,cache,cache,177,"////////////////////////////////////////////////////////////////////////////////; /// This will indicate a sort of relative efficiency... a ratio of the; /// reads found in the cache to the number of reads so far",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:119,Performance,cache,cache,119,"////////////////////////////////////////////////////////////////////////////////; /// Relative efficiency of the 'miss cache' - ratio of the reads found in cache; /// to the number of reads so far.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:156,Performance,cache,cache,156,"////////////////////////////////////////////////////////////////////////////////; /// Relative efficiency of the 'miss cache' - ratio of the reads found in cache; /// to the number of reads so far.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:152,Performance,cache,cache,152,"////////////////////////////////////////////////////////////////////////////////; /// Static function returning the number of entries used to train the cache; /// see SetLearnEntries",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:92,Performance,cache,cache,92,"////////////////////////////////////////////////////////////////////////////////; /// Print cache statistics. Like:; ///; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Number of branches in the cache ...: 1093; /// Cache Efficiency ..................: 0.997372; /// Cache Efficiency Rel...............: 1.000000; /// Learn entries......................: 100; /// Reading............................: 72761843 bytes in 7 transactions; /// Readahead..........................: 256000 bytes with overhead = 0 bytes; /// Average transaction................: 10394.549000 Kbytes; /// Number of blocks in current cache..: 210, total size: 6280352; /// ~~~; ///; /// - if option = ""a"" the list of blocks in the cache is printed; /// see also class TTreePerfStats.; /// - if option contains 'cachedbranches', the list of branches being; /// cached is printed.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:227,Performance,cache,cache,227,"////////////////////////////////////////////////////////////////////////////////; /// Print cache statistics. Like:; ///; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Number of branches in the cache ...: 1093; /// Cache Efficiency ..................: 0.997372; /// Cache Efficiency Rel...............: 1.000000; /// Learn entries......................: 100; /// Reading............................: 72761843 bytes in 7 transactions; /// Readahead..........................: 256000 bytes with overhead = 0 bytes; /// Average transaction................: 10394.549000 Kbytes; /// Number of blocks in current cache..: 210, total size: 6280352; /// ~~~; ///; /// - if option = ""a"" the list of blocks in the cache is printed; /// see also class TTreePerfStats.; /// - if option contains 'cachedbranches', the list of branches being; /// cached is printed.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:248,Performance,Cache,Cache,248,"////////////////////////////////////////////////////////////////////////////////; /// Print cache statistics. Like:; ///; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Number of branches in the cache ...: 1093; /// Cache Efficiency ..................: 0.997372; /// Cache Efficiency Rel...............: 1.000000; /// Learn entries......................: 100; /// Reading............................: 72761843 bytes in 7 transactions; /// Readahead..........................: 256000 bytes with overhead = 0 bytes; /// Average transaction................: 10394.549000 Kbytes; /// Number of blocks in current cache..: 210, total size: 6280352; /// ~~~; ///; /// - if option = ""a"" the list of blocks in the cache is printed; /// see also class TTreePerfStats.; /// - if option contains 'cachedbranches', the list of branches being; /// cached is printed.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:299,Performance,Cache,Cache,299,"////////////////////////////////////////////////////////////////////////////////; /// Print cache statistics. Like:; ///; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Number of branches in the cache ...: 1093; /// Cache Efficiency ..................: 0.997372; /// Cache Efficiency Rel...............: 1.000000; /// Learn entries......................: 100; /// Reading............................: 72761843 bytes in 7 transactions; /// Readahead..........................: 256000 bytes with overhead = 0 bytes; /// Average transaction................: 10394.549000 Kbytes; /// Number of blocks in current cache..: 210, total size: 6280352; /// ~~~; ///; /// - if option = ""a"" the list of blocks in the cache is printed; /// see also class TTreePerfStats.; /// - if option contains 'cachedbranches', the list of branches being; /// cached is printed.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:640,Performance,cache,cache,640,"////////////////////////////////////////////////////////////////////////////////; /// Print cache statistics. Like:; ///; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Number of branches in the cache ...: 1093; /// Cache Efficiency ..................: 0.997372; /// Cache Efficiency Rel...............: 1.000000; /// Learn entries......................: 100; /// Reading............................: 72761843 bytes in 7 transactions; /// Readahead..........................: 256000 bytes with overhead = 0 bytes; /// Average transaction................: 10394.549000 Kbytes; /// Number of blocks in current cache..: 210, total size: 6280352; /// ~~~; ///; /// - if option = ""a"" the list of blocks in the cache is printed; /// see also class TTreePerfStats.; /// - if option contains 'cachedbranches', the list of branches being; /// cached is printed.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:737,Performance,cache,cache,737,"////////////////////////////////////////////////////////////////////////////////; /// Print cache statistics. Like:; ///; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Number of branches in the cache ...: 1093; /// Cache Efficiency ..................: 0.997372; /// Cache Efficiency Rel...............: 1.000000; /// Learn entries......................: 100; /// Reading............................: 72761843 bytes in 7 transactions; /// Readahead..........................: 256000 bytes with overhead = 0 bytes; /// Average transaction................: 10394.549000 Kbytes; /// Number of blocks in current cache..: 210, total size: 6280352; /// ~~~; ///; /// - if option = ""a"" the list of blocks in the cache is printed; /// see also class TTreePerfStats.; /// - if option contains 'cachedbranches', the list of branches being; /// cached is printed.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:817,Performance,cache,cachedbranches,817,"////////////////////////////////////////////////////////////////////////////////; /// Print cache statistics. Like:; ///; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Number of branches in the cache ...: 1093; /// Cache Efficiency ..................: 0.997372; /// Cache Efficiency Rel...............: 1.000000; /// Learn entries......................: 100; /// Reading............................: 72761843 bytes in 7 transactions; /// Readahead..........................: 256000 bytes with overhead = 0 bytes; /// Average transaction................: 10394.549000 Kbytes; /// Number of blocks in current cache..: 210, total size: 6280352; /// ~~~; ///; /// - if option = ""a"" the list of blocks in the cache is printed; /// see also class TTreePerfStats.; /// - if option contains 'cachedbranches', the list of branches being; /// cached is printed.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:866,Performance,cache,cached,866,"////////////////////////////////////////////////////////////////////////////////; /// Print cache statistics. Like:; ///; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Number of branches in the cache ...: 1093; /// Cache Efficiency ..................: 0.997372; /// Cache Efficiency Rel...............: 1.000000; /// Learn entries......................: 100; /// Reading............................: 72761843 bytes in 7 transactions; /// Readahead..........................: 256000 bytes with overhead = 0 bytes; /// Average transaction................: 10394.549000 Kbytes; /// Number of blocks in current cache..: 210, total size: 6280352; /// ~~~; ///; /// - if option = ""a"" the list of blocks in the cache is printed; /// see also class TTreePerfStats.; /// - if option contains 'cachedbranches', the list of branches being; /// cached is printed.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:350,Usability,Learn,Learn,350,"////////////////////////////////////////////////////////////////////////////////; /// Print cache statistics. Like:; ///; /// ~~~ {.cpp}; /// ******TreeCache statistics for file: cms2.root ******; /// Number of branches in the cache ...: 1093; /// Cache Efficiency ..................: 0.997372; /// Cache Efficiency Rel...............: 1.000000; /// Learn entries......................: 100; /// Reading............................: 72761843 bytes in 7 transactions; /// Readahead..........................: 256000 bytes with overhead = 0 bytes; /// Average transaction................: 10394.549000 Kbytes; /// Number of blocks in current cache..: 210, total size: 6280352; /// ~~~; ///; /// - if option = ""a"" the list of blocks in the cache is printed; /// see also class TTreePerfStats.; /// - if option contains 'cachedbranches', the list of branches being; /// cached is printed.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:28,Performance,cache,cache,28,"//Is request already in the cache?",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:15,Performance,cache,cache,15,"//not found in cache. Do we need to fill the cache?",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:45,Performance,cache,cache,45,"//not found in cache. Do we need to fill the cache?",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:181,Performance,cache,cache,181,"////////////////////////////////////////////////////////////////////////////////; /// Used to read a chunk from a block previously fetched. It will call FillBuffer; /// even if the cache lookup succeeds, because it will try to prefetch the next block; /// as soon as we start reading from the current block.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:106,Availability,avail,available,106,"//call FillBuffer to prefetch next block if necessary; //(if we are currently reading from the last block available)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:346,Availability,failure,failure,346,"////////////////////////////////////////////////////////////////////////////////; /// Read buffer at position pos if the request is in the list of; /// prefetched blocks read from fBuffer.; /// Otherwise try to fill the cache from the list of selected branches,; /// and recheck if pos is now in the list.; /// Returns:; /// - -1 in case of read failure,; /// - 0 in case not in cache,; /// - 1 in case read from cache.; /// This function overloads TFileCacheRead::ReadBuffer.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:220,Performance,cache,cache,220,"////////////////////////////////////////////////////////////////////////////////; /// Read buffer at position pos if the request is in the list of; /// prefetched blocks read from fBuffer.; /// Otherwise try to fill the cache from the list of selected branches,; /// and recheck if pos is now in the list.; /// Returns:; /// - -1 in case of read failure,; /// - 0 in case not in cache,; /// - 1 in case read from cache.; /// This function overloads TFileCacheRead::ReadBuffer.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:379,Performance,cache,cache,379,"////////////////////////////////////////////////////////////////////////////////; /// Read buffer at position pos if the request is in the list of; /// prefetched blocks read from fBuffer.; /// Otherwise try to fill the cache from the list of selected branches,; /// and recheck if pos is now in the list.; /// Returns:; /// - -1 in case of read failure,; /// - 0 in case not in cache,; /// - 1 in case read from cache.; /// This function overloads TFileCacheRead::ReadBuffer.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:413,Performance,cache,cache,413,"////////////////////////////////////////////////////////////////////////////////; /// Read buffer at position pos if the request is in the list of; /// prefetched blocks read from fBuffer.; /// Otherwise try to fill the cache from the list of selected branches,; /// and recheck if pos is now in the list.; /// Returns:; /// - -1 in case of read failure,; /// - 0 in case not in cache,; /// - 1 in case read from cache.; /// This function overloads TFileCacheRead::ReadBuffer.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:113,Performance,cache,cache,113,"////////////////////////////////////////////////////////////////////////////////; /// This will simply clear the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:96,Usability,simpl,simply,96,"////////////////////////////////////////////////////////////////////////////////; /// This will simply clear the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:103,Usability,clear,clear,103,"////////////////////////////////////////////////////////////////////////////////; /// This will simply clear the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:409,Availability,avail,available,409,"////////////////////////////////////////////////////////////////////////////////; /// Change the underlying buffer size of the cache.; /// If the change of size means some cache content is lost, or if the buffer; /// is now larger, setup for a cache refill the next time there is a read; /// Buffersize might be clamped, see TFileCacheRead::SetBufferSize; /// Returns:; /// - 0 if the buffer content is still available; /// - 1 if some or all of the buffer content has been made unavailable; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:504,Availability,error,error,504,"////////////////////////////////////////////////////////////////////////////////; /// Change the underlying buffer size of the cache.; /// If the change of size means some cache content is lost, or if the buffer; /// is now larger, setup for a cache refill the next time there is a read; /// Buffersize might be clamped, see TFileCacheRead::SetBufferSize; /// Returns:; /// - 0 if the buffer content is still available; /// - 1 if some or all of the buffer content has been made unavailable; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:127,Performance,cache,cache,127,"////////////////////////////////////////////////////////////////////////////////; /// Change the underlying buffer size of the cache.; /// If the change of size means some cache content is lost, or if the buffer; /// is now larger, setup for a cache refill the next time there is a read; /// Buffersize might be clamped, see TFileCacheRead::SetBufferSize; /// Returns:; /// - 0 if the buffer content is still available; /// - 1 if some or all of the buffer content has been made unavailable; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:172,Performance,cache,cache,172,"////////////////////////////////////////////////////////////////////////////////; /// Change the underlying buffer size of the cache.; /// If the change of size means some cache content is lost, or if the buffer; /// is now larger, setup for a cache refill the next time there is a read; /// Buffersize might be clamped, see TFileCacheRead::SetBufferSize; /// Returns:; /// - 0 if the buffer content is still available; /// - 1 if some or all of the buffer content has been made unavailable; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:244,Performance,cache,cache,244,"////////////////////////////////////////////////////////////////////////////////; /// Change the underlying buffer size of the cache.; /// If the change of size means some cache content is lost, or if the buffer; /// is now larger, setup for a cache refill the next time there is a read; /// Buffersize might be clamped, see TFileCacheRead::SetBufferSize; /// Returns:; /// - 0 if the buffer content is still available; /// - 1 if some or all of the buffer content has been made unavailable; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:126,Performance,cache,cache,126,"// if content was removed from the buffer, or the buffer was enlarged then; // empty the prefetch lists and prime to fill the cache again",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:174,Performance,optimiz,optimize,174,"////////////////////////////////////////////////////////////////////////////////; /// Set the minimum and maximum entry number to be processed; /// this information helps to optimize the number of baskets to read; /// when prefetching the branch buffers.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:11,Usability,learn,learning,11,"// Restart learning",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:116,Performance,cache,cached,116,"////////////////////////////////////////////////////////////////////////////////; /// Change the file that is being cached.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:145,Usability,learn,learning,145,"////////////////////////////////////////////////////////////////////////////////; /// Static function to set the number of entries to be used in learning mode; /// The default value for n is 10. n must be >= 1",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:488,Modifiability,variab,variable,488,"////////////////////////////////////////////////////////////////////////////////; /// Set whether the learning period is started with a prefilling of the; /// cache and which type of prefilling is used.; /// The two value currently supported are:; /// - TTreeCache::kNoPrefill disable the prefilling; /// - TTreeCache::kAllBranches fill the cache with baskets from all branches.; /// The default prefilling behavior can be controlled by setting; /// TTreeCache.Prefill or the environment variable ROOT_TTREECACHE_PREFILL.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:159,Performance,cache,cache,159,"////////////////////////////////////////////////////////////////////////////////; /// Set whether the learning period is started with a prefilling of the; /// cache and which type of prefilling is used.; /// The two value currently supported are:; /// - TTreeCache::kNoPrefill disable the prefilling; /// - TTreeCache::kAllBranches fill the cache with baskets from all branches.; /// The default prefilling behavior can be controlled by setting; /// TTreeCache.Prefill or the environment variable ROOT_TTREECACHE_PREFILL.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:341,Performance,cache,cache,341,"////////////////////////////////////////////////////////////////////////////////; /// Set whether the learning period is started with a prefilling of the; /// cache and which type of prefilling is used.; /// The two value currently supported are:; /// - TTreeCache::kNoPrefill disable the prefilling; /// - TTreeCache::kAllBranches fill the cache with baskets from all branches.; /// The default prefilling behavior can be controlled by setting; /// TTreeCache.Prefill or the environment variable ROOT_TTREECACHE_PREFILL.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:102,Usability,learn,learning,102,"////////////////////////////////////////////////////////////////////////////////; /// Set whether the learning period is started with a prefilling of the; /// cache and which type of prefilling is used.; /// The two value currently supported are:; /// - TTreeCache::kNoPrefill disable the prefilling; /// - TTreeCache::kAllBranches fill the cache with baskets from all branches.; /// The default prefilling behavior can be controlled by setting; /// TTreeCache.Prefill or the environment variable ROOT_TTREECACHE_PREFILL.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:181,Performance,cache,cache,181,"////////////////////////////////////////////////////////////////////////////////; /// The name should be enough to explain the method.; /// The only additional comments is that the cache is cleaned before; /// the new learning phase.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:218,Usability,learn,learning,218,"////////////////////////////////////////////////////////////////////////////////; /// The name should be enough to explain the method.; /// The only additional comments is that the cache is cleaned before; /// the new learning phase.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:167,Usability,learn,learning,167,"////////////////////////////////////////////////////////////////////////////////; /// This is the counterpart of StartLearningPhase() and can be used to stop; /// the learning phase. It's useful when the user knows exactly what branches; /// they are going to use.; /// For the moment it's just a call to FillBuffer() since that method; /// will create the buffer lists from the specified branches.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:36,Usability,learn,learning,36,"//fill the buffers only once during learning",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update pointer to current Tree and recompute pointers to the branches in the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:163,Performance,cache,cache,163,"////////////////////////////////////////////////////////////////////////////////; /// Update pointer to current Tree and recompute pointers to the branches in the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:20,Usability,learn,learn,20,"// We still need to learn.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:6,Usability,learn,learnt,6,"// We learnt from a previous file.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:86,Performance,Perform,Perform,86,"////////////////////////////////////////////////////////////////////////////////; /// Perform an initial prefetch, attempting to read as much of the learning; /// phase baskets for all branches at once",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:149,Usability,learn,learning,149,"////////////////////////////////////////////////////////////////////////////////; /// Perform an initial prefetch, attempting to read as much of the learning; /// phase baskets for all branches at once",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:25,Usability,learn,learning,25,"// This is meant for the learning phase",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:10,Usability,Learn,LearnPrefill,10,"// Is the LearnPrefill enabled (using an Int_t here to allow for future; // extension to alternative Prefilling).",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:38,Performance,cache,cached,38,"// Force only the learn entries to be cached by temporarily setting min/max; // to the learning phase entry range; // But save all the old values, so we can restore everything to how it was",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:18,Usability,learn,learn,18,"// Force only the learn entries to be cached by temporarily setting min/max; // to the learning phase entry range; // But save all the old values, so we can restore everything to how it was",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:87,Usability,learn,learning,87,"// Force only the learn entries to be cached by temporarily setting min/max; // to the learning phase entry range; // But save all the old values, so we can restore everything to how it was",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:186,Performance,cache,cache,186,"// We check earlier that we are within the authorized range, but; // we might still be out of the (default) learning range and since; // this is called before any branch is added to the cache, this means; // that the user's first GetEntry is this one which is outside of the; // learning range ... so let's do something sensible-ish.; // Note: we probably should also fix the learning range but we may; // or may not have enough information to know if we can move it; // (for example fEntryMin (eminOld right now) might be the default or user provided)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:43,Security,authoriz,authorized,43,"// We check earlier that we are within the authorized range, but; // we might still be out of the (default) learning range and since; // this is called before any branch is added to the cache, this means; // that the user's first GetEntry is this one which is outside of the; // learning range ... so let's do something sensible-ish.; // Note: we probably should also fix the learning range but we may; // or may not have enough information to know if we can move it; // (for example fEntryMin (eminOld right now) might be the default or user provided)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:108,Usability,learn,learning,108,"// We check earlier that we are within the authorized range, but; // we might still be out of the (default) learning range and since; // this is called before any branch is added to the cache, this means; // that the user's first GetEntry is this one which is outside of the; // learning range ... so let's do something sensible-ish.; // Note: we probably should also fix the learning range but we may; // or may not have enough information to know if we can move it; // (for example fEntryMin (eminOld right now) might be the default or user provided)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:279,Usability,learn,learning,279,"// We check earlier that we are within the authorized range, but; // we might still be out of the (default) learning range and since; // this is called before any branch is added to the cache, this means; // that the user's first GetEntry is this one which is outside of the; // learning range ... so let's do something sensible-ish.; // Note: we probably should also fix the learning range but we may; // or may not have enough information to know if we can move it; // (for example fEntryMin (eminOld right now) might be the default or user provided)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:376,Usability,learn,learning,376,"// We check earlier that we are within the authorized range, but; // we might still be out of the (default) learning range and since; // this is called before any branch is added to the cache, this means; // that the user's first GetEntry is this one which is outside of the; // learning range ... so let's do something sensible-ish.; // Note: we probably should also fix the learning range but we may; // or may not have enough information to know if we can move it; // (for example fEntryMin (eminOld right now) might be the default or user provided)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:26,Performance,cache,cached,26,"// Add all branches to be cached. This also sets fIsManual, stops learning,; // and makes fEntryNext = -1 (which forces a cache fill, which is good)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:122,Performance,cache,cache,122,"// Add all branches to be cached. This also sets fIsManual, stops learning,; // and makes fEntryNext = -1 (which forces a cache fill, which is good)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:66,Usability,learn,learning,66,"// Add all branches to be cached. This also sets fIsManual, stops learning,; // and makes fEntryNext = -1 (which forces a cache fill, which is good)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:78,Usability,learn,learning,78,"// AddBranch sets fIsManual, so we reset it; // Now, fill the buffer with the learning phase entry range",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx:42,Usability,learn,learning,42,"// This doesn't work unless we're already learning; // Restore entry values",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCache.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCache.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:62,Energy Efficiency,allocate,allocates,62,"// The unzip cache does not consume memory by itself, it just allocates in advance; // mem blocks which are then picked as they are by the baskets.; // Hence there is no good reason to limit it too much",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:13,Performance,cache,cache,13,"// The unzip cache does not consume memory by itself, it just allocates in advance; // mem blocks which are then picked as they are by the baskets.; // Hence there is no good reason to limit it too much",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear all baskets' state arrays.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:203,Modifiability,layers,layers,203,"////////////////////////////////////////////////////////////////////////////////; /// Reset all baskets' state arrays. This function is only called by main; /// thread and parallel processing from upper layers should be disabled such; /// as IMT in TTree::GetEntry(). Other threads should not call this function; /// since it is not thread-safe.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:340,Safety,safe,safe,340,"////////////////////////////////////////////////////////////////////////////////; /// Reset all baskets' state arrays. This function is only called by main; /// thread and parallel processing from upper layers should be disabled such; /// as IMT in TTree::GetEntry(). Other threads should not call this function; /// since it is not thread-safe.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:90,Performance,cache,cache,90,"////////////////////////////////////////////////////////////////////////////////; /// Set cache as finished.; /// There are three scenarios that a basket is set as finished:; /// 1. The basket has already been unzipped.; /// 2. The thread is aborted from unzipping process.; /// 3. To avoid other tasks/threads work on this basket,; /// main thread marks the basket as finished and designates itself; /// to unzip this basket.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:242,Safety,abort,aborted,242,"////////////////////////////////////////////////////////////////////////////////; /// Set cache as finished.; /// There are three scenarios that a basket is set as finished:; /// 1. The basket has already been unzipped.; /// 2. The thread is aborted from unzipping process.; /// 3. To avoid other tasks/threads work on this basket,; /// main thread marks the basket as finished and designates itself; /// to unzip this basket.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:285,Safety,avoid,avoid,285,"////////////////////////////////////////////////////////////////////////////////; /// Set cache as finished.; /// There are three scenarios that a basket is set as finished:; /// 1. The basket has already been unzipped.; /// 2. The thread is aborted from unzipping process.; /// 3. To avoid other tasks/threads work on this basket,; /// main thread marks the basket as finished and designates itself; /// to unzip this basket.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:3,Deployability,Update,Update,3,"// Update status array at the very end because we need to be synchronous with the main thread.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:269,Availability,error,error,269,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch to the list of branches to be stored in the cache; /// this function is called by TBranch::GetBasket; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:143,Performance,cache,cache,143,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch to the list of branches to be stored in the cache; /// this function is called by TBranch::GetBasket; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:269,Availability,error,error,269,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch to the list of branches to be stored in the cache; /// this function is called by TBranch::GetBasket; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:143,Performance,cache,cache,143,"////////////////////////////////////////////////////////////////////////////////; /// Add a branch to the list of branches to be stored in the cache; /// this function is called by TBranch::GetBasket; /// Returns:; /// - 0 branch added or already included; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:12,Performance,cache,cache,12,"// Fill the cache buffer with the branches in the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:50,Performance,cache,cache,50,"// Fill the cache buffer with the branches in the cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:34,Usability,learn,learning,34,"// Triggered by the user, not the learning phase",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:50,Performance,optimiz,optimize,50,"// Check if owner has a TEventList set. If yes we optimize for this; // Special case reading only the baskets containing entries in the; // list.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:8,Performance,cache,cache,8,"//clear cache buffer",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:2,Usability,clear,clear,2,"//clear cache buffer",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:260,Availability,avail,available,260,"////////////////////////////////////////////////////////////////////////////////; /// Change the underlying buffer size of the cache.; /// The buffersize might be clamped, see TFileCacheRead::SetBufferSize; /// Returns:; /// - 0 if the buffer content is still available; /// - 1 if some or all of the buffer content has been made unavailable; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:355,Availability,error,error,355,"////////////////////////////////////////////////////////////////////////////////; /// Change the underlying buffer size of the cache.; /// The buffersize might be clamped, see TFileCacheRead::SetBufferSize; /// Returns:; /// - 0 if the buffer content is still available; /// - 1 if some or all of the buffer content has been made unavailable; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:127,Performance,cache,cache,127,"////////////////////////////////////////////////////////////////////////////////; /// Change the underlying buffer size of the cache.; /// The buffersize might be clamped, see TFileCacheRead::SetBufferSize; /// Returns:; /// - 0 if the buffer content is still available; /// - 1 if some or all of the buffer content has been made unavailable; /// - -1 on error",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:174,Performance,optimiz,optimize,174,"////////////////////////////////////////////////////////////////////////////////; /// Set the minimum and maximum entry number to be processed; /// this information helps to optimize the number of baskets to read; /// when prefetching the branch buffers.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:85,Deployability,update,update,85,"////////////////////////////////////////////////////////////////////////////////; ///update pointer to current Tree and recompute pointers to the branches in the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:162,Performance,cache,cache,162,"////////////////////////////////////////////////////////////////////////////////; ///update pointer to current Tree and recompute pointers to the branches in the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:161,Performance,cache,cache,161,"////////////////////////////////////////////////////////////////////////////////; // //; // From now on we have the methods concerning the threading part of the cache //; // //; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Static function that returns the parallel option; /// (to indicate an additional thread)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:582,Availability,error,error,582,"////////////////////////////////////////////////////////////////////////////////; /// Static function that (de)activates multithreading unzipping; ///; /// The possible options are:; /// - kEnable _Enable_ it, which causes an automatic detection and launches the; /// additional thread if the number of cores in the machine is greater than; /// one; /// - kDisable _Disable_ will not activate the additional thread.; /// - kForce _Force_ will start the additional thread even if there is only one; /// core. the default will be taken as kEnable.; ///; /// Returns 0 if there was an error, 1 otherwise.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:236,Safety,detect,detection,236,"////////////////////////////////////////////////////////////////////////////////; /// Static function that (de)activates multithreading unzipping; ///; /// The possible options are:; /// - kEnable _Enable_ it, which causes an automatic detection and launches the; /// additional thread if the number of cores in the machine is greater than; /// one; /// - kDisable _Disable_ will not activate the additional thread.; /// - kForce _Force_ will start the additional thread even if there is only one; /// core. the default will be taken as kEnable.; ///; /// Returns 0 if there was an error, 1 otherwise.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:924,Energy Efficiency,adapt,adapted,924,"////////////////////////////////////////////////////////////////////////////////; // //; // From now on we have the methods concerning the unzipping part of the cache //; // //; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Read the logical record header from the buffer buf.; /// That must be the pointer tho the header part not the object by itself and; /// must contain data of at least maxbytes; /// Returns nread;; ///; /// In output arguments:; ///; /// - nbytes : number of bytes in record; /// if negative, this is a deleted record; /// if 0, cannot read record, wrong value of argument first; /// - objlen : uncompressed object size; /// - keylen : length of logical record header; ///; /// Note that the arguments objlen and keylen are returned only; /// if maxbytes >=16; /// Note: This was adapted from TFile... so some things dont apply",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:924,Modifiability,adapt,adapted,924,"////////////////////////////////////////////////////////////////////////////////; // //; // From now on we have the methods concerning the unzipping part of the cache //; // //; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Read the logical record header from the buffer buf.; /// That must be the pointer tho the header part not the object by itself and; /// must contain data of at least maxbytes; /// Returns nread;; ///; /// In output arguments:; ///; /// - nbytes : number of bytes in record; /// if negative, this is a deleted record; /// if 0, cannot read record, wrong value of argument first; /// - objlen : uncompressed object size; /// - keylen : length of logical record header; ///; /// Note that the arguments objlen and keylen are returned only; /// if maxbytes >=16; /// Note: This was adapted from TFile... so some things dont apply",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:161,Performance,cache,cache,161,"////////////////////////////////////////////////////////////////////////////////; // //; // From now on we have the methods concerning the unzipping part of the cache //; // //; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Read the logical record header from the buffer buf.; /// That must be the pointer tho the header part not the object by itself and; /// must contain data of at least maxbytes; /// Returns nread;; ///; /// In output arguments:; ///; /// - nbytes : number of bytes in record; /// if negative, this is a deleted record; /// if 0, cannot read record, wrong value of argument first; /// - objlen : uncompressed object size; /// - keylen : length of logical record header; ///; /// Note that the arguments objlen and keylen are returned only; /// if maxbytes >=16; /// Note: This was adapted from TFile... so some things dont apply",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:355,Testability,log,logical,355,"////////////////////////////////////////////////////////////////////////////////; // //; // From now on we have the methods concerning the unzipping part of the cache //; // //; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Read the logical record header from the buffer buf.; /// That must be the pointer tho the header part not the object by itself and; /// must contain data of at least maxbytes; /// Returns nread;; ///; /// In output arguments:; ///; /// - nbytes : number of bytes in record; /// if negative, this is a deleted record; /// if 0, cannot read record, wrong value of argument first; /// - objlen : uncompressed object size; /// - keylen : length of logical record header; ///; /// Note that the arguments objlen and keylen are returned only; /// if maxbytes >=16; /// Note: This was adapted from TFile... so some things dont apply",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:790,Testability,log,logical,790,"////////////////////////////////////////////////////////////////////////////////; // //; // From now on we have the methods concerning the unzipping part of the cache //; // //; ////////////////////////////////////////////////////////////////////////////////; ////////////////////////////////////////////////////////////////////////////////; /// Read the logical record header from the buffer buf.; /// That must be the pointer tho the header part not the object by itself and; /// must contain data of at least maxbytes; /// Returns nread;; ///; /// In output arguments:; ///; /// - nbytes : number of bytes in record; /// if negative, this is a deleted record; /// if 0, cannot read record, wrong value of argument first; /// - objlen : uncompressed object size; /// - keylen : length of logical record header; ///; /// Note that the arguments objlen and keylen are returned only; /// if maxbytes >=16; /// Note: This was adapted from TFile... so some things dont apply",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:149,Performance,cache,cache,149,"////////////////////////////////////////////////////////////////////////////////; /// This will delete the list of buffers that are in the unzipping cache; /// and will reset certain values in the cache.; /// This name is ambiguos because the method doesn't reset the whole cache,; /// only the part related to the unzipping; /// Note: This method is completely different from TTreeCache::ResetCache(),; /// in that method we were cleaning the prefetching buffer while here we; /// delete the information about the unzipped buffers",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:197,Performance,cache,cache,197,"////////////////////////////////////////////////////////////////////////////////; /// This will delete the list of buffers that are in the unzipping cache; /// and will reset certain values in the cache.; /// This name is ambiguos because the method doesn't reset the whole cache,; /// only the part related to the unzipping; /// Note: This method is completely different from TTreeCache::ResetCache(),; /// in that method we were cleaning the prefetching buffer while here we; /// delete the information about the unzipped buffers",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:274,Performance,cache,cache,274,"////////////////////////////////////////////////////////////////////////////////; /// This will delete the list of buffers that are in the unzipping cache; /// and will reset certain values in the cache.; /// This name is ambiguos because the method doesn't reset the whole cache,; /// only the part related to the unzipping; /// Note: This method is completely different from TTreeCache::ResetCache(),; /// in that method we were cleaning the prefetching buffer while here we; /// delete the information about the unzipped buffers",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:239,Deployability,update,update,239,"////////////////////////////////////////////////////////////////////////////////; /// This inflates a basket in the cache.. passing the data to a new; /// buffer that will only wait there to be read...; /// This function is responsible to update corresponding elements in; /// fUnzipStatus, fUnzipChunks and fUnzipLen. Since we use atomic variables; /// in fUnzipStatus to exclusively unzip the basket, we must update; /// fUnzipStatus after fUnzipChunks and fUnzipLen and make sure fUnzipChunks; /// and fUnzipLen are ready before main thread fetch the data.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:411,Deployability,update,update,411,"////////////////////////////////////////////////////////////////////////////////; /// This inflates a basket in the cache.. passing the data to a new; /// buffer that will only wait there to be read...; /// This function is responsible to update corresponding elements in; /// fUnzipStatus, fUnzipChunks and fUnzipLen. Since we use atomic variables; /// in fUnzipStatus to exclusively unzip the basket, we must update; /// fUnzipStatus after fUnzipChunks and fUnzipLen and make sure fUnzipChunks; /// and fUnzipLen are ready before main thread fetch the data.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:339,Modifiability,variab,variables,339,"////////////////////////////////////////////////////////////////////////////////; /// This inflates a basket in the cache.. passing the data to a new; /// buffer that will only wait there to be read...; /// This function is responsible to update corresponding elements in; /// fUnzipStatus, fUnzipChunks and fUnzipLen. Since we use atomic variables; /// in fUnzipStatus to exclusively unzip the basket, we must update; /// fUnzipStatus after fUnzipChunks and fUnzipLen and make sure fUnzipChunks; /// and fUnzipLen are ready before main thread fetch the data.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:116,Performance,cache,cache,116,"////////////////////////////////////////////////////////////////////////////////; /// This inflates a basket in the cache.. passing the data to a new; /// buffer that will only wait there to be read...; /// This function is responsible to update corresponding elements in; /// fUnzipStatus, fUnzipChunks and fUnzipLen. Since we use atomic variables; /// in fUnzipStatus to exclusively unzip the basket, we must update; /// fUnzipStatus after fUnzipChunks and fUnzipLen and make sure fUnzipChunks; /// and fUnzipLen are ready before main thread fetch the data.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:6,Integrability,synchroniz,synchronize,6,"// To synchronize with the 'paging'",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:45,Energy Efficiency,charge,charge,45,"// Set it as not done, main thread will take charge",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:45,Energy Efficiency,charge,charge,45,"// Set it as not done, main thread will take charge",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:45,Energy Efficiency,charge,charge,45,"// Set it as not done, main thread will take charge",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:45,Energy Efficiency,charge,charge,45,"// Set it as not done, main thread will take charge",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:45,Energy Efficiency,charge,charge,45,"// Set it as not done, main thread will take charge",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:330,Safety,avoid,avoid,330,"////////////////////////////////////////////////////////////////////////////////; /// We create a TTaskGroup and asynchronously maps each group of baskets(> 100 kB in total); /// to a task. In TTaskGroup, we use TThreadExecutor to do the actually work of unzipping; /// a group of basket. The purpose of creating TTaskGroup is to avoid competing with main thread.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:6,Performance,cache,cache,6,"// If cache is invalidated and we should return immediately.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:173,Availability,failure,failure,173,"////////////////////////////////////////////////////////////////////////////////; /// We try to read a buffer that has already been unzipped; /// Returns -1 in case of read failure, 0 in case it's not in the; /// cache and n>0 in case read from cache (number of bytes copied).; /// pos and len are the original values as were passed to ReadBuffer; /// but instead we will return the inflated buffer.; /// Note!! : If *buf == 0 we will allocate the buffer and it will be the; /// responsibility of the caller to free it... it is useful for example; /// to pass it to the creator of TBuffer",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:435,Energy Efficiency,allocate,allocate,435,"////////////////////////////////////////////////////////////////////////////////; /// We try to read a buffer that has already been unzipped; /// Returns -1 in case of read failure, 0 in case it's not in the; /// cache and n>0 in case read from cache (number of bytes copied).; /// pos and len are the original values as were passed to ReadBuffer; /// but instead we will return the inflated buffer.; /// Note!! : If *buf == 0 we will allocate the buffer and it will be the; /// responsibility of the caller to free it... it is useful for example; /// to pass it to the creator of TBuffer",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:213,Performance,cache,cache,213,"////////////////////////////////////////////////////////////////////////////////; /// We try to read a buffer that has already been unzipped; /// Returns -1 in case of read failure, 0 in case it's not in the; /// cache and n>0 in case read from cache (number of bytes copied).; /// pos and len are the original values as were passed to ReadBuffer; /// but instead we will return the inflated buffer.; /// Note!! : If *buf == 0 we will allocate the buffer and it will be the; /// responsibility of the caller to free it... it is useful for example; /// to pass it to the creator of TBuffer",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:245,Performance,cache,cache,245,"////////////////////////////////////////////////////////////////////////////////; /// We try to read a buffer that has already been unzipped; /// Returns -1 in case of read failure, 0 in case it's not in the; /// cache and n>0 in case read from cache (number of bytes copied).; /// pos and len are the original values as were passed to ReadBuffer; /// but instead we will return the inflated buffer.; /// Note!! : If *buf == 0 we will allocate the buffer and it will be the; /// responsibility of the caller to free it... it is useful for example; /// to pass it to the creator of TBuffer",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:42,Performance,cache,cache,42,"// The buffer is, at minimum, in the file cache. We must know its index in the requests list; // In order to get its info",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:54,Safety,abort,aborted,54,"// Here the block is not pending. It could be done or aborted or not yet being processed.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:39,Safety,avoid,avoid,39,"// This is a complete miss. We want to avoid the background tasks; // to try unzipping this block in the future.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:3,Performance,Cache,Cache,3,"// Cache is invalidated and we need to wait for all unzipping tasks to be finished before fill new baskets in cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:110,Performance,cache,cache,110,"// Cache is invalidated and we need to wait for all unzipping tasks to be finished before fill new baskets in cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:25,Performance,cache,cache,25,"// Fill new baskets into cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:118,Performance,cache,cache,118,"////////////////////////////////////////////////////////////////////////////////; /// Sets the size for the unzipping cache... by default it should be; /// two times the size of the prefetching cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:194,Performance,cache,cache,194,"////////////////////////////////////////////////////////////////////////////////; /// Sets the size for the unzipping cache... by default it should be; /// two times the size of the prefetching cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:213,Availability,error,error,213,"////////////////////////////////////////////////////////////////////////////////; /// Unzips a ROOT specific buffer... by reading the header at the beginning.; /// returns the size of the inflated buffer or -1 if error; /// Note!! : If *dest == 0 we will allocate the buffer and it will be the; /// responsibility of the caller to free it... it is useful for example; /// to pass it to the creator of TBuffer; /// src is the original buffer with the record (header+compressed data); /// *dest is the inflated buffer (including the header)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx:255,Energy Efficiency,allocate,allocate,255,"////////////////////////////////////////////////////////////////////////////////; /// Unzips a ROOT specific buffer... by reading the header at the beginning.; /// returns the size of the inflated buffer or -1 if error; /// Note!! : If *dest == 0 we will allocate the buffer and it will be the; /// responsibility of the caller to free it... it is useful for example; /// to pass it to the creator of TBuffer; /// src is the original buffer with the record (header+compressed data); /// *dest is the inflated buffer (including the header)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCacheUnzip.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCacheUnzip.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:1216,Performance,optimiz,optimize,1216,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. This object would transfer the data from; /// 'from' to 'to' using the method indicated in method.; ///; /// The value of the parameter 'method' determines in which; /// order the branches' baskets are written to the output file.; ///; /// When a TTree is filled the data is stored in the individual; /// branches' basket. Each basket is written individually to; /// the disk as soon as it is full. In consequence the baskets; /// of branches that contain 'large' data chunk are written to; /// the disk more often.; ///; /// There is currently 3 supported sorting order:; ///; /// SortBasketsByOffset (the default); /// SortBasketsByBranch; /// SortBasketsByEntry; ///; /// When using SortBasketsByOffset the baskets are written in; /// the output file in the same order as in the original file; /// (i.e. the basket are sorted on their offset in the original; /// file; Usually this also means that the baskets are sorted; /// on the index/number of the _last_ entry they contain); ///; /// When using SortBasketsByBranch all the baskets of each; /// individual branches are stored contiguously. This tends to; /// optimize reading speed when reading a small number (1->5) of; /// branches, since all their baskets will be clustered together; /// instead of being spread across the file. However it might; /// decrease the performance when reading more branches (or the full; /// entry).; ///; /// When using SortBasketsByEntry the baskets with the lowest; /// starting entry are written first. (i.e. the baskets are; /// sorted on the index/number of the first entry they contain).; /// This means that on the file the baskets will be in the order; /// in which they will be needed when reading the whole tree; /// sequentially.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:1424,Performance,perform,performance,1424,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. This object would transfer the data from; /// 'from' to 'to' using the method indicated in method.; ///; /// The value of the parameter 'method' determines in which; /// order the branches' baskets are written to the output file.; ///; /// When a TTree is filled the data is stored in the individual; /// branches' basket. Each basket is written individually to; /// the disk as soon as it is full. In consequence the baskets; /// of branches that contain 'large' data chunk are written to; /// the disk more often.; ///; /// There is currently 3 supported sorting order:; ///; /// SortBasketsByOffset (the default); /// SortBasketsByBranch; /// SortBasketsByEntry; ///; /// When using SortBasketsByOffset the baskets are written in; /// the output file in the same order as in the original file; /// (i.e. the basket are sorted on their offset in the original; /// file; Usually this also means that the baskets are sorted; /// on the index/number of the _last_ entry they contain); ///; /// When using SortBasketsByBranch all the baskets of each; /// individual branches are stored contiguously. This tends to; /// optimize reading speed when reading a small number (1->5) of; /// branches, since all their baskets will be clustered together; /// instead of being spread across the file. However it might; /// decrease the performance when reading more branches (or the full; /// entry).; ///; /// When using SortBasketsByEntry the baskets with the lowest; /// starting entry are written first. (i.e. the baskets are; /// sorted on the index/number of the first entry they contain).; /// This means that on the file the baskets will be in the order; /// in which they will be needed when reading the whole tree; /// sequentially.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:293,Deployability,update,updates,293,"////////////////////////////////////////////////////////////////////////////////; /// Constructor. In place cloning.; //// This object would transfer the data from; /// 'from' the original location to 'newdirectory' the new directory; /// using the sorting method indicated in method.; /// It updates the 'from' TTree with the new information.; /// See TTreeCloner::TTreeCloner(TTree *from, TTree *to, Option_t *method, UInt_t options); /// for details on the sorting methods.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:12,Performance,cache,cache,12,"// The file cache was restored to its previous value at the end of Exec,; // we can safely delete our cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:102,Performance,cache,cache,102,"// The file cache was restored to its previous value at the end of Exec,; // we can safely delete our cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:84,Safety,safe,safely,84,"// The file cache was restored to its previous value at the end of Exec,; // we can safely delete our cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:36,Performance,load,loaded,36,"// Insure that the TStreamerInfo is loaded",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:56,Security,checksum,checksum,56,"// We may have a Foreign class let's look using the; // checksum:",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:115,Modifiability,inherit,inheriting,115,"// If there is no default constructor the GetStreamerInfo; // will not work. It also means (hopefully) that an; // inheriting class has a streamerInfo in the list (which; // will induces the setting of this streamerInfo)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:23,Performance,cache,cache,23,"// Remove the previous cache if any.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:34,Performance,cache,cache,34,"// The constructor attach the new cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:19,Performance,cache,cache,19,"// Remove our file cache.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:72,Integrability,interface,interface,72,"// First undo, the external call to SetEntries; // We could improve the interface to optional tell the TTreeCloner that the; // SetEntries was not done.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:9,Usability,undo,undo,9,"// First undo, the external call to SetEntries; // We could improve the interface to optional tell the TTreeCloner that the; // SetEntries was not done.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:16,Deployability,update,updated,16,"// This is only updated by TTree::Fill upon seeing a Flush event in TTree::Fill; // So we need to propagate (this has also the advantage of turning on the; // history recording feature of SetAutoFlush for the next iteration)",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:94,Performance,cache,cache,94,"////////////////////////////////////////////////////////////////////////////////; /// Set the cache size used by the matching TFile.; /// Note that the default is to use the same size as the default TTreeCache for; /// the input tree.; /// \param size Size of the cache.; /// \note If size=0, or if it does not match the fileCache buffer size, ; /// the fileCache will be deleted so that it be created later with the right size; /// (or not created if the size is 0) at the beginning of Exec.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:264,Performance,cache,cache,264,"////////////////////////////////////////////////////////////////////////////////; /// Set the cache size used by the matching TFile.; /// Note that the default is to use the same size as the default TTreeCache for; /// the input tree.; /// \param size Size of the cache.; /// \note If size=0, or if it does not match the fileCache buffer size, ; /// the fileCache will be deleted so that it be created later with the right size; /// (or not created if the size is 0) at the beginning of Exec.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:21,Performance,cache,cache,21,"// Note if the TFile cache is needed, it will be created at the; // beginning of Exec.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:100,Performance,cache,cache,100,"////////////////////////////////////////////////////////////////////////////////; /// Fill the file cache with the next set of basket.; ///; /// \param from index of the first lement of fFromBranches to start caching; /// \return The index of first element of fFromBranches that is not in the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:293,Performance,cache,cache,293,"////////////////////////////////////////////////////////////////////////////////; /// Fill the file cache with the next set of basket.; ///; /// \param from index of the first lement of fFromBranches to start caching; /// \return The index of first element of fFromBranches that is not in the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx:13,Performance,cache,cache,13,"// Reset the cache",MatchSource.CODE_COMMENT,tree/tree/src/TTreeCloner.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeCloner.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeResult.cxx:472,Integrability,interface,interface,472,"// @(#)root/tree:$Id$; // Author: Fons Rademakers 30/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeResult; \ingroup tree. Class defining interface to a TTree query result with the same; interface as for SQL databases. A TTreeResult is returned by; TTree::Query() (actually TTreePlayer::Query()). Related classes are TTreeRow.; */",MatchSource.CODE_COMMENT,tree/tree/src/TTreeResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeResult.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeResult.cxx:521,Integrability,interface,interface,521,"// @(#)root/tree:$Id$; // Author: Fons Rademakers 30/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeResult; \ingroup tree. Class defining interface to a TTree query result with the same; interface as for SQL databases. A TTreeResult is returned by; TTree::Query() (actually TTreePlayer::Query()). Related classes are TTreeRow.; */",MatchSource.CODE_COMMENT,tree/tree/src/TTreeResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeResult.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeResult.cxx:186,Integrability,interface,interface,186,"////////////////////////////////////////////////////////////////////////////////; /// Add field name to result set. This is an internal method that is not; /// exported via the abstract interface and that should not be user called.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeResult.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeResult.cxx:183,Integrability,interface,interface,183,"////////////////////////////////////////////////////////////////////////////////; /// Adopt a row to result set. This is an internal method that is not; /// exported via the abstract interface and that should not be user called.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeResult.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeResult.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeRow.cxx:469,Integrability,interface,interface,469,"// @(#)root/tree:$Id$; // Author: Fons Rademakers 30/11/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeRow; \ingroup tree. Class defining interface to a row of a TTree query result.; Objects of this class are created by TTreeResult methods. Related classes are TTreeResult.; */",MatchSource.CODE_COMMENT,tree/tree/src/TTreeRow.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeRow.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx:122,Testability,test,tested,122,"// Now if the branch exists in db, root gives a warning and exit; // Dealing with duplicate branch has been done, but not tested yet.; // So if you want to allow duplicate branch, just comment Fatal() line and uncomment commented; // below Fatal() line",MatchSource.CODE_COMMENT,tree/tree/src/TTreeSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx:101,Integrability,rout,routine,101,"////////////////////////////////////////////////////////////////////////////////; /// Initialization routine",MatchSource.CODE_COMMENT,tree/tree/src/TTreeSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the data for the entry from the database.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx:108,Performance,load,load,108,"////////////////////////////////////////////////////////////////////////////////; /// Setup the tree to the load the specified entry.",MatchSource.CODE_COMMENT,tree/tree/src/TTreeSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx:565,Deployability,update,updated,565,"//______________________________________________________________________________; // void TTreeSQL::LoadNumberEntries(); // {; // R__ASSERT(0);; // fResult = fServer->Query(fQuery.Data());; // fEntries=0;; // while(fResult->Next()){; // fEntries++;; // }; // fResult = fServer->Query(fQuery.Data());; // }; ////////////////////////////////////////////////////////////////////////////////; /// Refresh contents of this Tree and its branches from the current; /// Tree status in the database; /// One can call this function in case the Tree on its file is being; /// updated by another process",MatchSource.CODE_COMMENT,tree/tree/src/TTreeSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx:100,Performance,Load,LoadNumberEntries,100,"//______________________________________________________________________________; // void TTreeSQL::LoadNumberEntries(); // {; // R__ASSERT(0);; // fResult = fServer->Query(fQuery.Data());; // fEntries=0;; // while(fResult->Next()){; // fEntries++;; // }; // fResult = fServer->Query(fQuery.Data());; // }; ////////////////////////////////////////////////////////////////////////////////; /// Refresh contents of this Tree and its branches from the current; /// Tree status in the database; /// One can call this function in case the Tree on its file is being; /// updated by another process",MatchSource.CODE_COMMENT,tree/tree/src/TTreeSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx:6,Performance,load,load,6,"// Re-load the number of entries",MatchSource.CODE_COMMENT,tree/tree/src/TTreeSQL.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TTreeSQL.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualIndex.cxx:464,Integrability,interface,interface,464,"// @(#)root/tree:$Id$; // Author: Rene Brun 05/07/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualIndex; \ingroup tree. Abstract interface for Tree Index; */",MatchSource.CODE_COMMENT,tree/tree/src/TVirtualIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualTreePlayer.cxx:491,Integrability,interface,interface,491,"// @(#)root/tree:$Id$; // Author: Rene Brun 30/08/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualTreePlayer; \ingroup tree. Abstract base class defining the interface for the plugins that; implement Draw, Scan, Process, MakeProxy, etc. for a TTree object.; See the individual documentations in TTree.; */",MatchSource.CODE_COMMENT,tree/tree/src/TVirtualTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualTreePlayer.cxx:509,Modifiability,plugin,plugins,509,"// @(#)root/tree:$Id$; // Author: Rene Brun 30/08/99; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TVirtualTreePlayer; \ingroup tree. Abstract base class defining the interface for the plugins that; implement Draw, Scan, Process, MakeProxy, etc. for a TTree object.; See the individual documentations in TTree.; */",MatchSource.CODE_COMMENT,tree/tree/src/TVirtualTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualTreePlayer.cxx:58,Modifiability,Plugin,PluginManager,58,"// if no player set yet, create a default painter via the PluginManager",MatchSource.CODE_COMMENT,tree/tree/src/TVirtualTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/src/TVirtualTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/ElementStruct.h:75,Testability,test,test,75,/**; * The ElementStruct has no purpose except to provide; * inputs to the test cases.; */,MatchSource.CODE_COMMENT,tree/tree/test/ElementStruct.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/ElementStruct.h
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/entrylist_enterrange.cxx:26,Testability,test,test,26,"// The branch ""b1"" of the test tree holds integers in the range [0, 20); // multiplied by 10. We traverse the tree with the entry numbers in the; // TEntryList and check that they have the expected value.",MatchSource.CODE_COMMENT,tree/tree/test/entrylist_enterrange.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/entrylist_enterrange.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/friendinfo.cxx:11,Testability,test,test,11,"// In this test, each friend tree is held in a separate `std::unique_ptr<TChain>`",MatchSource.CODE_COMMENT,tree/tree/test/friendinfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/friendinfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/friendinfo.cxx:11,Testability,test,test,11,"// In this test, all friend trees are in the same TChain",MatchSource.CODE_COMMENT,tree/tree/test/friendinfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/friendinfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/SillyStruct.h:73,Testability,test,test,73,/**; * The SillyStruct has no purpose except to provide; * inputs to the test cases.; */,MatchSource.CODE_COMMENT,tree/tree/test/SillyStruct.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/SillyStruct.h
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:10,Safety,sanity check,sanity check,10,"// Basic ""sanity check"" test -- can we create and delete trees?",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:24,Testability,test,test,24,"// Basic ""sanity check"" test -- can we create and delete trees?",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:24,Availability,error,error,24,"// 0 can be returned on error",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:53,Availability,avail,available,53,"// This tests that at least one bit in the bitset is available.; // When we are down to one bitset, we'll have to expand the field.",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:80,Availability,down,down,80,"// This tests that at least one bit in the bitset is available.; // When we are down to one bitset, we'll have to expand the field.",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:8,Testability,test,tests,8,"// This tests that at least one bit in the bitset is available.; // When we are down to one bitset, we'll have to expand the field.",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:29,Usability,clear,clear,29,"// Last bit should always be clear.",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:46,Availability,error,error,46,"// Getting the basket should fail here and an error should have been triggered.",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:19,Modifiability,variab,variable-length,19,"// This tests that variable-length arrays still work -- make sure various modifications; // haven't messed up this basic case.",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:8,Testability,test,tests,8,"// This tests that variable-length arrays still work -- make sure various modifications; // haven't messed up this basic case.",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:24,Availability,error,error,24,"// 0 can be returned on error",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:104,Testability,test,tests,104,"// A simple helper function for determining all supported features.; // Crude, but works without making tests a 'friend' class of ROOT::TIOFeatures.",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:5,Usability,simpl,simple,5,"// A simple helper function for determining all supported features.; // Crude, but works without making tests a 'friend' class of ROOT::TIOFeatures.",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:30,Testability,test,test,30,"// Note we explicitly want to test multiple trees in the file - one with generated offsets of; // and one with them enabled.",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx:24,Availability,error,error,24,"// 0 can be returned on error",MatchSource.CODE_COMMENT,tree/tree/test/TBasket.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBasket.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBranch.cxx:44,Performance,load,loaded,44,"// Checks to make sure only first basket is loaded",MatchSource.CODE_COMMENT,tree/tree/test/TBranch.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBranch.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBranch.cxx:44,Performance,load,loaded,44,"// Checks to make sure the whole cluster is loaded",MatchSource.CODE_COMMENT,tree/tree/test/TBranch.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBranch.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBranch.cxx:44,Performance,load,loaded,44,"// Checks to make sure only first basket is loaded",MatchSource.CODE_COMMENT,tree/tree/test/TBranch.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TBranch.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TChainParsing.cxx:13,Security,Access,AccessPathName,13,"// Note that AccessPathName returns FALSE if the dir DOES exist",MatchSource.CODE_COMMENT,tree/tree/test/TChainParsing.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TChainParsing.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TChainParsing.cxx:20,Testability,test,test,20,"// Unsorted to also test sorting the final list of globbed files.",MatchSource.CODE_COMMENT,tree/tree/test/TChainParsing.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TChainParsing.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TChainParsing.cxx:3,Testability,Test,Tests,3,"// Tests #7159",MatchSource.CODE_COMMENT,tree/tree/test/TChainParsing.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TChainParsing.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TOffsetGeneration.cxx:71,Testability,test,test,71,"// Suppress file-related warning on Windows throughout; // this entire test suite",MatchSource.CODE_COMMENT,tree/tree/test/TOffsetGeneration.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/tree/test/TOffsetGeneration.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h:378,Integrability,wrap,wrapper,378,"// Note we could protect the arrays more by introducing a class TArrayWrapper<class T> which somehow knows; // its internal dimensions and check for them ...; // template <class T> TArrayWrapper {; // public:; // TArrayWrapper(void *where, int dim1);; // const T operator[](int i) {; // if (i>=dim1) return 0;; // return where[i];; // };; // };; // 2D array would actually be a wrapper of a wrapper i.e. has a method TArrayWrapper<T> operator[](int i);",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h:391,Integrability,wrap,wrapper,391,"// Note we could protect the arrays more by introducing a class TArrayWrapper<class T> which somehow knows; // its internal dimensions and check for them ...; // template <class T> TArrayWrapper {; // public:; // TArrayWrapper(void *where, int dim1);; // const T operator[](int i) {; // if (i>=dim1) return 0;; // return where[i];; // };; // };; // 2D array would actually be a wrapper of a wrapper i.e. has a method TArrayWrapper<T> operator[](int i);",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h:116,Deployability,release,release,116,"// namespace Internal; // prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode; // TODO: to be reviewed when updating Visual Studio or LLVM",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h:34,Security,access,access,34,"// namespace Internal; // prevent access violation when executing the df017_vecOpsHEP.C tutorial with ROOT built in release mode; // TODO: to be reviewed when updating Visual Studio or LLVM",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h:22,Modifiability,variab,variable,22,"// true if we proxy a variable size leaf of a leaflist",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h:12,Availability,error,error,12,"// Suppress error issued when the branch is missing from the tree",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h:41,Deployability,update,update,41,"// Callback object used by the TChain to update this proxy",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h:27,Testability,test,test,27,"// should add out-of bound test",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h:27,Testability,test,test,27,"// should add out-of bound test",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxyClassDescriptor.h:12,Performance,cache,cache,12,"// Class to cache the information we gathered about the branch and its content",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxyClassDescriptor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxyClassDescriptor.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxyTemplate.h:536,Integrability,interface,interface,536,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2004, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // NOTE: This header is only used by selectors, to verify that the selector; // source matches the ROOT interface. It should not end up in the; // dictionary nor in the PCH, so it should not be added to the list; // of headers of the TreePlayer library.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxyTemplate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxyTemplate.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxyTemplate.h:37,Integrability,interface,interface,37,"// Generated source and branch proxy interface are out of sync.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TBranchProxyTemplate.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TBranchProxyTemplate.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h:23,Modifiability,variab,variable,23,"// Method for multiple variable dimensions.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h:96,Modifiability,variab,variable,96,"// TFormLeafInfoMultiVarDim is a small helper class to implement reading a; // data member on a variable size array inside a TClonesArray object stored in; // a TTree. This is the version used when the data member is inside a; // non-split object.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h:25,Modifiability,variab,variable,25,"// Array of sizes of the variable dimension",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h:44,Modifiability,variab,variable,44,"// physical number of the dimension that is variable",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h:102,Modifiability,variab,variable,102,"// TFormLeafInfoMultiVarDimDirect is a small helper class to implement reading; // a data member on a variable size array inside a TClonesArray object stored; // in a TTree. This is the version used for split access",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h:209,Security,access,access,209,"// TFormLeafInfoMultiVarDimDirect is a small helper class to implement reading; // a data member on a variable size array inside a TClonesArray object stored; // in a TTree. This is the version used for split access",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h:224,Security,access,access,224,"// TFormLeafInfoMultiVarDimCollection is a small helper class to implement reading; // a data member which is a collection inside a TClonesArray or collection object; // stored in a TTree. This is the version used for split access; //",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h:222,Security,access,access,222,"// TFormLeafInfoMultiVarDimClones is a small helper class to implement reading; // a data member which is a TClonesArray inside a TClonesArray or collection object; // stored in a TTree. This is the version used for split access; //",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h:33,Modifiability,inherit,inherits,33,"//! Indicated whether the fClass inherits from TObject.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfo.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfo.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:6,Performance,Cache,Cached,6,"///<! Cached pointer to reference proxy",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:6,Performance,Cache,Cached,6,"///<! Cached pointer to branch object",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:14,Safety,safe,safe,14,"/// Exception safe swap.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:14,Safety,safe,safe,14,"/// Exception safe assignment operator.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:4,Security,Access,Access,4,"/// Access to the info's proxy",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:4,Security,Access,Access,4,"/// Access to the info's connected branch",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:4,Security,Access,Access,4,"/// Access to the info's connected branch",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:4,Security,Access,Access,4,"/// Access to the offset of the data",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:39,Availability,avail,available,39,"/// Access to target class pointer (if available)",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:4,Security,Access,Access,4,"/// Access to target class pointer (if available)",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:4,Security,Access,Access,4,"/// Access to the value class of the reference proxy",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:4,Security,Access,Access,4,"/// Access to the value class from the object pointer",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:4,Security,Access,Access,4,"/// Access value of referenced object (macro from TFormLeafInfo.g)",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:28,Deployability,Update,Update,28,"/// TFormLeafInfo overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h:51,Performance,cache,cached,51,"/// TFormLeafInfo overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TFormLeafInfoReference.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TFormLeafInfoReference.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h:9,Performance,cache,cache,9,"// TTree cache handling",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TMPWorkerTree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h:26,Performance,cache,cache,26,"///< instance of the tree cache for the tree",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TMPWorkerTree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h:13,Performance,cache,cache,13,"///< Whether cache is in learning phase",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TMPWorkerTree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h:25,Usability,learn,learning,25,"///< Whether cache is in learning phase",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TMPWorkerTree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h:31,Performance,cache,cache,31,"///< Control usage of the tree cache",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TMPWorkerTree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h:5,Performance,Cache,Cache,5,"///< Cache size",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TMPWorkerTree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h:34,Energy Efficiency,reduce,reduced,34,"/// true if fReducedResult can be reduced with a new result, false until we have produced one result",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TMPWorkerTree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h:2,Deployability,update,update,2,"//update the number of processed entries",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TMPWorkerTree.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TMPWorkerTree.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefArrayProxy.h:142,Security,access,access,142,"//______________________________________________________________________________; //; // TRefArrayProxy is a container proxy, which allows to access references stored; // in a TRefArray from TTree::Draw; //; //______________________________________________________________________________",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TRefArrayProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefArrayProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefArrayProxy.h:30,Security,Access,Access,30,"// TVirtualRefProxy overload: Access referenced object(-data)",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TRefArrayProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefArrayProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefArrayProxy.h:30,Security,Access,Access,30,"// TVirtualRefProxy overload: Access to container size (if container reference (ie TRefArray) etc)",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TRefArrayProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefArrayProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h:137,Security,access,access,137,"//______________________________________________________________________________; //; // TRefProxy is a reference proxy, which allows to access ROOT references (TRef); // stored contained in other objects from TTree::Draw; //______________________________________________________________________________",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h:31,Deployability,Release,Release,31,"/// TVirtualRefProxy overload: Release the reference proxy (virtual destructor)",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h:31,Security,Access,Access,31,"/// TVirtualRefProxy overload: Access to value class",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h:31,Deployability,Update,Update,31,"/// TVirtualRefProxy overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h:54,Performance,cache,cached,54,"/// TVirtualRefProxy overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h:31,Security,Access,Access,31,"/// TVirtualRefProxy overload: Access to container size (if container reference (ie TRefArray) etc)",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h:31,Security,Access,Access,31,"/// TVirtualRefProxy overload: Access referenced object(-data)",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TRefProxy.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TRefProxy.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h:39,Modifiability,variab,variables,39,"///<![fDimension] Array of pointers to variables formula",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSelectorDraw.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h:22,Modifiability,variab,variability,22,"///< Indicator of the variability of the size of entries",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSelectorDraw.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h:54,Modifiability,variab,variables,54,"///<![fSelectedRows][fDimension] Local buffer for the variables",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSelectorDraw.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h:40,Modifiability,variab,variable,40,"///<![fDimension] True if fVar[i] has a variable index",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSelectorDraw.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h:29,Modifiability,variab,variable,29,"///< True if selection has a variable index",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSelectorDraw.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorDraw.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorEntries.h:29,Modifiability,variab,variable,29,"///< True if selection has a variable index",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSelectorEntries.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSelectorEntries.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h:331,Modifiability,config,configured,331,"//////////////////////////////////////////////////////////////////////////; // //; // TSimpleAnalysis //; // //; // A TSimpleAnalysis object creates histograms from a TChain. These //; // histograms are stored to an output file. The histogrammed //; // (TTreeFormula) expressions, their cuts, the input and output files //; // are configured through a simple config file that allows comments //; // starting with '#'. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSimpleAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h:359,Modifiability,config,config,359,"//////////////////////////////////////////////////////////////////////////; // //; // TSimpleAnalysis //; // //; // A TSimpleAnalysis object creates histograms from a TChain. These //; // histograms are stored to an output file. The histogrammed //; // (TTreeFormula) expressions, their cuts, the input and output files //; // are configured through a simple config file that allows comments //; // starting with '#'. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSimpleAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h:352,Usability,simpl,simple,352,"//////////////////////////////////////////////////////////////////////////; // //; // TSimpleAnalysis //; // //; // A TSimpleAnalysis object creates histograms from a TChain. These //; // histograms are stored to an output file. The histogrammed //; // (TTreeFormula) expressions, their cuts, the input and output files //; // are configured through a simple config file that allows comments //; // starting with '#'. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSimpleAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h:17,Deployability,configurat,configuration,17,"///< Name of the configuration file",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSimpleAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h:17,Modifiability,config,configuration,17,"///< Name of the configuration file",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSimpleAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h:222,Modifiability,variab,variables,222,"///< Stream for the input file; /// The map contains in the first part the names of the histograms written in the output file, in the; /// second part the pair of what is shown in the histograms and the cut applied on the variables",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TSimpleAnalysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TSimpleAnalysis.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeDrawArgsParser.h:14,Modifiability,variab,variable,14,"///< Complete variable expression",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeDrawArgsParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeDrawArgsParser.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeDrawArgsParser.h:5,Modifiability,Variab,Variable,5,"///< Variable expression 0 - X, 1 - Y, 2 - Z, 3 - W; ///< If dimension < fgMaxDimension then some; ///< Expressions are empty",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeDrawArgsParser.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeDrawArgsParser.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:42,Modifiability,variab,variable,42,"// true if the branch contains an integer variable",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:27,Performance,cache,cache,27,"// Helper struct to hold a cache; // that can accelerate calculation of the RealIndex.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:11,Performance,cache,caches,11,"///<! This caches the physical number of element in the leaf or data member.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:22,Modifiability,variab,variability,22,"///< Indicator of the variability of the formula",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:46,Performance,load,loaded,46,"///<! If true, the current entry has not been loaded yet.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:31,Modifiability,variab,variable,31,"///< True if the corresponding variable is an array with more than one variable dimension.; //the next line should have a mutable in front. See GetNdata()",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:71,Modifiability,variab,variable,71,"///< True if the corresponding variable is an array with more than one variable dimension.; //the next line should have a mutable in front. See GetNdata()",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:63,Modifiability,variab,variable,63,"///< Accumulated sizes of lower dimensions for each leaf after variable dimensions has been calculated",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:18,Modifiability,variab,variable,18,"///< Pointer to a variable index.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:38,Performance,optimiz,optimization,38,"///<! True if we executed one boolean optimization since the last time instance number 0 was evaluated",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:6,Performance,Cache,Cache,6,"///<! Cache accelerating the GetRealInstance function",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:149,Modifiability,variab,variables,149,"//GetNdata should probably be const. However it need to cache some information about the actual dimension; //of arrays, so if GetNdata is const, the variables fUsedSizes and fCumulUsedSizes need to be declared; //mutable. We will be able to do that only when all the compilers supported for ROOT actually implemented; //the mutable keyword.; //NOTE: Also modify the code in PrintValue which current goes around this limitation :(",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h:56,Performance,cache,cache,56,"//GetNdata should probably be const. However it need to cache some information about the actual dimension; //of arrays, so if GetNdata is const, the variables fUsedSizes and fCumulUsedSizes need to be declared; //mutable. We will be able to do that only when all the compilers supported for ROOT actually implemented; //the mutable keyword.; //NOTE: Also modify the code in PrintValue which current goes around this limitation :(",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormula.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormula.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h:22,Modifiability,variab,variability,22,"///< Indicator of the variability of the formula",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormulaManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h:24,Modifiability,variab,variable,24,"///< True if one of the variable has 2 variable size dimensions.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormulaManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h:39,Modifiability,variab,variable,39,"///< True if one of the variable has 2 variable size dimensions.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormulaManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h:34,Modifiability,variab,variable,34,"///< fCumulUsedSizes(1) for multi variable dimensions case; //the next line should be: mutable Int_t fUsedSizes[kMAXFORMDIM+1]; See GetNdata()",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormulaManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h:13,Modifiability,variab,variable,13,"///< List of variable sizes dimensions.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormulaManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h:64,Integrability,synchroniz,synchronization,64,"// Indicate whether a new formula has been added since the last synchronization",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeFormulaManager.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeFormulaManager.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:125,Performance,perform,performance,125,"//////////////////////////////////////////////////////////////////////////; // //; // TTreePerfStats //; // //; // TTree I/O performance measurement //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePerfStats.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:57,Performance,cache,cache,57,"///< Number of times the basket was put in the secondary cache",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePerfStats.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:16,Performance,cache,cache,16,"///< Read-ahead cache size",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePerfStats.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:50,Performance,cache,cache,50,"///< Number of bytes (overhead) of the read-ahead cache",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePerfStats.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:32,Energy Efficiency,monitor,monitored,32,"///<! Pointer to the Tree being monitored",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePerfStats.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:3,Performance,Cache,Cache,3,"// Cache the index of the branch in the cache's array.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePerfStats.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:40,Performance,cache,cache,40,"// Cache the index of the branch in the cache's array.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePerfStats.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:38,Performance,cache,cached,38,"// Details on which baskets was used, cached, 'miss-cached' or read uncached.Browse",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePerfStats.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:52,Performance,cache,cached,52,"// Details on which baskets was used, cached, 'miss-cached' or read uncached.Browse",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePerfStats.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h:13,Performance,perform,performance,13,"// TTree I/O performance measurement",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePerfStats.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePerfStats.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePlayer.h:67,Deployability,update,updated,67,"///<! Set to the selector address when it's entry list needs to be updated by the UpdateFormulaLeaves function",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePlayer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePlayer.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePlayer.h:82,Deployability,Update,UpdateFormulaLeaves,82,"///<! Set to the selector address when it's entry list needs to be updated by the UpdateFormulaLeaves function",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreePlayer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreePlayer.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:123,Integrability,interface,interface,123,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReader //; // //; // A simple interface for reading trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:116,Usability,simpl,simple,116,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReader //; // //; // A simple interface for reading trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:309,Usability,simpl,simply,309,"///\class TTreeReader::Iterator_t; /// Iterate through the entries of a TTree.; ///; /// This iterator drives the associated TTreeReader; its; /// dereferencing (and actually even the iteration) will; /// set the entry number represented by this iterator.; /// It does not really represent a data element; it simply; /// returns the entry number (or -1 once the end of the tree; /// is reached).",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:211,Performance,latency,latency,211,"// #16249: range based loop and the tree has zero entries; // as well as analogous cases.; // Getting the number of events can have a cost, for example in; // case of chains of remote files accessible with high latency.; // However, it is reasonable to assume that if iterators are; // being compared is because an iteration is taking place,; // therefore such cost has to be paid anyway, it's just; // anticipated.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:190,Security,access,accessible,190,"// #16249: range based loop and the tree has zero entries; // as well as analogous cases.; // Getting the number of events can have a cost, for example in; // case of chains of remote files accessible with high latency.; // However, it is reasonable to assume that if iterators are; // being compared is because an iteration is taking place,; // therefore such cost has to be paid anyway, it's just; // anticipated.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:16,Security,access,access,16,"// If we cannot access that entry, mark the iterator invalid.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:23,Performance,load,loaded,23,"///< no entry has been loaded yet",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:16,Security,access,accessing,16,"///< problem in accessing a chain element, e.g. file without the tree",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:52,Availability,error,error,52,"///< LoadTree return less than -6, likely a 'newer' error code.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:5,Performance,Load,LoadTree,5,"///< LoadTree return less than -6, likely a 'newer' error code.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:12,Performance,Load,LoadTree,12,"///< Notify/LoadTree was last called from SetEntryBase",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:22,Performance,Load,LoadTree,22,"///< User code called LoadTree directly.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:34,Performance,load,loading,34,"///< Missing expected branch when loading new tree",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:280,Availability,avail,available,280,"/// Set the next entry (or index of the TEntryList if that is set).; ///; /// \param entry If not TEntryList is set, the entry is a global entry (i.e.; /// not the entry number local to the chain's current tree).; /// \returns the `entry`'s read status, i.e. whether the entry is available.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:420,Availability,avail,available,420,"/// Set the next local tree entry. If a TEntryList is set, this function is; /// equivalent to `SetEntry()`.; ///; /// \param entry Entry number of the TChain's current TTree. This is the; /// entry number passed for instance by `TSelector::Process(entry)`, i.e.; /// within `TSelector::Process()` always use `SetLocalEntry()` and not; /// `SetEntry()`!; /// \return the `entry`'s read status, i.e. whether the entry is available.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:62,Performance,Load,LoadTree,62,"///< SetEntryBase is in the process of calling TChain/TTree::%LoadTree.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:22,Performance,Load,LoadTree,22,"///< Indicator on how LoadTree was called 'last' time.; /// TTree and TChain will notify this object upon LoadTree, leading to a call to TTreeReader::Notify().",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:106,Performance,Load,LoadTree,106,"///< Indicator on how LoadTree was called 'last' time.; /// TTree and TChain will notify this object upon LoadTree, leading to a call to TTreeReader::Notify().",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:24,Performance,Load,LoadTree,24,"///< True if during the LoadTree execution triggered by SetEntryBase.; // Flag to activate or deactivate warnings in case the friend trees have; // more entries than the main one. In some cases we may want to deactivate; // this behaviour, notably in multithreaded runs where we have to partition; // the main tree but keep the entire friend trees in every thread to ensure; // alignment.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:62,Availability,error,error,62,"// List of branches for which we want to suppress the printed error about; // missing branch when switching to a new tree",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:12,Integrability,interface,interface,12,"// A simple interface to read trees",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h:5,Usability,simpl,simple,5,"// A simple interface to read trees",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReader.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReader.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h:10,Integrability,interface,interface,10,"// Common interface to collections; // FIXME: re-introduce once we have ClassDefInline!; //ClassDefOverride(TTreeReaderArrayBase, 0);//Accessor to member of an object stored in a collection",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h:135,Security,Access,Accessor,135,"// Common interface to collections; // FIXME: re-introduce once we have ClassDefInline!; //ClassDefOverride(TTreeReaderArrayBase, 0);//Accessor to member of an object stored in a collection",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h:107,Integrability,interface,interface,107,"// namespace ROOT; // clang-format off; /**; * \class TTreeReaderArray; * \ingroup treeplayer; * \brief An interface for reading collections stored in ROOT columnar datasets; *; * The TTreeReaderArray is a type-safe tool to be used in association with a TTreeReader; * to access the collections stored in TTree, TNtuple and TChain datasets.; * In order to access values which are not collections, the TTreeReaderValue class can; * be used.; *; * See the documentation of TTreeReader for more details and examples.; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h:211,Safety,safe,safe,211,"// namespace ROOT; // clang-format off; /**; * \class TTreeReaderArray; * \ingroup treeplayer; * \brief An interface for reading collections stored in ROOT columnar datasets; *; * The TTreeReaderArray is a type-safe tool to be used in association with a TTreeReader; * to access the collections stored in TTree, TNtuple and TChain datasets.; * In order to access values which are not collections, the TTreeReaderValue class can; * be used.; *; * See the documentation of TTreeReader for more details and examples.; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h:272,Security,access,access,272,"// namespace ROOT; // clang-format off; /**; * \class TTreeReaderArray; * \ingroup treeplayer; * \brief An interface for reading collections stored in ROOT columnar datasets; *; * The TTreeReaderArray is a type-safe tool to be used in association with a TTreeReader; * to access the collections stored in TTree, TNtuple and TChain datasets.; * In order to access values which are not collections, the TTreeReaderValue class can; * be used.; *; * See the documentation of TTreeReader for more details and examples.; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h:356,Security,access,access,356,"// namespace ROOT; // clang-format off; /**; * \class TTreeReaderArray; * \ingroup treeplayer; * \brief An interface for reading collections stored in ROOT columnar datasets; *; * The TTreeReaderArray is a type-safe tool to be used in association with a TTreeReader; * to access the collections stored in TTree, TNtuple and TChain datasets.; * In order to access values which are not collections, the TTreeReaderValue class can; * be used.; *; * See the documentation of TTreeReader for more details and examples.; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h:90,Security,Access,Accessor,90,"// FIXME: re-introduce once we have ClassDefTInline!; // ClassDefT(TTreeReaderArray, 0);//Accessor to member of an object stored in a collection",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderArray.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderArray.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderGenerator.h:163,Integrability,interface,interface,163,"//////////////////////////////////////////////////////////////////////////; // //; // TTreeReaderGenerator //; // //; // Generate a Selector using the TTreeReader interface //; // (TTreeReaderValue, TTreeReaderArray) to access the data in the tree. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderGenerator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderGenerator.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderGenerator.h:220,Security,access,access,220,"//////////////////////////////////////////////////////////////////////////; // //; // TTreeReaderGenerator //; // //; // Generate a Selector using the TTreeReader interface //; // (TTreeReaderValue, TTreeReaderArray) to access the data in the tree. //; // //; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderGenerator.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderGenerator.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:128,Integrability,interface,interface,128,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReaderValue //; // //; // A simple interface for reading data from trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:121,Usability,simpl,simple,121,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReaderValue //; // //; // A simple interface for reading data from trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:16,Availability,error,error,16,"///< Some other error - hopefully the error message helps.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:38,Availability,error,error,38,"///< Some other error - hopefully the error message helps.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:44,Integrability,message,message,44,"///< Some other error - hopefully the error message helps.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:18,Security,access,accessed,18,"///< Data now yet accessed",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:30,Security,access,access,30,"///< Read status of this data access",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:31,Security,access,access,31,"///< Setup status of this data access",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:114,Security,access,accessors,114,"// FIXME: re-introduce once we have ClassDefInline!; //ClassDefOverride(TTreeReaderValueBase, 0);//Base class for accessors to data via TTreeReader",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:91,Availability,error,error,91,"/// Return a pointer to the value of the current entry.; /// Return a nullptr and print an error if no entry has been loaded yet.; /// The returned address is guaranteed to stay constant while a given TTree is being read from a given file,; /// unless the branch addresses are manipulated directly (e.g. through TTree::SetBranchAddress()).; /// The address might also change when the underlying TTree/TFile is switched, e.g. when a TChain switches files.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:118,Performance,load,loaded,118,"/// Return a pointer to the value of the current entry.; /// Return a nullptr and print an error if no entry has been loaded yet.; /// The returned address is guaranteed to stay constant while a given TTree is being read from a given file,; /// unless the branch addresses are manipulated directly (e.g. through TTree::SetBranchAddress()).; /// The address might also change when the underlying TTree/TFile is switched, e.g. when a TChain switches files.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:165,Performance,load,loaded,165,"/// Return a reference to the value of the current entry.; /// Equivalent to dereferencing the pointer returned by Get(). Behavior is undefined if no entry has been loaded yet.; /// Most likely a crash will occur.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h:89,Security,Access,Accessor,89,"// FIXME: re-introduce once we have ClassDefTInline!; //ClassDefT(TTreeReaderValue, 0);//Accessor to data via TTreeReader",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeReaderValue.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeReaderValue.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeTableInterface.h:3,Integrability,Interface,Interface,3,"// Interface to data in a TTree",MatchSource.CODE_COMMENT,tree/treeplayer/inc/TTreeTableInterface.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/TTreeTableInterface.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:107,Modifiability,inherit,inheriting,107,"/// \brief Process a TTree dataset with a functor; /// \tparam F functor returning a pointer to TObject or inheriting classes and; /// taking a TTreeReader& (both enforced at compile-time); ///; /// Dataset definition:; /// \param[in] fileNames vector of strings with the paths of the files with the TTree to process; /// \param[in] fileName string with the path of the files with the TTree to process; /// \param[in] collection TFileCollection with the files with the TTree to process; /// \param[in] chain TChain with the files with the TTree to process; /// \param[in] tree TTree to process; ///; /// \param[in] entries TEntryList to filter the dataset; /// \param[in] treeName Name of the TTree to process; /// \param[in] nToProcess Number of entries to process (0 means all); /// \param[in] jFirst First entry to process (0 means the first of the first file); ///",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:135,Modifiability,inherit,inheriting,135,"/// \brief Process a TTree dataset with a functor: version without entry list; /// \tparam F functor returning a pointer to TObject or inheriting classes and; /// taking a TTreeReader& (both enforced at compile-time); ///; /// Dataset definition:; /// \param[in] fileNames vector of strings with the paths of the files with the TTree to process; /// \param[in] fileName string with the path of the files with the TTree to process; /// \param[in] collection TFileCollection with the files with the TTree to process; /// \param[in] chain TChain with the files with the TTree to process; /// \param[in] tree TTree to process; ///; /// \param[in] treeName Name of the TTree to process; /// \param[in] nToProcess Number of entries to process (0 means all); /// \param[in] jFirst First entry to process (0 means the first of the first file); ///",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:206,Integrability,message,messages,206,"///< total number of arguments to pass to the workers; /// A collection of the types of tasks that TTreeProcessorMP can execute.; /// It is used to interpret in the right way and properly reply to the; /// messages received (see, for example, TTreeProcessorMP::HandleInput)",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:87,Integrability,message,message,87,"//////////////////////////////////////////////////////////////////////////; /// Handle message and reply to the worker",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:91,Integrability,message,messages,91,"//////////////////////////////////////////////////////////////////////////; /// Listen for messages sent by the workers and call the appropriate handler function.; /// TTreeProcessorMP::HandlePoolCode is called on messages with a code < 1000 and; /// TMPClient::HandleMPCode is called on messages with a code >= 1000.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:214,Integrability,message,messages,214,"//////////////////////////////////////////////////////////////////////////; /// Listen for messages sent by the workers and call the appropriate handler function.; /// TTreeProcessorMP::HandlePoolCode is called on messages with a code < 1000 and; /// TMPClient::HandleMPCode is called on messages with a code >= 1000.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx:288,Integrability,message,messages,288,"//////////////////////////////////////////////////////////////////////////; /// Listen for messages sent by the workers and call the appropriate handler function.; /// TTreeProcessorMP::HandlePoolCode is called on messages with a code < 1000 and; /// TMPClient::HandleMPCode is called on messages with a code >= 1000.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMP.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMT.hxx:669,Security,access,accesses,669,"/** \class TTreeView; \brief A helper class that encapsulates a file and a tree. A helper class that encapsulates a TFile and a TTree, along with their names.; It is used together with TTProcessor and ROOT::TThreadedObject, so that; in the TTProcessor::Process method each thread can work on its own; <TFile,TTree> pair. This class can also be used with a collection of file names or a TChain, in case; the tree is stored in more than one file. A view will always contain only the; current (active) tree and file objects. A copy constructor is defined for TTreeView to work with ROOT::TThreadedObject.; The latter makes a copy of a model object every time a new thread accesses; the threaded object.; */",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeProcessorMT.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMT.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMT.hxx:62,Availability,error,error,62,"// List of branches for which we want to suppress the printed error about; // missing branch when switching to a new tree",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeProcessorMT.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeProcessorMT.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx:123,Integrability,interface,interface,123,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReader //; // //; // A simple interface for reading trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx:116,Usability,simpl,simple,116,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReader //; // //; // A simple interface for reading trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx:5,Usability,simpl,simple,5,"// A simple iterator based on TTreeReader::Iterator_t; allows use of the; // TTreeReaderFast.; //; // NOTE that an increment may invalidate previous copies of the iterator.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx:12,Integrability,interface,interface,12,"// A simple interface to read trees via bulk I/O",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx:5,Usability,simpl,simple,5,"// A simple interface to read trees via bulk I/O",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx:132,Integrability,interface,interface,132,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReaderValueFast //; // //; // A simple interface for reading data from trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx:125,Usability,simpl,simple,125,"////////////////////////////////////////////////////////////////////////////; // //; // TTreeReaderValueFast //; // //; // A simple interface for reading data from trees or chains. //; // //; // //; ////////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx:166,Availability,error,error,166,"// Create the linkage between the TTreeReader's current tree and this ReaderValue; // object. After CreateProxy() is invoked, if fSetupStatus doesn't indicate an; // error, then we are pointing toward a valid TLeaf in the current tree",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx:85,Safety,detect,detect,85,"// Returns the name of the branch type; will be used when the TBranch version to; // detect between the compile-time and runtime type names.",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx:29,Security,access,access,29,"// setup status of this data access",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx:28,Security,access,access,28,"// read status of this data access",MatchSource.CODE_COMMENT,tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/inc/ROOT/TTreeReaderValueFast.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx:595,Integrability,rout,routine,595,"// @(#)root/base:$Id$; // Author: Philippe Canal 13/05/2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun, Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class ROOT::Detail::TBranchProxy; Base class for all the proxy object. It includes the implementation; of the autoloading of branches as well as all the generic setup routine.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx:163,Security,access,access,163,"////////////////////////////////////////////////////////////////////////////////; /// For a fullBranchName that might contain a leading friend tree path (but; /// access elements designating a leaf), but the leaf name such that it matches; /// the ""path"" to branch.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx:97,Performance,cache,cache,97,"////////////////////////////////////////////////////////////////////////////////; /// Initialize/cache the necessary information.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx:12,Availability,error,error,12,"// The next error refers specifically to the situation where the branch identified by fBranchName; // is not present and that is not expected. An example is when traversing a chain of files, the branch; // is missing from the file that we are switching into.; // Conversely, there are situations where the missing branch is indeed expected. A notable example is when; // the TTree contains a split object, the branch referring to the whole object type will actually be elided; // and will not be found by `TTree::GetBranch`, only the data members will be present as sub branches.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx:31,Testability,test,test,31,"// this holds for all cases we test",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx:186,Availability,error,error,186,"// The extra condition (fElement is not a TStreamerSTL) is to handle the case where fBranch is a; // TBranchElement and fElement is a TStreamerSTL. Without the extra condition we get an error; // message, although the vector (i.e. the TBranchElement) is accessible.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx:196,Integrability,message,message,196,"// The extra condition (fElement is not a TStreamerSTL) is to handle the case where fBranch is a; // TBranchElement and fElement is a TStreamerSTL. Without the extra condition we get an error; // message, although the vector (i.e. the TBranchElement) is accessible.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx:254,Security,access,accessible,254,"// The extra condition (fElement is not a TStreamerSTL) is to handle the case where fBranch is a; // TBranchElement and fElement is a TStreamerSTL. Without the extra condition we get an error; // message, although the vector (i.e. the TBranchElement) is accessible.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx:616,Integrability,rout,routine,616,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBranchProxyClassDescriptor; Hold the processed information about a TClass used in a TBranch while; TTreeProxyGenerator is parsing the TTree information.; Also contains the routine use to generate the appropriate code; fragment in the result of MakeProxy.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyClassDescriptor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx:20,Testability,test,test,20,"// Purposely do not test on the name!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyClassDescriptor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx:135,Performance,load,loaded,135,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the class needed by the branch is loaded",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyClassDescriptor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx:135,Performance,load,loaded,135,"////////////////////////////////////////////////////////////////////////////////; /// Return true if the class needed by the branch is loaded",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyClassDescriptor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx:44,Performance,load,loaded,44,"// stl container of simple type are always 'loaded'",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyClassDescriptor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx:20,Usability,simpl,simple,20,"// stl container of simple type are always 'loaded'",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyClassDescriptor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx:24,Availability,avail,available,24,"// If the real class is available, make it available via the arrow operator:",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyClassDescriptor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx:43,Availability,avail,available,43,"// If the real class is available, make it available via the arrow operator:",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyClassDescriptor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyClassDescriptor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDescriptor.cxx:597,Integrability,rout,routine,597,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBranchProxyDescriptor; /Hold the processed information about a TBranch while; /TTreeProxyGenerator is parsing the TTree information.; /Also contains the routine use to generate the appropriate code; /fragment in the result of MakeProxy.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyDescriptor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDescriptor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDirector.cxx:553,Security,access,access,553,"// @(#)root/base:$Id$; // Author: Philippe Canal 13/05/2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun, Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TBranchProxyDirector; This class is used to 'drive' and hold a serie of TBranchProxy objects; which represent and give access to the content of TTree object.; This is intended to be used as part of a generate Selector class; which will hold the directory and its associate; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyDirector.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDirector.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDirector.cxx:24,Deployability,Update,Update,24,"// Helper class to call Update on all TFriendProxy",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyDirector.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDirector.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDirector.cxx:86,Usability,Simpl,Simple,86,"////////////////////////////////////////////////////////////////////////////////; /// Simple constructor",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyDirector.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDirector.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDirector.cxx:86,Usability,Simpl,Simple,86,"////////////////////////////////////////////////////////////////////////////////; /// Simple constructor",MatchSource.CODE_COMMENT,tree/treeplayer/src/TBranchProxyDirector.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TBranchProxyDirector.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:79,Availability,error,error,79,"// Check if the indices of different trees are in order. If not then return an error.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:79,Availability,error,error,79,"// Check if the indices of different trees are in order. If not then return an error.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:336,Deployability,release,released,336,"////////////////////////////////////////////////////////////////////////////////; /// Returns a TVirtualIndex for a tree which holds the entry with the specified; /// major and minor values and the number of that tree.; /// If the index for that tree was created by this object it's set to the tree.; /// The tree index should be later released using ReleaseSubTreeIndex();",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:351,Deployability,Release,ReleaseSubTreeIndex,351,"////////////////////////////////////////////////////////////////////////////////; /// Returns a TVirtualIndex for a tree which holds the entry with the specified; /// major and minor values and the number of that tree.; /// If the index for that tree was created by this object it's set to the tree.; /// The tree index should be later released using ReleaseSubTreeIndex();",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:86,Deployability,Release,Releases,86,"////////////////////////////////////////////////////////////////////////////////; /// Releases the tree index got using GetSubTreeIndex. If the index was; /// created by this object it is removed from the current tree, so that it isn't; /// deleted in its destructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:71,Availability,avail,available,71,"// The Tree Index in the friend has a pair majorname,minorname; // not available in the parent Tree T.; // if the friend Tree has less entries than the parent, this is an error",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:171,Availability,error,error,171,"// The Tree Index in the friend has a pair majorname,minorname; // not available in the parent Tree T.; // if the friend Tree has less entries than the parent, this is an error",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:3,Availability,Error,Error,3,"// Error(""GetEntryNumberWithBestIndex"",""no index found"");",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:3,Availability,Error,Error,3,"// Error(""GetEntryNumberWithIndex"",""no index found"");",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:86,Deployability,Update,Updates,86,"////////////////////////////////////////////////////////////////////////////////; /// Updates the parent formulae.; /// Called by TChain::LoadTree when the parent chain changes it's tree.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:138,Performance,Load,LoadTree,138,"////////////////////////////////////////////////////////////////////////////////; /// Updates the parent formulae.; /// Called by TChain::LoadTree when the parent chain changes it's tree.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx:207,Energy Efficiency,allocate,allocated,207,"////////////////////////////////////////////////////////////////////////////////; /// \brief Create a deep copy of the TChainIndex; /// \param[in] newname A new name for the index; ///; /// The new index is allocated on the heap without being managed. Also, it is; /// not attached to any tree. It is the responsibility of the caller to manage; /// its lifetime and attach it to a tree if necessary.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TChainIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TChainIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFileDrawMap.cxx:32,Deployability,Toggle,ToggleEventStatus,32,"//if (!show) gPad->GetCanvas()->ToggleEventStatus();",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFileDrawMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFileDrawMap.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFileDrawMap.cxx:69,Performance,perform,performed,69,"// Thread safety: this solution is not elegant, but given the action performed; // by the method, this construct can be considered non-problematic.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFileDrawMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFileDrawMap.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFileDrawMap.cxx:10,Safety,safe,safety,10,"// Thread safety: this solution is not elegant, but given the action performed; // by the method, this construct can be considered non-problematic.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFileDrawMap.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFileDrawMap.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:974,Availability,avail,available,974,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFormLeafInfo; This class is a small helper class to implement reading a data member; on an object stored in a TTree. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:1800,Deployability,Update,Update,1800,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFormLeafInfo; This class is a small helper class to implement reading a data member; on an object stored in a TTree. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:1007,Integrability,interface,interface,1007,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFormLeafInfo; This class is a small helper class to implement reading a data member; on an object stored in a TTree. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:1279,Modifiability,variab,variability,1279,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFormLeafInfo; This class is a small helper class to implement reading a data member; on an object stored in a TTree. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:1833,Performance,load,loading,1833,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 01/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFormLeafInfo; This class is a small helper class to implement reading a data member; on an object stored in a TTree. TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe assignment operator.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:5,Usability,simpl,simple,5,"// A simple type, or an array of a simple type.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:35,Usability,simpl,simple,35,"// A simple type, or an array of a simple type.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:184,Modifiability,variab,variable,184,"////////////////////////////////////////////////////////////////////////////////; /// Reminder of the meaning of fMultiplicity:; /// - -1: Only one or 0 element per entry but contains variable length array!; /// - 0: Only one element per entry, no variable length array; /// - 1: loop over the elements of a variable length array; /// - 2: loop over elements of fixed length array (nData is the same for all entry)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:248,Modifiability,variab,variable,248,"////////////////////////////////////////////////////////////////////////////////; /// Reminder of the meaning of fMultiplicity:; /// - -1: Only one or 0 element per entry but contains variable length array!; /// - 0: Only one element per entry, no variable length array; /// - 1: loop over the elements of a variable length array; /// - 2: loop over elements of fixed length array (nData is the same for all entry)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:308,Modifiability,variab,variable,308,"////////////////////////////////////////////////////////////////////////////////; /// Reminder of the meaning of fMultiplicity:; /// - -1: Only one or 0 element per entry but contains variable length array!; /// - 0: Only one element per entry, no variable length array; /// - 1: loop over the elements of a variable length array; /// - 2: loop over elements of fixed length array (nData is the same for all entry)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:106,Modifiability,variab,variable,106,"////////////////////////////////////////////////////////////////////////////////; /// Method for multiple variable dimensions.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:189,Modifiability,variab,variable,189,"////////////////////////////////////////////////////////////////////////////////; /// For the current entry, and the value 'index' for the main array,; /// return the size of the secondary variable dimension of the 'array'.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:118,Availability,avail,available,118,"////////////////////////////////////////////////////////////////////////////////; /// Total all the elements that are available for the current entry; /// for the secondary variable dimension.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:173,Modifiability,variab,variable,173,"////////////////////////////////////////////////////////////////////////////////; /// Total all the elements that are available for the current entry; /// for the secondary variable dimension.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the current array sizes",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:103,Performance,cache,cached,103,"////////////////////////////////////////////////////////////////////////////////; /// We reloading all cached information in case the underlying class; /// information has changed (for example when changing from the 'emulated'; /// class to the real class.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:20,Availability,down,down,20,"// We have to drill down the element name within the class.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:35,Availability,error,error,35,"// Or should throw exception/print error ?",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe swap.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe assignment operator.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:103,Performance,cache,cached,103,"////////////////////////////////////////////////////////////////////////////////; /// We reloading all cached information in case the underlying class; /// information has changed (for example when changing from the 'emulated'; /// class to the real class.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe swap.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe assignment operator",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:56,Modifiability,variab,variable,56,"// Note we take advantage of having only one physically variable; // dimension:",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:56,Modifiability,variab,variable,56,"// Note we take advantage of having only one physically variable; // dimension:",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe swap.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe assignment operator",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe swap.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe assignment operator.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:103,Performance,cache,cached,103,"////////////////////////////////////////////////////////////////////////////////; /// We reloading all cached information in case the underlying class; /// information has changed (for example when changing from the 'emulated'; /// class to the real class.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:56,Modifiability,variab,variable,56,"// Note we take advantage of having only one physically variable; // dimension:",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:56,Modifiability,variab,variable,56,"// Note we take advantage of having only one physically variable; // dimension:",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe assignment operator.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe swap.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:103,Performance,cache,cached,103,"////////////////////////////////////////////////////////////////////////////////; /// We reloading all cached information in case the underlying class; /// information has changed (for example when changing from the 'emulated'; /// class to the real class.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe swap.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe assignment operator.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:103,Performance,cache,cached,103,"////////////////////////////////////////////////////////////////////////////////; /// We reloading all cached information in case the underlying class; /// information has changed (for example when changing from the 'emulated'; /// class to the real class.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:183,Modifiability,variab,variable,183,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDim; /// A helper class to implement reading a; /// data member on a variable size array inside a TClonesArray object stored in; /// a TTree. This is the version used when the data member is inside a; /// non-split object.; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe swap.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe assignment operator.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:325,Performance,Load,Load,325,"/* The proper indexing and unwinding of index is done by prior leafinfo in the chain. */; //virtual Double_t TFormLeafInfoMultiVarDim::ReadValue(char *where, Int_t instance = 0) {; // return TFormLeafInfo::ReadValue(where,instance);; //}; ////////////////////////////////////////////////////////////////////////////////; /// Load the current array sizes.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:103,Performance,cache,cached,103,"////////////////////////////////////////////////////////////////////////////////; /// We reloading all cached information in case the underlying class; /// information has changed (for example when changing from the 'emulated'; /// class to the real class.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the sizes of the arrays.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:195,Modifiability,variab,variable,195,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDimDirect; /// A small helper class to implement reading; /// a data member on a variable size array inside a TClonesArray object stored; /// in a TTree. This is the version used for split access; ////////////////////////////////////////////////////////////////////////////////; /// Copy the object and all its content.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:303,Security,access,access,303,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDimDirect; /// A small helper class to implement reading; /// a data member on a variable size array inside a TClonesArray object stored; /// in a TTree. This is the version used for split access; ////////////////////////////////////////////////////////////////////////////////; /// Copy the object and all its content.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:199,Modifiability,variab,variable,199,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDimCollection; /// A small helper class to implement reading; /// a data member on a variable size array inside a TClonesArray object stored; /// in a TTree. This is the version used for split access; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:307,Security,access,access,307,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDimCollection; /// A small helper class to implement reading; /// a data member on a variable size array inside a TClonesArray object stored; /// in a TTree. This is the version used for split access; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the current array sizes.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:195,Modifiability,variab,variable,195,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDimClones; /// A small helper class to implement reading; /// a data member on a variable size array inside a TClonesArray object stored; /// in a TTree. This is the version used for split access; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:303,Security,access,access,303,"////////////////////////////////////////////////////////////////////////////////; /// \class TFormLeafInfoMultiVarDimClones; /// A small helper class to implement reading; /// a data member on a variable size array inside a TClonesArray object stored; /// in a TTree. This is the version used for split access; ////////////////////////////////////////////////////////////////////////////////; /// Constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load the current array sizes.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe swap.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe assignment operator.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:35,Modifiability,inherit,inherits,35,"// First check that the real class inherits from the; // casted class; // First assume TObject ...",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:103,Performance,cache,cached,103,"////////////////////////////////////////////////////////////////////////////////; /// We reloading all cached information in case the underlying class; /// information has changed (for example when changing from the 'emulated'; /// class to the real class.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update after a change of file in a chain",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfo.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfo.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe swap.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfoReference.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx:96,Safety,safe,safe,96,"////////////////////////////////////////////////////////////////////////////////; /// Exception safe assignment operator.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfoReference.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx:121,Availability,avail,available,121,"////////////////////////////////////////////////////////////////////////////////; /// Access to target class pointer (if available)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfoReference.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx:86,Security,Access,Access,86,"////////////////////////////////////////////////////////////////////////////////; /// Access to target class pointer (if available)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfoReference.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx:86,Security,Access,Access,86,"////////////////////////////////////////////////////////////////////////////////; /// Access to the value class of the reference proxy",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfoReference.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx:86,Security,Access,Access,86,"////////////////////////////////////////////////////////////////////////////////; /// Access to the value class of the reference proxy",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfoReference.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx:110,Deployability,Update,Update,110,"////////////////////////////////////////////////////////////////////////////////; /// TFormLeafInfo overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfoReference.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx:133,Performance,cache,cached,133,"////////////////////////////////////////////////////////////////////////////////; /// TFormLeafInfo overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfoReference.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx:86,Security,Access,Access,86,"////////////////////////////////////////////////////////////////////////////////; /// Access value of referenced object",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFormLeafInfoReference.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFormLeafInfoReference.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx:172,Availability,recover,recover,172,"// The list of friends needs to be accessed via GetTree()->GetListOfFriends(); // (and not directly GetListOfFriends()), otherwise when `main` is a TChain we; // might not recover the list correctly (see #6993 for the TTreeReader issue; // and #6741 for a more complete discussion/explanation).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFriendProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx:172,Safety,recover,recover,172,"// The list of friends needs to be accessed via GetTree()->GetListOfFriends(); // (and not directly GetListOfFriends()), otherwise when `main` is a TChain we; // might not recover the list correctly (see #6993 for the TTreeReader issue; // and #6741 for a more complete discussion/explanation).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFriendProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx:35,Security,access,accessed,35,"// The list of friends needs to be accessed via GetTree()->GetListOfFriends(); // (and not directly GetListOfFriends()), otherwise when `main` is a TChain we; // might not recover the list correctly (see #6993 for the TTreeReader issue; // and #6741 for a more complete discussion/explanation).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFriendProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx:95,Performance,cache,cached,95,"/////////////////////////////////////////////////////////////////////////////; /// Refresh the cached read entry number from the original tree.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFriendProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx:84,Deployability,Update,Update,84,"//////////////////////////////////////////////////////////////////////////////; /// Update the address of the underlying tree.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFriendProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxyDescriptor.cxx:590,Integrability,rout,routine,590,"// @(#)root/base:$Id$; // Author: Philippe Canal 13/05/2003; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun, Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TFriendProxyDescriptor; Hold the processed information about a Friend TTree while; TTreeProxyGenerator is parsing the TTree information.; Also contains the routine use to generate the appropriate code; fragment in the result of MakeProxy.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TFriendProxyDescriptor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TFriendProxyDescriptor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:183,Integrability,message,messages,183,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorkerTree; ///; /// This class works in conjunction with TTreeProcessorMP, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; ///; /// \class TMPWorkerTreeFunc; ///; /// Templated derivation of TMPWorkerTree handlign generic function tree processing.; ///; /// \class TMPWorkerTreeSel; ///; /// Templated derivation of TMPWorkerTree handlign selector tree processing.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructors.; /// Note that this does not set variables like fPid or fS (worker's socket).\n; /// These operations are handled by the Init method, which is called after; /// forking.\n; /// This separation is in place because the instantiation of a worker; /// must be done once _before_ forking, while the initialization of the; /// members must be done _after_ forking by each of the children processes.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:724,Modifiability,variab,variables,724,"//////////////////////////////////////////////////////////////////////////; ///; /// \class TMPWorkerTree; ///; /// This class works in conjunction with TTreeProcessorMP, reacting to messages; /// received from it as specified by the Notify and HandleInput methods.; ///; /// \class TMPWorkerTreeFunc; ///; /// Templated derivation of TMPWorkerTree handlign generic function tree processing.; ///; /// \class TMPWorkerTreeSel; ///; /// Templated derivation of TMPWorkerTree handlign selector tree processing.; ///; //////////////////////////////////////////////////////////////////////////; //////////////////////////////////////////////////////////////////////////; /// Class constructors.; /// Note that this does not set variables like fPid or fS (worker's socket).\n; /// These operations are handled by the Init method, which is called after; /// forking.\n; /// This separation is in place because the instantiation of a worker; /// must be done once _before_ forking, while the initialization of the; /// members must be done _after_ forking by each of the children processes.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:24,Performance,cache,cache,24,"// Avoid destroying the cache; must be placed before deleting the trees",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:3,Safety,Avoid,Avoid,3,"// Avoid destroying the cache; must be placed before deleting the trees",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:36,Energy Efficiency,adapt,adapted,36,"// retrieve the first TTree; // (re-adapted from TEventIter.cxx)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:36,Modifiability,adapt,adapted,36,"// retrieve the first TTree; // (re-adapted from TEventIter.cxx)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:85,Performance,cache,cache,85,"//////////////////////////////////////////////////////////////////////////; /// Tree cache handling",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:15,Performance,cache,cache,15,"// Disable the cache",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:3,Deployability,update,update,3,"// update the number of processed entries",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:80,Performance,Load,Load,80,"//////////////////////////////////////////////////////////////////////////; /// Load the required tree and evaluate the processing range",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:2,Availability,error,errors,2,"//errors are handled inside OpenFile",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:3,Availability,error,errors,3,"// errors are handled inside OpenFile",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:2,Availability,error,errors,2,"//errors are handled inside RetrieveTree",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:24,Performance,cache,cache,24,"// Prepare to setup the cache, if required",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx:13,Performance,cache,cache,13,"// Setup the cache, if required",MatchSource.CODE_COMMENT,tree/treeplayer/src/TMPWorkerTree.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TMPWorkerTree.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefArrayProxy.cxx:62,Security,access,access,62,"/** \class TRefArrayProxy; A container proxy, which allows to access references stored; in a TRefArray from TTree::Draw; */; ////////////////////////////////////////////////////////////////////////////////; /// Access referenced object(-data)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TRefArrayProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefArrayProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefArrayProxy.cxx:211,Security,Access,Access,211,"/** \class TRefArrayProxy; A container proxy, which allows to access references stored; in a TRefArray from TTree::Draw; */; ////////////////////////////////////////////////////////////////////////////////; /// Access referenced object(-data)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TRefArrayProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefArrayProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefArrayProxy.cxx:113,Security,Access,Access,113,"////////////////////////////////////////////////////////////////////////////////; /// TVirtualRefProxy overload: Access to container size (if container reference (ie TRefArray) etc)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TRefArrayProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefArrayProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx:256,Deployability,Update,Update,256,"/** class TRefProxy; A reference proxy, which allows to access ROOT references (TRef); stored contained in other objects from TTree::Draw; */; ////////////////////////////////////////////////////////////////////////////////; /// TVirtualRefProxy overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,tree/treeplayer/src/TRefProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx:279,Performance,cache,cached,279,"/** class TRefProxy; A reference proxy, which allows to access ROOT references (TRef); stored contained in other objects from TTree::Draw; */; ////////////////////////////////////////////////////////////////////////////////; /// TVirtualRefProxy overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,tree/treeplayer/src/TRefProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx:56,Security,access,access,56,"/** class TRefProxy; A reference proxy, which allows to access ROOT references (TRef); stored contained in other objects from TTree::Draw; */; ////////////////////////////////////////////////////////////////////////////////; /// TVirtualRefProxy overload: Update (and propagate) cached information",MatchSource.CODE_COMMENT,tree/treeplayer/src/TRefProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx:113,Security,Access,Access,113,"////////////////////////////////////////////////////////////////////////////////; /// TVirtualRefProxy overload: Access to value class",MatchSource.CODE_COMMENT,tree/treeplayer/src/TRefProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx:86,Security,Access,Access,86,"////////////////////////////////////////////////////////////////////////////////; /// Access referenced object(-data)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TRefProxy.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TRefProxy.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:13,Modifiability,variab,variable,13,"// what each variable should contain:; // varexp0 - original expression eg ""a:b>>htest""; // hname - name of new or old histogram; // hkeep - flag if to keep new histogram; // hnameplus - flag if to add to current histo; // i - length of variable expression stipped of everything after "">>""; // varexp - variable expression stipped of everything after "">>""; // fOldHistogram - pointer to hist hname; // elist - pointer to selection list of hname",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:237,Modifiability,variab,variable,237,"// what each variable should contain:; // varexp0 - original expression eg ""a:b>>htest""; // hname - name of new or old histogram; // hkeep - flag if to keep new histogram; // hnameplus - flag if to add to current histo; // i - length of variable expression stipped of everything after "">>""; // varexp - variable expression stipped of everything after "">>""; // fOldHistogram - pointer to hist hname; // elist - pointer to selection list of hname",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:303,Modifiability,variab,variable,303,"// what each variable should contain:; // varexp0 - original expression eg ""a:b>>htest""; // hname - name of new or old histogram; // hkeep - flag if to keep new histogram; // hnameplus - flag if to add to current histo; // i - length of variable expression stipped of everything after "">>""; // varexp - variable expression stipped of everything after "">>""; // fOldHistogram - pointer to hist hname; // elist - pointer to selection list of hname",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:163,Modifiability,extend,extended,163,"// parse things that follow the name of the histo between '(' and ')'.; // At this point hname contains the name of the specified histogram.; // Now the syntax is extended to handle an hname of the following format; // hname(nBIN [[,[xlow]][,xhigh]],...); // so enclosed in brackets is the binning information, xlow, xhigh, and; // the same for the other dimensions",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:23,Integrability,depend,depending,23,"// do certain settings depending on position of argument",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:100,Modifiability,variab,variables,100,"////////////////////////////////////////////////////////////////////////////////; /// Compile input variables and selection expression.; ///; /// varexp is an expression of the general form e1:e2:e3; /// where e1,etc is a formula referencing a combination of the columns; ///; /// Example:; ///; /// varexp = x simplest case: draw a 1-Dim distribution of column named x; /// = sqrt(x) : draw distribution of sqrt(x); /// = x*y/z; /// = y:sqrt(x) 2-Dim distribution of y versus sqrt(x); ///; /// selection is an expression with a combination of the columns; ///; /// Example:; ///; /// selection = ""x<y && sqrt(z)>3.2""; ///; /// in a selection all the C++ operators are authorized; ///; /// Return false if any of the variable is not compilable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:717,Modifiability,variab,variable,717,"////////////////////////////////////////////////////////////////////////////////; /// Compile input variables and selection expression.; ///; /// varexp is an expression of the general form e1:e2:e3; /// where e1,etc is a formula referencing a combination of the columns; ///; /// Example:; ///; /// varexp = x simplest case: draw a 1-Dim distribution of column named x; /// = sqrt(x) : draw distribution of sqrt(x); /// = x*y/z; /// = y:sqrt(x) 2-Dim distribution of y versus sqrt(x); ///; /// selection is an expression with a combination of the columns; ///; /// Example:; ///; /// selection = ""x<y && sqrt(z)>3.2""; ///; /// in a selection all the C++ operators are authorized; ///; /// Return false if any of the variable is not compilable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:669,Security,authoriz,authorized,669,"////////////////////////////////////////////////////////////////////////////////; /// Compile input variables and selection expression.; ///; /// varexp is an expression of the general form e1:e2:e3; /// where e1,etc is a formula referencing a combination of the columns; ///; /// Example:; ///; /// varexp = x simplest case: draw a 1-Dim distribution of column named x; /// = sqrt(x) : draw distribution of sqrt(x); /// = x*y/z; /// = y:sqrt(x) 2-Dim distribution of y versus sqrt(x); ///; /// selection is an expression with a combination of the columns; ///; /// Example:; ///; /// selection = ""x<y && sqrt(z)>3.2""; ///; /// in a selection all the C++ operators are authorized; ///; /// Return false if any of the variable is not compilable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:311,Usability,simpl,simplest,311,"////////////////////////////////////////////////////////////////////////////////; /// Compile input variables and selection expression.; ///; /// varexp is an expression of the general form e1:e2:e3; /// where e1,etc is a formula referencing a combination of the columns; ///; /// Example:; ///; /// varexp = x simplest case: draw a 1-Dim distribution of column named x; /// = sqrt(x) : draw distribution of sqrt(x); /// = x*y/z; /// = y:sqrt(x) 2-Dim distribution of y versus sqrt(x); ///; /// selection is an expression with a combination of the columns; ///; /// Example:; ///; /// selection = ""x<y && sqrt(z)>3.2""; ///; /// in a selection all the C++ operators are authorized; ///; /// Return false if any of the variable is not compilable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:165,Availability,avail,available,165,"////////////////////////////////////////////////////////////////////////////////; /// Initialization of the primitive type arrays if the new size is bigger than the available space.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:14,Availability,avail,available,14,"// Double the available space until it matches the new size.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:140,Energy Efficiency,allocate,allocated,140,"////////////////////////////////////////////////////////////////////////////////; /// Build Index array for names in varexp.; /// This will allocated a C style array of TString and Ints",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:3,Usability,simpl,simple,3,"// simple case with no multiplicity",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:45,Performance,load,loading,45,"// Always call EvalInstance(0) to insure the loading; // of the branches.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:172,Modifiability,variab,variable,172,"////////////////////////////////////////////////////////////////////////////////; /// Called in the entry loop for all entries accepted by Select.; /// Case where the only variable returns an object (or pointer to).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:120,Modifiability,variab,variable,120,"////////////////////////////////////////////////////////////////////////////////; /// Set number of entries to estimate variable limits.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:49,Modifiability,variab,variable,49,"//__________________________3D scatter plot (3rd variable = col)__",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:25,Integrability,depend,dependency,25,"// Using CINT to avoid a dependency in TParallelCoord",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:17,Safety,avoid,avoid,17,"// Using CINT to avoid a dependency in TParallelCoord",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:17,Deployability,update,update,17,"// Do we need to update screen?",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:134,Safety,avoid,avoid,134,"// In case the new lower limits of h2 axis are 0, it is better to set them to the minimum of; // the data set (which should be >0) to avoid data cut when plotting in log scale.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:166,Testability,log,log,166,"// In case the new lower limits of h2 axis are 0, it is better to set them to the minimum of; // the data set (which should be >0) to avoid data cut when plotting in log scale.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:127,Usability,Clear,Clear,127,"// case like: T.Draw(""y:x""); // h2 is a temporary histogram (htemp). This histogram; // will be automatically deleted by TPad::Clear",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:134,Safety,avoid,avoid,134,"// In case the new lower limits of h2 axis are 0, it is better to set them to the minimum of; // the data set (which should be >0) to avoid data cut when plotting in log scale.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:166,Testability,log,log,166,"// In case the new lower limits of h2 axis are 0, it is better to set them to the minimum of; // the data set (which should be >0) to avoid data cut when plotting in log scale.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx:127,Usability,Clear,Clear,127,"// case like: T.Draw(""y:x""); // h3 is a temporary histogram (htemp). This histogram; // will be automatically deleted by TPad::Clear",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorDraw.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorDraw.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:352,Integrability,rout,routine,352,"////////////////////////////////////////////////////////////////////////////////; /// The Init() function is called when the selector needs to initialize; /// a new tree or chain. Typically here the branch addresses and branch; /// pointers of the tree will be set.; /// It is normally not necessary to make changes to the generated; /// code, but the routine can be extended by the user if needed.; /// Init() will be called many times when running on PROOF; /// (once per file to be processed).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorEntries.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:367,Modifiability,extend,extended,367,"////////////////////////////////////////////////////////////////////////////////; /// The Init() function is called when the selector needs to initialize; /// a new tree or chain. Typically here the branch addresses and branch; /// pointers of the tree will be set.; /// It is normally not necessary to make changes to the generated; /// code, but the routine can be extended by the user if needed.; /// Init() will be called many times when running on PROOF; /// (once per file to be processed).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorEntries.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:537,Availability,avail,available,537,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelectorEntries::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorEntries.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:279,Performance,load,loaded,279,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelectorEntries::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorEntries.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:523,Performance,load,loaded,523,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelectorEntries::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorEntries.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:831,Safety,Abort,Abort,831,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelectorEntries::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorEntries.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:664,Usability,simpl,simple,664,"////////////////////////////////////////////////////////////////////////////////; /// The Process() function is called for each entry in the tree (or possibly; /// keyed object in the case of PROOF) to be processed. The entry argument; /// specifies which entry in the currently loaded tree is to be processed.; /// It can be passed to either TSelectorEntries::GetEntry() or TBranch::GetEntry(); /// to read either all or the required parts of the data. When processing; /// keyed objects with PROOF, the object is already loaded and is available; /// via the fObject pointer.; ///; /// This function should contain the ""body"" of the analysis. It can contain; /// simple or elaborate selection criteria, run algorithms on the data; /// of the event and typically fill histograms.; ///; /// The processing can be stopped by calling Abort().; ///; /// Use fStatus to set the return value of TTree::Process().; ///; /// The return value is currently not used.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorEntries.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx:76,Performance,load,loading,76,"// Calculate the first values; // Always call EvalInstance(0) to insure the loading; // of the branches.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSelectorEntries.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSelectorEntries.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:325,Deployability,configurat,configuration,325,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:382,Deployability,configurat,configuration,382,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:1193,Deployability,configurat,configuration,1193,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:224,Modifiability,config,configured,224,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:252,Modifiability,config,config,252,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:325,Modifiability,config,configuration,325,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:382,Modifiability,config,configuration,382,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:852,Modifiability,config,configure,852,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:1193,Modifiability,config,configuration,1193,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:245,Usability,simpl,simple,245,"/** \class TSimpleAnalysis. A TSimpleAnalysis object creates histograms from a TChain. These histograms; are stored to an output file. The histogrammed (TTreeFormula) expressions,; their cuts, the input and output files are configured through a simple config; file that allows comments starting with '#'.; Here an example of configuration file:. ~~~ {.cpp}; # This is an example of configuration file; file_output.root #the output file in which histograms are stored. # The next line has the name of the tree of the input data. It is; # optional if there is exactly one tree in the first input file.; ntuple #name of the input tree. # The lines of the next block correspond to .root input files that; # contain the tree; hsimple1.root #first .root input file; hsimple2.root #second .root input file. # The next block is composed by lines that allow to configure the; # histograms. They have the following syntax:; # NAME = EXPRESSION if CUT; # which corresponds to chain->Draw(""EXPRESSION >> NAME"", ""CUT""); # i.e. it will create a histogram called NAME and store it in; # file_output.root.; # ""if CUT"" is optional; hpx=px if px<-3 #first histogram; hpxpy=px:py #second histogram. # End of the configuration file; ~~~. It is possible to use the script rootdrawtree that allows to use the class; just in command line through the bash shell.; */; ////////////////////////////////////////////////////////////////////////////////; /// Delete comments, leading and trailing white spaces in a string.; ///; /// param[in] line - line read from the input file",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:270,Deployability,configurat,configuration,270,"////////////////////////////////////////////////////////////////////////////////; /// Handle the expression lines of the input file in order to pass the; /// elements to the members of the object.; ///; /// param[in] line - TTreeFormula expression, either read form the configuration; /// file or passed as expression to the constructor",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:270,Modifiability,config,configuration,270,"////////////////////////////////////////////////////////////////////////////////; /// Handle the expression lines of the input file in order to pass the; /// elements to the members of the object.; ///; /// param[in] line - TTreeFormula expression, either read form the configuration; /// file or passed as expression to the constructor",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:178,Deployability,configurat,configuration,178,"////////////////////////////////////////////////////////////////////////////////; /// Extract the name of the tree from the first input file when the tree name; /// isn't in the configuration file. Returns the name of the tree.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:178,Modifiability,config,configuration,178,"////////////////////////////////////////////////////////////////////////////////; /// Extract the name of the tree from the first input file when the tree name; /// isn't in the configuration file. Returns the name of the tree.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:153,Availability,error,error,153,"// If the key is related to and object that inherits from TTree::Class we; // set treeName with the name of this key if treeName is empty, otherwise; // error occurs",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:44,Modifiability,inherit,inherits,44,"// If the key is related to and object that inherits from TTree::Class we; // set treeName with the name of this key if treeName is empty, otherwise; // error occurs",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:29,Availability,error,error,29,"// If treeName is yet empty, error occurs",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:115,Availability,error,errors,115,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if there are no errors in TChain::LoadTree()",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:133,Performance,Load,LoadTree,133,"////////////////////////////////////////////////////////////////////////////////; /// Returns true if there are no errors in TChain::LoadTree()",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:37,Performance,Load,LoadTree,37,"// Possible return values of TChain::LoadTree()",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:20,Availability,error,error,20,"// Silence possible error message from TFile constructor if this is a tree name.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:26,Integrability,message,message,26,"// Silence possible error message from TFile constructor if this is a tree name.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:120,Modifiability,config,configured,120,"////////////////////////////////////////////////////////////////////////////////; /// Execute all the TChain::Draw() as configured and stores the output histograms.; /// Returns true if the analysis succeeds.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:22,Availability,error,errors,22,"// Check if there are errors inside the chain",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:39,Safety,avoid,avoid,39,"// Create task-specific TDirectory, so avoid parallel tasks to interfere; // in gDirectory with histogram registration.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:87,Safety,Detect,Detect,87,"// If a file does not exist, one of the vFileswHists; // will be a vector of length 0. Detect that.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:3,Availability,Error,Error,3,"// Error if the input file does not exist",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:14,Availability,error,errors,14,"// Report any errors if occur during the configuration proceedings",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:41,Deployability,configurat,configuration,41,"// Report any errors if occur during the configuration proceedings",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:41,Modifiability,config,configuration,41,"// Report any errors if occur during the configuration proceedings",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:218,Deployability,configurat,configurationFile,218,"////////////////////////////////////////////////////////////////////////////////; /// Function that allows to create the TSimpleAnalysis object and execute its; /// Configure and Analyze functions.; ///; /// param[in] configurationFile - name of the input file used to create the TSimpleAnalysis object",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:165,Modifiability,Config,Configure,165,"////////////////////////////////////////////////////////////////////////////////; /// Function that allows to create the TSimpleAnalysis object and execute its; /// Configure and Analyze functions.; ///; /// param[in] configurationFile - name of the input file used to create the TSimpleAnalysis object",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:218,Modifiability,config,configurationFile,218,"////////////////////////////////////////////////////////////////////////////////; /// Function that allows to create the TSimpleAnalysis object and execute its; /// Configure and Analyze functions.; ///; /// param[in] configurationFile - name of the input file used to create the TSimpleAnalysis object",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:23,Modifiability,Config,Configure,23,"// Return true only if Configure() and Run() functions were performed correctly",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx:60,Performance,perform,performed,60,"// Return true only if Configure() and Run() functions were performed correctly",MatchSource.CODE_COMMENT,tree/treeplayer/src/TSimpleAnalysis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TSimpleAnalysis.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:121,Modifiability,variab,variables,121,"////////////////////////////////////////////////////////////////////////////////; /// Constructor - cleans all the class variables.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:101,Modifiability,variab,variables,101,"////////////////////////////////////////////////////////////////////////////////; /// Resets all the variables of the class.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:654,Availability,error,error,654,"////////////////////////////////////////////////////////////////////////////////; /// Parse expression [var1 [:var2 [:var3] ...]],; /// number of variables cannot be greater than fgMaxDimension.; ///; /// A colon which is followed by (or that follows) another semicolon; /// is not regarded as a separator.; ///; /// If there are more separating : than fgMaxDimension - 1 then; /// all characters after (fgMaxDimension - 1)th colon is put into; /// the last variable.; ///; /// - `fDimension := <number of variables>`; /// - `fVarExp[0] := <first variable string>`; /// - `fVarExp[1] := <second variable string>`; /// ..; /// Returns false in case of an error.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:146,Modifiability,variab,variables,146,"////////////////////////////////////////////////////////////////////////////////; /// Parse expression [var1 [:var2 [:var3] ...]],; /// number of variables cannot be greater than fgMaxDimension.; ///; /// A colon which is followed by (or that follows) another semicolon; /// is not regarded as a separator.; ///; /// If there are more separating : than fgMaxDimension - 1 then; /// all characters after (fgMaxDimension - 1)th colon is put into; /// the last variable.; ///; /// - `fDimension := <number of variables>`; /// - `fVarExp[0] := <first variable string>`; /// - `fVarExp[1] := <second variable string>`; /// ..; /// Returns false in case of an error.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:458,Modifiability,variab,variable,458,"////////////////////////////////////////////////////////////////////////////////; /// Parse expression [var1 [:var2 [:var3] ...]],; /// number of variables cannot be greater than fgMaxDimension.; ///; /// A colon which is followed by (or that follows) another semicolon; /// is not regarded as a separator.; ///; /// If there are more separating : than fgMaxDimension - 1 then; /// all characters after (fgMaxDimension - 1)th colon is put into; /// the last variable.; ///; /// - `fDimension := <number of variables>`; /// - `fVarExp[0] := <first variable string>`; /// - `fVarExp[1] := <second variable string>`; /// ..; /// Returns false in case of an error.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:506,Modifiability,variab,variables,506,"////////////////////////////////////////////////////////////////////////////////; /// Parse expression [var1 [:var2 [:var3] ...]],; /// number of variables cannot be greater than fgMaxDimension.; ///; /// A colon which is followed by (or that follows) another semicolon; /// is not regarded as a separator.; ///; /// If there are more separating : than fgMaxDimension - 1 then; /// all characters after (fgMaxDimension - 1)th colon is put into; /// the last variable.; ///; /// - `fDimension := <number of variables>`; /// - `fVarExp[0] := <first variable string>`; /// - `fVarExp[1] := <second variable string>`; /// ..; /// Returns false in case of an error.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:547,Modifiability,variab,variable,547,"////////////////////////////////////////////////////////////////////////////////; /// Parse expression [var1 [:var2 [:var3] ...]],; /// number of variables cannot be greater than fgMaxDimension.; ///; /// A colon which is followed by (or that follows) another semicolon; /// is not regarded as a separator.; ///; /// If there are more separating : than fgMaxDimension - 1 then; /// all characters after (fgMaxDimension - 1)th colon is put into; /// the last variable.; ///; /// - `fDimension := <number of variables>`; /// - `fVarExp[0] := <first variable string>`; /// - `fVarExp[1] := <second variable string>`; /// ..; /// Returns false in case of an error.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:595,Modifiability,variab,variable,595,"////////////////////////////////////////////////////////////////////////////////; /// Parse expression [var1 [:var2 [:var3] ...]],; /// number of variables cannot be greater than fgMaxDimension.; ///; /// A colon which is followed by (or that follows) another semicolon; /// is not regarded as a separator.; ///; /// If there are more separating : than fgMaxDimension - 1 then; /// all characters after (fgMaxDimension - 1)th colon is put into; /// the last variable.; ///; /// - `fDimension := <number of variables>`; /// - `fVarExp[0] := <first variable string>`; /// - `fVarExp[1] := <second variable string>`; /// ..; /// Returns false in case of an error.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:350,Availability,error,error,350,"////////////////////////////////////////////////////////////////////////////////; /// Syntax:; ///; /// [' '*][[\+][' '*]name[(num1 [, [num2] ] [, [num3] ] ...)]]; ///; /// num's are floating point numbers; /// sets the fileds fNoParameters, fParameterGiven, fParameters, fAdd, fName; /// to appropriate values.; ///; /// Returns false in case of an error.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:92,Modifiability,variab,variables,92,"////////////////////////////////////////////////////////////////////////////////; /// Split variables and parse name and parameters in brackets.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:140,Modifiability,Variab,Variable,140,"////////////////////////////////////////////////////////////////////////////////; /// Parses parameters from TTree::Draw().; /// - varexp - Variable expression; see TTree::Draw(); /// - selection - selection expression; see TTree::Draw(); /// - option - Drawing option; see TTree::Draw",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:164,Availability,error,error,164,"////////////////////////////////////////////////////////////////////////////////; /// returns *num*-th parameter from brackets in the expression; /// in case of an error (wrong number) returns 0.0; /// num - number of parameter (counted from 0)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:225,Modifiability,variab,variable,225,"////////////////////////////////////////////////////////////////////////////////; /// - num - parameter number; /// - def - default value of the parameter; /// returns the value of *num*-th parameter from the brackets in the variable expression; /// if the parameter of that number wasn't specified returns *def*.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:188,Availability,error,error,188,"////////////////////////////////////////////////////////////////////////////////; /// returns true if the *num*-th parameter was specified; /// otherwise returns fFALSE; /// in case of an error (wrong num) prints an error message and; /// returns false.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:216,Availability,error,error,216,"////////////////////////////////////////////////////////////////////////////////; /// returns true if the *num*-th parameter was specified; /// otherwise returns fFALSE; /// in case of an error (wrong num) prints an error message and; /// returns false.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:222,Integrability,message,message,222,"////////////////////////////////////////////////////////////////////////////////; /// returns true if the *num*-th parameter was specified; /// otherwise returns fFALSE; /// in case of an error (wrong num) prints an error message and; /// returns false.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:142,Availability,error,error,142,"////////////////////////////////////////////////////////////////////////////////; /// Returns the *num*-th variable string; /// in case of an error prints an error message and returns an empty string.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:158,Availability,error,error,158,"////////////////////////////////////////////////////////////////////////////////; /// Returns the *num*-th variable string; /// in case of an error prints an error message and returns an empty string.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:164,Integrability,message,message,164,"////////////////////////////////////////////////////////////////////////////////; /// Returns the *num*-th variable string; /// in case of an error prints an error message and returns an empty string.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:107,Modifiability,variab,variable,107,"////////////////////////////////////////////////////////////////////////////////; /// Returns the *num*-th variable string; /// in case of an error prints an error message and returns an empty string.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx:98,Modifiability,variab,variable,98,"////////////////////////////////////////////////////////////////////////////////; /// Returns the variable string, i.e. [var1[:var2[:var2[:var4]]]].",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeDrawArgsParser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeDrawArgsParser.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:723,Availability,avail,available,723,"/** \class TTreeFormula; Used to pass a selection expression to the Tree drawing routine. See TTree::Draw. A TreeFormula can contain any arithmetic expression including; standard operators and mathematical functions separated by operators.; Examples of valid expression:; ~~~{.cpp}; ""x<y && sqrt(z)>3.2""; ~~~; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:1549,Deployability,Update,Update,1549,"/** \class TTreeFormula; Used to pass a selection expression to the Tree drawing routine. See TTree::Draw. A TreeFormula can contain any arithmetic expression including; standard operators and mathematical functions separated by operators.; Examples of valid expression:; ~~~{.cpp}; ""x<y && sqrt(z)>3.2""; ~~~; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:81,Integrability,rout,routine,81,"/** \class TTreeFormula; Used to pass a selection expression to the Tree drawing routine. See TTree::Draw. A TreeFormula can contain any arithmetic expression including; standard operators and mathematical functions separated by operators.; Examples of valid expression:; ~~~{.cpp}; ""x<y && sqrt(z)>3.2""; ~~~; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:756,Integrability,interface,interface,756,"/** \class TTreeFormula; Used to pass a selection expression to the Tree drawing routine. See TTree::Draw. A TreeFormula can contain any arithmetic expression including; standard operators and mathematical functions separated by operators.; Examples of valid expression:; ~~~{.cpp}; ""x<y && sqrt(z)>3.2""; ~~~; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:1028,Modifiability,variab,variability,1028,"/** \class TTreeFormula; Used to pass a selection expression to the Tree drawing routine. See TTree::Draw. A TreeFormula can contain any arithmetic expression including; standard operators and mathematical functions separated by operators.; Examples of valid expression:; ~~~{.cpp}; ""x<y && sqrt(z)>3.2""; ~~~; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:1582,Performance,load,loading,1582,"/** \class TTreeFormula; Used to pass a selection expression to the Tree drawing routine. See TTree::Draw. A TreeFormula can contain any arithmetic expression including; standard operators and mathematical functions separated by operators.; Examples of valid expression:; ~~~{.cpp}; ""x<y && sqrt(z)>3.2""; ~~~; TTreeFormula now relies on a variety of TFormLeafInfo classes to handle the; reading of the information. Here is the list of theses classes:; - TFormLeafInfo; - TFormLeafInfoDirect; - TFormLeafInfoNumerical; - TFormLeafInfoClones; - TFormLeafInfoCollection; - TFormLeafInfoPointer; - TFormLeafInfoMethod; - TFormLeafInfoMultiVarDim; - TFormLeafInfoMultiVarDimDirect; - TFormLeafInfoCast. The following method are available from the TFormLeafInfo interface:. - AddOffset(Int_t offset, TStreamerElement* element); - GetCounterValue(TLeaf* leaf) : return the size of the array pointed to.; - GetObjectAddress(TLeafElement* leaf) : Returns the location of the object pointed to.; - GetMultiplicity() : Returns info on the variability of the number of elements; - GetNdata(TLeaf* leaf) : Returns the number of elements; - GetNdata() : Used by GetNdata(TLeaf* leaf); - GetValue(TLeaf *leaf, Int_t instance = 0) : Return the value; - GetValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value; - GetLocalValuePointer(TLeaf *leaf, Int_t instance = 0) : Returns the address of the value of 'this' LeafInfo; - IsString(); - ReadValue(char *where, Int_t instance = 0) : Internal function to interpret the location 'where'; - Update() : react to the possible loading of a shared library.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:210,Modifiability,variab,variable,210,"// We have a string used as a string; // This dormant portion of code would be used if (when?) we allow the histogramming; // of the integral content (as opposed to the string content) of strings; // held in a variable size container delimited by a null (as opposed to; // a fixed size container or variable size container whose size is controlled; // by a variable). In GetNdata, we will then use strlen to grab the current length.; //fCumulSizes[i][fNdimensions[i]-1] = 1;; //fUsedSizes[fNdimensions[i]-1] = -TMath::Abs(fUsedSizes[fNdimensions[i]-1]);; //fUsedSizes[0] = - TMath::Abs( fUsedSizes[0]);",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:299,Modifiability,variab,variable,299,"// We have a string used as a string; // This dormant portion of code would be used if (when?) we allow the histogramming; // of the integral content (as opposed to the string content) of strings; // held in a variable size container delimited by a null (as opposed to; // a fixed size container or variable size container whose size is controlled; // by a variable). In GetNdata, we will then use strlen to grab the current length.; //fCumulSizes[i][fNdimensions[i]-1] = 1;; //fUsedSizes[fNdimensions[i]-1] = -TMath::Abs(fUsedSizes[fNdimensions[i]-1]);; //fUsedSizes[0] = - TMath::Abs( fUsedSizes[0]);",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:357,Modifiability,variab,variable,357,"// We have a string used as a string; // This dormant portion of code would be used if (when?) we allow the histogramming; // of the integral content (as opposed to the string content) of strings; // held in a variable size container delimited by a null (as opposed to; // a fixed size container or variable size container whose size is controlled; // by a variable). In GetNdata, we will then use strlen to grab the current length.; //fCumulSizes[i][fNdimensions[i]-1] = 1;; //fUsedSizes[fNdimensions[i]-1] = -TMath::Abs(fUsedSizes[fNdimensions[i]-1]);; //fUsedSizes[0] = - TMath::Abs( fUsedSizes[0]);",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:43,Safety,safe,safely,43,"// If the string is by itself, then it can safely be histogrammed as; // in a string based axis. To histogram the number inside the string; // just make it part of a useless expression (for example: mystring+0)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:39,Performance,load,load,39,"// Create a list of unique branches to load.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:86,Usability,Clear,Clear,86,"// Objects in fExternalCuts are not owned and should not be deleted; // fExternalCuts.Clear();",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:149,Modifiability,variab,variables,149,"////////////////////////////////////////////////////////////////////////////////; /// This method is used internally to decode the dimensions of the variables.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:3,Testability,ASSERT,ASSERT,3,"// ASSERT(indexvar!=0);",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:149,Modifiability,variab,variables,149,"////////////////////////////////////////////////////////////////////////////////; /// This method is used internally to decode the dimensions of the variables.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:114,Safety,avoid,avoid,114,"// the next value could be before the string but; // that's okay because the next operation is ++; // (this is to avoid (?) a if statement at the end of the; // loop)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:54,Modifiability,variab,variable,54,"// if scanindex is 0 then we have a name index thus a variable; // array (or TClonesArray!).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:9,Testability,test,test,9,"// NOTE: test that fNdimensions[code] is NOT too big!!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:149,Modifiability,variab,variables,149,"////////////////////////////////////////////////////////////////////////////////; /// This method is used internally to decode the dimensions of the variables.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:20,Modifiability,variab,variable,20,"// We have a second variable dimensions",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:9,Testability,test,test,9,"// NOTE: test that fNdimensions[code] is NOT too big!!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:149,Modifiability,variab,variables,149,"////////////////////////////////////////////////////////////////////////////////; /// This method is used internally to decode the dimensions of the variables.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:22,Modifiability,variab,variable,22,"// With have a second variable dimensions",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:149,Modifiability,variab,variables,149,"////////////////////////////////////////////////////////////////////////////////; /// This method is used internally to decode the dimensions of the variables.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:233,Availability,failure,failure,233,"////////////////////////////////////////////////////////////////////////////////; /// This method check for treat the case where expression contains $Atl and load up; /// both fAliases and fExpr.; /// We return:; /// - -1 in case of failure; /// - 0 in case we did not find $Alt; /// - the action number in case of success.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:158,Performance,load,load,158,"////////////////////////////////////////////////////////////////////////////////; /// This method check for treat the case where expression contains $Atl and load up; /// both fAliases and fExpr.; /// We return:; /// - -1 in case of failure; /// - 0 in case we did not find $Alt; /// - the action number in case of success.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:174,Availability,Error,Error,174,"////////////////////////////////////////////////////////////////////////////////; /// Decompose 'expression' as pointing to something inside the leaf; /// Returns:; /// - -2 Error: some information is missing (message already printed); /// - -1 Error: Syntax is incorrect (message already printed); /// - 0; /// - >0 the value returns is the action code.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:245,Availability,Error,Error,245,"////////////////////////////////////////////////////////////////////////////////; /// Decompose 'expression' as pointing to something inside the leaf; /// Returns:; /// - -2 Error: some information is missing (message already printed); /// - -1 Error: Syntax is incorrect (message already printed); /// - 0; /// - >0 the value returns is the action code.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:210,Integrability,message,message,210,"////////////////////////////////////////////////////////////////////////////////; /// Decompose 'expression' as pointing to something inside the leaf; /// Returns:; /// - -2 Error: some information is missing (message already printed); /// - -1 Error: Syntax is incorrect (message already printed); /// - 0; /// - >0 the value returns is the action code.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:273,Integrability,message,message,273,"////////////////////////////////////////////////////////////////////////////////; /// Decompose 'expression' as pointing to something inside the leaf; /// Returns:; /// - -2 Error: some information is missing (message already printed); /// - -1 Error: Syntax is incorrect (message already printed); /// - 0; /// - >0 the value returns is the action code.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:20,Availability,recover,recover,20,"// First we need to recover the collection.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:20,Safety,recover,recover,20,"// First we need to recover the collection.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:196,Modifiability,variab,variable,196,"// At this point we have an element which is inside a class (which is not; // a collection) and this element of a collection of numerical type.; // (Note: it is not possible to have more than one variable dimension; // unless we were supporting variable size C-style array of collection).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:245,Modifiability,variab,variable,245,"// At this point we have an element which is inside a class (which is not; // a collection) and this element of a collection of numerical type.; // (Note: it is not possible to have more than one variable dimension; // unless we were supporting variable size C-style array of collection).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:271,Modifiability,inherit,inheritance,271,"// Let see if the leaf was attempted to be casted.; // Since there would have been something like; // ((cast_class*)leafname)->.... we need to use; // paran_level+1; // Also we disable this functionality in case of TClonesArray; // because it is not yet allowed to have 'inheritance' (or virtuality); // in play in a TClonesArray.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:51,Integrability,message,messages,51,/* Maybe we should make those test lead to warning messages */,MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:30,Testability,test,test,30,/* Maybe we should make those test lead to warning messages */,MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:120,Modifiability,variab,variable,120,"// We allow for looking for a data member inside a class inside; // a TClonesArray without mentioning the TClonesArrays variable name",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:13,Modifiability,variab,variable,13,"// We have a variable array within a variable array!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:37,Modifiability,variab,variable,37,"// We have a variable array within a variable array!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:57,Availability,error,error,57,"// We have something left to analyze. Let's make this an error case!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:504,Availability,failure,failure,504,"////////////////////////////////////////////////////////////////////////////////; /// Look for the leaf corresponding to the start of expression.; /// It returns the corresponding leaf if any.; /// It also modify the following arguments:; ///; /// - leftover: contain from expression that was not used to determine the leaf; /// - final:; /// * paran_level: number of un-matched open parenthesis; /// * cast_queue: list of cast to be done; /// * aliases: list of aliases used; /// - Return <0 in case of failure; ///; /// - Return 0 if a leaf has been found; /// - Return 2 if info about the TTree itself has been requested.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:35,Availability,error,error,35,"// This is actually not really any error, we probably received something; // like ""abs(some_val)"", let ROOT::v5::TFormula decompose it first.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:165,Availability,Error,Error,165,"// if (!leaf->InheritsFrom(TLeafObject::Class()) ) {; // If the leaf that we found so far is not a TLeafObject then there is; // nothing we would be able to do.; // Error(""DefinedVariable"",""Need a TLeafObject to call a function!"");; // return -1;; //}; // We need to recover the info not used.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:267,Availability,recover,recover,267,"// if (!leaf->InheritsFrom(TLeafObject::Class()) ) {; // If the leaf that we found so far is not a TLeafObject then there is; // nothing we would be able to do.; // Error(""DefinedVariable"",""Need a TLeafObject to call a function!"");; // return -1;; //}; // We need to recover the info not used.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:14,Modifiability,Inherit,InheritsFrom,14,"// if (!leaf->InheritsFrom(TLeafObject::Class()) ) {; // If the leaf that we found so far is not a TLeafObject then there is; // nothing we would be able to do.; // Error(""DefinedVariable"",""Need a TLeafObject to call a function!"");; // return -1;; //}; // We need to recover the info not used.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:267,Safety,recover,recover,267,"// if (!leaf->InheritsFrom(TLeafObject::Class()) ) {; // If the leaf that we found so far is not a TLeafObject then there is; // nothing we would be able to do.; // Error(""DefinedVariable"",""Need a TLeafObject to call a function!"");; // return -1;; //}; // We need to recover the info not used.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:32,Security,access,access,32,"// The following would allow to access the friend by name; // however, it would also prevent the access of the leaves; // within the friend. We could use the '@' notation here; // however this would not be aesthetically pleasing :(; // What we need to do, is add the ability to look ahead to; // the next 'token' to decide whether we to access the tree; // or its leaf.; //} else {; // TTree *tfriend = fTree->GetFriend(treename.c_str());; // TTree *realtree = fTree->GetTree();; // if (!tfriend && realtree != fTree){; // // If it is a chain and we did not find a friend,; // // let's try with the internal tree.; // tfriend = realtree->GetFriend(treename.c_str());; // }; // if (tfriend) {; // TNamed *named = new TNamed(treename.c_str(),tfriend->GetName());; // fLeafNames.AddAtAndExpand(named,fNcodes);; // fLeaves.AddAtAndExpand(tfriend,fNcodes);; // if (cname[i]) leftover = &(cname[i+1]);; // return 2;; // }; //}",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:97,Security,access,access,97,"// The following would allow to access the friend by name; // however, it would also prevent the access of the leaves; // within the friend. We could use the '@' notation here; // however this would not be aesthetically pleasing :(; // What we need to do, is add the ability to look ahead to; // the next 'token' to decide whether we to access the tree; // or its leaf.; //} else {; // TTree *tfriend = fTree->GetFriend(treename.c_str());; // TTree *realtree = fTree->GetTree();; // if (!tfriend && realtree != fTree){; // // If it is a chain and we did not find a friend,; // // let's try with the internal tree.; // tfriend = realtree->GetFriend(treename.c_str());; // }; // if (tfriend) {; // TNamed *named = new TNamed(treename.c_str(),tfriend->GetName());; // fLeafNames.AddAtAndExpand(named,fNcodes);; // fLeaves.AddAtAndExpand(tfriend,fNcodes);; // if (cname[i]) leftover = &(cname[i+1]);; // return 2;; // }; //}",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:337,Security,access,access,337,"// The following would allow to access the friend by name; // however, it would also prevent the access of the leaves; // within the friend. We could use the '@' notation here; // however this would not be aesthetically pleasing :(; // What we need to do, is add the ability to look ahead to; // the next 'token' to decide whether we to access the tree; // or its leaf.; //} else {; // TTree *tfriend = fTree->GetFriend(treename.c_str());; // TTree *realtree = fTree->GetTree();; // if (!tfriend && realtree != fTree){; // // If it is a chain and we did not find a friend,; // // let's try with the internal tree.; // tfriend = realtree->GetFriend(treename.c_str());; // }; // if (tfriend) {; // TNamed *named = new TNamed(treename.c_str(),tfriend->GetName());; // fLeafNames.AddAtAndExpand(named,fNcodes);; // fLeaves.AddAtAndExpand(tfriend,fNcodes);; // if (cname[i]) leftover = &(cname[i+1]);; // return 2;; // }; //}",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:101,Availability,down,down,101,"// If we have a branch that match a name preceded by a dot; // then we assume we are trying to drill down the branch; // Let look if one of the top level branch has a branch with the name; // we are looking for.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:185,Safety,safe,safe,185,"// In some cases we remove a little to fast the period, we add; // it back if we need. It is assumed that 'right' and the rest of; // the name was cut by a delimiter, so this should be safe.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:357,Modifiability,variab,variable,357,"////////////////////////////////////////////////////////////////////////////////; /// Check if name is in the list of Tree/Branch leaves.; ///; /// This member function redefines the function in ROOT::v5::TFormula; /// If a leaf has a name corresponding to the argument name, then; /// returns a new code.; ///; /// A TTreeFormula may contain more than one variable.; /// For each variable referenced, the pointers to the corresponding; /// branch and leaf is stored in the object arrays fBranches and fLeaves.; ///; /// name can be :; /// - Leaf_Name (simple variable or data member of a ClonesArray); /// - Branch_Name.Leaf_Name; /// - Branch_Name.Method_Name; /// - Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index1]; /// - Branch_Name.Leaf_Name[][index2]; /// - Branch_Name.Leaf_Name[index1][index2]; ///; /// New additions:; /// - Branch_Name.Leaf_Name[OtherLeaf_Name]; /// - Branch_Name.Datamember_Name; /// - '.' can be replaced by '->'; ///; /// and; /// - Branch_Name[index1].Leaf_Name[index2]; /// - Leaf_name[index].Action().OtherAction(param); /// - Leaf_name[index].Action()[val].OtherAction(param); ///; /// The expected returned values are; /// - -2 : the name has been recognized but won't be usable; /// - -1 : the name has not been recognized, or is too long, or tree does not exist.; /// - >=0 : the name has been recognized, return the internal code for this name.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:381,Modifiability,variab,variable,381,"////////////////////////////////////////////////////////////////////////////////; /// Check if name is in the list of Tree/Branch leaves.; ///; /// This member function redefines the function in ROOT::v5::TFormula; /// If a leaf has a name corresponding to the argument name, then; /// returns a new code.; ///; /// A TTreeFormula may contain more than one variable.; /// For each variable referenced, the pointers to the corresponding; /// branch and leaf is stored in the object arrays fBranches and fLeaves.; ///; /// name can be :; /// - Leaf_Name (simple variable or data member of a ClonesArray); /// - Branch_Name.Leaf_Name; /// - Branch_Name.Method_Name; /// - Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index1]; /// - Branch_Name.Leaf_Name[][index2]; /// - Branch_Name.Leaf_Name[index1][index2]; ///; /// New additions:; /// - Branch_Name.Leaf_Name[OtherLeaf_Name]; /// - Branch_Name.Datamember_Name; /// - '.' can be replaced by '->'; ///; /// and; /// - Branch_Name[index1].Leaf_Name[index2]; /// - Leaf_name[index].Action().OtherAction(param); /// - Leaf_name[index].Action()[val].OtherAction(param); ///; /// The expected returned values are; /// - -2 : the name has been recognized but won't be usable; /// - -1 : the name has not been recognized, or is too long, or tree does not exist.; /// - >=0 : the name has been recognized, return the internal code for this name.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:560,Modifiability,variab,variable,560,"////////////////////////////////////////////////////////////////////////////////; /// Check if name is in the list of Tree/Branch leaves.; ///; /// This member function redefines the function in ROOT::v5::TFormula; /// If a leaf has a name corresponding to the argument name, then; /// returns a new code.; ///; /// A TTreeFormula may contain more than one variable.; /// For each variable referenced, the pointers to the corresponding; /// branch and leaf is stored in the object arrays fBranches and fLeaves.; ///; /// name can be :; /// - Leaf_Name (simple variable or data member of a ClonesArray); /// - Branch_Name.Leaf_Name; /// - Branch_Name.Method_Name; /// - Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index1]; /// - Branch_Name.Leaf_Name[][index2]; /// - Branch_Name.Leaf_Name[index1][index2]; ///; /// New additions:; /// - Branch_Name.Leaf_Name[OtherLeaf_Name]; /// - Branch_Name.Datamember_Name; /// - '.' can be replaced by '->'; ///; /// and; /// - Branch_Name[index1].Leaf_Name[index2]; /// - Leaf_name[index].Action().OtherAction(param); /// - Leaf_name[index].Action()[val].OtherAction(param); ///; /// The expected returned values are; /// - -2 : the name has been recognized but won't be usable; /// - -1 : the name has not been recognized, or is too long, or tree does not exist.; /// - >=0 : the name has been recognized, return the internal code for this name.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:553,Usability,simpl,simple,553,"////////////////////////////////////////////////////////////////////////////////; /// Check if name is in the list of Tree/Branch leaves.; ///; /// This member function redefines the function in ROOT::v5::TFormula; /// If a leaf has a name corresponding to the argument name, then; /// returns a new code.; ///; /// A TTreeFormula may contain more than one variable.; /// For each variable referenced, the pointers to the corresponding; /// branch and leaf is stored in the object arrays fBranches and fLeaves.; ///; /// name can be :; /// - Leaf_Name (simple variable or data member of a ClonesArray); /// - Branch_Name.Leaf_Name; /// - Branch_Name.Method_Name; /// - Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index1]; /// - Branch_Name.Leaf_Name[][index2]; /// - Branch_Name.Leaf_Name[index1][index2]; ///; /// New additions:; /// - Branch_Name.Leaf_Name[OtherLeaf_Name]; /// - Branch_Name.Datamember_Name; /// - '.' can be replaced by '->'; ///; /// and; /// - Branch_Name[index1].Leaf_Name[index2]; /// - Leaf_name[index].Action().OtherAction(param); /// - Leaf_name[index].Action()[val].OtherAction(param); ///; /// The expected returned values are; /// - -2 : the name has been recognized but won't be usable; /// - -1 : the name has not been recognized, or is too long, or tree does not exist.; /// - >=0 : the name has been recognized, return the internal code for this name.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:1248,Usability,usab,usable,1248,"////////////////////////////////////////////////////////////////////////////////; /// Check if name is in the list of Tree/Branch leaves.; ///; /// This member function redefines the function in ROOT::v5::TFormula; /// If a leaf has a name corresponding to the argument name, then; /// returns a new code.; ///; /// A TTreeFormula may contain more than one variable.; /// For each variable referenced, the pointers to the corresponding; /// branch and leaf is stored in the object arrays fBranches and fLeaves.; ///; /// name can be :; /// - Leaf_Name (simple variable or data member of a ClonesArray); /// - Branch_Name.Leaf_Name; /// - Branch_Name.Method_Name; /// - Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index]; /// - Branch_Name.Leaf_Name[index1]; /// - Branch_Name.Leaf_Name[][index2]; /// - Branch_Name.Leaf_Name[index1][index2]; ///; /// New additions:; /// - Branch_Name.Leaf_Name[OtherLeaf_Name]; /// - Branch_Name.Datamember_Name; /// - '.' can be replaced by '->'; ///; /// and; /// - Branch_Name[index1].Leaf_Name[index2]; /// - Leaf_name[index].Action().OtherAction(param); /// - Leaf_name[index].Action()[val].OtherAction(param); ///; /// The expected returned values are; /// - -2 : the name has been recognized but won't be usable; /// - -1 : the name has not been recognized, or is too long, or tree does not exist.; /// - >=0 : the name has been recognized, return the internal code for this name.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:29,Availability,error,error,29,"// There was either a syntax error or we found $Alt",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:2,Availability,Error,Error,2,"//Error(""DefinedVariable"",""Bracket unbalanced"");",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:133,Availability,failure,failure,133,"// We failed but DefinedVariable has not printed why yet.; // and because we want those to be printed _before_ the notice; // of the failure of the substitution, we need to print them here.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:29,Modifiability,variab,variable,29,"// Index is calculated via a variable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:9,Testability,test,test,9,"// NOTE: test that dim this is NOT too big!!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:60,Modifiability,variab,variable,60,"// Case of an object data member. Here we allow for the; // variable name to be omitted. Eg, for Event.root with split; // level 1 or above Draw(""GetXaxis"") is the same as Draw(""fH.GetXaxis()"")",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:40,Performance,load,load,40,"// In case of a TClonesArray we need to load the data and read the; // clonesArray object before being able to look into the class inside.; // We need to do that because we are never interested in the TClonesArray; // itself but only in the object inside.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:221,Availability,avail,available,221,"// If TClonesArray object does not exist we have no information, so let go; // on. This is a weakish test since the TClonesArray object might exist in; // the next entry ... In other word, we ONLY rely on the information available; // in entry #0.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:101,Testability,test,test,101,"// If TClonesArray object does not exist we have no information, so let go; // on. This is a weakish test since the TClonesArray object might exist in; // the next entry ... In other word, we ONLY rely on the information available; // in entry #0.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:238,Availability,error,error,238,"// Since the user does not want this branch to be loaded anyway, we just; // skip it. This prevents us from warning the user that the method might; // be on a disabled branch. However, and more usefully, this allows the; // user to avoid error messages from branches that cannot be currently; // read without warnings/errors.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:318,Availability,error,errors,318,"// Since the user does not want this branch to be loaded anyway, we just; // skip it. This prevents us from warning the user that the method might; // be on a disabled branch. However, and more usefully, this allows the; // user to avoid error messages from branches that cannot be currently; // read without warnings/errors.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:244,Integrability,message,messages,244,"// Since the user does not want this branch to be loaded anyway, we just; // skip it. This prevents us from warning the user that the method might; // be on a disabled branch. However, and more usefully, this allows the; // user to avoid error messages from branches that cannot be currently; // read without warnings/errors.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:50,Performance,load,loaded,50,"// Since the user does not want this branch to be loaded anyway, we just; // skip it. This prevents us from warning the user that the method might; // be on a disabled branch. However, and more usefully, this allows the; // user to avoid error messages from branches that cannot be currently; // read without warnings/errors.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:232,Safety,avoid,avoid,232,"// Since the user does not want this branch to be loaded anyway, we just; // skip it. This prevents us from warning the user that the method might; // be on a disabled branch. However, and more usefully, this allows the; // user to avoid error messages from branches that cannot be currently; // read without warnings/errors.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:60,Modifiability,variab,variable,60,"// Case of an object data member. Here we allow for the; // variable name to be omitted. Eg, for Event.root with split; // level 1 or above Draw(""GetXaxis"") is the same as Draw(""fH.GetXaxis()"")",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:153,Availability,redundant,redundant,153,"////////////////////////////////////////////////////////////////////////////////; /// Now let calculate what physical instance we really need.; /// Some redundant code is used to speed up the cases where; /// they are no dimensions.; ///; /// We know that instance is less that fCumulUsedSize[0] so; /// we can skip the modulo when virt_dim is 0.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:153,Safety,redund,redundant,153,"////////////////////////////////////////////////////////////////////////////////; /// Now let calculate what physical instance we really need.; /// Some redundant code is used to speed up the cases where; /// they are no dimensions.; ///; /// We know that instance is less that fCumulUsedSize[0] so; /// we can skip the modulo when virt_dim is 0.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:13,Performance,load,loading,13,"// Force the loading of the index.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:70,Modifiability,variab,variable,70,"// NOTE: We assume that ONLY the first dimension of a leaf can have a variable; // size AND contain the index for the size of yet another sub-dimension.; // I.e. a variable size array inside a variable size array can only have its; // size vary with the VERY FIRST physical dimension of the leaf.; // Thus once the index of the first dimension is found, all other dimensions; // are fixed!; // NOTE: We could unroll some of this loops to avoid a few tests.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:164,Modifiability,variab,variable,164,"// NOTE: We assume that ONLY the first dimension of a leaf can have a variable; // size AND contain the index for the size of yet another sub-dimension.; // I.e. a variable size array inside a variable size array can only have its; // size vary with the VERY FIRST physical dimension of the leaf.; // Thus once the index of the first dimension is found, all other dimensions; // are fixed!; // NOTE: We could unroll some of this loops to avoid a few tests.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:193,Modifiability,variab,variable,193,"// NOTE: We assume that ONLY the first dimension of a leaf can have a variable; // size AND contain the index for the size of yet another sub-dimension.; // I.e. a variable size array inside a variable size array can only have its; // size vary with the VERY FIRST physical dimension of the leaf.; // Thus once the index of the first dimension is found, all other dimensions; // are fixed!; // NOTE: We could unroll some of this loops to avoid a few tests.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:438,Safety,avoid,avoid,438,"// NOTE: We assume that ONLY the first dimension of a leaf can have a variable; // size AND contain the index for the size of yet another sub-dimension.; // I.e. a variable size array inside a variable size array can only have its; // size vary with the VERY FIRST physical dimension of the leaf.; // Thus once the index of the first dimension is found, all other dimensions; // are fixed!; // NOTE: We could unroll some of this loops to avoid a few tests.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:450,Testability,test,tests,450,"// NOTE: We assume that ONLY the first dimension of a leaf can have a variable; // size AND contain the index for the size of yet another sub-dimension.; // I.e. a variable size array inside a variable size array can only have its; // size vary with the VERY FIRST physical dimension of the leaf.; // Thus once the index of the first dimension is found, all other dimensions; // are fixed!; // NOTE: We could unroll some of this loops to avoid a few tests.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:13,Performance,load,loading,13,"// Force the loading of the index.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:3,Deployability,update,update,3,"// update the cache",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:14,Performance,cache,cache,14,"// update the cache",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:25,Modifiability,variab,variable,25,"// When we have multiple variable dimensions, the LeafInfo only expect; // the instance after the primary index has been set.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:9,Deployability,update,update,9,"// Let's update fCumulSizes for the rest of the code.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:13,Performance,load,loading,13,"// Force the loading of the index.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:54,Integrability,message,message,54,"// We are out of bounds! [Multiple var dims, See same message a few line above]",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:13,Performance,load,loading,13,"// Force the loading of the index.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:172,Usability,simpl,simple,172,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the class of this treeformula.; ///; /// If the 'value' of this formula is a simple pointer to an object,; /// this function returns the TClass corresponding to its type.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:185,Usability,simpl,simple,185,"////////////////////////////////////////////////////////////////////////////////; /// Evaluate the class of the operation oper.; ///; /// If the 'value' in the requested operation is a simple pointer to an object,; /// this function returns the TClass corresponding to its type.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:98,Modifiability,variab,variable,98,/* In the cases where we are behind (i.e. right of) a potential boolean optimization \; this tree variable reading may have not been executed with instance==0 which would \; result in the branch being potentially not read in. */,MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:72,Performance,optimiz,optimization,72,/* In the cases where we are behind (i.e. right of) a potential boolean optimization \; this tree variable reading may have not been executed with instance==0 which would \; result in the branch being potentially not read in. */,MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:14,Performance,load,loading,14,"// Insure the loading of the branch.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:14,Performance,load,loading,14,"// Insure the loading of the branch.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:17,Safety,redund,redundancy,17,"// Note that the redundancy and structure in this code is tailored to improve; // efficiencies.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:91,Performance,load,loading,91,"// If we skip the left (true) side of the if statement we may,; // skip some of the branch loading (since we remove duplicate branch; // request (in TTreeFormula constructor) and so we need to force the; // loading here.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:207,Performance,load,loading,207,"// If we skip the left (true) side of the if statement we may,; // skip some of the branch loading (since we remove duplicate branch; // request (in TTreeFormula constructor) and so we need to force the; // loading here.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:21,Performance,optimiz,optimizer,21,"// boolean operation optimizer",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:37,Modifiability,variab,variable,37,"// TTreeFormula operands.; // a tree variable (the most used case).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:11,Modifiability,Variab,Variable,11,"// a TTree Variable Alias (i.e. a sub-TTreeFormula)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:11,Modifiability,Variab,Variable,11,"// a TTree Variable Alias String (i.e. a sub-TTreeFormula)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:11,Modifiability,Variab,Variable,11,"// a TTree Variable Alternate (i.e. a sub-TTreeFormula)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:99,Modifiability,variab,variable,99,"// In the cases where we are behind (i.e. right of) a potential boolean optimization; // this tree variable reading may have not been executed with instance==0 which would; // result in the branch being potentially not read in.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:72,Performance,optimiz,optimization,72,"// In the cases where we are behind (i.e. right of) a potential boolean optimization; // this tree variable reading may have not been executed with instance==0 which would; // result in the branch being potentially not read in.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:103,Availability,avail,available,103,"////////////////////////////////////////////////////////////////////////////////; /// Return number of available instances in the formula.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:42,Modifiability,variab,variable,42,"// Now we need to differentiate between a variable length array and; // a TClonesArray.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:13,Modifiability,variab,variable,13,"// this is a variable length char array",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:102,Modifiability,variab,variable,102,"////////////////////////////////////////////////////////////////////////////////; /// Return value of variable as a string; ///; /// - mode = -2 : Print line with ***; /// - mode = -1 : Print column names; /// - mode = 0 : Print column values",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:102,Modifiability,variab,variable,102,"////////////////////////////////////////////////////////////////////////////////; /// Return value of variable as a string; ///; /// - mode = -2 : Print line with ***; /// - mode = -1 : Print column names; /// - mode = 0 : Print column values; ///; /// decform contains the requested format (with the same convention as printf).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:123,Deployability,Update,UpdateFormulaLeaves,123,"////////////////////////////////////////////////////////////////////////////////; /// This function is called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.; ///; /// A safer alternative would be to recompile the whole thing .... However; /// currently compile HAS TO be called from the constructor!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:292,Deployability,update,update,292,"////////////////////////////////////////////////////////////////////////////////; /// This function is called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.; ///; /// A safer alternative would be to recompile the whole thing .... However; /// currently compile HAS TO be called from the constructor!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:174,Performance,Load,LoadTree,174,"////////////////////////////////////////////////////////////////////////////////; /// This function is called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.; ///; /// A safer alternative would be to recompile the whole thing .... However; /// currently compile HAS TO be called from the constructor!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:202,Performance,load,loaded,202,"////////////////////////////////////////////////////////////////////////////////; /// This function is called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.; ///; /// A safer alternative would be to recompile the whole thing .... However; /// currently compile HAS TO be called from the constructor!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:374,Safety,safe,safer,374,"////////////////////////////////////////////////////////////////////////////////; /// This function is called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.; ///; /// A safer alternative would be to recompile the whole thing .... However; /// currently compile HAS TO be called from the constructor!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:265,Performance,load,load,265,"// Since sometimes we might no read all the branches for all the entries, we; // might sometimes only read the branch count and thus reset the collection; // but might not read the data branches, to insure that a subsequent read; // from TTreeFormula will properly load the data branches even if fQuickLoad is true,; // we reset the entry of all branches in the TTree.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:43,Modifiability,variab,variables,43,"// Now that we saw all the expressions and variables AND that; // we know whether arrays of chars are treated as string or; // not, we can properly setup the dimensions.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:258,Modifiability,variab,variable,258,"//if (fOper[i] >= 105000 && fOper[i]<110000) {; // We have a string used as a string; // This dormant portion of code would be used if (when?) we allow the histogramming; // of the integral content (as opposed to the string content) of strings; // held in a variable size container delimited by a null (as opposed to; // a fixed size container or variable size container whose size is controlled; // by a variable). In GetNdata, we will then use strlen to grab the current length.; //fCumulSizes[i][fNdimensions[i]-1] = 1;; //fUsedSizes[fNdimensions[i]-1] = -TMath::Abs(fUsedSizes[fNdimensions[i]-1]);; //fUsedSizes[0] = - TMath::Abs( fUsedSizes[0]);; //continue;",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:347,Modifiability,variab,variable,347,"//if (fOper[i] >= 105000 && fOper[i]<110000) {; // We have a string used as a string; // This dormant portion of code would be used if (when?) we allow the histogramming; // of the integral content (as opposed to the string content) of strings; // held in a variable size container delimited by a null (as opposed to; // a fixed size container or variable size container whose size is controlled; // by a variable). In GetNdata, we will then use strlen to grab the current length.; //fCumulSizes[i][fNdimensions[i]-1] = 1;; //fUsedSizes[fNdimensions[i]-1] = -TMath::Abs(fUsedSizes[fNdimensions[i]-1]);; //fUsedSizes[0] = - TMath::Abs( fUsedSizes[0]);; //continue;",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:405,Modifiability,variab,variable,405,"//if (fOper[i] >= 105000 && fOper[i]<110000) {; // We have a string used as a string; // This dormant portion of code would be used if (when?) we allow the histogramming; // of the integral content (as opposed to the string content) of strings; // held in a variable size container delimited by a null (as opposed to; // a fixed size container or variable size container whose size is controlled; // by a variable). In GetNdata, we will then use strlen to grab the current length.; //fCumulSizes[i][fNdimensions[i]-1] = 1;; //fUsedSizes[fNdimensions[i]-1] = -TMath::Abs(fUsedSizes[fNdimensions[i]-1]);; //fUsedSizes[0] = - TMath::Abs( fUsedSizes[0]);; //continue;",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:98,Modifiability,variab,variable,98,"// Reminder of the meaning of fMultiplicity:; // -1: Only one or 0 element per entry but contains variable length; // -array! (Only used for TTreeFormulaManager); // 0: Only one element per entry, no variable length array; // 1: loop over the elements of a variable length array; // 2: loop over elements of fixed length array (nData is the same for all entry)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:200,Modifiability,variab,variable,200,"// Reminder of the meaning of fMultiplicity:; // -1: Only one or 0 element per entry but contains variable length; // -array! (Only used for TTreeFormulaManager); // 0: Only one element per entry, no variable length array; // 1: loop over the elements of a variable length array; // 2: loop over elements of fixed length array (nData is the same for all entry)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:257,Modifiability,variab,variable,257,"// Reminder of the meaning of fMultiplicity:; // -1: Only one or 0 element per entry but contains variable length; // -array! (Only used for TTreeFormulaManager); // 0: Only one element per entry, no variable length array; // 1: loop over the elements of a variable length array; // 2: loop over elements of fixed length array (nData is the same for all entry)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:31,Modifiability,variab,variable,31,"// We assume only one possible variable length dimension (the left most)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:33,Modifiability,variab,variable,33,"// NOTE: When support for inside variable dimension is added this; // will become inaccurate (since one of the value in the middle of the chain; // is unknown until GetNdata is called.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:35,Modifiability,variab,variable,35,"// NOTE: We assume that the inside variable dimensions are dictated by the; // first index.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:128,Performance,load,loaded,128,"////////////////////////////////////////////////////////////////////////////////; /// Make sure that all the branches have been loaded properly.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:86,Modifiability,variab,variable,86,"// NOTE: Currently only the leafcount can indicate a dimension that; // is physically variable. So only the left-most dimension is variable.; // When an API is introduced to be able to determine a variable inside dimensions; // one would need to add a way to recalculate the values of fCumulSizes for this; // leaf. This would probably require the addition of a new data member; // fSizes[kMAXCODES][kMAXFORMDIM];; // Also note that EvalInstance expect all the values (but the very first one); // of fCumulSizes to be positive. So indicating that a physical dimension is; // variable (expected for the first one) can NOT be done via negative values of; // fCumulSizes.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:131,Modifiability,variab,variable,131,"// NOTE: Currently only the leafcount can indicate a dimension that; // is physically variable. So only the left-most dimension is variable.; // When an API is introduced to be able to determine a variable inside dimensions; // one would need to add a way to recalculate the values of fCumulSizes for this; // leaf. This would probably require the addition of a new data member; // fSizes[kMAXCODES][kMAXFORMDIM];; // Also note that EvalInstance expect all the values (but the very first one); // of fCumulSizes to be positive. So indicating that a physical dimension is; // variable (expected for the first one) can NOT be done via negative values of; // fCumulSizes.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:197,Modifiability,variab,variable,197,"// NOTE: Currently only the leafcount can indicate a dimension that; // is physically variable. So only the left-most dimension is variable.; // When an API is introduced to be able to determine a variable inside dimensions; // one would need to add a way to recalculate the values of fCumulSizes for this; // leaf. This would probably require the addition of a new data member; // fSizes[kMAXCODES][kMAXFORMDIM];; // Also note that EvalInstance expect all the values (but the very first one); // of fCumulSizes to be positive. So indicating that a physical dimension is; // variable (expected for the first one) can NOT be done via negative values of; // fCumulSizes.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:575,Modifiability,variab,variable,575,"// NOTE: Currently only the leafcount can indicate a dimension that; // is physically variable. So only the left-most dimension is variable.; // When an API is introduced to be able to determine a variable inside dimensions; // one would need to add a way to recalculate the values of fCumulSizes for this; // leaf. This would probably require the addition of a new data member; // fSizes[kMAXCODES][kMAXFORMDIM];; // Also note that EvalInstance expect all the values (but the very first one); // of fCumulSizes to be positive. So indicating that a physical dimension is; // variable (expected for the first one) can NOT be done via negative values of; // fCumulSizes.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:136,Performance,load,load,136,"// Since we do not read the full branch let's reset the read entry number; // so that a subsequent read from TTreeFormula will properly load the full; // object even if fQuickLoad is true.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:147,Security,access,accessing,147,"// Humm there is no space reserve to write the data,; // the data member is likely 'removed' from the class; // layout, so rather than crashing by accessing; // random memory, make it clear we can't read it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:184,Usability,clear,clear,184,"// Humm there is no space reserve to write the data,; // the data member is likely 'removed' from the class; // layout, so rather than crashing by accessing; // random memory, make it clear we can't read it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:72,Modifiability,variab,variable,72,"// Here we need to add the code to take in consideration the; // double variable length; // We fill up the array of sizes in the TLeafInfo:",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:61,Modifiability,variab,variable,61,"// Refresh the fCumulSizes[i] to have '1' for the; // double variable dimensions",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:3,Deployability,Update,Update,3,"// Update fCumulUsedSizes; // UpdateMultiVarSizes(vdim,info,i); //Int_t fixed = fCumulSizes[i][vdim+1];; //for(Int_t k=vdim - 1; k>=0; k++) {; // Int_t fixed *= fFixedSizes[i][k];; // for(Int_t l=0;l<size; l++) {; // fCumulSizes[i][k] += info->GetSize(l) * fixed;; //}",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:30,Deployability,Update,UpdateMultiVarSizes,30,"// Update fCumulUsedSizes; // UpdateMultiVarSizes(vdim,info,i); //Int_t fixed = fCumulSizes[i][vdim+1];; //for(Int_t k=vdim - 1; k>=0; k++) {; // Int_t fixed *= fFixedSizes[i][k];; // for(Int_t l=0;l<size; l++) {; // fCumulSizes[i][k] += info->GetSize(l) * fixed;; //}",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:69,Modifiability,variab,variable,69,"// Case where the index is not specified AND the 1st dimension has a variable; // size.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:69,Modifiability,variab,variable,69,"// Case where the index is not specified AND the 1st dimension has a variable; // size.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:72,Modifiability,variab,variable,72,"// Here we need to add the code to take in consideration the; // double variable length; // We fill up the array of sizes in the TLeafInfo:; // here we can assume that branch is a TBranch element because the other style does NOT support this type; // of complexity.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:61,Modifiability,variab,variable,61,"// Refresh the fCumulSizes[i] to have '1' for the; // double variable dimensions",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:91,Modifiability,variab,variables,91,"// However we allow several dimensions that virtually vary via the size of their; // index variables. So we have code to recalculate fCumulUsedSizes.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:50,Modifiability,variab,variable,50,"// Index and thus local size provided by a ""index variable of size 1""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:26,Modifiability,variab,variable,26,"// We could either have a variable size array which is currently of size one; // or a single element that might or not might not be present (and is currently present!)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx:35,Modifiability,variab,variable,35,"// NOTE: We assume the indexing of variable sizes on the first index!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormula.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormula.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:92,Modifiability,variab,variable,92,"////////////////////////////////////////////////////////////////////////////////; /// Add a variable dimension",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:138,Modifiability,variab,variable,138,"////////////////////////////////////////////////////////////////////////////////; /// Set the manager as handling a formula with multiple variable dimensions",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:103,Availability,avail,available,103,"////////////////////////////////////////////////////////////////////////////////; /// Return number of available instances in the formulas.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:68,Modifiability,variab,variable,68,"// new version of GetNData:; // Possible problem: we only allow one variable dimension so far.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:59,Modifiability,variab,variable,59,"// CumulUsedSizes[0];; // We have at least one leaf with a variable size:; // Reset the registers.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:86,Integrability,Synchroniz,Synchronize,86,"////////////////////////////////////////////////////////////////////////////////; /// Synchronize all the formulae.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:33,Modifiability,variab,variable,33,"// We do not use an intermediary variable because ResetDimensions; // might add more formulas (TCutG).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:76,Modifiability,variab,variable,76,"// Case of a fixed length array that have one of its indices given; // by a variable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:129,Deployability,Update,UpdateFormulaLeaves,129,"////////////////////////////////////////////////////////////////////////////////; /// This function could be called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:298,Deployability,update,update,298,"////////////////////////////////////////////////////////////////////////////////; /// This function could be called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:180,Performance,Load,LoadTree,180,"////////////////////////////////////////////////////////////////////////////////; /// This function could be called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:208,Performance,load,loaded,208,"////////////////////////////////////////////////////////////////////////////////; /// This function could be called TTreePlayer::UpdateFormulaLeaves, itself; /// called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:5,Safety,safe,safer,5,"// A safer alternative would be to recompile the whole thing .... However; // currently compile HAS TO be called from the constructor!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx:149,Modifiability,variab,variable,149,"// Absolute values represent the min of all real dimensions; // that are known. The fact that it is negatif indicates; // that one of the leaf has a variable size for this; // dimensions.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeFormulaManager.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeFormulaManager.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeGeneratorBase.cxx:118,Testability,test,test,118,"// 4 elements expected: ""pair"", ""first type name"", ""second type name"", ""trailing stars""; // However legacy code had a test for 3, we will leave it here until; // a test is developed (or found :) ) that exercise these lines of code.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeGeneratorBase.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeGeneratorBase.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeGeneratorBase.cxx:164,Testability,test,test,164,"// 4 elements expected: ""pair"", ""first type name"", ""second type name"", ""trailing stars""; // However legacy code had a test for 3, we will leave it here until; // a test is developed (or found :) ) that exercise these lines of code.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeGeneratorBase.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeGeneratorBase.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:2635,Availability,failure,failure,2635,"GetEntryWithIndex(majornumber, minornumber); /// ~~~; /// Example:; /// ~~~{.cpp}; /// tree.BuildIndex(""Run"",""Event""); //creates an index using leaves Run and Event; /// tree.GetEntryWithIndex(1234,56789); // reads entry corresponding to; /// // Run=1234 and Event=56789; /// ~~~; /// Note that majorname and minorname may be expressions using original; /// Tree variables eg: ""run-90000"", ""event +3*xx"". However the result; /// must be integer.; ///; /// In case an expression is specified, the equivalent expression must be computed; /// when calling GetEntryWithIndex.; ///; /// To build an index with only majorname, specify minorname=""0"" (default); ///; /// ## TreeIndex and Friend Trees; ///; /// Assuming a parent Tree T and a friend Tree TF, the following cases are supported:; /// - CASE 1: T->GetEntry(entry) is called; /// In this case, the serial number entry is used to retrieve; /// the data in both Trees.; /// - CASE 2: T->GetEntry(entry) is called, TF has a TreeIndex; /// the expressions given in major/minorname of TF are used; /// to compute the value pair major,minor with the data in T.; /// TF->GetEntryWithIndex(major,minor) is then called (tricky case!); /// - CASE 3: T->GetEntryWithIndex(major,minor) is called.; /// It is assumed that both T and TF have a TreeIndex built using; /// the same major and minor name.; ///; /// ## Saving the TreeIndex; ///; /// Once the index is built, it can be saved with the TTree object; /// with tree.Write(); (if the file has been open in ""update"" mode).; ///; /// The most convenient place to create the index is at the end of; /// the filling process just before saving the Tree header.; /// If a previous index was computed, it is redefined by this new call.; ///; /// Note that this function can also be applied to a TChain.; ///; /// The return value is the number of entries in the Index (< 0 indicates failure); ///; /// It is possible to play with different TreeIndex in the same Tree.; /// see comments in TTree::SetTreeIndex.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:2266,Deployability,update,update,2266,"GetEntryWithIndex(majornumber, minornumber); /// ~~~; /// Example:; /// ~~~{.cpp}; /// tree.BuildIndex(""Run"",""Event""); //creates an index using leaves Run and Event; /// tree.GetEntryWithIndex(1234,56789); // reads entry corresponding to; /// // Run=1234 and Event=56789; /// ~~~; /// Note that majorname and minorname may be expressions using original; /// Tree variables eg: ""run-90000"", ""event +3*xx"". However the result; /// must be integer.; ///; /// In case an expression is specified, the equivalent expression must be computed; /// when calling GetEntryWithIndex.; ///; /// To build an index with only majorname, specify minorname=""0"" (default); ///; /// ## TreeIndex and Friend Trees; ///; /// Assuming a parent Tree T and a friend Tree TF, the following cases are supported:; /// - CASE 1: T->GetEntry(entry) is called; /// In this case, the serial number entry is used to retrieve; /// the data in both Trees.; /// - CASE 2: T->GetEntry(entry) is called, TF has a TreeIndex; /// the expressions given in major/minorname of TF are used; /// to compute the value pair major,minor with the data in T.; /// TF->GetEntryWithIndex(major,minor) is then called (tricky case!); /// - CASE 3: T->GetEntryWithIndex(major,minor) is called.; /// It is assumed that both T and TF have a TreeIndex built using; /// the same major and minor name.; ///; /// ## Saving the TreeIndex; ///; /// Once the index is built, it can be saved with the TTree object; /// with tree.Write(); (if the file has been open in ""update"" mode).; ///; /// The most convenient place to create the index is at the end of; /// the filling process just before saving the Tree header.; /// If a previous index was computed, it is redefined by this new call.; ///; /// Note that this function can also be applied to a TChain.; ///; /// The return value is the number of entries in the Index (< 0 indicates failure); ///; /// It is possible to play with different TreeIndex in the same Tree.; /// see comments in TTree::SetTreeIndex.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:1125,Modifiability,variab,variables,1125,"/////////////////////////////; /// Normal constructor for TTreeIndex; ///; /// Build an index table using the leaves of Tree T with major & minor names; /// The index is built with the expressions given in ""majorname"" and ""minorname"".; ///; /// a Long64_t array fIndexValues is built with:; ///; /// - major = the value of majorname converted to an integer; /// - minor = the value of minorname converted to an integer; /// - fIndexValues[i] = major<<31 + minor; ///; /// This array is sorted. The sorted fIndex[i] contains the serial number; /// in the Tree corresponding to the pair ""major,minor"" in fIndexvalues[i].; ///; /// Once the index is computed, one can retrieve one entry via; /// ~~~{.cpp}; /// T->GetEntryWithIndex(majornumber, minornumber); /// ~~~; /// Example:; /// ~~~{.cpp}; /// tree.BuildIndex(""Run"",""Event""); //creates an index using leaves Run and Event; /// tree.GetEntryWithIndex(1234,56789); // reads entry corresponding to; /// // Run=1234 and Event=56789; /// ~~~; /// Note that majorname and minorname may be expressions using original; /// Tree variables eg: ""run-90000"", ""event +3*xx"". However the result; /// must be integer.; ///; /// In case an expression is specified, the equivalent expression must be computed; /// when calling GetEntryWithIndex.; ///; /// To build an index with only majorname, specify minorname=""0"" (default); ///; /// ## TreeIndex and Friend Trees; ///; /// Assuming a parent Tree T and a friend Tree TF, the following cases are supported:; /// - CASE 1: T->GetEntry(entry) is called; /// In this case, the serial number entry is used to retrieve; /// the data in both Trees.; /// - CASE 2: T->GetEntry(entry) is called, TF has a TreeIndex; /// the expressions given in major/minorname of TF are used; /// to compute the value pair major,minor with the data in T.; /// TF->GetEntryWithIndex(major,minor) is then called (tricky case!); /// - CASE 3: T->GetEntryWithIndex(major,minor) is called.; /// It is assumed that both T and TF have a TreeIn",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:156,Availability,Error,Error,156,"// accessing array elements should be OK; //if ((fMajorFormula->GetMultiplicity() != 0) || (fMinorFormula->GetMultiplicity() != 0)) {; // MakeZombie();; // Error(""TreeIndex"",""Cannot build the index with major=%s, minor=%s that cannot be arrays"",fMajorName.Data(), fMinorName.Data());; // return;; //}",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:3,Security,access,accessing,3,"// accessing array elements should be OK; //if ((fMajorFormula->GetMultiplicity() != 0) || (fMinorFormula->GetMultiplicity() != 0)) {; // MakeZombie();; // Error(""TreeIndex"",""Cannot build the index with major=%s, minor=%s that cannot be arrays"",fMajorName.Data(), fMinorName.Data());; // return;; //}",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:71,Availability,avail,available,71,"// The Tree Index in the friend has a pair majorname,minorname; // not available in the parent Tree T.; // if the friend Tree has less entries than the parent, this is an error",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:171,Availability,error,error,171,"// The Tree Index in the friend has a pair majorname,minorname; // not available in the parent Tree T.; // if the friend Tree has less entries than the parent, this is an error",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:449,Performance,perform,performs,449,"////////////////////////////////////////////////////////////////////////////////; /// Return entry number corresponding to major and minor number.; /// Note that this function returns only the entry number, not the data; /// To read the data corresponding to an entry number, use TTree::GetEntryWithIndex; /// the BuildIndex function has created a table of Double_t* of sorted values; /// corresponding to val = major<<31 + minor;; /// The function performs binary search in this sorted table.; /// If it finds a pair that maches val, it returns directly the; /// index in the table.; /// If an entry corresponding to major and minor is not found, the function; /// returns the index of the major,minor pair immediately lower than the; /// requested value, ie it will return -1 if the pair is lower than; /// the first entry in the index.; ///; /// See also GetEntryNumberWithIndex",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:449,Performance,perform,performs,449,"////////////////////////////////////////////////////////////////////////////////; /// Return entry number corresponding to major and minor number.; /// Note that this function returns only the entry number, not the data; /// To read the data corresponding to an entry number, use TTree::GetEntryWithIndex; /// the BuildIndex function has created a table of Double_t* of sorted values; /// corresponding to val = major<<31 + minor;; /// The function performs binary search in this sorted table.; /// If it finds a pair that maches val, it returns directly the; /// index in the table, otherwise it returns -1.; ///; /// See also GetEntryNumberWithBestIndex",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:104,Performance,Load,LoadTree,104,"////////////////////////////////////////////////////////////////////////////////; /// Called by TChain::LoadTree when the parent chain changes it's tree.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:147,Deployability,Update,UpdateFormulaLeaves,147,"////////////////////////////////////////////////////////////////////////////////; /// this function is called by TChain::LoadTree and TTreePlayer::UpdateFormulaLeaves; /// when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreeIndex.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:281,Deployability,update,update,281,"////////////////////////////////////////////////////////////////////////////////; /// this function is called by TChain::LoadTree and TTreePlayer::UpdateFormulaLeaves; /// when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreeIndex.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:121,Performance,Load,LoadTree,121,"////////////////////////////////////////////////////////////////////////////////; /// this function is called by TChain::LoadTree and TTreePlayer::UpdateFormulaLeaves; /// when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreeIndex.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:191,Performance,load,loaded,191,"////////////////////////////////////////////////////////////////////////////////; /// this function is called by TChain::LoadTree and TTreePlayer::UpdateFormulaLeaves; /// when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreeIndex.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx:206,Energy Efficiency,allocate,allocated,206,"////////////////////////////////////////////////////////////////////////////////; /// \brief Create a deep copy of the TTreeIndex; /// \param[in] newname A new name for the index; ///; /// The new index is allocated on the heap without being managed. Also, it is; /// not attached to any tree. It is the responsibility of the caller to manage; /// its lifetime and attach it to a tree if necessary.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeIndex.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeIndex.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePerfStats.cxx:455,Performance,perform,performance,455,"// @(#)root/treeplayer:$Id$; // Author: Rene Brun 29/10/09; /*************************************************************************; * Copyright (C) 1995-2009, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreePerfStats. TTree I/O performance measurement. see example of use below. The function FileReadEvent is called from TFile::ReadBuffer.; For each call the following information is stored in fGraphIO; - x[i] = Tree entry number; - y[i] = 1e-6*(file position); - ey[i] = 1e-9*number of bytes read; For each call the following information is stored in fGraphTime; - x[i] = Tree entry number; - y[i] = Time now; - ey[i] = readtime, eg timenow - start; The TTreePerfStats object can be saved in a ROOT file in such a way that; its inspection can be done outside the job that generated it. Example of use:; ~~~{.cpp}; {; TFile *f = TFile::Open(""RelValMinBias-GEN-SIM-RECO.root"");; T = (TTree*)f->Get(""Events"");; Long64_t nentries = T->GetEntries();; T->SetCacheSize(10000000);; T->SetCacheEntryRange(0,nentries);; T->AddBranchToCache(""*"");; //; TTreePerfStats *ps= new TTreePerfStats(""ioperf"",T);; //; for (Int_t i=0;i<nentries;i++) {; T->GetEntry(i);; }; ps->SaveAs(""cmsperf.root"");; }; ~~~; then, in a root interactive session, one can do:; ~~~{.cpp}; root > TFile f(""cmsperf.root"");; root > ioperf->Draw();; root > ioperf->Print();; ~~~; The Draw or Print functions print the following information:; - TreeCache = TTree cache size in MBytes; - N leaves = Number of leaves in the TTree; - ReadTotal = Total number of zipped bytes read; - ReadUnZip = Total number of unzipped bytes read; - ReadCalls = Total number of disk reads; - ReadSize = Average read size in KBytes; - Readahead = Readahead size in KBytes; - Readextra = Readahead overhead in percent; - Real Time = Real",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePerfStats.cxx:1648,Performance,cache,cache,1648,"aphTime; - x[i] = Tree entry number; - y[i] = Time now; - ey[i] = readtime, eg timenow - start; The TTreePerfStats object can be saved in a ROOT file in such a way that; its inspection can be done outside the job that generated it. Example of use:; ~~~{.cpp}; {; TFile *f = TFile::Open(""RelValMinBias-GEN-SIM-RECO.root"");; T = (TTree*)f->Get(""Events"");; Long64_t nentries = T->GetEntries();; T->SetCacheSize(10000000);; T->SetCacheEntryRange(0,nentries);; T->AddBranchToCache(""*"");; //; TTreePerfStats *ps= new TTreePerfStats(""ioperf"",T);; //; for (Int_t i=0;i<nentries;i++) {; T->GetEntry(i);; }; ps->SaveAs(""cmsperf.root"");; }; ~~~; then, in a root interactive session, one can do:; ~~~{.cpp}; root > TFile f(""cmsperf.root"");; root > ioperf->Draw();; root > ioperf->Print();; ~~~; The Draw or Print functions print the following information:; - TreeCache = TTree cache size in MBytes; - N leaves = Number of leaves in the TTree; - ReadTotal = Total number of zipped bytes read; - ReadUnZip = Total number of unzipped bytes read; - ReadCalls = Total number of disk reads; - ReadSize = Average read size in KBytes; - Readahead = Readahead size in KBytes; - Readextra = Readahead overhead in percent; - Real Time = Real Time in seconds; - CPU Time = CPU Time in seconds; - Disk Time = Real Time spent in pure raw disk IO; - Disk IO = Raw disk IO speed in MBytes/second; - ReadUZRT = Unzipped MBytes per RT second; - ReadUZCP = Unipped MBytes per CP second; - ReadRT = Zipped MBytes per RT second; - ReadCP = Zipped MBytes per CP second. ### NOTE 1 :; The ReadTotal value indicates the effective number of zipped bytes; returned to the application. The physical number of bytes read; from the device (as measured for example with strace) is; ReadTotal +ReadTotal*Readextra/100. Same for ReadSize. ### NOTE 2 :; A consequence of NOTE1, the Disk I/O speed corresponds to the effective; number of bytes returned to the application per second.; The Physical disk speed is DiskIO + DiskIO*ReadExtra/100.; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePerfStats.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the fBranchIndexCache collection to match the current TTree given; /// the ordered list of branch names.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePerfStats.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePerfStats.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:803,Security,access,access,803,"// @(#)root/treeplayer:$Id$; // Author: Rene Brun 12/01/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; * \defgroup treeplayer TreePlayer Library; * \brief It contains utilities to plot data stored in a TTree.; * \sa Tree package documentation; * \sa Chapter about Trees and Selectors in the Users Guide; * \sa ROOT examples in tutorials and test directories: Event application, benchmarks; */; /** \class TTreePlayer. Implement some of the functionality of the class TTree requiring access to; extra libraries (Histogram, display, etc).; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:661,Testability,test,test,661,"// @(#)root/treeplayer:$Id$; // Author: Rene Brun 12/01/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; * \defgroup treeplayer TreePlayer Library; * \brief It contains utilities to plot data stored in a TTree.; * \sa Tree package documentation; * \sa Chapter about Trees and Selectors in the Users Guide; * \sa ROOT examples in tutorials and test directories: Event application, benchmarks; */; /** \class TTreePlayer. Implement some of the functionality of the class TTree requiring access to; extra libraries (Histogram, display, etc).; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:698,Testability,benchmark,benchmarks,698,"// @(#)root/treeplayer:$Id$; // Author: Rene Brun 12/01/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; * \defgroup treeplayer TreePlayer Library; * \brief It contains utilities to plot data stored in a TTree.; * \sa Tree package documentation; * \sa Chapter about Trees and Selectors in the Users Guide; * \sa ROOT examples in tutorials and test directories: Event application, benchmarks; */; /** \class TTreePlayer. Implement some of the functionality of the class TTree requiring access to; extra libraries (Histogram, display, etc).; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:617,Usability,Guid,Guide,617,"// @(#)root/treeplayer:$Id$; // Author: Rene Brun 12/01/96; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /**; * \defgroup treeplayer TreePlayer Library; * \brief It contains utilities to plot data stored in a TTree.; * \sa Tree package documentation; * \sa Chapter about Trees and Selectors in the Users Guide; * \sa ROOT examples in tutorials and test directories: Event application, benchmarks; */; /** \class TTreePlayer. Implement some of the functionality of the class TTree requiring access to; extra libraries (Histogram, display, etc).; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1036,Performance,Load,Load,1036,"////////////////////////////////////////////////////////////////////////////////; /// Copy a Tree with selection, make a clone of this Tree header, then copy the; /// selected entries.; ///; /// - selection is a standard selection expression (see TTreePlayer::Draw); /// - option is reserved for possible future use; /// - nentries is the number of entries to process (default is all); /// - first is the first entry to process (default is 0); ///; /// IMPORTANT: The copied tree stays connected with this tree until this tree; /// is deleted. In particular, any changes in branch addresses; /// in this tree are forwarded to the clone trees. Any changes; /// made to the branch addresses of the copied trees are over-ridden; /// anytime this tree changes its branch addresses.; /// Once this tree is deleted, all the addresses of the copied tree; /// are reset to their default values.; ///; /// The following example illustrates how to copy some events from the Tree; /// generated in $ROOTSYS/test/Event; /// ~~~{.cpp}; /// gSystem->Load(""libEvent"");; /// TFile f(""Event.root"");; /// TTree *T = (TTree*)f.Get(""T"");; /// Event *event = new Event();; /// T->SetBranchAddress(""event"",&event);; /// TFile f2(""Event2.root"",""recreate"");; /// TTree *T2 = T->CopyTree(""fNtrack<595"");; /// T2->Write();; /// ~~~",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:996,Testability,test,test,996,"////////////////////////////////////////////////////////////////////////////////; /// Copy a Tree with selection, make a clone of this Tree header, then copy the; /// selected entries.; ///; /// - selection is a standard selection expression (see TTreePlayer::Draw); /// - option is reserved for possible future use; /// - nentries is the number of entries to process (default is all); /// - first is the first entry to process (default is 0); ///; /// IMPORTANT: The copied tree stays connected with this tree until this tree; /// is deleted. In particular, any changes in branch addresses; /// in this tree are forwarded to the clone trees. Any changes; /// made to the branch addresses of the copied trees are over-ridden; /// anytime this tree changes its branch addresses.; /// Once this tree is deleted, all the addresses of the copied tree; /// are reset to their default values.; ///; /// The following example illustrates how to copy some events from the Tree; /// generated in $ROOTSYS/test/Event; /// ~~~{.cpp}; /// gSystem->Load(""libEvent"");; /// TFile f(""Event.root"");; /// TTree *T = (TTree*)f.Get(""T"");; /// Event *event = new Event();; /// T->SetBranchAddress(""event"",&event);; /// TFile f2(""Event2.root"",""recreate"");; /// TTree *T2 = T->CopyTree(""fNtrack<595"");; /// T2->Write();; /// ~~~",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:100,Deployability,Update,UpdateFormulaLeaves,100,"// no need to interfere with fSelect since we; // handle the loop explicitly below and can call; // UpdateFormulaLeaves ourselves.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:470,Modifiability,variab,variables,470,"////////////////////////////////////////////////////////////////////////////////; /// Draw the result of a C++ script.; ///; /// The macrofilename and optionally cutfilename are assumed to contain; /// at least a method with the same name as the file. The method; /// should return a value that can be automatically cast to; /// respectively a double and a boolean.; ///; /// Both methods will be executed in a context such that the; /// branch names can be used as C++ variables. This is; /// accomplished by generating a TTreeProxy (see MakeProxy); /// and including the files in the proper location.; ///; /// If the branch name can not be used a proper C++ symbol name,; /// it will be modified as follow:; /// - white spaces are removed; /// - if the leading character is not a letter, an underscore is inserted; /// - < and > are replace by underscores; /// - * is replaced by st; /// - & is replaced by rf; ///; /// If a cutfilename is specified, for each entry, we execute; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// If no cutfilename is specified, for each entry we execute; /// ~~~{.cpp}; /// htemp(macrofilename());; /// ~~~; /// The default for the histogram are the same as for; /// TTreePlayer::DrawSelect",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:72,Performance,optimiz,optimization,72,"// could delete the file selname+"".h""; // However this would remove the optimization of avoiding a useless; // recompilation if the user ask for the same thing twice!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:88,Safety,avoid,avoiding,88,"// could delete the file selname+"".h""; // However this would remove the optimization of avoiding a useless; // recompilation if the user ask for the same thing twice!",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:186,Availability,error,error,186,"////////////////////////////////////////////////////////////////////////////////; /// Draw expression varexp for specified entries that matches the selection.; /// Returns -1 in case of error or number of selected events in case of success.; ///; /// See the documentation of TTree::Draw for the complete details.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:150,Availability,error,error,150,"////////////////////////////////////////////////////////////////////////////////; /// Fit a projected item(s) from a Tree.; /// Returns -1 in case of error or number of selected events in case of success.; ///; /// The formula is a TF1 expression.; ///; /// See TTree::Draw for explanations of the other parameters.; ///; /// By default the temporary histogram created is called htemp.; /// If varexp contains >>hnew , the new histogram created is called hnew; /// and it is kept in the current directory.; /// Example:; /// ~~~{.cpp}; /// tree.Fit(""pol4"",""sqrt(x)>>hsqrt"",""y>0""); /// will fit sqrt(x) and save the histogram as ""hsqrt"" in the current; /// directory.; /// ~~~; ///; /// The function returns the status of the histogram fit (see TH1::Fit); /// If no entries were selected, the function returns -1;; /// (i.e. fitResult is null if the fit is OK)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:165,Availability,error,errors,165,"////////////////////////////////////////////////////////////////////////////////; /// Return the number of entries matching the selection.; /// Return -1 in case of errors.; ///; /// If the selection uses any arrays or containers, we return the number; /// of entries where at least one element match the selection.; /// GetEntries is implemented using the selector class TSelectorEntries,; /// which can be used directly (see code in TTreePlayer::GetEntries) for; /// additional option.; /// If SetEventList was used on the TTree or TChain, only that subset; /// of entries will be considered.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:122,Performance,load,loaded,122,"// In the case of a chain, the GetDirectory information usually does; // pertain to the Chain itself but to the currently loaded tree.; // So we can not rely on it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:43,Performance,Load,LoadTree,43,"// generate code for class member function LoadTree()",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:417,Modifiability,variab,variables,417,"////////////////////////////////////////////////////////////////////////////////; /// Generate skeleton function for this Tree; ///; /// The function code is written on filename.; /// If filename is 0, filename will be called nameoftree.C; ///; /// The generated code includes the following:; /// - Identification of the original Tree and Input file name; /// - Connection of the Tree file; /// - Declaration of Tree variables; /// - Setting of branches addresses; /// - A skeleton for the entry loop; ///; /// To use this function:; /// - connect your Tree file (eg: TFile f(""myfile.root"");); /// - T->MakeCode(""anal.C"");; /// where T is the name of the Tree in file myfile.root; /// and anal.C the name of the file created by this function.; ///; /// NOTE: Since the implementation of this function, a new and better; /// function TTree::MakeClass() has been developed.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:122,Performance,load,loaded,122,"// In the case of a chain, the GetDirectory information usually does; // pertain to the Chain itself but to the currently loaded tree.; // So we can not rely on it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1905,Availability,avail,available,1905," ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source file which will be included in by the generated skeletong.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~{.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; /// - nohist : indicates that the generated ProcessFill should not; /// fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' class that are not split. 'unrolling' a class; /// will allow direct access to its data members a class (this; /// emulates the behavior of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the b",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2811,Availability,avail,available,2811,"it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// floa",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:6060,Availability,avail,available,6060,"you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file `hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; ///; /// ~~~{.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~{.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2096,Deployability,update,updated,2096,"follow:; /// ~~~{.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; /// - nohist : indicates that the generated ProcessFill should not; /// fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' class that are not split. 'unrolling' a class; /// will allow direct access to its data members a class (this; /// emulates the behavior of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2942,Energy Efficiency,efficient,efficient,2942," For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3109,Energy Efficiency,efficient,efficient,3109,"the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However ",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3891,Integrability,wrap,wrapper,3891,"ble' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic function (like printf).; /// So when using printf you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// ",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:5913,Integrability,interface,interface,5913,"you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file `hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; ///; /// ~~~{.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~{.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2830,Modifiability,variab,variables,2830,"it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// floa",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2914,Modifiability,variab,variable,2914," For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3853,Modifiability,variab,variable,3853,"ble' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic function (like printf).; /// So when using printf you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// ",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:4297,Modifiability,variab,variable,4297,"s a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic function (like printf).; /// So when using printf you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:5407,Modifiability,variab,variable,5407,"you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file `hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; ///; /// ~~~{.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~{.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1703,Performance,load,loading,1703," ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source file which will be included in by the generated skeletong.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~{.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; /// - nohist : indicates that the generated ProcessFill should not; /// fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' class that are not split. 'unrolling' a class; /// will allow direct access to its data members a class (this; /// emulates the behavior of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the b",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2961,Performance,cache,cache,2961," For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3424,Performance,load,load,3424,"e; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic function (like printf).; /// So when using printf you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the gen",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:5345,Performance,load,loaded,5345,"you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file `hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; ///; /// ~~~{.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~{.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:5513,Performance,load,loaded,5513,"you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file `hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; ///; /// ~~~{.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~{.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:236,Security,access,access,236,"////////////////////////////////////////////////////////////////////////////////; /// Generate a skeleton analysis class for this Tree using TBranchProxy.; /// TBranchProxy is the base of a class hierarchy implementing an; /// indirect access to the content of the branches of a TTree.; ///; /// ""proxyClassname"" is expected to be of the form:; /// ~~~{.cpp}; /// [path/]fileprefix; /// ~~~; /// The skeleton will then be generated in the file:; /// ~~~{.cpp}; /// fileprefix.h; /// ~~~; /// located in the current directory or in 'path/' if it is specified.; /// The class generated will be named 'fileprefix'.; /// If the fileprefix contains a period, the right side of the period; /// will be used as the extension (instead of 'h') and the left side; /// will be used as the classname.; ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source file which will be included in by the generated skeletong.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~{.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; /// - nohist : indicates that the generated ProcessFill should not; /// fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' class that are not split. 'unrolling' a class; /// will allow direct access to its data members a class (this; /// emulates the behavior of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTrac",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1545,Security,access,access,1545,"he class generated will be named 'fileprefix'.; /// If the fileprefix contains a period, the right side of the period; /// will be used as the extension (instead of 'h') and the left side; /// will be used as the classname.; ///; /// ""macrofilename"" and optionally ""cutfilename"" are expected to point; /// to source file which will be included in by the generated skeletong.; /// Method of the same name as the file(minus the extension and path); /// will be called by the generated skeleton's Process method as follow:; /// ~~~{.cpp}; /// [if (cutfilename())] htemp->Fill(macrofilename());; /// ~~~; /// ""option"" can be used select some of the optional features during; /// the code generation. The possible options are:; /// - nohist : indicates that the generated ProcessFill should not; /// fill the histogram.; ///; /// 'maxUnrolling' controls how deep in the class hierarchy does the; /// system 'unroll' class that are not split. 'unrolling' a class; /// will allow direct access to its data members a class (this; /// emulates the behavior of TTreeFormula).; ///; /// The main features of this skeleton are:; ///; /// * on-demand loading of branches; /// * ability to use the 'branchname' as if it was a data member; /// * protection against array out-of-bound; /// * ability to use the branch data as object (when the user code is available); ///; /// For example with Event.root, if; /// ~~~{.cpp}; /// Double_t somepx = fTracks.fPx[2];; /// ~~~; /// is executed by one of the method of the skeleton,; /// somepx will be updated with the current value of fPx of the 3rd track.; ///; /// Both macrofilename and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be type",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3198,Security,Access,Access,3198,"ame and the optional cutfilename are expected to be; /// the name of source files which contain at least a free standing; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic func",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3308,Security,access,access,3308,"anding; /// function with the signature:; /// ~~~{.cpp}; /// x_t macrofilename(); // i.e function with the same name as the file; /// ~~~; /// and; /// ~~~{.cpp}; /// y_t cutfilename(); // i.e function with the same name as the file; /// ~~~; /// x_t and y_t needs to be types that can convert respectively to a double; /// and a bool (because the skeleton uses:; /// ~~~{.cpp}; /// if (cutfilename()) htemp->Fill(macrofilename());; /// ~~~; /// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic function (like printf).; /// So when using printf you should either explicitly cast the value or; /// use any intermed",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3689,Security,access,access,3689,"/// This 2 functions are run in a context such that the branch names are; /// available as local variables of the correct (read-only) type.; ///; /// Note that if you use the same 'variable' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic function (like printf).; /// So when using printf you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the me",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:3879,Security,access,access,3879,"ble' twice, it is more efficient; /// to 'cache' the value. For example; /// ~~~{.cpp}; /// Int_t n = fEventNumber; // Read fEventNumber; /// if (n<10 || n>10) { ... }; /// ~~~; /// is more efficient than; /// ~~~{.cpp}; /// if (fEventNumber<10 || fEventNumber>10); /// ~~~; /// Access to TClonesArray.; ///; /// If a branch (or member) is a TClonesArray (let's say fTracks), you; /// can access the TClonesArray itself by using ->:; /// ~~~{.cpp}; /// fTracks->GetLast();; /// ~~~; /// However this will load the full TClonesArray object and its content.; /// To quickly read the size of the TClonesArray use (note the dot):; /// ~~~{.cpp}; /// fTracks.GetEntries();; /// ~~~; /// This will read only the size from disk if the TClonesArray has been; /// split.; /// To access the content of the TClonesArray, use the [] operator:; /// ~~~; /// float px = fTracks[i].fPx; // fPx of the i-th track; /// ~~~; /// Warning:; ///; /// The variable actually use for access are 'wrapper' around the; /// real data type (to add autoload for example) and hence getting to; /// the data involves the implicit call to a C++ conversion operator.; /// This conversion is automatic in most case. However it is not invoked; /// in a few cases, in particular in variadic function (like printf).; /// So when using printf you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// ",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:5388,Security,access,accessible,5388,"you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file `hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; ///; /// ~~~{.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~{.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:5604,Security,access,access,5604,"you should either explicitly cast the value or; /// use any intermediary variable:; /// ~~~{.cpp}; /// fprintf(stdout,""trs[%d].a = %d\n"",i,(int)trs.a[i]);; /// ~~~; /// Also, optionally, the generated selector will also call methods named; /// macrofilename_methodname in each of 6 main selector methods if the method; /// macrofilename_methodname exist (Where macrofilename is stripped of its; /// extension).; ///; /// Concretely, with the script named h1analysisProxy.C,; ///; /// - The method calls the method (if it exist); /// - Begin -> void h1analysisProxy_Begin(TTree*);; /// - SlaveBegin -> void h1analysisProxy_SlaveBegin(TTree*);; /// - Notify -> bool h1analysisProxy_Notify();; /// - Process -> bool h1analysisProxy_Process(Long64_t);; /// - SlaveTerminate -> void h1analysisProxy_SlaveTerminate();; /// - Terminate -> void h1analysisProxy_Terminate();; ///; /// If a file name macrofilename.h (or .hh, .hpp, .hxx, .hPP, .hXX) exist; /// it is included before the declaration of the proxy class. This can; /// be used in particular to insure that the include files needed by; /// the macro file are properly loaded.; ///; /// The default histogram is accessible via the variable named 'htemp'.; ///; /// If the library of the classes describing the data in the branch is; /// loaded, the skeleton will add the needed `include` statements and; /// give the ability to access the object stored in the branches.; ///; /// To draw px using the file `hsimple.root (generated by the; /// hsimple.C tutorial), we need a file named hsimple.cxx:; ///; /// ~~~{.cpp}; /// double hsimple() {; /// return px;; /// }; /// ~~~; /// MakeProxy can then be used indirectly via the TTree::Draw interface; /// as follow:; /// ~~~{.cpp}; /// new TFile(""hsimple.root""); /// ntuple->Draw(""hsimple.cxx"");; /// ~~~; /// A more complete example is available in the tutorials directory:; /// h1analysisProxy.cxx , h1analysProxy.h and h1analysisProxyCut.C; /// which reimplement the selector found in h1analysis.C",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:86,Integrability,Interface,Interface,86,"////////////////////////////////////////////////////////////////////////////////; /// Interface to the Principal Components Analysis class.; ///; /// Create an instance of TPrincipal; /// Fill it with the selected variables; ///; /// - if option ""n"" is specified, the TPrincipal object is filled with; /// normalized variables.; /// - If option ""p"" is specified, compute the principal components; /// - If option ""p"" and ""d"" print results of analysis; /// - If option ""p"" and ""h"" generate standard histograms; /// - If option ""p"" and ""c"" generate code of conversion functions; ///; /// return a pointer to the TPrincipal object. It is the user responsibility; /// to delete this object.; ///; /// The option default value is ""np""; ///; /// See TTreePlayer::DrawSelect for explanation of the other parameters.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:214,Modifiability,variab,variables,214,"////////////////////////////////////////////////////////////////////////////////; /// Interface to the Principal Components Analysis class.; ///; /// Create an instance of TPrincipal; /// Fill it with the selected variables; ///; /// - if option ""n"" is specified, the TPrincipal object is filled with; /// normalized variables.; /// - If option ""p"" is specified, compute the principal components; /// - If option ""p"" and ""d"" print results of analysis; /// - If option ""p"" and ""h"" generate standard histograms; /// - If option ""p"" and ""c"" generate code of conversion functions; ///; /// return a pointer to the TPrincipal object. It is the user responsibility; /// to delete this object.; ///; /// The option default value is ""np""; ///; /// See TTreePlayer::DrawSelect for explanation of the other parameters.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:317,Modifiability,variab,variables,317,"////////////////////////////////////////////////////////////////////////////////; /// Interface to the Principal Components Analysis class.; ///; /// Create an instance of TPrincipal; /// Fill it with the selected variables; ///; /// - if option ""n"" is specified, the TPrincipal object is filled with; /// normalized variables.; /// - If option ""p"" is specified, compute the principal components; /// - If option ""p"" and ""d"" print results of analysis; /// - If option ""p"" and ""h"" generate standard histograms; /// - If option ""p"" and ""c"" generate code of conversion functions; ///; /// return a pointer to the TPrincipal object. It is the user responsibility; /// to delete this object.; ///; /// The option default value is ""np""; ///; /// See TTreePlayer::DrawSelect for explanation of the other parameters.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:81,Performance,load,loaded,81,"// EvalInstance(0) always needs to be called so that; // the proper branches are loaded.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:199,Availability,error,error,199,"////////////////////////////////////////////////////////////////////////////////; /// Process this tree executing the TSelector code in the specified filename.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The code in filename is loaded (interpreted or compiled, see below),; /// filename must contain a valid class implementation derived from TSelector,; /// where TSelector has the following member functions:; ///; /// - Begin(): called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - SlaveBegin(): called after Begin(), when on PROOF called only on the; /// slave servers.; /// - Process(): called for each event, in this function you decide what; /// to read and fill your histograms.; /// - SlaveTerminate: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - Terminate(): called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ### NOTE 1; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~{.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ### NOTE 2; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; ///#### workaround 1; /",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:294,Performance,load,loaded,294,"////////////////////////////////////////////////////////////////////////////////; /// Process this tree executing the TSelector code in the specified filename.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The code in filename is loaded (interpreted or compiled, see below),; /// filename must contain a valid class implementation derived from TSelector,; /// where TSelector has the following member functions:; ///; /// - Begin(): called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - SlaveBegin(): called after Begin(), when on PROOF called only on the; /// slave servers.; /// - Process(): called for each event, in this function you decide what; /// to read and fill your histograms.; /// - SlaveTerminate: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - Terminate(): called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ### NOTE 1; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~{.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ### NOTE 2; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; ///#### workaround 1; /",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1208,Performance,load,loaded,1208,"case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The code in filename is loaded (interpreted or compiled, see below),; /// filename must contain a valid class implementation derived from TSelector,; /// where TSelector has the following member functions:; ///; /// - Begin(): called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - SlaveBegin(): called after Begin(), when on PROOF called only on the; /// slave servers.; /// - Process(): called for each event, in this function you decide what; /// to read and fill your histograms.; /// - SlaveTerminate: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - Terminate(): called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ### NOTE 1; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~{.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ### NOTE 2; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; ///#### workaround 1; /// ~~~{.cpp}; ///void stubs1() {; /// TSelector *selector = TSelector::GetSelector(""h1test.C"");; /// TFile *f1 = new TFile(""stubs_nood_le1.root"");; /// TTree *h1 = (TTree*)f1->Get(""h1"");; ///",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1316,Performance,load,loaded,1316,"d (interpreted or compiled, see below),; /// filename must contain a valid class implementation derived from TSelector,; /// where TSelector has the following member functions:; ///; /// - Begin(): called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - SlaveBegin(): called after Begin(), when on PROOF called only on the; /// slave servers.; /// - Process(): called for each event, in this function you decide what; /// to read and fill your histograms.; /// - SlaveTerminate: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - Terminate(): called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ### NOTE 1; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~{.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ### NOTE 2; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; ///#### workaround 1; /// ~~~{.cpp}; ///void stubs1() {; /// TSelector *selector = TSelector::GetSelector(""h1test.C"");; /// TFile *f1 = new TFile(""stubs_nood_le1.root"");; /// TTree *h1 = (TTree*)f1->Get(""h1"");; /// h1->Process(selector);; /// TFile *f2 = new TFile(""stubs_nood_le1_coarse.root"");; /// TTree *h2 = (TTree*)f",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1431,Performance,load,loaded,1431,"Selector has the following member functions:; ///; /// - Begin(): called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - SlaveBegin(): called after Begin(), when on PROOF called only on the; /// slave servers.; /// - Process(): called for each event, in this function you decide what; /// to read and fill your histograms.; /// - SlaveTerminate: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - Terminate(): called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If filename is of the form file.C, the file will be interpreted.; /// If filename is of the form file.C++, the file file.C will be compiled; /// and dynamically loaded.; ///; /// If filename is of the form file.C+, the file file.C will be compiled; /// and dynamically loaded. At next call, if file.C is older than file.o; /// and file.so, the file.C is not compiled, only file.so is loaded.; ///; /// ### NOTE 1; /// It may be more interesting to invoke directly the other Process function; /// accepting a TSelector* as argument.eg; /// ~~~{.cpp}; /// MySelector *selector = (MySelector*)TSelector::GetSelector(filename);; /// selector->CallSomeFunction(..);; /// mytree.Process(selector,..);; /// ~~~; /// ### NOTE 2; /// One should not call this function twice with the same selector file; /// in the same script. If this is required, proceed as indicated in NOTE1,; /// by getting a pointer to the corresponding TSelector,eg; ///#### workaround 1; /// ~~~{.cpp}; ///void stubs1() {; /// TSelector *selector = TSelector::GetSelector(""h1test.C"");; /// TFile *f1 = new TFile(""stubs_nood_le1.root"");; /// TTree *h1 = (TTree*)f1->Get(""h1"");; /// h1->Process(selector);; /// TFile *f2 = new TFile(""stubs_nood_le1_coarse.root"");; /// TTree *h2 = (TTree*)f2->Get(""h1"");; /// h2->Process(selector);; ///}; /// ~~~; /// or use ACLIC to compile the selector; ///#### workaround 2; /// ~~~{.c",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:189,Availability,error,error,189,"////////////////////////////////////////////////////////////////////////////////; /// Process this tree executing the code in the specified selector.; /// The return value is -1 in case of error and TSelector::GetStatus() in; /// in case of success.; ///; /// The TSelector class has the following member functions:; ///; /// - Begin(): called every time a loop on the tree starts,; /// a convenient place to create your histograms.; /// - SlaveBegin(): called after Begin(), when on PROOF called only on the; /// slave servers.; /// - Process(): called for each event, in this function you decide what; /// to read and fill your histograms.; /// - SlaveTerminate: called at the end of the loop on the tree, when on PROOF; /// called only on the slave servers.; /// - Terminate(): called at the end of the loop on the tree,; /// a convenient place to draw/fit your histograms.; ///; /// If the Tree (Chain) has an associated EventList, the loop is on the nentries; /// of the EventList, starting at firstentry, otherwise the loop is on the; /// specified Tree entries.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:15,Performance,cache,cache,15,"//set the file cache",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:19,Energy Efficiency,monitor,monitoring,19,"// force the first monitoring info",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:118,Performance,load,loaded,118,"//trying to set the first tree, because in the Draw function; //the tree corresponding to firstentry has already been loaded,; //so it is not set in the entry list",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:13,Safety,abort,abort,13,"// Reset the abort status.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:20,Performance,cache,cache,20,"//we must reset the cache",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:786,Integrability,Depend,Depending,786,"////////////////////////////////////////////////////////////////////////////////; /// \brief Loop on Tree and print entries passing selection. Interactive ; /// pagination break is on by default.; /// \param varexp If varexp is 0 (or """") then print only first 8 columns.; /// If varexp = ""*"" print all columns. Otherwise a columns selection can; /// be made using ""var1:var2:var3"".; /// \param selection a text formula selecting which entries to scan; /// \param firstentry first entry to scan; /// \param nentries total number of entries to scan (starting from firstentry). Defaults to all entries.; /// \return The function returns the number of entries passing the selection.; ///; /// By default 50 lines are shown and you are asked for `<CR>` or `q`; /// to see the next 50 lines. Depending on the Tree structure, one entry might; /// be printed across several lines, distinguished by the `Instance` column.; /// You can change the default number of lines to be shown before `<CR>` or `q`; /// via mytree->SetScanField(maxlines) where maxlines is 50 by default.; /// If maxlines is set to 0 all entries of the Tree are shown, and you are; /// not prompted to press `<CR>` or `q` to end the loop.; ///; /// This option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// *********",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1779,Integrability,synchroniz,synchronized,1779,"r `<CR>` or `q`; /// to see the next 50 lines. Depending on the Tree structure, one entry might; /// be printed across several lines, distinguished by the `Instance` column.; /// You can change the default number of lines to be shown before `<CR>` or `q`; /// via mytree->SetScanField(maxlines) where maxlines is 50 by default.; /// If maxlines is set to 0 all entries of the Tree are shown, and you are; /// not prompted to press `<CR>` or `q` to end the loop.; ///; /// This option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// ***********************************************; /// * x * 0 * arr1[0][0]* arr2[0][0]*; /// * x * 1 * arr1[0][1]* arr2[0][1]*; /// * x * 2 * arr1[1][0]* arr2[0][2]*; /// * x * 3 * arr1[1][1]* arr2[1][0]*; /// * x * 4 * arr1[2][0]* arr2[1][1]*; /// * x * 5 * arr1[2][1]* arr2[1][2]*; /// * x * 6 * arr1[3][0]* *; /// * x * 7 * arr1[3][1]* *; /// ~~~; /// However, if there is a selection criterion which is an array, then; /// all the formulas will be synchronized with the selection criterion; /// (see TTreePlayer::DrawSelect for more information).; ///; /// \param option The options string can contains the following parameters:; ///; /// - lenmax=dd; /// Where 'dd' is the maximum number of elements per array that should; /// be printed. If '",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2443,Integrability,synchroniz,synchronized,2443,"option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// ***********************************************; /// * x * 0 * arr1[0][0]* arr2[0][0]*; /// * x * 1 * arr1[0][1]* arr2[0][1]*; /// * x * 2 * arr1[1][0]* arr2[0][2]*; /// * x * 3 * arr1[1][1]* arr2[1][0]*; /// * x * 4 * arr1[2][0]* arr2[1][1]*; /// * x * 5 * arr1[2][1]* arr2[1][2]*; /// * x * 6 * arr1[3][0]* *; /// * x * 7 * arr1[3][1]* *; /// ~~~; /// However, if there is a selection criterion which is an array, then; /// all the formulas will be synchronized with the selection criterion; /// (see TTreePlayer::DrawSelect for more information).; ///; /// \param option The options string can contains the following parameters:; ///; /// - lenmax=dd; /// Where 'dd' is the maximum number of elements per array that should; /// be printed. If 'dd' is 0, all elements are printed (this is the; /// default); /// - colsize=ss; /// Where 'ss' will be used as the default size for all the column; /// If this options is not specified, the default column size is 9; /// - precision=pp; /// Where 'pp' will be used as the default 'precision' for the; /// printing format.; /// - col=xxx; /// Where 'xxx' is colon (:) delimited list of printing format for; /// each column. The format string should follow the printf format; ///",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1433,Testability,log,log,1433," \param firstentry first entry to scan; /// \param nentries total number of entries to scan (starting from firstentry). Defaults to all entries.; /// \return The function returns the number of entries passing the selection.; ///; /// By default 50 lines are shown and you are asked for `<CR>` or `q`; /// to see the next 50 lines. Depending on the Tree structure, one entry might; /// be printed across several lines, distinguished by the `Instance` column.; /// You can change the default number of lines to be shown before `<CR>` or `q`; /// via mytree->SetScanField(maxlines) where maxlines is 50 by default.; /// If maxlines is set to 0 all entries of the Tree are shown, and you are; /// not prompted to press `<CR>` or `q` to end the loop.; ///; /// This option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// ***********************************************; /// * x * 0 * arr1[0][0]* arr2[0][0]*; /// * x * 1 * arr1[0][1]* arr2[0][1]*; /// * x * 2 * arr1[1][0]* arr2[0][2]*; /// * x * 3 * arr1[1][1]* arr2[1][0]*; /// * x * 4 * arr1[2][0]* arr2[1][1]*; /// * x * 5 * arr1[2][1]* arr2[1][2]*; /// * x * 6 * arr1[3][0]* *; /// * x * 7 * arr1[3][1]* *; /// ~~~; /// However, if there is a selection criterion which is an array, then; /// all the formulas will be synchronized",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1541,Testability,log,log,1541,"from firstentry). Defaults to all entries.; /// \return The function returns the number of entries passing the selection.; ///; /// By default 50 lines are shown and you are asked for `<CR>` or `q`; /// to see the next 50 lines. Depending on the Tree structure, one entry might; /// be printed across several lines, distinguished by the `Instance` column.; /// You can change the default number of lines to be shown before `<CR>` or `q`; /// via mytree->SetScanField(maxlines) where maxlines is 50 by default.; /// If maxlines is set to 0 all entries of the Tree are shown, and you are; /// not prompted to press `<CR>` or `q` to end the loop.; ///; /// This option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// ***********************************************; /// * x * 0 * arr1[0][0]* arr2[0][0]*; /// * x * 1 * arr1[0][1]* arr2[0][1]*; /// * x * 2 * arr1[1][0]* arr2[0][2]*; /// * x * 3 * arr1[1][1]* arr2[1][0]*; /// * x * 4 * arr1[2][0]* arr2[1][1]*; /// * x * 5 * arr1[2][1]* arr2[1][2]*; /// * x * 6 * arr1[3][0]* *; /// * x * 7 * arr1[3][1]* *; /// ~~~; /// However, if there is a selection criterion which is an array, then; /// all the formulas will be synchronized with the selection criterion; /// (see TTreePlayer::DrawSelect for more information).; ///; /// \para",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1613,Testability,log,log,1613,"ntries passing the selection.; ///; /// By default 50 lines are shown and you are asked for `<CR>` or `q`; /// to see the next 50 lines. Depending on the Tree structure, one entry might; /// be printed across several lines, distinguished by the `Instance` column.; /// You can change the default number of lines to be shown before `<CR>` or `q`; /// via mytree->SetScanField(maxlines) where maxlines is 50 by default.; /// If maxlines is set to 0 all entries of the Tree are shown, and you are; /// not prompted to press `<CR>` or `q` to end the loop.; ///; /// This option is interesting when dumping the contents of a Tree to; /// an ascii file, eg from the command line.; /// ### with ROOT 5; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] tree->Scan(""*""); >tree.log; /// ~~~; /// ### with ROOT 6; /// ~~~{.cpp}; /// root [0] tree->SetScanField(0);; /// root [1] .> tree.log; /// tree->Scan(""*"");; /// .>; /// ~~~; /// will create a file tree.log; ///; /// Arrays (within an entry) are printed in their linear forms.; /// If several arrays with multiple dimensions are printed together,; /// they will NOT be synchronized. For example print; /// arr1[4][2] and arr2[2][3] will results in a printing similar to:; /// ~~~{.cpp}; /// ***********************************************; /// * Row * Instance * arr1 * arr2 *; /// ***********************************************; /// * x * 0 * arr1[0][0]* arr2[0][0]*; /// * x * 1 * arr1[0][1]* arr2[0][1]*; /// * x * 2 * arr1[1][0]* arr2[0][2]*; /// * x * 3 * arr1[1][1]* arr2[1][0]*; /// * x * 4 * arr1[2][0]* arr2[1][1]*; /// * x * 5 * arr1[2][1]* arr2[1][2]*; /// * x * 6 * arr1[3][0]* *; /// * x * 7 * arr1[3][1]* *; /// ~~~; /// However, if there is a selection criterion which is an array, then; /// all the formulas will be synchronized with the selection criterion; /// (see TTreePlayer::DrawSelect for more information).; ///; /// \param option The options string can contains the following parameters:; ///; /// - lenmax=dd; ///",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:81,Performance,load,loaded,81,"// EvalInstance(0) always needs to be called so that; // the proper branches are loaded.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:349,Availability,error,error,349,"////////////////////////////////////////////////////////////////////////////////; /// Loop on Tree and return TSQLResult object containing entries passing; /// selection. If varexp is 0 (or """") then print only first 8 columns.; /// If varexp = ""*"" print all columns. Otherwise a columns selection can; /// be made using ""var1:var2:var3"". In case of error 0 is returned otherwise; /// a TSQLResult object which must be deleted by the user.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:81,Performance,load,loaded,81,"// EvalInstance(0) always needs to be called so that; // the proper branches are loaded.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:120,Modifiability,variab,variable,120,"////////////////////////////////////////////////////////////////////////////////; /// Set number of entries to estimate variable limits.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:10,Modifiability,variab,variables,10,"// unused variables",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:44,Performance,load,loaded,44,"// make sure that the Gpad and GUI libs are loaded",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:573,Availability,Error,Errors,573,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a Tree.; ///; /// funcname is a TF1 function.; ///; /// See TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; /// - option = ""D"" Draw the projected histogram with the fitted function; /// normalized to the number of selected rows; /// and multiplied by the bin width; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~{.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~{.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~{.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:2423,Availability,error,error,2423,"ram with the fitted function; /// normalized to the number of selected rows; /// and multiplied by the bin width; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~{.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~{.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~{.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; ///; /// 1, 2 and 3 Dimensional fits are supported.; /// See also TTree::Fit; ///; /// ### Return status; ///; /// The function return the status of the fit in the following form; /// ~~~{.cpp}; /// fitResult = migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult; /// ~~~; /// - The fitResult is 0 is the fit is OK.; /// - The fitResult is negative in case of an error not connected with the fit.; /// - The number of entries used in the fit can be obtained via; /// ~~~{.cpp}; /// mytree.GetSelectedRows();; /// ~~~; /// - If the number of selected entries is null the function returns -1; ///; /// new implementation using new Fitter classes",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:114,Modifiability,variab,variable,114,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a Tree.; ///; /// funcname is a TF1 function.; ///; /// See TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; /// - option = ""D"" Draw the projected histogram with the fitted function; /// normalized to the number of selected rows; /// and multiplied by the bin width; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~{.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~{.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~{.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:263,Modifiability,variab,variable,263,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a Tree.; ///; /// funcname is a TF1 function.; ///; /// See TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; /// - option = ""D"" Draw the projected histogram with the fitted function; /// normalized to the number of selected rows; /// and multiplied by the bin width; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~{.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~{.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~{.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:1738,Modifiability,variab,variable,1738,"ram with the fitted function; /// normalized to the number of selected rows; /// and multiplied by the bin width; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~{.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~{.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~{.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""f1"", ""jpsimass"", ""jpsipt>3.0"");; /// ~~~; ///; /// 1, 2 and 3 Dimensional fits are supported.; /// See also TTree::Fit; ///; /// ### Return status; ///; /// The function return the status of the fit in the following form; /// ~~~{.cpp}; /// fitResult = migradResult + 10*minosResult + 100*hesseResult + 1000*improveResult; /// ~~~; /// - The fitResult is 0 is the fit is OK.; /// - The fitResult is negative in case of an error not connected with the fit.; /// - The number of entries used in the fit can be obtained via; /// ~~~{.cpp}; /// mytree.GetSelectedRows();; /// ~~~; /// - If the number of selected entries is null the function returns -1; ///; /// new implementation using new Fitter classes",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:558,Performance,Perform,Perform,558,"////////////////////////////////////////////////////////////////////////////////; /// Unbinned fit of one or more variable(s) from a Tree.; ///; /// funcname is a TF1 function.; ///; /// See TTree::Draw for explanations of the other parameters.; ///; /// Fit the variable varexp using the function funcname using the; /// selection cuts given by selection.; ///; /// The list of fit options is given in parameter option.; ///; /// - option = ""Q"" Quiet mode (minimum printing); /// - option = ""V"" Verbose mode (default is between Q and V); /// - option = ""E"" Perform better Errors estimation using Minos technique; /// - option = ""M"" More. Improve fit results; /// - option = ""D"" Draw the projected histogram with the fitted function; /// normalized to the number of selected rows; /// and multiplied by the bin width; ///; /// You can specify boundary limits for some or all parameters via; /// ~~~{.cpp}; /// func->SetParLimits(p_number, parmin, parmax);; /// ~~~; /// if parmin>=parmax, the parameter is fixed; ///; /// Note that you are not forced to fix the limits for all parameters.; /// For example, if you fit a function with 6 parameters, you can do:; /// ~~~{.cpp}; /// func->SetParameters(0,3.1,1.e-6,0.1,-8,100);; /// func->SetParLimits(4,-10,-4);; /// func->SetParLimits(5, 1,1);; /// ~~~; /// With this setup, parameters 0->3 can vary freely; /// - Parameter 4 has boundaries [-10,-4] with initial value -8; /// - Parameter 5 is fixed to 100.; ///; /// For the fit to be meaningful, the function must be self-normalized.; ///; /// i.e. It must have the same integral regardless of the parameter; /// settings. Otherwise the fit will effectively just maximize the; /// area.; ///; /// It is mandatory to have a normalization variable; /// which is fixed for the fit. e.g.; /// ~~~{.cpp}; /// TF1* f1 = new TF1(""f1"", ""gaus(0)/sqrt(2*3.14159)/[2]"", 0, 5);; /// f1->SetParameters(1, 3.1, 0.01);; /// f1->SetParLimits(0, 1, 1); // fix the normalization parameter to 1; /// data->UnbinnedFit(""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:55,Modifiability,variab,variables,55,"// Check that function has same dimension as number of variables",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:239,Deployability,update,update,239,"////////////////////////////////////////////////////////////////////////////////; /// this function is called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:121,Performance,Load,LoadTree,121,"////////////////////////////////////////////////////////////////////////////////; /// this function is called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:149,Performance,load,loaded,149,"////////////////////////////////////////////////////////////////////////////////; /// this function is called by TChain::LoadTree when a new Tree is loaded.; /// Because Trees in a TChain may have a different list of leaves, one; /// must update the leaves numbers in the TTreeFormula used by the TreePlayer.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx:113,Performance,load,loaded,113,"//If the selector is writing into a TEntryList, the entry list's; //sublists need to be changed according to the loaded tree",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreePlayer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreePlayer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:176,Integrability,interface,interface,176,"//////////////////////////////////////////////////////////////////////////; ///; /// \class ROOT::TTreeProcessorMP; /// \ingroup Parallelism; /// \brief This class provides an interface to process a TTree dataset; /// in parallel with multi-process technology; ///; /// ###ROOT::TTreeProcessorMP::Process; /// The possible usages of the Process method are the following:\n; /// * `Process(<dataset>, F func, const std::string& treeName, ULong64_t nToProcess)`:; /// func is executed nToProcess times with argument a TTreeReader&, initialized for; /// the TTree with name treeName, from the dataset `<dataset>`. The dataset can be; /// expressed as:; /// \code{.cpp}; /// const std::string& fileName -> single file name; /// const std::vector<std::string>& fileNames -> vector of file names; /// TFileCollection& files -> collection of TFileInfo objects; /// TChain& files -> TChain with the file paths; /// TTree& tree -> Reference to an existing TTree object; /// \endcode; /// For legacy, the following signature is also supported:; /// * `Process(<dataset>, TSelector& selector, const std::string& treeName, ULong64_t nToProcess)`:; /// where selector is a TSelector derived class describing the analysis and the other arguments; /// have the same meaning as above.; ///; /// For either set of signatures, the processing function is executed as many times as; /// needed by a pool of fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TTreeProcessorMP never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TTreeProcessorMP::Process is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhea",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMP.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:2906,Integrability,wrap,wrapped,2906,"ight; /// be created upon execution of func, returned objects included: ROOT::TTreeProcessorMP never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TTreeProcessorMP::Process is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Process will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a lambda expression, an std::function, a loaded macro, a; /// functor class or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard container (vector, list, deque), an initializer list; /// or a pointer to a TCollection (TList*, TObjArray*, ...).; /// \endparblock; /// **Note:** the version of ROOT::TTreeProcessorMP::Process that takes a TFileCollection* as argument incurs; /// in the overhead of copying data from the TCollection to an STL container. Only; /// use it when absolutely necessary.\n; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; /// **Note:** the user should take care of initializing random seeds differently in each; /// process (e.g. using the process id in the seed). Otherwise several parallel executions; /// might generate the same sequence of pseudo-random numbers.; ///; /// #### Return value:; /// Methods taking 'F func' return the return type of F.; /// Methods taking a TSelector return a 'TList *' with the selector output list; the output list; /// content is owned by the caller.; ///; /// #### Examples:; ///; /// See tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C and tutorials/multicore/mp103__processSelector.C .; ///; //////////////////////////////////////////////////////////////////////////",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMP.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:2178,Performance,load,loaded,2178,"s and the other arguments; /// have the same meaning as above.; ///; /// For either set of signatures, the processing function is executed as many times as; /// needed by a pool of fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TTreeProcessorMP never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TTreeProcessorMP::Process is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Process will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a lambda expression, an std::function, a loaded macro, a; /// functor class or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard container (vector, list, deque), an initializer list; /// or a pointer to a TCollection (TList*, TObjArray*, ...).; /// \endparblock; /// **Note:** the version of ROOT::TTreeProcessorMP::Process that takes a TFileCollection* as argument incurs; /// in the overhead of copying data from the TCollection to an STL container. Only; /// use it when absolutely necessary.\n; /// **Note:** in cases where the function to be executed takes more than; /// zero/one argument but all are fixed except zero/one, the function can be wrapped; /// in a lambda or via std::bind to give it the right signature.\n; /// **Note:** the user should take care of initializing random seeds differently in each; /// process (e.g. using the process id in the seed). Otherwise several parallel executions; /// might generate the same sequence of p",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMP.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:1811,Usability,simpl,simply,1811," name; /// const std::vector<std::string>& fileNames -> vector of file names; /// TFileCollection& files -> collection of TFileInfo objects; /// TChain& files -> TChain with the file paths; /// TTree& tree -> Reference to an existing TTree object; /// \endcode; /// For legacy, the following signature is also supported:; /// * `Process(<dataset>, TSelector& selector, const std::string& treeName, ULong64_t nToProcess)`:; /// where selector is a TSelector derived class describing the analysis and the other arguments; /// have the same meaning as above.; ///; /// For either set of signatures, the processing function is executed as many times as; /// needed by a pool of fNWorkers workers; the number of workers can be passed to the constructor; /// or set via SetNWorkers. It defaults to the number of cores.\n; /// A collection containing the result of each execution is returned.\n; /// **Note:** the user is responsible for the deletion of any object that might; /// be created upon execution of func, returned objects included: ROOT::TTreeProcessorMP never; /// deletes what it returns, it simply forgets it.\n; /// **Note:** that the usage of ROOT::TTreeProcessorMP::Process is indicated only when the task to be; /// executed takes more than a few seconds, otherwise the overhead introduced; /// by Process will outrun the benefits of parallel execution on most machines.; ///; /// \param func; /// \parblock; /// a lambda expression, an std::function, a loaded macro, a; /// functor class or a function that takes zero arguments (for the first signature); /// or one (for the second signature).; /// \endparblock; /// \param args; /// \parblock; /// a standard container (vector, list, deque), an initializer list; /// or a pointer to a TCollection (TList*, TObjArray*, ...).; /// \endparblock; /// **Note:** the version of ROOT::TTreeProcessorMP::Process that takes a TFileCollection* as argument incurs; /// in the overhead of copying data from the TCollection to an STL container. Only; ",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMP.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:69,Safety,avoid,avoid,69,"// The first element must be a TList instead of a TSelector List, to avoid duplicate problems with merging",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMP.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:69,Safety,avoid,avoid,69,"// The first element must be a TList instead of a TSelector List, to avoid duplicate problems with merging",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMP.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:47,Availability,error,errors,47,"/// Fix list of lists before merging (to avoid errors about duplicated objects)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMP.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:41,Safety,avoid,avoid,41,"/// Fix list of lists before merging (to avoid errors about duplicated objects)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMP.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx:69,Safety,avoid,avoid,69,"// The first element must be a TList instead of a TSelector List, to avoid duplicate problems with merging",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMP.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMP.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:18,Integrability,rout,routine,18,"// note that this routine assumes global entry numbers",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:280,Integrability,rout,routine,280,"/// Take a vector of vectors of EntryRanges (a vector per file), filter the entries according to entryList, and; /// and return a new vector of vectors of EntryRanges where cluster start/end entry numbers have been converted to; /// TEntryList-local entry numbers.; ///; /// This routine assumes that entry numbers in the TEntryList (and, if present, in the sub-entrylists) are in; /// ascending order, i.e., for n > m:; /// elist.GetEntry(n) + tree_offset_for_entry_from_elist(n) > elist.GetEntry(m) + tree_offset_for_entry_from_elist(m)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:138,Integrability,depend,depending,138,"// A function that advances TEntryList and returns global entry numbers or -1 if we reached the end; // (might or might not need a TChain depending on whether listHasGlobalEntryNumbers)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:135,Performance,load,loaded,135,"// Note that as a side-effect of opening all files that are going to be used in the; // analysis once, all necessary streamers will be loaded into memory.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:28,Modifiability,plugin,plugins,28,"// need TFile::Open to load plugins if need be",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:23,Performance,load,load,23,"// need TFile::Open to load plugins if need be",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:3,Safety,Avoid,Avoid,3,"// Avoid calling TROOT::RecursiveRemove for this tree, it takes the read lock and we don't need it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:510,Testability,log,logic,510,"// Currently, if a user specified a range, the clusters will be only globally obtained; // Assume that there are 3 files with entries: [0, 100], [0, 150], [0, 200] (in this order); // Since the cluster boundaries are obtained sequentially, applying the offsets, the boundaries; // would be: 0, 100, 250, 450. Now assume that the user provided the range (150, 300); // Then, in the first iteration, nothing is going to be added to entryRanges since:; // std::max(0, 150) < std::min(100, max). Then, by the same logic only a subset of the second; // tree is added, i.e.: currentStart is now 200 and currentEnd is 250 (locally from 100 to 150).; // Lastly, the last tree would take entries from 250 to 300 (or from 0 to 50 locally).; // The current file's offset to start and end is added to make them (chain) global",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:10,Availability,error,error,10,"// do not error out on an empty tree",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:836,Availability,down,down,836,"// Here we ""fuse"" clusters together if the number of clusters is too big with respect to; // the number of slots, otherwise we can incur in an overhead which is big enough; // to make parallelisation detrimental to performance.; // For example, this is the case when, following a merging of many small files, a file; // contains a tree with many entries and with clusters of just a few entries each.; // Another problematic case is a high number of slots (e.g. 256) coupled with a high number; // of files (e.g. 1000 files): the large amount of files might result in a large amount; // of tasks, but the elevated concurrency level makes the little synchronization required by; // task initialization very expensive. In this case it's better to simply process fewer, larger tasks.; // Cluster-merging can help reduce the number of tasks down to a minumum of one task per file.; //; // The criterion according to which we fuse clusters together is to have around; // TTreeProcessorMT::GetTasksPerWorkerHint() clusters per slot.; // Concretely, for each file we will cap the number of tasks to ceil(GetTasksPerWorkerHint() * nWorkers / nFiles).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:809,Energy Efficiency,reduce,reduce,809,"// Here we ""fuse"" clusters together if the number of clusters is too big with respect to; // the number of slots, otherwise we can incur in an overhead which is big enough; // to make parallelisation detrimental to performance.; // For example, this is the case when, following a merging of many small files, a file; // contains a tree with many entries and with clusters of just a few entries each.; // Another problematic case is a high number of slots (e.g. 256) coupled with a high number; // of files (e.g. 1000 files): the large amount of files might result in a large amount; // of tasks, but the elevated concurrency level makes the little synchronization required by; // task initialization very expensive. In this case it's better to simply process fewer, larger tasks.; // Cluster-merging can help reduce the number of tasks down to a minumum of one task per file.; //; // The criterion according to which we fuse clusters together is to have around; // TTreeProcessorMT::GetTasksPerWorkerHint() clusters per slot.; // Concretely, for each file we will cap the number of tasks to ceil(GetTasksPerWorkerHint() * nWorkers / nFiles).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:648,Integrability,synchroniz,synchronization,648,"// Here we ""fuse"" clusters together if the number of clusters is too big with respect to; // the number of slots, otherwise we can incur in an overhead which is big enough; // to make parallelisation detrimental to performance.; // For example, this is the case when, following a merging of many small files, a file; // contains a tree with many entries and with clusters of just a few entries each.; // Another problematic case is a high number of slots (e.g. 256) coupled with a high number; // of files (e.g. 1000 files): the large amount of files might result in a large amount; // of tasks, but the elevated concurrency level makes the little synchronization required by; // task initialization very expensive. In this case it's better to simply process fewer, larger tasks.; // Cluster-merging can help reduce the number of tasks down to a minumum of one task per file.; //; // The criterion according to which we fuse clusters together is to have around; // TTreeProcessorMT::GetTasksPerWorkerHint() clusters per slot.; // Concretely, for each file we will cap the number of tasks to ceil(GetTasksPerWorkerHint() * nWorkers / nFiles).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:215,Performance,perform,performance,215,"// Here we ""fuse"" clusters together if the number of clusters is too big with respect to; // the number of slots, otherwise we can incur in an overhead which is big enough; // to make parallelisation detrimental to performance.; // For example, this is the case when, following a merging of many small files, a file; // contains a tree with many entries and with clusters of just a few entries each.; // Another problematic case is a high number of slots (e.g. 256) coupled with a high number; // of files (e.g. 1000 files): the large amount of files might result in a large amount; // of tasks, but the elevated concurrency level makes the little synchronization required by; // task initialization very expensive. In this case it's better to simply process fewer, larger tasks.; // Cluster-merging can help reduce the number of tasks down to a minumum of one task per file.; //; // The criterion according to which we fuse clusters together is to have around; // TTreeProcessorMT::GetTasksPerWorkerHint() clusters per slot.; // Concretely, for each file we will cap the number of tasks to ceil(GetTasksPerWorkerHint() * nWorkers / nFiles).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:613,Performance,concurren,concurrency,613,"// Here we ""fuse"" clusters together if the number of clusters is too big with respect to; // the number of slots, otherwise we can incur in an overhead which is big enough; // to make parallelisation detrimental to performance.; // For example, this is the case when, following a merging of many small files, a file; // contains a tree with many entries and with clusters of just a few entries each.; // Another problematic case is a high number of slots (e.g. 256) coupled with a high number; // of files (e.g. 1000 files): the large amount of files might result in a large amount; // of tasks, but the elevated concurrency level makes the little synchronization required by; // task initialization very expensive. In this case it's better to simply process fewer, larger tasks.; // Cluster-merging can help reduce the number of tasks down to a minumum of one task per file.; //; // The criterion according to which we fuse clusters together is to have around; // TTreeProcessorMT::GetTasksPerWorkerHint() clusters per slot.; // Concretely, for each file we will cap the number of tasks to ceil(GetTasksPerWorkerHint() * nWorkers / nFiles).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:744,Usability,simpl,simply,744,"// Here we ""fuse"" clusters together if the number of clusters is too big with respect to; // the number of slots, otherwise we can incur in an overhead which is big enough; // to make parallelisation detrimental to performance.; // For example, this is the case when, following a merging of many small files, a file; // contains a tree with many entries and with clusters of just a few entries each.; // Another problematic case is a high number of slots (e.g. 256) coupled with a high number; // of files (e.g. 1000 files): the large amount of files might result in a large amount; // of tasks, but the elevated concurrency level makes the little synchronization required by; // task initialization very expensive. In this case it's better to simply process fewer, larger tasks.; // Cluster-merging can help reduce the number of tasks down to a minumum of one task per file.; //; // The criterion according to which we fuse clusters together is to have around; // TTreeProcessorMT::GetTasksPerWorkerHint() clusters per slot.; // Concretely, for each file we will cap the number of tasks to ceil(GetTasksPerWorkerHint() * nWorkers / nFiles).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:172,Availability,avail,available,172,"////////////////////////////////////////////////////////////////////////////////; /// Construct fChain, also adding friends if needed and injecting knowledge of offsets if available.; /// \param[in] treeNames Name of the tree for each file in `fileNames`.; /// \param[in] fileNames Files to be opened.; /// \param[in] friendInfo Information about TTree friends, if any.; /// \param[in] nEntries Number of entries to be processed.; /// \param[in] friendEntries Number of entries in each friend. Expected to have same ordering as friendInfo.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:138,Integrability,inject,injecting,138,"////////////////////////////////////////////////////////////////////////////////; /// Construct fChain, also adding friends if needed and injecting knowledge of offsets if available.; /// \param[in] treeNames Name of the tree for each file in `fileNames`.; /// \param[in] fileNames Files to be opened.; /// \param[in] friendInfo Information about TTree friends, if any.; /// \param[in] nEntries Number of entries to be processed.; /// \param[in] friendEntries Number of entries in each friend. Expected to have same ordering as friendInfo.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:138,Security,inject,injecting,138,"////////////////////////////////////////////////////////////////////////////////; /// Construct fChain, also adding friends if needed and injecting knowledge of offsets if available.; /// \param[in] treeNames Name of the tree for each file in `fileNames`.; /// \param[in] fileNames Files to be opened.; /// \param[in] friendInfo Information about TTree friends, if any.; /// \param[in] nEntries Number of entries to be processed.; /// \param[in] friendEntries Number of entries in each friend. Expected to have same ordering as friendInfo.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:78,Usability,Clear,Clear,78,"////////////////////////////////////////////////////////////////////////; /// Clear the resources",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:749,Safety,detect,detection,749,"////////////////////////////////////////////////////////////////////////; /// Constructor based on a collection of file names.; /// \param[in] filenames Collection of the names of the files containing the tree to process.; /// \param[in] treename Name of the tree to process. If not provided, the implementation will; /// search filenames for a TTree key and will use the first one it finds in each file.; /// \param[in] nThreads Number of threads to create in the underlying thread-pool. The semantics of this argument are; /// the same as for TThreadExecutor.; /// \param[in] globalRange Global entry range to process, {begin (inclusive), end (exclusive)}.; ///; /// If different files contain TTrees with different names and automatic TTree name detection is not an option; /// (for example, because some of the files contain multiple TTrees) please manually create a TChain and pass; /// it to the appropriate TTreeProcessorMT constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:627,Safety,safe,safe,627,"//////////////////////////////////////////////////////////////////////////////; /// Process the entries of a TTree in parallel. The user-provided function; /// receives a TTreeReader which can be used to iterate on a subrange of; /// entries; /// ~~~{.cpp}; /// TTreeProcessorMT::Process([](TTreeReader& readerSubRange) {; /// // Select branches to read; /// while (readerSubRange.Next()) {; /// // Use content of current entry; /// }; /// });; /// ~~~; /// The user needs to be aware that each of the subranges can potentially; /// be processed in parallel. This means that the code of the user function; /// should be thread safe.; ///; /// \param[in] func User-defined function that processes a subrange of entries",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx:175,Performance,concurren,concurrently,175,"// If an entry list or friend trees are present, we need to generate clusters with global entry numbers,; // so we do it here for all files.; // Otherwise we can do it later, concurrently for each file, and clusters will contain local entry numbers.; // TODO: in practice we could also find clusters per-file in the case of no friends and a TEntryList with; // sub-entrylists.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProcessorMT.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProcessorMT.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:471,Integrability,wrap,wrapper,471,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*; TODO:; Have separate names for the wrapper classes in the cases of: [done]; clones/non clones; split/non split; split levels. Have a solution for passing top+"".""+middle to the parents classes [probably done .. need testing]. Have a solution for the return by references of abstract classes [not done]. Have object inside ClonesArray properly treated! [done]; Why is there 2 TRef proxy classes? [done]. check why some inheritance are TObjProxy and not TPx_. Be smart enough to avoid issue about having 2 classes one unrolled and one non unrolled!. When using in interpreted mode understand why the reloading reloads the calling script and then crashes :(. CINT does not properly call the custom operators when doing return fNtrack. CINT does not handle fMatrix[2][1] well. The user's function in script.h are not exposed by ACLiC. Review the method to avoid the useless refreshing of the generated file; - for most efficiency it would require a different name for each tree; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:853,Modifiability,inherit,inheritance,853,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*; TODO:; Have separate names for the wrapper classes in the cases of: [done]; clones/non clones; split/non split; split levels. Have a solution for passing top+"".""+middle to the parents classes [probably done .. need testing]. Have a solution for the return by references of abstract classes [not done]. Have object inside ClonesArray properly treated! [done]; Why is there 2 TRef proxy classes? [done]. check why some inheritance are TObjProxy and not TPx_. Be smart enough to avoid issue about having 2 classes one unrolled and one non unrolled!. When using in interpreted mode understand why the reloading reloads the calling script and then crashes :(. CINT does not properly call the custom operators when doing return fNtrack. CINT does not handle fMatrix[2][1] well. The user's function in script.h are not exposed by ACLiC. Review the method to avoid the useless refreshing of the generated file; - for most efficiency it would require a different name for each tree; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:912,Safety,avoid,avoid,912,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*; TODO:; Have separate names for the wrapper classes in the cases of: [done]; clones/non clones; split/non split; split levels. Have a solution for passing top+"".""+middle to the parents classes [probably done .. need testing]. Have a solution for the return by references of abstract classes [not done]. Have object inside ClonesArray properly treated! [done]; Why is there 2 TRef proxy classes? [done]. check why some inheritance are TObjProxy and not TPx_. Be smart enough to avoid issue about having 2 classes one unrolled and one non unrolled!. When using in interpreted mode understand why the reloading reloads the calling script and then crashes :(. CINT does not properly call the custom operators when doing return fNtrack. CINT does not handle fMatrix[2][1] well. The user's function in script.h are not exposed by ACLiC. Review the method to avoid the useless refreshing of the generated file; - for most efficiency it would require a different name for each tree; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:1287,Safety,avoid,avoid,1287,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*; TODO:; Have separate names for the wrapper classes in the cases of: [done]; clones/non clones; split/non split; split levels. Have a solution for passing top+"".""+middle to the parents classes [probably done .. need testing]. Have a solution for the return by references of abstract classes [not done]. Have object inside ClonesArray properly treated! [done]; Why is there 2 TRef proxy classes? [done]. check why some inheritance are TObjProxy and not TPx_. Be smart enough to avoid issue about having 2 classes one unrolled and one non unrolled!. When using in interpreted mode understand why the reloading reloads the calling script and then crashes :(. CINT does not properly call the custom operators when doing return fNtrack. CINT does not handle fMatrix[2][1] well. The user's function in script.h are not exposed by ACLiC. Review the method to avoid the useless refreshing of the generated file; - for most efficiency it would require a different name for each tree; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:1248,Security,expose,exposed,1248,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*; TODO:; Have separate names for the wrapper classes in the cases of: [done]; clones/non clones; split/non split; split levels. Have a solution for passing top+"".""+middle to the parents classes [probably done .. need testing]. Have a solution for the return by references of abstract classes [not done]. Have object inside ClonesArray properly treated! [done]; Why is there 2 TRef proxy classes? [done]. check why some inheritance are TObjProxy and not TPx_. Be smart enough to avoid issue about having 2 classes one unrolled and one non unrolled!. When using in interpreted mode understand why the reloading reloads the calling script and then crashes :(. CINT does not properly call the custom operators when doing return fNtrack. CINT does not handle fMatrix[2][1] well. The user's function in script.h are not exposed by ACLiC. Review the method to avoid the useless refreshing of the generated file; - for most efficiency it would require a different name for each tree; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:651,Testability,test,testing,651,"// @(#)root/treeplayer:$Id$; // Author: Philippe Canal 06/06/2004; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers and al. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /*; TODO:; Have separate names for the wrapper classes in the cases of: [done]; clones/non clones; split/non split; split levels. Have a solution for passing top+"".""+middle to the parents classes [probably done .. need testing]. Have a solution for the return by references of abstract classes [not done]. Have object inside ClonesArray properly treated! [done]; Why is there 2 TRef proxy classes? [done]. check why some inheritance are TObjProxy and not TPx_. Be smart enough to avoid issue about having 2 classes one unrolled and one non unrolled!. When using in interpreted mode understand why the reloading reloads the calling script and then crashes :(. CINT does not properly call the custom operators when doing return fNtrack. CINT does not handle fMatrix[2][1] well. The user's function in script.h are not exposed by ACLiC. Review the method to avoid the useless refreshing of the generated file; - for most efficiency it would require a different name for each tree; */",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:32,Availability,error,error,32,"// Use this function in case an error occurred.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:50,Modifiability,variab,variable,50,"// maxDim[dim] = -2; // Index is calculated via a variable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:3,Integrability,Interface,Interface,3,"// Interface versioning",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:157,Availability,reliab,reliably,157,"// We can not forward declared nested classes (well we might be able to do so for; // the one nested in a namespace but it is not clear yet if we can really reliably; // find this information)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx:130,Usability,clear,clear,130,"// We can not forward declared nested classes (well we might be able to do so for; // the one nested in a namespace but it is not clear yet if we can really reliably; // find this information)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeProxyGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeProxyGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:84,Availability,robust,robust,84,"// clang-format off; /**; \class TTreeReader; \ingroup treeplayer; \brief A simple, robust and fast interface to read values from ROOT columnar datasets such as TTree, TChain or TNtuple. TTreeReader is associated to TTreeReaderValue and TTreeReaderArray which are handles to concretely; access the information in the dataset. Example code can be found in; - tutorials/tree/hsimpleReader.C; - tutorials/tree/h1analysisTreeReader.C; - <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">This example</a>. You can generate a skeleton of `TTreeReaderValue<T>` and `TTreeReaderArray<T>` declarations; for all of a tree's branches using `TTree::MakeSelector()`. Roottest contains an; <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">example</a>; showing the full power. A simpler analysis example can be found below: it histograms a function of the px and py branches. ~~~{.cpp}; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinat",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:1968,Availability,error,error,1968," hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. ~~~{.cpp}; #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>. #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"". #include <vector>; #include <iostream>. bool CheckValue(ROOT::Internal::TTreeReaderValueBase& value) {; if (value.GetSetupStatus() < 0) {; std::cerr << ""Error "" << value.GetSetupStatus(); << ""setting up reader for "" << value.GetBranchName() << '\n';; return false;; }; return true;; }. // Analyze the tree ""MyTree"" in the file passed into the function.; // Returns false in case of errors.; bool analyze(TFile* file) {; // Create a TTreeReader named ""MyTree"" from the given TDirectory.; // The TTreeReader gives access to the TTree to the TTreeReaderValue and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single floa",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:2424,Availability,Error,Error,2424,"irectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. ~~~{.cpp}; #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>. #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"". #include <vector>; #include <iostream>. bool CheckValue(ROOT::Internal::TTreeReaderValueBase& value) {; if (value.GetSetupStatus() < 0) {; std::cerr << ""Error "" << value.GetSetupStatus(); << ""setting up reader for "" << value.GetBranchName() << '\n';; return false;; }; return true;; }. // Analyze the tree ""MyTree"" in the file passed into the function.; // Returns false in case of errors.; bool analyze(TFile* file) {; // Create a TTreeReader named ""MyTree"" from the given TDirectory.; // The TTreeReader gives access to the TTree to the TTreeReaderValue and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:2653,Availability,error,errors,2653,"e as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. ~~~{.cpp}; #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>. #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"". #include <vector>; #include <iostream>. bool CheckValue(ROOT::Internal::TTreeReaderValueBase& value) {; if (value.GetSetupStatus() < 0) {; std::cerr << ""Error "" << value.GetSetupStatus(); << ""setting up reader for "" << value.GetBranchName() << '\n';; return false;; }; return true;; }. // Analyze the tree ""MyTree"" in the file passed into the function.; // Returns false in case of errors.; bool analyze(TFile* file) {; // Create a TTreeReader named ""MyTree"" from the given TDirectory.; // The TTreeReader gives access to the TTree to the TTreeReaderValue and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ""jets.pT"");. // Read the taus in the tree entry:; TTreeReaderArray<Tau> taus(reader, ""taus"");. // Now iterate through the TTree entries and fill a histogram. TH1F(""hist"", ""TTreeReader example histogram"", 10, 0., 100.);. bool firs",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:816,Energy Efficiency,power,power,816,"// clang-format off; /**; \class TTreeReader; \ingroup treeplayer; \brief A simple, robust and fast interface to read values from ROOT columnar datasets such as TTree, TChain or TNtuple. TTreeReader is associated to TTreeReaderValue and TTreeReaderArray which are handles to concretely; access the information in the dataset. Example code can be found in; - tutorials/tree/hsimpleReader.C; - tutorials/tree/h1analysisTreeReader.C; - <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">This example</a>. You can generate a skeleton of `TTreeReaderValue<T>` and `TTreeReaderArray<T>` declarations; for all of a tree's branches using `TTree::MakeSelector()`. Roottest contains an; <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">example</a>; showing the full power. A simpler analysis example can be found below: it histograms a function of the px and py branches. ~~~{.cpp}; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinat",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:100,Integrability,interface,interface,100,"// clang-format off; /**; \class TTreeReader; \ingroup treeplayer; \brief A simple, robust and fast interface to read values from ROOT columnar datasets such as TTree, TChain or TNtuple. TTreeReader is associated to TTreeReaderValue and TTreeReaderArray which are handles to concretely; access the information in the dataset. Example code can be found in; - tutorials/tree/hsimpleReader.C; - tutorials/tree/h1analysisTreeReader.C; - <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">This example</a>. You can generate a skeleton of `TTreeReaderValue<T>` and `TTreeReaderArray<T>` declarations; for all of a tree's branches using `TTree::MakeSelector()`. Roottest contains an; <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">example</a>; showing the full power. A simpler analysis example can be found below: it histograms a function of the px and py branches. ~~~{.cpp}; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinat",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:4309,Modifiability,variab,variable,4309,"and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ""jets.pT"");. // Read the taus in the tree entry:; TTreeReaderArray<Tau> taus(reader, ""taus"");. // Now iterate through the TTree entries and fill a histogram. TH1F(""hist"", ""TTreeReader example histogram"", 10, 0., 100.);. bool firstEntry = true;; while (reader.Next()) {; if (firstEntry) {; // Check that branches exist and their types match our expectation.; if (!CheckValue(weight)) return false;; if (!CheckValue(triggerInfo)) return false;; if (!CheckValue(muons)) return false;; if (!CheckValue(jetPt)) return false;; if (!CheckValue(taus)) return false;; firstentry = false;; }. // Access the TriggerInfo object as if it's a pointer.; if (!triggerInfo->hasMuonL1()); continue;. // Ditto for the vector<Muon>.; if (!muons->size()); continue;. // Access the jetPt as an array, whether the TTree stores this as; // a std::vector, std::list, TClonesArray or Jet* C-style array, with; // fixed or variable array size.; if (jetPt.GetSize() < 2 || jetPt[0] < 100); continue;. // Access the array of taus.; if (!taus.IsEmpty()) {; // Access a float value - need to dereference as TTreeReaderValue; // behaves like an iterator; float currentWeight = *weight;; for (const Tau& tau: taus) {; hist->Fill(tau.eta(), currentWeight);; }; }; } // TTree entry / event loop. // Return true if we have iterated through all entries.; return reader.GetEntryStatus() == TTreeReader::kEntryBeyondEnd;; }; ~~~; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:287,Security,access,access,287,"// clang-format off; /**; \class TTreeReader; \ingroup treeplayer; \brief A simple, robust and fast interface to read values from ROOT columnar datasets such as TTree, TChain or TNtuple. TTreeReader is associated to TTreeReaderValue and TTreeReaderArray which are handles to concretely; access the information in the dataset. Example code can be found in; - tutorials/tree/hsimpleReader.C; - tutorials/tree/h1analysisTreeReader.C; - <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">This example</a>. You can generate a skeleton of `TTreeReaderValue<T>` and `TTreeReaderArray<T>` declarations; for all of a tree's branches using `TTree::MakeSelector()`. Roottest contains an; <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">example</a>; showing the full power. A simpler analysis example can be found below: it histograms a function of the px and py branches. ~~~{.cpp}; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinat",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:1518,Security,access,access,1518,"er"">This example</a>. You can generate a skeleton of `TTreeReaderValue<T>` and `TTreeReaderArray<T>` declarations; for all of a tree's branches using `TTree::MakeSelector()`. Roottest contains an; <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">example</a>; showing the full power. A simpler analysis example can be found below: it histograms a function of the px and py branches. ~~~{.cpp}; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. ~~~{.cpp}; #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>. #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"". #include <vector>; #include <iostream>. bool CheckValue(ROOT::Internal::TTreeReaderValueBase& value) {; if (value.GetSetupStatus() < 0) {; std::cerr << ""Error "" << value.GetSetupStatus(); << ""setting up reader for "" << value.GetBranchName(",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:1630,Security,access,access,1630,"ReaderArray<T>` declarations; for all of a tree's branches using `TTree::MakeSelector()`. Roottest contains an; <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">example</a>; showing the full power. A simpler analysis example can be found below: it histograms a function of the px and py branches. ~~~{.cpp}; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. ~~~{.cpp}; #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>. #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"". #include <vector>; #include <iostream>. bool CheckValue(ROOT::Internal::TTreeReaderValueBase& value) {; if (value.GetSetupStatus() < 0) {; std::cerr << ""Error "" << value.GetSetupStatus(); << ""setting up reader for "" << value.GetBranchName() << '\n';; return false;; }; return true;; }. // Analyze the tree ""MyTree"" in the fi",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:1787,Security,access,access,1787,"sis example can be found below: it histograms a function of the px and py branches. ~~~{.cpp}; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. ~~~{.cpp}; #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>. #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"". #include <vector>; #include <iostream>. bool CheckValue(ROOT::Internal::TTreeReaderValueBase& value) {; if (value.GetSetupStatus() < 0) {; std::cerr << ""Error "" << value.GetSetupStatus(); << ""setting up reader for "" << value.GetBranchName() << '\n';; return false;; }; return true;; }. // Analyze the tree ""MyTree"" in the file passed into the function.; // Returns false in case of errors.; bool analyze(TFile* file) {; // Create a TTreeReader named ""MyTree"" from the given TDirectory.; // The TTreeReader gives access to the TTree to the TTreeReaderValue and; // TTr",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:2783,Security,access,access,2783," myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. ~~~{.cpp}; #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>. #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"". #include <vector>; #include <iostream>. bool CheckValue(ROOT::Internal::TTreeReaderValueBase& value) {; if (value.GetSetupStatus() < 0) {; std::cerr << ""Error "" << value.GetSetupStatus(); << ""setting up reader for "" << value.GetBranchName() << '\n';; return false;; }; return true;; }. // Analyze the tree ""MyTree"" in the file passed into the function.; // Returns false in case of errors.; bool analyze(TFile* file) {; // Create a TTreeReader named ""MyTree"" from the given TDirectory.; // The TTreeReader gives access to the TTree to the TTreeReaderValue and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ""jets.pT"");. // Read the taus in the tree entry:; TTreeReaderArray<Tau> taus(reader, ""taus"");. // Now iterate through the TTree entries and fill a histogram. TH1F(""hist"", ""TTreeReader example histogram"", 10, 0., 100.);. bool firstEntry = true;; while (reader.Next()) {; if (firstEntry) {; // Check that branches exist and their types match our expectation.; if (!CheckValue(weight)) return false",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:3999,Security,Access,Access,3999,"and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ""jets.pT"");. // Read the taus in the tree entry:; TTreeReaderArray<Tau> taus(reader, ""taus"");. // Now iterate through the TTree entries and fill a histogram. TH1F(""hist"", ""TTreeReader example histogram"", 10, 0., 100.);. bool firstEntry = true;; while (reader.Next()) {; if (firstEntry) {; // Check that branches exist and their types match our expectation.; if (!CheckValue(weight)) return false;; if (!CheckValue(triggerInfo)) return false;; if (!CheckValue(muons)) return false;; if (!CheckValue(jetPt)) return false;; if (!CheckValue(taus)) return false;; firstentry = false;; }. // Access the TriggerInfo object as if it's a pointer.; if (!triggerInfo->hasMuonL1()); continue;. // Ditto for the vector<Muon>.; if (!muons->size()); continue;. // Access the jetPt as an array, whether the TTree stores this as; // a std::vector, std::list, TClonesArray or Jet* C-style array, with; // fixed or variable array size.; if (jetPt.GetSize() < 2 || jetPt[0] < 100); continue;. // Access the array of taus.; if (!taus.IsEmpty()) {; // Access a float value - need to dereference as TTreeReaderValue; // behaves like an iterator; float currentWeight = *weight;; for (const Tau& tau: taus) {; hist->Fill(tau.eta(), currentWeight);; }; }; } // TTree entry / event loop. // Return true if we have iterated through all entries.; return reader.GetEntryStatus() == TTreeReader::kEntryBeyondEnd;; }; ~~~; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:4162,Security,Access,Access,4162,"and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ""jets.pT"");. // Read the taus in the tree entry:; TTreeReaderArray<Tau> taus(reader, ""taus"");. // Now iterate through the TTree entries and fill a histogram. TH1F(""hist"", ""TTreeReader example histogram"", 10, 0., 100.);. bool firstEntry = true;; while (reader.Next()) {; if (firstEntry) {; // Check that branches exist and their types match our expectation.; if (!CheckValue(weight)) return false;; if (!CheckValue(triggerInfo)) return false;; if (!CheckValue(muons)) return false;; if (!CheckValue(jetPt)) return false;; if (!CheckValue(taus)) return false;; firstentry = false;; }. // Access the TriggerInfo object as if it's a pointer.; if (!triggerInfo->hasMuonL1()); continue;. // Ditto for the vector<Muon>.; if (!muons->size()); continue;. // Access the jetPt as an array, whether the TTree stores this as; // a std::vector, std::list, TClonesArray or Jet* C-style array, with; // fixed or variable array size.; if (jetPt.GetSize() < 2 || jetPt[0] < 100); continue;. // Access the array of taus.; if (!taus.IsEmpty()) {; // Access a float value - need to dereference as TTreeReaderValue; // behaves like an iterator; float currentWeight = *weight;; for (const Tau& tau: taus) {; hist->Fill(tau.eta(), currentWeight);; }; }; } // TTree entry / event loop. // Return true if we have iterated through all entries.; return reader.GetEntryStatus() == TTreeReader::kEntryBeyondEnd;; }; ~~~; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:4389,Security,Access,Access,4389,"and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ""jets.pT"");. // Read the taus in the tree entry:; TTreeReaderArray<Tau> taus(reader, ""taus"");. // Now iterate through the TTree entries and fill a histogram. TH1F(""hist"", ""TTreeReader example histogram"", 10, 0., 100.);. bool firstEntry = true;; while (reader.Next()) {; if (firstEntry) {; // Check that branches exist and their types match our expectation.; if (!CheckValue(weight)) return false;; if (!CheckValue(triggerInfo)) return false;; if (!CheckValue(muons)) return false;; if (!CheckValue(jetPt)) return false;; if (!CheckValue(taus)) return false;; firstentry = false;; }. // Access the TriggerInfo object as if it's a pointer.; if (!triggerInfo->hasMuonL1()); continue;. // Ditto for the vector<Muon>.; if (!muons->size()); continue;. // Access the jetPt as an array, whether the TTree stores this as; // a std::vector, std::list, TClonesArray or Jet* C-style array, with; // fixed or variable array size.; if (jetPt.GetSize() < 2 || jetPt[0] < 100); continue;. // Access the array of taus.; if (!taus.IsEmpty()) {; // Access a float value - need to dereference as TTreeReaderValue; // behaves like an iterator; float currentWeight = *weight;; for (const Tau& tau: taus) {; hist->Fill(tau.eta(), currentWeight);; }; }; } // TTree entry / event loop. // Return true if we have iterated through all entries.; return reader.GetEntryStatus() == TTreeReader::kEntryBeyondEnd;; }; ~~~; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:4443,Security,Access,Access,4443,"and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);. // Read a single float value in each tree entries:; TTreeReaderValue<float> weight(reader, ""event.weight"");. // Read a TriggerInfo object from the tree entries:; TTreeReaderValue<TriggerInfo> triggerInfo(reader, ""triggerInfo"");. //Read a vector of Muon objects from the tree entries:; TTreeReaderValue<std::vector<Muon>> muons(reader, ""muons"");. //Read the pT for all jets in the tree entry:; TTreeReaderArray<double> jetPt(reader, ""jets.pT"");. // Read the taus in the tree entry:; TTreeReaderArray<Tau> taus(reader, ""taus"");. // Now iterate through the TTree entries and fill a histogram. TH1F(""hist"", ""TTreeReader example histogram"", 10, 0., 100.);. bool firstEntry = true;; while (reader.Next()) {; if (firstEntry) {; // Check that branches exist and their types match our expectation.; if (!CheckValue(weight)) return false;; if (!CheckValue(triggerInfo)) return false;; if (!CheckValue(muons)) return false;; if (!CheckValue(jetPt)) return false;; if (!CheckValue(taus)) return false;; firstentry = false;; }. // Access the TriggerInfo object as if it's a pointer.; if (!triggerInfo->hasMuonL1()); continue;. // Ditto for the vector<Muon>.; if (!muons->size()); continue;. // Access the jetPt as an array, whether the TTree stores this as; // a std::vector, std::list, TClonesArray or Jet* C-style array, with; // fixed or variable array size.; if (jetPt.GetSize() < 2 || jetPt[0] < 100); continue;. // Access the array of taus.; if (!taus.IsEmpty()) {; // Access a float value - need to dereference as TTreeReaderValue; // behaves like an iterator; float currentWeight = *weight;; for (const Tau& tau: taus) {; hist->Fill(tau.eta(), currentWeight);; }; }; } // TTree entry / event loop. // Return true if we have iterated through all entries.; return reader.GetEntryStatus() == TTreeReader::kEntryBeyondEnd;; }; ~~~; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:76,Usability,simpl,simple,76,"// clang-format off; /**; \class TTreeReader; \ingroup treeplayer; \brief A simple, robust and fast interface to read values from ROOT columnar datasets such as TTree, TChain or TNtuple. TTreeReader is associated to TTreeReaderValue and TTreeReaderArray which are handles to concretely; access the information in the dataset. Example code can be found in; - tutorials/tree/hsimpleReader.C; - tutorials/tree/h1analysisTreeReader.C; - <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">This example</a>. You can generate a skeleton of `TTreeReaderValue<T>` and `TTreeReaderArray<T>` declarations; for all of a tree's branches using `TTree::MakeSelector()`. Roottest contains an; <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">example</a>; showing the full power. A simpler analysis example can be found below: it histograms a function of the px and py branches. ~~~{.cpp}; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinat",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:825,Usability,simpl,simpler,825,"// clang-format off; /**; \class TTreeReader; \ingroup treeplayer; \brief A simple, robust and fast interface to read values from ROOT columnar datasets such as TTree, TChain or TNtuple. TTreeReader is associated to TTreeReaderValue and TTreeReaderArray which are handles to concretely; access the information in the dataset. Example code can be found in; - tutorials/tree/hsimpleReader.C; - tutorials/tree/h1analysisTreeReader.C; - <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">This example</a>. You can generate a skeleton of `TTreeReaderValue<T>` and `TTreeReaderArray<T>` declarations; for all of a tree's branches using `TTree::MakeSelector()`. Roottest contains an; <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">example</a>; showing the full power. A simpler analysis example can be found below: it histograms a function of the px and py branches. ~~~{.cpp}; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinat",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:938,Usability,simpl,simple,938,"// clang-format off; /**; \class TTreeReader; \ingroup treeplayer; \brief A simple, robust and fast interface to read values from ROOT columnar datasets such as TTree, TChain or TNtuple. TTreeReader is associated to TTreeReaderValue and TTreeReaderArray which are handles to concretely; access the information in the dataset. Example code can be found in; - tutorials/tree/hsimpleReader.C; - tutorials/tree/h1analysisTreeReader.C; - <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">This example</a>. You can generate a skeleton of `TTreeReaderValue<T>` and `TTreeReaderArray<T>` declarations; for all of a tree's branches using `TTree::MakeSelector()`. Roottest contains an; <a href=""https://github.com/root-project/roottest/tree/master/root/tree/reader"">example</a>; showing the full power. A simpler analysis example can be found below: it histograms a function of the px and py branches. ~~~{.cpp}; // A simple TTreeReader use: read data from hsimple.root (written by hsimple.C). #include ""TFile.h""; #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"". void hsimpleReader() {; // Create a histogram for the values we read.; TH1F(""h1"", ""ntuple"", 100, -4, 4);. // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");. // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);. // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");. // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; }. myHist->Draw();; }; ~~~. A more complete example including error handling and a few combinat",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:86,Security,Access,Access,86,"////////////////////////////////////////////////////////////////////////////////; /// Access data from tree.; ///; /// \param tree The TTree or TChain to read from; /// \param entryList It can be a single TEntryList with global entry numbers (supported, as; /// an extension, also in the case of a TChain) or, if the first parameter; /// is a TChain, a TEntryList with sub-TEntryLists with local entry numbers.; /// In the latter case, the TEntryList must be associated to the TChain, as; /// per chain.SetEntryList(&entryList).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:86,Security,Access,Access,86,"////////////////////////////////////////////////////////////////////////////////; /// Access data from the tree called keyname in the directory (e.g. TFile); /// dir, or the current directory if dir is NULL. If keyname cannot be; /// found, or if it is not a TTree, IsInvalid() will return true.; ///; /// \param keyname The name of the TTree to read from file; /// \param dir The TDirectory to read keyname from; /// \param entryList It can be a single TEntryList with global entry numbers (supported, as; /// an extension, also in the case of a TChain) or, if the first parameter; /// is a TChain, a TEntryList with sub-TEntryLists with local entry numbers.; /// In the latter case, the TEntryList must be associated to the TChain, as; /// per chain.SetEntryList(&entryList).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:32,Availability,avail,available,32,"// The current TTree is already available.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:165,Performance,Load,LoadTree,165,"////////////////////////////////////////////////////////////////////////////////; /// Notify director and values of a change in tree. Called from TChain and TTree's LoadTree.; /// TTreeReader registers its fNotify data member with the TChain/TTree which; /// in turn leads to this method being called upon the execution of LoadTree.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:323,Performance,Load,LoadTree,323,"////////////////////////////////////////////////////////////////////////////////; /// Notify director and values of a change in tree. Called from TChain and TTree's LoadTree.; /// TTreeReader registers its fNotify data member with the TChain/TTree which; /// in turn leads to this method being called upon the execution of LoadTree.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:84,Performance,Load,LoadTree,84,"// This can happen if someone switched trees behind us.; // Likely cause: a TChain::LoadTree() e.g. from TTree::Process().; // This means that ""local"" should be set!; // There are two entities switching trees which is bad.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:44,Availability,error,errors,44,"// Check whether the user wants to suppress errors for this specific branch; // if it is missing. This information is used here to act in the situation; // where the first tree of the chain does not contain that branch. In such; // case, we need to postpone the creation of the corresponding proxy until; // we find the branch in a following tree of the chain.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:128,Availability,avail,available,128,"// Because of the situation described above, we may have some proxies; // already created and some not, if their branch was not available so far.; // Make sure we do not recreate the proxy unnecessarily, unless the; // data member was set outside of this function (e.g. in Restart).",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:42,Availability,error,error,42,"// If at least one proxy was there and no error occurred, we assume the proxies to be set.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:167,Performance,cache,cache,167,"// Now we need to properly set the TTreeCache. We do this in steps:; // 1. We set the entry range according to the entry range of the TTreeReader; // 2. We add to the cache the branches identifying them by the name the user provided; // upon creation of the TTreeReader{Value, Array}s; // 3. We stop the learning phase.; // Operations 1, 2 and 3 need to happen in this order. See:; // https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87837",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:304,Usability,learn,learning,304,"// Now we need to properly set the TTreeCache. We do this in steps:; // 1. We set the entry range according to the entry range of the TTreeReader; // 2. We add to the cache the branches identifying them by the name the user provided; // upon creation of the TTreeReader{Value, Array}s; // 3. We stop the learning phase.; // Operations 1, 2 and 3 need to happen in this order. See:; // https://sft.its.cern.ch/jira/browse/ROOT-9773?focusedCommentId=87837",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:14,Safety,avoid,avoid,14,"// We need to avoid to pass -1 as end entry to the SetCacheEntryRange method",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:181,Availability,avail,available,181,"// We are looking for the situation where there are actually still more; // entries to read in the friend. The following checks if the current entry to read; // is greater than the available entries in the dataset. If not, then we know there; // are more entries left in the friend.; //; // GetEntriesFast gives us a single handle to assess all the following:; // * If the friend is a TTree, it returns the total number of entries; // * If it is a TChain, then two more scenarios may occur:; // - If we have processed until the last file, then it returns the total; // number of entries.; // - If we have not processed all files yet, then it returns TTree::kMaxEntries.; // Thus, fEntry will always be smaller and the warning will be issued.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:117,Performance,load,loaded,117,"////////////////////////////////////////////////////////////////////////////////; /// Set the range of entries to be loaded by `Next()`; end will not be loaded.; ///; /// If end <= begin, `end` is ignored (set to `-1`, i.e. will run on all entries from `begin` onwards).; ///; /// Example:; ///; /// ~~~ {.cpp}; /// reader.SetEntriesRange(3, 5);; /// while (reader.Next()) {; /// // Will load entries 3 and 4.; /// }; /// ~~~; ///; /// Note that if a TEntryList is present, beginEntry and endEntry refer to the beginEntry-th/endEntry-th entries of the; /// TEntryList (or the main TEntryList in case it has sub-entrylists). In other words, SetEntriesRange can; /// be used to only loop over part of the TEntryList, but not to further restrict the actual TTree/TChain entry numbers; /// considered.; ///; /// \param beginEntry The first entry to be loaded by `Next()`.; /// \param endEntry The entry where `Next()` will return false, not loading it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:153,Performance,load,loaded,153,"////////////////////////////////////////////////////////////////////////////////; /// Set the range of entries to be loaded by `Next()`; end will not be loaded.; ///; /// If end <= begin, `end` is ignored (set to `-1`, i.e. will run on all entries from `begin` onwards).; ///; /// Example:; ///; /// ~~~ {.cpp}; /// reader.SetEntriesRange(3, 5);; /// while (reader.Next()) {; /// // Will load entries 3 and 4.; /// }; /// ~~~; ///; /// Note that if a TEntryList is present, beginEntry and endEntry refer to the beginEntry-th/endEntry-th entries of the; /// TEntryList (or the main TEntryList in case it has sub-entrylists). In other words, SetEntriesRange can; /// be used to only loop over part of the TEntryList, but not to further restrict the actual TTree/TChain entry numbers; /// considered.; ///; /// \param beginEntry The first entry to be loaded by `Next()`.; /// \param endEntry The entry where `Next()` will return false, not loading it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:388,Performance,load,load,388,"////////////////////////////////////////////////////////////////////////////////; /// Set the range of entries to be loaded by `Next()`; end will not be loaded.; ///; /// If end <= begin, `end` is ignored (set to `-1`, i.e. will run on all entries from `begin` onwards).; ///; /// Example:; ///; /// ~~~ {.cpp}; /// reader.SetEntriesRange(3, 5);; /// while (reader.Next()) {; /// // Will load entries 3 and 4.; /// }; /// ~~~; ///; /// Note that if a TEntryList is present, beginEntry and endEntry refer to the beginEntry-th/endEntry-th entries of the; /// TEntryList (or the main TEntryList in case it has sub-entrylists). In other words, SetEntriesRange can; /// be used to only loop over part of the TEntryList, but not to further restrict the actual TTree/TChain entry numbers; /// considered.; ///; /// \param beginEntry The first entry to be loaded by `Next()`.; /// \param endEntry The entry where `Next()` will return false, not loading it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:848,Performance,load,loaded,848,"////////////////////////////////////////////////////////////////////////////////; /// Set the range of entries to be loaded by `Next()`; end will not be loaded.; ///; /// If end <= begin, `end` is ignored (set to `-1`, i.e. will run on all entries from `begin` onwards).; ///; /// Example:; ///; /// ~~~ {.cpp}; /// reader.SetEntriesRange(3, 5);; /// while (reader.Next()) {; /// // Will load entries 3 and 4.; /// }; /// ~~~; ///; /// Note that if a TEntryList is present, beginEntry and endEntry refer to the beginEntry-th/endEntry-th entries of the; /// TEntryList (or the main TEntryList in case it has sub-entrylists). In other words, SetEntriesRange can; /// be used to only loop over part of the TEntryList, but not to further restrict the actual TTree/TChain entry numbers; /// considered.; ///; /// \param beginEntry The first entry to be loaded by `Next()`.; /// \param endEntry The entry where `Next()` will return false, not loading it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:937,Performance,load,loading,937,"////////////////////////////////////////////////////////////////////////////////; /// Set the range of entries to be loaded by `Next()`; end will not be loaded.; ///; /// If end <= begin, `end` is ignored (set to `-1`, i.e. will run on all entries from `begin` onwards).; ///; /// Example:; ///; /// ~~~ {.cpp}; /// reader.SetEntriesRange(3, 5);; /// while (reader.Next()) {; /// // Will load entries 3 and 4.; /// }; /// ~~~; ///; /// Note that if a TEntryList is present, beginEntry and endEntry refer to the beginEntry-th/endEntry-th entries of the; /// TEntryList (or the main TEntryList in case it has sub-entrylists). In other words, SetEntriesRange can; /// be used to only loop over part of the TEntryList, but not to further restrict the actual TTree/TChain entry numbers; /// considered.; ///; /// \param beginEntry The first entry to be loaded by `Next()`.; /// \param endEntry The entry where `Next()` will return false, not loading it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:3,Deployability,Update,Update,3,"// Update data members to correctly reflect the defined range",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:13,Performance,cache,cache,13,"// Reset the cache if reading from the first entry of the tree",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:3,Performance,Load,Load,3,"// Load the first entry in the range. SetEntry() will also call SetProxies(),; // thus adding all the branches to the cache and triggering the learning phase.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:118,Performance,cache,cache,118,"// Load the first entry in the range. SetEntry() will also call SetProxies(),; // thus adding all the branches to the cache and triggering the learning phase.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:143,Usability,learn,learning,143,"// Load the first entry in the range. SetEntry() will also call SetProxies(),; // thus adding all the branches to the cache and triggering the learning phase.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:86,Performance,Load,Load,86,"////////////////////////////////////////////////////////////////////////////////; /// Load an entry into the tree, return the status of the read.; /// For chains, entry is the global (i.e. not tree-local) entry number, unless; /// `local` is `true`, in which case `entry` specifies the entry number within; /// the current tree. This is needed for instance for TSelector::Process().",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:75,Performance,load,load,75,"// Passed the end of the chain, Restart() was not called:; // don't try to load entries anymore. Can happen in these cases:; // while (tr.Next()) {something()};; // while (tr.Next()) {somethingelse()}; // should not be calling somethingelse().",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:158,Availability,robust,robust,158,"// ROOT-9628 We cover here the case when:; // - We deal with a TChain; // - The last file is opened; // - The TTree is not correctly loaded; // The system is robust against issues with TTrees associated to the chain; // when they are not at the end of it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:133,Performance,load,loaded,133,"// ROOT-9628 We cover here the case when:; // - We deal with a TChain; // - The last file is opened; // - The TTree is not correctly loaded; // The system is robust against issues with TTrees associated to the chain; // when they are not at the end of it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:276,Availability,avail,available,276,"// Even though one (or more) branches might be missing from the new; // tree, other branches might still be there. We know we are switching; // into the tree at this point, so we want the director to start; // reading again from local entry 0, for those branches that are; // available",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:115,Performance,load,load,115,"// Convey the information that a branch was not found either when; // switching to a new tree (i.e. when trying to load its first entry) or; // even if we are in the middle of the tree (e.g. by calling SetEntriesRange; // beforehand) but a proxy was not created because of the missing branch",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:60,Availability,failure,failure,60,"// If the friend does not have a TTreeIndex, the cause of a failure reading an entry; // is most probably a difference in number of entries between main tree and friend tree",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:94,Deployability,update,update,94,"////////////////////////////////////////////////////////////////////////////////; /// Set (or update) the which tree to read from. `tree` can be; /// a TTree or a TChain.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:94,Deployability,update,update,94,"////////////////////////////////////////////////////////////////////////////////; /// Set (or update) the which tree to read from, passing the name of a tree in a; /// directory.; ///; /// \param keyname - name of the tree in `dir`; /// \param dir - the `TDirectory` to load `keyname` from (or gDirectory if `nullptr`); /// \param entryList - the `TEntryList` to attach to the `TTreeReader`.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx:270,Performance,load,load,270,"////////////////////////////////////////////////////////////////////////////////; /// Set (or update) the which tree to read from, passing the name of a tree in a; /// directory.; ///; /// \param keyname - name of the tree in `dir`; /// \param dir - the `TDirectory` to load `keyname` from (or gDirectory if `nullptr`); /// \param entryList - the `TEntryList` to attach to the `TTreeReader`.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReader.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReader.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:10,Integrability,interface,interface,10,"// Reader interface for clones arrays",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:10,Integrability,interface,interface,10,"// Reader interface for STL",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:79,Modifiability,variab,variable,79,"/// In the case of std::vector<bool> `PushProxy` also creates a temporary bool variable the address of which; /// is returned from these calls.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:145,Availability,alive,alive,145,"// Here we do not use a RAII but we empty the proxy to then fill it.; // This is done because we are returning a pointer and we need to keep; // alive the memory it points to.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:10,Integrability,interface,interface,10,"// Reader interface for leaf list; // SEE TTreeProxyGenerator.cxx:1319: '//We have a top level raw type'",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:10,Integrability,interface,interface,10,"// Reader interface for fixed size arrays",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:3,Availability,Error,Error,3,"// Error will be printed by GetLeaf",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:3,Availability,Error,Error,3,"// Error will be printed by GetLeaf",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:269,Availability,error,errors,269,"// Access a branch's collection content (not the collection itself); // through a proxy.; // Search for the branchname, determine what it contains, and wire the; // TBranchProxy representing it to us so we can access its data.; // Tell the branch proxy to suppress the errors for missing branch if this; // branch name is found in the list of suppressions",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:3,Security,Access,Access,3,"// Access a branch's collection content (not the collection itself); // through a proxy.; // Search for the branchname, determine what it contains, and wire the; // TBranchProxy representing it to us so we can access its data.; // Tell the branch proxy to suppress the errors for missing branch if this; // branch name is found in the list of suppressions",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:210,Security,access,access,210,"// Access a branch's collection content (not the collection itself); // through a proxy.; // Search for the branchname, determine what it contains, and wire the; // TBranchProxy representing it to us so we can access its data.; // Tell the branch proxy to suppress the errors for missing branch if this; // branch name is found in the list of suppressions",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:3,Deployability,Update,Update,3,"// Update named proxy's dictionary",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:3,Deployability,Update,Update,3,"// Update named proxy's dictionary",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:159,Availability,error,error,159,"////////////////////////////////////////////////////////////////////////////////; /// Determine the branch / leaf and its type; reset fProxy / fSetupStatus on error.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:3,Security,Access,Access,3,"// Access a branch's collection content (not the collection itself); // through a proxy.; // Search for the branchname, determine what it contains, and wire the; // TBranchProxy representing it to us so we can access its data.; // A proxy for branch must not have been created before (i.e. check; // fProxies before calling this function!)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:210,Security,access,access,210,"// Access a branch's collection content (not the collection itself); // through a proxy.; // Search for the branchname, determine what it contains, and wire the; // TBranchProxy representing it to us so we can access its data.; // A proxy for branch must not have been created before (i.e. check; // fProxies before calling this function!)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx:86,Security,Access,Access,86,"////////////////////////////////////////////////////////////////////////////////; /// Access a branch's collection content (not the collection itself); /// through a proxy.; /// Retrieve the type of data contained in the collection stored by branch;; /// put its dictionary into dict, If there is no dictionary, put its type; /// name into contentTypeName.; /// The contentTypeName is set to NULL if the branch does not; /// contain a collection; in that case, the type of the branch is returned.; /// In all other cases, NULL is returned.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderArray.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderArray.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:208,Modifiability,inherit,inheriting,208,"// Loop through elements (i.e., sub-branches). The problem is that the elements; // and sub-branches do not always match. For example suppose that class A contains; // members x and y, and there is a class B inheriting from A and containing an extra; // member z. It is possible that B has two elements: A and z but three sub-branches; // x, y and z. Therefore, the branch iterator is treated differently.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:61,Availability,avail,available,61,"// Iterator for sub-branches; // Always start with the first available sub-branch and if it does not match the element,; // try the next ones",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:42,Modifiability,inherit,inherit,42,"// Is the actual sub-branch a collection (inherit from parent branch); // Get data type",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:109,Security,access,access,109,"// The branch contains a non-split base class; // FIXME: nothing to do in such cases, because readers cannot access; // non-split members and a reader for the whole branch will be added",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:104,Security,access,access,104,"// The branch contains a non-split class; // FIXME: nothing to do in such cases, because readers cannot access; // non-split members and a reader for the whole branch will be added",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:113,Modifiability,variab,variables,113,"////////////////////////////////////////////////////////////////////////////////; /// Analyze branch and add the variables found. The number of analyzed; /// sub-branches is returned.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:115,Modifiability,variab,variables,115,"////////////////////////////////////////////////////////////////////////////////; /// Analyze the leaf and add the variables found.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:50,Modifiability,variab,variable,50,"// maxDim[dim] = -2; // Index is calculated via a variable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:151,Integrability,depend,depending,151,"////////////////////////////////////////////////////////////////////////////////; /// Check whether a branch should have a corresponding reader added, depending; /// on the options provided by the user.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:122,Performance,load,loaded,122,"// In the case of a chain, the GetDirectory information usually does; // pertain to the Chain itself but to the currently loaded tree.; // So we can not rely on it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:158,Security,access,access,158,"R""CODE( : public TSelector {; public :; TTreeReader fReader; //!the tree reader; TTree *fChain = 0; //!pointer to the analyzed TTree or TChain. // Readers to access the data (delete the ones you do not need).; )CODE""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:253,Integrability,rout,routine,253,"R""CODE(::Init(TTree *tree); {; // The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the reader is initialized.; // It is normally not necessary to make changes to the generated; // code, but the routine can be extended by the user if needed.; // Init() will be called many times when running on PROOF; // (once per file to be processed). fReader.SetTree(tree);; }. bool )CODE""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:268,Modifiability,extend,extended,268,"R""CODE(::Init(TTree *tree); {; // The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the reader is initialized.; // It is normally not necessary to make changes to the generated; // code, but the routine can be extended by the user if needed.; // Init() will be called many times when running on PROOF; // (once per file to be processed). fReader.SetTree(tree);; }. bool )CODE""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:273,Integrability,rout,routine,273,"R""CODE(::Notify(); {; // The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. It is normally not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed. The return value is currently not used. return true;; }. #endif // #ifdef )CODE""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:288,Modifiability,extend,extended,288,"R""CODE(::Notify(); {; // The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. It is normally not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed. The return value is currently not used. return true;; }. #endif // #ifdef )CODE""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:349,Availability,avail,available,349,"R""CODE(::Process(Long64_t entry); {; // The Process() function is called for each entry in the tree (or possibly; // keyed object in the case of PROOF) to be processed. The entry argument; // specifies which entry in the currently loaded tree is to be processed.; // When processing keyed objects with PROOF, the object is already loaded; // and is available via the fObject pointer.; //; // This function should contain the \""body\"" of the analysis. It can contain; // simple or elaborate selection criteria, run algorithms on the data; // of the event and typically fill histograms.; //; // The processing can be stopped by calling Abort().; //; // Use fStatus to set the return value of TTree::Process().; //; // The return value is currently not used. fReader.SetLocalEntry(entry);. return true;; }. void )CODE""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:231,Performance,load,loaded,231,"R""CODE(::Process(Long64_t entry); {; // The Process() function is called for each entry in the tree (or possibly; // keyed object in the case of PROOF) to be processed. The entry argument; // specifies which entry in the currently loaded tree is to be processed.; // When processing keyed objects with PROOF, the object is already loaded; // and is available via the fObject pointer.; //; // This function should contain the \""body\"" of the analysis. It can contain; // simple or elaborate selection criteria, run algorithms on the data; // of the event and typically fill histograms.; //; // The processing can be stopped by calling Abort().; //; // Use fStatus to set the return value of TTree::Process().; //; // The return value is currently not used. fReader.SetLocalEntry(entry);. return true;; }. void )CODE""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:331,Performance,load,loaded,331,"R""CODE(::Process(Long64_t entry); {; // The Process() function is called for each entry in the tree (or possibly; // keyed object in the case of PROOF) to be processed. The entry argument; // specifies which entry in the currently loaded tree is to be processed.; // When processing keyed objects with PROOF, the object is already loaded; // and is available via the fObject pointer.; //; // This function should contain the \""body\"" of the analysis. It can contain; // simple or elaborate selection criteria, run algorithms on the data; // of the event and typically fill histograms.; //; // The processing can be stopped by calling Abort().; //; // Use fStatus to set the return value of TTree::Process().; //; // The return value is currently not used. fReader.SetLocalEntry(entry);. return true;; }. void )CODE""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:634,Safety,Abort,Abort,634,"R""CODE(::Process(Long64_t entry); {; // The Process() function is called for each entry in the tree (or possibly; // keyed object in the case of PROOF) to be processed. The entry argument; // specifies which entry in the currently loaded tree is to be processed.; // When processing keyed objects with PROOF, the object is already loaded; // and is available via the fObject pointer.; //; // This function should contain the \""body\"" of the analysis. It can contain; // simple or elaborate selection criteria, run algorithms on the data; // of the event and typically fill histograms.; //; // The processing can be stopped by calling Abort().; //; // Use fStatus to set the return value of TTree::Process().; //; // The return value is currently not used. fReader.SetLocalEntry(entry);. return true;; }. void )CODE""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx:470,Usability,simpl,simple,470,"R""CODE(::Process(Long64_t entry); {; // The Process() function is called for each entry in the tree (or possibly; // keyed object in the case of PROOF) to be processed. The entry argument; // specifies which entry in the currently loaded tree is to be processed.; // When processing keyed objects with PROOF, the object is already loaded; // and is available via the fObject pointer.; //; // This function should contain the \""body\"" of the analysis. It can contain; // simple or elaborate selection criteria, run algorithms on the data; // of the event and typically fill histograms.; //; // The processing can be stopped by calling Abort().; //; // Use fStatus to set the return value of TTree::Process().; //; // The return value is currently not used. fReader.SetLocalEntry(entry);. return true;; }. void )CODE""",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderGenerator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderGenerator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:88,Integrability,interface,interface,88,"// clang-format off; /**; * \class TTreeReaderValue; * \ingroup treeplayer; * \brief An interface for reading values stored in ROOT columnar datasets; *; * The TTreeReaderValue is a type-safe tool to be used in association with a TTreeReader; * to access the values stored in TTree, TNtuple and TChain datasets.; * TTreeReaderValue can be also used to access collections such as `std::vector`s or TClonesArray; * stored in columnar datasets but it is recommended to use TTreeReaderArray instead as it offers; * several advantages.; *; * See the documentation of TTreeReader for more details and examples.; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:187,Safety,safe,safe,187,"// clang-format off; /**; * \class TTreeReaderValue; * \ingroup treeplayer; * \brief An interface for reading values stored in ROOT columnar datasets; *; * The TTreeReaderValue is a type-safe tool to be used in association with a TTreeReader; * to access the values stored in TTree, TNtuple and TChain datasets.; * TTreeReaderValue can be also used to access collections such as `std::vector`s or TClonesArray; * stored in columnar datasets but it is recommended to use TTreeReaderArray instead as it offers; * several advantages.; *; * See the documentation of TTreeReader for more details and examples.; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:248,Security,access,access,248,"// clang-format off; /**; * \class TTreeReaderValue; * \ingroup treeplayer; * \brief An interface for reading values stored in ROOT columnar datasets; *; * The TTreeReaderValue is a type-safe tool to be used in association with a TTreeReader; * to access the values stored in TTree, TNtuple and TChain datasets.; * TTreeReaderValue can be also used to access collections such as `std::vector`s or TClonesArray; * stored in columnar datasets but it is recommended to use TTreeReaderArray instead as it offers; * several advantages.; *; * See the documentation of TTreeReader for more details and examples.; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:352,Security,access,access,352,"// clang-format off; /**; * \class TTreeReaderValue; * \ingroup treeplayer; * \brief An interface for reading values stored in ROOT columnar datasets; *; * The TTreeReaderValue is a type-safe tool to be used in association with a TTreeReader; * to access the values stored in TTree, TNtuple and TChain datasets.; * TTreeReaderValue can be also used to access collections such as `std::vector`s or TClonesArray; * stored in columnar datasets but it is recommended to use TTreeReaderArray instead as it offers; * several advantages.; *; * See the documentation of TTreeReader for more details and examples.; */; // clang-format on",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:76,Availability,error,error,76,"// If somehow the Setup fails call the original Read to; // have the proper error handling (message only if the Setup fails; // and the current proxy entry is different than the TTree's current entry)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:92,Integrability,message,message,92,"// If somehow the Setup fails call the original Read to; // have the proper error handling (message only if the Setup fails; // and the current proxy entry is different than the TTree's current entry)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:131,Deployability,Update,Update,131,"////////////////////////////////////////////////////////////////////////////////; /// The TTreeReader has switched to a new TTree. Update the leaf.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:146,Safety,avoid,avoid,146,"// If an indexed friend did not match the current entry and if this reader; // is associated with that friend (i.e. its active read entry is -1), avoid; // reading altogether",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:355,Availability,error,error,355,"////////////////////////////////////////////////////////////////////////////////; /// \brief Search a branch the name of which contains a "".""; /// \param[out] myLeaf The leaf identified by the name if found (can be untouched).; /// \param[out] branchActualType Dictionary associated to the type of the leaf (can be untouched).; /// \param[out] errMsg The error message (can be untouched).; /// \return The address of the branch if found, nullptr otherwise; /// This method allows to efficiently search for branches which have names which; /// contain ""dots"", for example ""w.v.a"" or ""v.a"".; /// Therefore, it allows to support names such as v.a where the branch was; /// created with this syntax:; /// ```{.cpp}; /// myTree->Branch(""v"", &v, ""a/I:b:/I""); /// ```; /// The method has some side effects, namely it can modify fSetupStatus, fProxy; /// and fStaticClassOffsets/fHaveStaticClassOffsets.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:483,Energy Efficiency,efficient,efficiently,483,"////////////////////////////////////////////////////////////////////////////////; /// \brief Search a branch the name of which contains a "".""; /// \param[out] myLeaf The leaf identified by the name if found (can be untouched).; /// \param[out] branchActualType Dictionary associated to the type of the leaf (can be untouched).; /// \param[out] errMsg The error message (can be untouched).; /// \return The address of the branch if found, nullptr otherwise; /// This method allows to efficiently search for branches which have names which; /// contain ""dots"", for example ""w.v.a"" or ""v.a"".; /// Therefore, it allows to support names such as v.a where the branch was; /// created with this syntax:; /// ```{.cpp}; /// myTree->Branch(""v"", &v, ""a/I:b:/I""); /// ```; /// The method has some side effects, namely it can modify fSetupStatus, fProxy; /// and fStaticClassOffsets/fHaveStaticClassOffsets.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:361,Integrability,message,message,361,"////////////////////////////////////////////////////////////////////////////////; /// \brief Search a branch the name of which contains a "".""; /// \param[out] myLeaf The leaf identified by the name if found (can be untouched).; /// \param[out] branchActualType Dictionary associated to the type of the leaf (can be untouched).; /// \param[out] errMsg The error message (can be untouched).; /// \return The address of the branch if found, nullptr otherwise; /// This method allows to efficiently search for branches which have names which; /// contain ""dots"", for example ""w.v.a"" or ""v.a"".; /// Therefore, it allows to support names such as v.a where the branch was; /// created with this syntax:; /// ```{.cpp}; /// myTree->Branch(""v"", &v, ""a/I:b:/I""); /// ```; /// The method has some side effects, namely it can modify fSetupStatus, fProxy; /// and fStaticClassOffsets/fHaveStaticClassOffsets.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:120,Security,access,access,120,"// Search for the branchname, determine what it contains, and wire the; // TBranchProxy representing it to us so we can access its data.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:44,Availability,error,errors,44,"// Check whether the user wants to suppress errors for this specific branch; // if it is missing. We have to use this information differently in two; // different situations:; // - If the branch was present in the first tree of the chain, but missing; // when switching to a new tree; // - If the branch is missing from the first tree already. In this case we; // also need to postpone the creation of the branch proxy until at least; // one tree in the chain has that branch",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:13,Availability,error,error,13,"// We had an error, the branch name had no ""."" or we simply did not find anything.; // We check if we had a branch found with the full name with a dot in it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:53,Usability,simpl,simply,53,"// We had an error, the branch name had no ""."" or we simply did not find anything.; // We check if we had a branch found with the full name with a dot in it.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:39,Availability,error,error,39,"// Also that one was empty. We need to error out, but only if the user; // did not explicitly request to avoid errors about missing branches",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:111,Availability,error,errors,111,"// Also that one was empty. We need to error out, but only if the user; // did not explicitly request to avoid errors about missing branches",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:105,Safety,avoid,avoid,105,"// Also that one was empty. We need to error out, but only if the user; // did not explicitly request to avoid errors about missing branches",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:10,Availability,error,error,10,"// Now we error out, first checking if we did not get a more specific; // error message from SearchBranchWithCompositeName. If not, we go with; // a generic message.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:74,Availability,error,error,74,"// Now we error out, first checking if we did not get a more specific; // error message from SearchBranchWithCompositeName. If not, we go with; // a generic message.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:80,Integrability,message,message,80,"// Now we error out, first checking if we did not get a more specific; // error message from SearchBranchWithCompositeName. If not, we go with; // a generic message.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:157,Integrability,message,message,157,"// Now we error out, first checking if we did not get a more specific; // error message from SearchBranchWithCompositeName. If not, we go with; // a generic message.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:29,Usability,simpl,simplest,29,"// The branch found with the simplest search approach was successful.; // We reset the state, we continue",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:66,Modifiability,inherit,inheritance,66,"// Check if the dictionaries are TClass instances and if there is inheritance; // because in this case, we can read the values.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:120,Security,access,access,120,"// Search for the branchname, determine what it contains, and wire the; // TBranchProxy representing it to us so we can access its data.; // A proxy for branch must not have been created before (i.e. check; // fProxies before calling this function!)",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:3,Deployability,Update,Update,3,"// Update named proxy's dictionary",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:207,Availability,avail,available,207,"////////////////////////////////////////////////////////////////////////////////; /// Retrieve the type of data stored by branch; put its dictionary into; /// dict, return its type name. If no dictionary is available, at least; /// its type name should be returned.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:13,Availability,error,error,13,"// Print the error only if the branch name does not appear in the list of; // missing proxies that the user explicitly requested not to error about",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:136,Availability,error,error,136,"// Print the error only if the branch name does not appear in the list of; // missing proxies that the user explicitly requested not to error about",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:129,Modifiability,inherit,inherit,129,"// The value printers of TTreeReaderValue and TTreeReaderArray rely on the; // one of TTreeReaderValueBase, from which they both inherit.; // This is why we use RTTI inside the function, avoiding to duplicate code.; // The performance penalty is irrelevant because we are already printing; // the objects in an interactive environment.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:223,Performance,perform,performance,223,"// The value printers of TTreeReaderValue and TTreeReaderArray rely on the; // one of TTreeReaderValueBase, from which they both inherit.; // This is why we use RTTI inside the function, avoiding to duplicate code.; // The performance penalty is irrelevant because we are already printing; // the objects in an interactive environment.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx:187,Safety,avoid,avoiding,187,"// The value printers of TTreeReaderValue and TTreeReaderArray rely on the; // one of TTreeReaderValueBase, from which they both inherit.; // This is why we use RTTI inside the function, avoiding to duplicate code.; // The performance penalty is irrelevant because we are already printing; // the objects in an interactive environment.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeReaderValue.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeReaderValue.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:420,Deployability,Update,Update,420,"/** \class TTreeTableInterface. TTreeTableInterface is used to interface to data that is stored in a; TTree. When the interface is created, an expression can be; specified. This expression will define the columns to be shown. A selection criterium can also be specified. A TEntryList will be; created and applied to the TTree using this criterium.; a new TEntryList to use can be specified using SetEntryList.; TGTable->Update() will need to be called to show the effects. WARNING: Do not apply an entrylist to the tree in any other way than; through the interface, this will have undefined consequences. Columns can be manipulated using the appropriate methods. A; TGTable->Update is always needed afterwards to make the table aware; of the changes.; */; ////////////////////////////////////////////////////////////////////////////////; /// TTreeTableInterface constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:675,Deployability,Update,Update,675,"/** \class TTreeTableInterface. TTreeTableInterface is used to interface to data that is stored in a; TTree. When the interface is created, an expression can be; specified. This expression will define the columns to be shown. A selection criterium can also be specified. A TEntryList will be; created and applied to the TTree using this criterium.; a new TEntryList to use can be specified using SetEntryList.; TGTable->Update() will need to be called to show the effects. WARNING: Do not apply an entrylist to the tree in any other way than; through the interface, this will have undefined consequences. Columns can be manipulated using the appropriate methods. A; TGTable->Update is always needed afterwards to make the table aware; of the changes.; */; ////////////////////////////////////////////////////////////////////////////////; /// TTreeTableInterface constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:63,Integrability,interface,interface,63,"/** \class TTreeTableInterface. TTreeTableInterface is used to interface to data that is stored in a; TTree. When the interface is created, an expression can be; specified. This expression will define the columns to be shown. A selection criterium can also be specified. A TEntryList will be; created and applied to the TTree using this criterium.; a new TEntryList to use can be specified using SetEntryList.; TGTable->Update() will need to be called to show the effects. WARNING: Do not apply an entrylist to the tree in any other way than; through the interface, this will have undefined consequences. Columns can be manipulated using the appropriate methods. A; TGTable->Update is always needed afterwards to make the table aware; of the changes.; */; ////////////////////////////////////////////////////////////////////////////////; /// TTreeTableInterface constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:118,Integrability,interface,interface,118,"/** \class TTreeTableInterface. TTreeTableInterface is used to interface to data that is stored in a; TTree. When the interface is created, an expression can be; specified. This expression will define the columns to be shown. A selection criterium can also be specified. A TEntryList will be; created and applied to the TTree using this criterium.; a new TEntryList to use can be specified using SetEntryList.; TGTable->Update() will need to be called to show the effects. WARNING: Do not apply an entrylist to the tree in any other way than; through the interface, this will have undefined consequences. Columns can be manipulated using the appropriate methods. A; TGTable->Update is always needed afterwards to make the table aware; of the changes.; */; ////////////////////////////////////////////////////////////////////////////////; /// TTreeTableInterface constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:555,Integrability,interface,interface,555,"/** \class TTreeTableInterface. TTreeTableInterface is used to interface to data that is stored in a; TTree. When the interface is created, an expression can be; specified. This expression will define the columns to be shown. A selection criterium can also be specified. A TEntryList will be; created and applied to the TTree using this criterium.; a new TEntryList to use can be specified using SetEntryList.; TGTable->Update() will need to be called to show the effects. WARNING: Do not apply an entrylist to the tree in any other way than; through the interface, this will have undefined consequences. Columns can be manipulated using the appropriate methods. A; TGTable->Update is always needed afterwards to make the table aware; of the changes.; */; ////////////////////////////////////////////////////////////////////////////////; /// TTreeTableInterface constructor.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:98,Modifiability,variab,variables,98,"////////////////////////////////////////////////////////////////////////////////; /// Compile the variables expression from the given varexp.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:32,Availability,avail,available,32,"// if varexp is empty, take all available leaves as a column",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:23,Deployability,update,update,23,"// SyncFormulas() will update the formula manager if needed",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:114,Availability,avail,available,114,"////////////////////////////////////////////////////////////////////////////////; /// Return the amount of column available.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:148,Deployability,Update,Update,148,"////////////////////////////////////////////////////////////////////////////////; /// Add column according ot expression at position,; /// TGTable->Update() is needed afterwards to apply the change to; /// the TGTable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:132,Deployability,Update,Update,132,"////////////////////////////////////////////////////////////////////////////////; /// Add column with formula at position, TGTable->Update() is needed; /// afterwards to apply the change to the TGTable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx:122,Deployability,Update,Update,122,"////////////////////////////////////////////////////////////////////////////////; /// Remove column at position, TGTable->Update() is needed; /// afterwards to apply the change to the TGTable.",MatchSource.CODE_COMMENT,tree/treeplayer/src/TTreeTableInterface.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/src/TTreeTableInterface.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/basic.cxx:24,Usability,simpl,simply,24,"// Is SetEntriesRange() simply ignored as it should be?",MatchSource.CODE_COMMENT,tree/treeplayer/test/basic.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/basic.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/branchobject.cxx:162,Testability,test,test,162,"// Issue #12334; // branchobject.root created as; //; // ~~~ {.cpp}; // f = new TFile(""branchobject.root"", ""RECREATE"");; // TTree *t = new TTree(""branchobject"", ""test tree for branchobject.cxx"");; // ROOT::Math::LorentzVector<ROOT::Math::PtEtaPhiM4D<Double32_t>> lv(1., 2., 3., 4.);; // t->Branch(""lv32"", &lv);; // t->Fill();; // t->Write();; // ~~~",MatchSource.CODE_COMMENT,tree/treeplayer/test/branchobject.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/branchobject.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/branchobject.cxx:60,Availability,avail,available,60,"// Ensure that the mismatching `<double>` specialization is available, i.e. will; // be chosen given the typeid of the TTreeReaderValue template argument.",MatchSource.CODE_COMMENT,tree/treeplayer/test/branchobject.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/branchobject.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/leafs.cxx:61,Availability,error,error,61,"// reading a float[] with a TTreeReaderValue should cause an error",MatchSource.CODE_COMMENT,tree/treeplayer/test/leafs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/leafs.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/leafs.cxx:3,Testability,Test,Test,3,"// Test for https://github.com/root-project/root/issues/6881",MatchSource.CODE_COMMENT,tree/treeplayer/test/leafs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/leafs.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/readerarray_iterator.cxx:3,Performance,load,load,3,"// load full entry",MatchSource.CODE_COMMENT,tree/treeplayer/test/readerarray_iterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/readerarray_iterator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/readerarray_iterator.cxx:3,Performance,load,load,3,"// load empty entry",MatchSource.CODE_COMMENT,tree/treeplayer/test/readerarray_iterator.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/readerarray_iterator.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/regressions.cxx:14,Testability,test,test,14,"// Regression test for https://github.com/root-project/root/issues/6993",MatchSource.CODE_COMMENT,tree/treeplayer/test/regressions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/regressions.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/regressions.cxx:98,Performance,load,loads,98,"// write a TTree and its friend to the same file:; // when t1 is read back, it automatically also loads its friend",MatchSource.CODE_COMMENT,tree/treeplayer/test/regressions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/regressions.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/regressions.cxx:3,Testability,Test,Test,3,"// Test reading back with TTreeReader+TTree",MatchSource.CODE_COMMENT,tree/treeplayer/test/regressions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/regressions.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/regressions.cxx:3,Testability,Test,Test,3,"// Test reading back with TTreeReader+TChain",MatchSource.CODE_COMMENT,tree/treeplayer/test/regressions.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/regressions.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/treeprocs/treeprocessors.cxx:3,Testability,Test,Test,3,"// Test function",MatchSource.CODE_COMMENT,tree/treeplayer/test/treeprocs/treeprocessors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/treeprocs/treeprocessors.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/treeprocs/treeprocessors.cxx:3,Testability,Test,Test,3,"// Test selector",MatchSource.CODE_COMMENT,tree/treeplayer/test/treeprocs/treeprocessors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/treeprocs/treeprocessors.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/treeprocs/treeprocessors.cxx:73,Safety,detect,detected,73,"// we need a file because in-memory trees are not supported; // (and are detected at TTreeProcessorMT construction time)",MatchSource.CODE_COMMENT,tree/treeplayer/test/treeprocs/treeprocessors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/treeprocs/treeprocessors.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/treeprocs/treeprocessors.cxx:73,Safety,detect,detected,73,"// we need a file because in-memory trees are not supported; // (and are detected at TTreeProcessorMT construction time)",MatchSource.CODE_COMMENT,tree/treeplayer/test/treeprocs/treeprocessors.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeplayer/test/treeprocs/treeprocessors.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:11,Modifiability,variab,variable,11,"///< Every variable is on the same scale.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:11,Modifiability,variab,variable,11,"///< Every variable in log scale.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:23,Testability,log,log,23,"///< Every variable in log scale.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:15,Modifiability,variab,variables,15,"///< Number of variables.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:17,Modifiability,variab,variables,17,"///< List of the variables.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:33,Modifiability,variab,variables,33,"///< List of selections over the variables.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=GetCandleChart",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=GetCurveDisplay",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=GetGlobalScale",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=GetGlobalLogScale",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=GetVertDisplay",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoord.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoord.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordRange.h:5,Modifiability,Variab,Variable,5,"///< Variable owning the range.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoordRange.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordRange.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:24,Modifiability,variab,variable,24,"///< Id identifying the variable for the editor.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoordVar.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:40,Modifiability,variab,variable,40,"///<![fNentries] Entries values for the variable.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoordVar.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:28,Modifiability,variab,variable,28,"///<! Histogram holding the variable distribution.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoordVar.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=GetBoxPlot",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoordVar.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=GetBarHisto",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoordVar.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE* *GETTER=GetLogScale",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoordVar.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h:5,Modifiability,Variab,Variable,5,"// A Variable of a parallel coordinates plot.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TParallelCoordVar.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TParallelCoordVar.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:15,Modifiability,variab,variables,15,"///< Number of variables.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpider.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:35,Modifiability,variab,variable,35,"///<[fNcols] Average value of each variable.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpider.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:34,Modifiability,variab,variables,34,"///<[fNcols] Maximum value of the variables.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpider.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:34,Modifiability,variab,variables,34,"///<[fNcols] Minimum value of the variables.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpider.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:38,Modifiability,variab,variables,38,"///< Polygon representing the average variables value.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpider.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:31,Modifiability,variab,variables,31,"///< Polygons representing the variables.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpider.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:19,Modifiability,variab,variables,19,"///< Show range of variables or not.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpider.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE*",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpider.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h:4,Deployability,TOGGLE,TOGGLE,4,"// *TOGGLE*",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpider.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpider.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpiderEditor.h:9,Modifiability,variab,variable,9,"///< Add variable field.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpiderEditor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpiderEditor.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpiderEditor.h:12,Modifiability,variab,variable,12,"///< Delete variable field.",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TSpiderEditor.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TSpiderEditor.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TTreeViewer.h:23,Deployability,toggle,toggle,23,"///< Command recording toggle",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TTreeViewer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TTreeViewer.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TTreeViewer.h:5,Usability,Progress bar,Progress bar,5,"///< Progress bar frame",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TTreeViewer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TTreeViewer.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TTreeViewer.h:5,Usability,Progress bar,Progress bar,5,"///< Progress bar",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TTreeViewer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TTreeViewer.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TTreeViewer.h:5,Usability,clear,clear,5,"///< clear expression's entries; ///@}; ///@{; /// @name ListTree",MatchSource.CODE_COMMENT,tree/treeviewer/inc/TTreeViewer.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/inc/TTreeViewer.h
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TGTreeTable.cxx:68,Integrability,interface,interface,68,"/** \class TGTreeTable. TGTreeTable is a TGTable that owns it's own interface.; It can be used to view a TTree. If an expression is given to the; constructor, it will be used to define the columns. A selection can; also be given. This selection is applied to the TTree as a; TEntryList. See the documentation of TGTable for more information. The interface is accesible after the creation through the; GetInterface() method.; */; ////////////////////////////////////////////////////////////////////////////////; /// TGTreeTable constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TGTreeTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TGTreeTable.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TGTreeTable.cxx:346,Integrability,interface,interface,346,"/** \class TGTreeTable. TGTreeTable is a TGTable that owns it's own interface.; It can be used to view a TTree. If an expression is given to the; constructor, it will be used to define the columns. A selection can; also be given. This selection is applied to the TTree as a; TEntryList. See the documentation of TGTable for more information. The interface is accesible after the creation through the; GetInterface() method.; */; ////////////////////////////////////////////////////////////////////////////////; /// TGTreeTable constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TGTreeTable.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TGTreeTable.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:1010,Availability,avail,available,1010,"** \class TParallelCoord; Parallel Coordinates class. The multidimensional system of Parallel coordinates is a common way of studying; high-dimensional geometry and visualizing multivariate problems. It has first; been proposed by A. Inselberg in 1981. To show a set of points in an n-dimensional space, a backdrop is drawn; consisting of n parallel lines. A point in n-dimensional space is represented as; a polyline with vertices on the parallel axes; the position of the vertex on the; i-th axis corresponds to the i-th coordinate of the point. This tool comes with a rather large gui in the editor. It is necessary to use; this editor in order to explore a data set, as explained below. ### Reduce cluttering:. The main issue for parallel coordinates is the very high cluttering of the; output when dealing with large data set. Two techniques have been implemented to; bypass that so far:. - Draw doted lines instead of plain lines with an adjustable dots spacing. A; slider to adjust the dots spacing is available in the editor.; - Sort the entries to display with a ""weight cut"". On each axis is drawn a; histogram describing the distribution of the data on the corresponding; variable. The ""weight"" of an entry is the sum of the bin content of each bin; the entry is going through. An entry going through the histograms peaks will; have a big weight wether an entry going randomly through the histograms will; have a rather small weight. Setting a cut on this weight allows to draw only; the most representative entries. A slider set the cut is also available in; the gui. ## Selections:. Selections of specific entries can be defined over the data se using parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Se",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:1558,Availability,avail,available,1558,"tool comes with a rather large gui in the editor. It is necessary to use; this editor in order to explore a data set, as explained below. ### Reduce cluttering:. The main issue for parallel coordinates is the very high cluttering of the; output when dealing with large data set. Two techniques have been implemented to; bypass that so far:. - Draw doted lines instead of plain lines with an adjustable dots spacing. A; slider to adjust the dots spacing is available in the editor.; - Sort the entries to display with a ""weight cut"". On each axis is drawn a; histogram describing the distribution of the data on the corresponding; variable. The ""weight"" of an entry is the sum of the bin content of each bin; the entry is going through. An entry going through the histograms peaks will; have a big weight wether an entry going randomly through the histograms will; have a rather small weight. Setting a cut on this weight allows to draw only; the most representative entries. A slider set the cut is also available in; the gui. ## Selections:. Selections of specific entries can be defined over the data se using parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2665,Availability,avail,available,2665,"ing parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; ~~~. ### Some refere",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2705,Availability,avail,available,2705,"ion, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; ~~~. ### Some references:. - Alfred Inselberg's Homepage <http://www",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:696,Energy Efficiency,Reduce,Reduce,696,"/** \class TParallelCoord; Parallel Coordinates class. The multidimensional system of Parallel coordinates is a common way of studying; high-dimensional geometry and visualizing multivariate problems. It has first; been proposed by A. Inselberg in 1981. To show a set of points in an n-dimensional space, a backdrop is drawn; consisting of n parallel lines. A point in n-dimensional space is represented as; a polyline with vertices on the parallel axes; the position of the vertex on the; i-th axis corresponds to the i-th coordinate of the point. This tool comes with a rather large gui in the editor. It is necessary to use; this editor in order to explore a data set, as explained below. ### Reduce cluttering:. The main issue for parallel coordinates is the very high cluttering of the; output when dealing with large data set. Two techniques have been implemented to; bypass that so far:. - Draw doted lines instead of plain lines with an adjustable dots spacing. A; slider to adjust the dots spacing is available in the editor.; - Sort the entries to display with a ""weight cut"". On each axis is drawn a; histogram describing the distribution of the data on the corresponding; variable. The ""weight"" of an entry is the sum of the bin content of each bin; the entry is going through. An entry going through the histograms peaks will; have a big weight wether an entry going randomly through the histograms will; have a rather small weight. Setting a cut on this weight allows to draw only; the most representative entries. A slider set the cut is also available in; the gui. ## Selections:. Selections of specific entries can be defined over the data se using parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). S",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:1184,Modifiability,variab,variable,1184,"h-dimensional geometry and visualizing multivariate problems. It has first; been proposed by A. Inselberg in 1981. To show a set of points in an n-dimensional space, a backdrop is drawn; consisting of n parallel lines. A point in n-dimensional space is represented as; a polyline with vertices on the parallel axes; the position of the vertex on the; i-th axis corresponds to the i-th coordinate of the point. This tool comes with a rather large gui in the editor. It is necessary to use; this editor in order to explore a data set, as explained below. ### Reduce cluttering:. The main issue for parallel coordinates is the very high cluttering of the; output when dealing with large data set. Two techniques have been implemented to; bypass that so far:. - Draw doted lines instead of plain lines with an adjustable dots spacing. A; slider to adjust the dots spacing is available in the editor.; - Sort the entries to display with a ""weight cut"". On each axis is drawn a; histogram describing the distribution of the data on the corresponding; variable. The ""weight"" of an entry is the sum of the bin content of each bin; the entry is going through. An entry going through the histograms peaks will; have a big weight wether an entry going randomly through the histograms will; have a rather small weight. Setting a cut on this weight allows to draw only; the most representative entries. A slider set the cut is also available in; the gui. ## Selections:. Selections of specific entries can be defined over the data se using parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to th",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2545,Modifiability,variab,variables,2545,"vailable in; the gui. ## Selections:. Selections of specific entries can be defined over the data se using parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarL",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2844,Modifiability,variab,variable,2844,"one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; ~~~. ### Some references:. - Alfred Inselberg's Homepage <http://www.math.tau.ac.il/~aiisreal>, with; Visual Tutorial, History, Selected Publications and Applications.; - Almir Olivette Artero, Maria Cristina ",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2681,Testability,log,logarithm,2681,"ion, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; grade->AddRange(new TParallelCoordRange(grade,11.5,14));; para->AddSelection(""less30"");; para->GetCurrentSelection()->SetLineColor(kViolet);; TParallelCoordVar* age = (TParallelCoordVar*)para->GetVarList()->FindObject(""Age"");; age->AddRange(new TParallelCoordRange(age,21,30));; }; ~~~. ### Some references:. - Alfred Inselberg's Homepage <http://www",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:2375,Usability,simpl,simply,2375,"er an entry going randomly through the histograms will; have a rather small weight. Setting a cut on this weight allows to draw only; the most representative entries. A slider set the cut is also available in; the gui. ## Selections:. Selections of specific entries can be defined over the data se using parallel; coordinates. With that representation, a selection is an ensemble of ranges; defined on the axes. Ranges defined on the same axis are conjugated with OR; (an entry must be in one or the other ranges to be selected). Ranges on; different axes are are conjugated with AND (an entry must be in all the ranges; to be selected). Several selections can be defined with different colors. It is; possible to generate an entry list from a given selection and apply it to the; tree using the editor (""Apply to tree"" button). ## Axes:. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis. ## Candle chart:. TParallelCoord can also be used to display a candle chart. In that mode, every; variable is drawn in the same scale. The candle chart can be combined with the; parallel coordinates mode, drawing the candle sticks over the axes. ~~~ {.cpp}; {; TCanvas *c1 = new TCanvas(""c1"");; TFile *f = TFile::Open(""cernstaff.root"");; TTree *T = (TTree*)f->Get(""T"");; T->Draw(""Age:Grade:Step:Cost:Division:Nation"","""",""para"");; TParallelCoord* para = (TParallelCoord*)gPad->GetListOfPrimitives()->FindObject(""ParaCoord"");; TParallelCoordVar* grade = (TParallelCoordVar*)para->GetVarList()->FindObject(""Grade"");; gr",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:92,Modifiability,variab,variable,92,"////////////////////////////////////////////////////////////////////////////////; /// Add a variable.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:92,Modifiability,variab,variable,92,"////////////////////////////////////////////////////////////////////////////////; /// Add a variable from an expression.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:33,Modifiability,variab,variable,33,"// ensure that there is only one variable given:",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:31,Deployability,update,update,31,"// FIXME It would be better to update the selections by deleting",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:115,Modifiability,variab,variables,115,"////////////////////////////////////////////////////////////////////////////////; /// Call constructor and add the variables.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:168,Modifiability,variab,variable,168,"////////////////////////////////////////////////////////////////////////////////; /// Clean up the selections from the ranges which could have been deleted; /// when a variable has been deleted.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:149,Performance,load,load,149,"////////////////////////////////////////////////////////////////////////////////; /// return the tree if fTree is defined. If not, the method try to load the tree; /// from fTreeFileName.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:94,Modifiability,variab,variables,94,"////////////////////////////////////////////////////////////////////////////////; /// Get the variables values from its title.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:94,Modifiability,variab,variables,94,"////////////////////////////////////////////////////////////////////////////////; /// Get the variables values from its index.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:66,Safety,avoid,avoid,66,"// beginning to paint the first point at a random distance; // to avoid artefacts when increasing the dots spacing.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:95,Modifiability,variab,variable,95,"////////////////////////////////////////////////////////////////////////////////; /// Delete a variable from the graph.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:97,Modifiability,variab,variable,97,"////////////////////////////////////////////////////////////////////////////////; /// Delete the variable ""vartitle"" from the graph.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:31,Deployability,update,update,31,"// FIXME It would be better to update the selections by deleting",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the position of the axes.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:98,Testability,log,log,98,"////////////////////////////////////////////////////////////////////////////////; /// All axes in log scale.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:96,Modifiability,variab,variables,96,"////////////////////////////////////////////////////////////////////////////////; /// Force all variables to adopt the same max.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:96,Modifiability,variab,variables,96,"////////////////////////////////////////////////////////////////////////////////; /// Force all variables to adopt the same min.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:106,Deployability,update,updated,106,"////////////////////////////////////////////////////////////////////////////////; /// If true, the pad is updated while the motion of a dragged range.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx:97,Modifiability,variab,variables,97,"////////////////////////////////////////////////////////////////////////////////; /// Unzoom all variables.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoord.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoord.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:253,Energy Efficiency,reduce,reduce,253,/** \class TParallelCoordEditor. This is the TParallelCoord editor. It brings tools to explore datas; Using parallel coordinates. The main tools are:. - Dots spacing : Set the dots spacing with which-one the lines; must be drawn. This tool is useful to reduce the image; cluttering.; - The Selections section : Set the current edited selection and; allows to apply it to the tree through a generated entry list.; - The Entries section : Set how many events must be drawn.; A weight cut can be defined here (see TParallelCoord for a; a description of the weight cut).; - The Variables tab : To define the global settings to display; the axes. It is also possible to add a variable from its; expression or delete a selected one (also possible using right; click on the pad.; */,MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:574,Modifiability,Variab,Variables,574,/** \class TParallelCoordEditor. This is the TParallelCoord editor. It brings tools to explore datas; Using parallel coordinates. The main tools are:. - Dots spacing : Set the dots spacing with which-one the lines; must be drawn. This tool is useful to reduce the image; cluttering.; - The Selections section : Set the current edited selection and; allows to apply it to the tree through a generated entry list.; - The Entries section : Set how many events must be drawn.; A weight cut can be defined here (see TParallelCoord for a; a description of the weight cut).; - The Variables tab : To define the global settings to display; the axes. It is also possible to add a variable from its; expression or delete a selected one (also possible using right; click on the pad.; */,MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:671,Modifiability,variab,variable,671,/** \class TParallelCoordEditor. This is the TParallelCoord editor. It brings tools to explore datas; Using parallel coordinates. The main tools are:. - Dots spacing : Set the dots spacing with which-one the lines; must be drawn. This tool is useful to reduce the image; cluttering.; - The Selections section : Set the current edited selection and; allows to apply it to the tree through a generated entry list.; - The Entries section : Set how many events must be drawn.; A weight cut can be defined here (see TParallelCoord for a; a description of the weight cut).; - The Variables tab : To define the global settings to display; the axes. It is also possible to add a variable from its; expression or delete a selected one (also possible using right; click on the pad.; */,MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:96,Modifiability,variab,variable,96,"////////////////////////////////////////////////////////////////////////////////; /// Make the ""variable"" tab.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:3,Modifiability,Variab,Variable,3,"// Variable",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:99,Modifiability,variab,variables,99,"////////////////////////////////////////////////////////////////////////////////; /// Clean up the variables combo box.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:100,Modifiability,variab,variable,100,"////////////////////////////////////////////////////////////////////////////////; /// Slot to add a variable.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:20,Deployability,update,update,20,"//FIXME I forgot to update the slider over the entries; // (nentries and firstentry might have changed after applying the selection)",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:103,Modifiability,variab,variable,103,"////////////////////////////////////////////////////////////////////////////////; /// Slot to delete a variable().",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:94,Deployability,update,update,94,"////////////////////////////////////////////////////////////////////////////////; /// Slot to update the entries fields from the slider position.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:94,Deployability,update,update,94,"////////////////////////////////////////////////////////////////////////////////; /// Slot to update the weight cut entry field from the slider position.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:103,Modifiability,variab,variable,103,"////////////////////////////////////////////////////////////////////////////////; /// Slot to select a variable.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx:94,Deployability,update,update,94,"////////////////////////////////////////////////////////////////////////////////; /// Slot to update the weight cut.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:567,Availability,avail,available,567,"/** \class TParallelCoordVar. TParallelCoord axes. Class containing a variable for the TParallelCoord. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:607,Availability,avail,available,607,"/** \class TParallelCoordVar. TParallelCoord axes. Class containing a variable for the TParallelCoord. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:70,Modifiability,variab,variable,70,"/** \class TParallelCoordVar. TParallelCoord axes. Class containing a variable for the TParallelCoord. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:447,Modifiability,variab,variables,447,"/** \class TParallelCoordVar. TParallelCoord axes. Class containing a variable for the TParallelCoord. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:583,Testability,log,logarithm,583,"/** \class TParallelCoordVar. TParallelCoord axes. Class containing a variable for the TParallelCoord. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:277,Usability,simpl,simply,277,"/** \class TParallelCoordVar. TParallelCoord axes. Class containing a variable for the TParallelCoord. Options can be defined each axis separately using the right mouse click. These; options can be applied to every axes using the editor. - Axis width: If set to 0, the axis is simply a line. If higher, a color; histogram is drawn on the axis.; - Axis histogram height: If not 0, a usual bar histogram is drawn on the plot. The order in which the variables are drawn is essential to see the clusters. The; axes can be dragged to change their position. A zoom is also available. The; logarithm scale is also available by right clicking on the axis.; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:93,Modifiability,variab,variables,93,"////////////////////////////////////////////////////////////////////////////////; /// Delete variables.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:3,Safety,Avoid,Avoid,3,"// Avoid zooming if the axis is just clicked.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:110,Modifiability,variab,variable,110,"////////////////////////////////////////////////////////////////////////////////; /// Get the position of the variable on the graph for the n'th entry.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:143,Modifiability,variab,variable,143,"////////////////////////////////////////////////////////////////////////////////; /// Get the entry weight: The weight of an entry for a given variable; /// is the bin content of the histogram bin the entry is going through.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:117,Modifiability,variab,variable,117,"////////////////////////////////////////////////////////////////////////////////; /// Get mean, min and max of those variable.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:114,Modifiability,variab,variables,114,"////////////////////////////////////////////////////////////////////////////////; /// Initialise the TParallelVar variables.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:28,Usability,simpl,simple,28,"// Paint the axis body as a simple line.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:106,Deployability,update,updated,106,"////////////////////////////////////////////////////////////////////////////////; /// If true, the pad is updated while the motion of a dragged range.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:102,Testability,log,log,102,"////////////////////////////////////////////////////////////////////////////////; /// Set the axis in log scale.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx:94,Modifiability,variab,variable,94,"////////////////////////////////////////////////////////////////////////////////; /// Set the variable values.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TParallelCoordVar.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TParallelCoordVar.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:297,Availability,avail,available,297,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:508,Availability,avail,available,508,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:1201,Deployability,Toggle,ToggleEditor,1201,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:628,Modifiability,variab,variables,628,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:997,Testability,log,log,997,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:1008,Testability,log,log,1008,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:576,Usability,simpl,simply,576,"/** \class TSpider; Spider class. A spider view is a handy way to visualize a set of data stored in a TTree.; It draws as many polar axes as selected data members. For each of them, it draws; on the axis the position of the present event between the min and max of the; data member. Two modes are available:. - The spider view: With each points on the axes is drawn a polyline.; - The segment view: For each data member is drawn an arc segment with the; radius corresponding to the event. The spider plot is available from the treeviewer called by; ""atree->StartViewer()"", or simply by calling its constructor and defining the; variables to display. Begin_Macro(source); {; TCanvas *c1 = new TCanvas(""c1"",""TSpider example"",200,10,700,700);; TFile *f = new TFile(""$(ROOTSYS)/tutorials/hsimple.root"");; if (!f || f->IsZombie()) {; printf(""Please run <ROOT location>/tutorials/hsimple.C before."");; return;; }; TNtuple* ntuple = (TNtuple*)f->Get(""ntuple"");; TString varexp = ""px:py:pz:random:sin(px):log(px/py):log(pz)"";; TString selectStr = ""px>0 && py>0 && pz>0"";; TString options = ""average"";; TSpider *spider = new TSpider(ntuple,varexp.Data(),selectStr.Data(),options.Data());; spider->Draw();; c1->ToggleEditor();; c1->Selected(c1,spider,1);; return c1;; }; End_Macro; */; ////////////////////////////////////////////////////////////////////////////////; /// Default constructor.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:92,Modifiability,variab,variable,92,"////////////////////////////////////////////////////////////////////////////////; /// Add a variable to the plot from its expression.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:81,Performance,load,loaded,81,"// EvalInstance(0) always needs to be called so that; // the proper branches are loaded.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:95,Modifiability,variab,variable,95,"////////////////////////////////////////////////////////////////////////////////; /// Delete a variable from its expression.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:142,Modifiability,variab,variables,142,"////////////////////////////////////////////////////////////////////////////////; /// Paint the Polygon representing the average value of the variables.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:148,Modifiability,variab,variable,148,"////////////////////////////////////////////////////////////////////////////////; /// Browse the tree to set the min, max and average value of each variable of fVar.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:81,Performance,load,loaded,81,"// EvalInstance(0) always needs to be called so that; // the proper branches are loaded.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:81,Performance,load,loaded,81,"// EvalInstance(0) always needs to be called so that; // the proper branches are loaded.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:98,Modifiability,variab,variables,98,"////////////////////////////////////////////////////////////////////////////////; /// Compile the variables expression from the given string varexp.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx:86,Deployability,Update,Update,86,"////////////////////////////////////////////////////////////////////////////////; /// Update the polylines or the arcs for the current entries.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpider.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpider.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpiderEditor.cxx:81,Integrability,interface,interface,81,/** \class TSpiderEditor; The TSpider editor class.; Provides the graphical user interface to the spider plots.; */,MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpiderEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpiderEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpiderEditor.cxx:100,Modifiability,variab,variable,100,"////////////////////////////////////////////////////////////////////////////////; /// Slot to add a variable.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpiderEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpiderEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpiderEditor.cxx:103,Modifiability,variab,variable,103,"////////////////////////////////////////////////////////////////////////////////; /// Slot to delete a variable.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TSpiderEditor.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TSpiderEditor.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:1511,Availability,echo,echoed,1511,"* For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCII file (see -Scanning expressions-);",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:2094,Deployability,toggle,toggles,2094,"ing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCII file (see -Scanning expressions-);; - a button bar in the lower part with : buttons DRAW/STOP that issue histogram; drawing and stop the current command respectively, two text widgets where; input and output event lists can be specified, a message box and a RESET; button on the right that clear edited expression content (see Editing...); - a tree-type list on the main left panel where you can select among trees or; branches. The tree/branch will be detailed in the right panel.; Mapped trees are provided with context menus, activated by right-clicking;; - a view-type list on the right panel. The first column contain X, Y and; Z expression items, an optional cut and ten optional editable expressions.; Expressions and leaf-type items can be dragged or deleted. A right click on; the list-box or item activates context menus. ### Opening a new tree and saving a session :. To open a new tree in the viewer use `<File/Open tree file>` menu; The content of the file (keys) will be listed. Use `<SetTreeName>` function; from the context menu of the right panel, entering a tree name among ",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:5704,Deployability,toggle,toggle,5704," editor usage is the following :. - you can write C expressions made of leaf names by hand or you can insert; any item from the right panel by clicking on it (recommandable);; - you can click on other expressions/leaves to paste them in the editor;; - you should write the item alias by hand since it not only make the; expression meaningful, but it also highly improve the layout for big; expressions; - you may redefine an old alias - the other expressions depending on it will; be modified accordingly. An alias must not be the leading string of other; aliases. When Draw commands are issued, the name of the corresponding; histogram axes will become the aliases of the expressions. User commands can be issued directly from the textbox labeled ""Command""; from the upper-left toolbar by typing and pressing Enter at the end. Another way is from the right panel context menu : ExecuteCommand.; All commands can be interrupted at any time by pressing the STOP button; from the bottom-left; You can toggle recording of the current command in the history file by; checking the Rec button from the top-right. ### Context menus. You can activate context menus by right-clicking on items or inside the; right panel. Context menus for mapped items from the left tree-type list :; The items from the left that are provided with context menus are tree and; branch items. You can directly activate the *MENU* marked methods of TTree; from this menu. Context menu for the right panel:. A general context menu is activated if the user right-clicks the right panel. Commands are :; - EmptyAll : clears the content of all expressions;; - ExecuteCommand : execute a ROOT command;; - MakeSelector : equivalent of TTree::MakeSelector();; - NewExpression : add an expression item in the right panel;; - Process : equivalent of TTree::Process();; - SaveSource : save the current session as a C++ macro;; - SetScanFileName : define a name for the file where TTree::Scan command; is redirected when the `<Scan>` button ",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:624,Energy Efficiency,adapt,adapted,624,"// @(#)root/treeviewer:$Id: c8e226dde2f9b6f39946bfe90cabcb778d63dc4f $; //Author : Andrei Gheata 16/08/00; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, cha",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:504,Integrability,interface,interface,504,"// @(#)root/treeviewer:$Id: c8e226dde2f9b6f39946bfe90cabcb778d63dc4f $; //Author : Andrei Gheata 16/08/00; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, cha",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:2481,Integrability,message,message,2481,"ing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCII file (see -Scanning expressions-);; - a button bar in the lower part with : buttons DRAW/STOP that issue histogram; drawing and stop the current command respectively, two text widgets where; input and output event lists can be specified, a message box and a RESET; button on the right that clear edited expression content (see Editing...); - a tree-type list on the main left panel where you can select among trees or; branches. The tree/branch will be detailed in the right panel.; Mapped trees are provided with context menus, activated by right-clicking;; - a view-type list on the right panel. The first column contain X, Y and; Z expression items, an optional cut and ten optional editable expressions.; Expressions and leaf-type items can be dragged or deleted. A right click on; the list-box or item activates context menus. ### Opening a new tree and saving a session :. To open a new tree in the viewer use `<File/Open tree file>` menu; The content of the file (keys) will be listed. Use `<SetTreeName>` function; from the context menu of the right panel, entering a tree name among ",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:5164,Integrability,depend,depending,5164," placed) by dragging them to the left at least 10 pixels. ### Editing expressions:. Any editable expression from the right panel has two components : a; true name (that will be used when TTree::Draw() commands are issued) and an; alias. The visible name is the alias. Aliases of user defined expressions have; a leading ~ and may be used in new expressions. Expressions containing boolean; operators have a specific icon and may be dragged to the active cut (scissors; item) position. The expression editor can be activated by double-clicking empty expression,; using `<EditExpression>` from the selected expression context menu or using; `<Edit/Expression>` menu. The editor will pop-up in the left part, but it can be moved.; The editor usage is the following :. - you can write C expressions made of leaf names by hand or you can insert; any item from the right panel by clicking on it (recommandable);; - you can click on other expressions/leaves to paste them in the editor;; - you should write the item alias by hand since it not only make the; expression meaningful, but it also highly improve the layout for big; expressions; - you may redefine an old alias - the other expressions depending on it will; be modified accordingly. An alias must not be the leading string of other; aliases. When Draw commands are issued, the name of the corresponding; histogram axes will become the aliases of the expressions. User commands can be issued directly from the textbox labeled ""Command""; from the upper-left toolbar by typing and pressing Enter at the end. Another way is from the right panel context menu : ExecuteCommand.; All commands can be interrupted at any time by pressing the STOP button; from the bottom-left; You can toggle recording of the current command in the history file by; checking the Rec button from the top-right. ### Context menus. You can activate context menus by right-clicking on items or inside the; right panel. Context menus for mapped items from the left tree-type li",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:624,Modifiability,adapt,adapted,624,"// @(#)root/treeviewer:$Id: c8e226dde2f9b6f39946bfe90cabcb778d63dc4f $; //Author : Andrei Gheata 16/08/00; /*************************************************************************; * Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, cha",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:945,Modifiability,variab,variables,945,"* For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCII file (see -Scanning expressions-);",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:7438,Performance,load,load,7438,"enus for mapped items from the left tree-type list :; The items from the left that are provided with context menus are tree and; branch items. You can directly activate the *MENU* marked methods of TTree; from this menu. Context menu for the right panel:. A general context menu is activated if the user right-clicks the right panel. Commands are :; - EmptyAll : clears the content of all expressions;; - ExecuteCommand : execute a ROOT command;; - MakeSelector : equivalent of TTree::MakeSelector();; - NewExpression : add an expression item in the right panel;; - Process : equivalent of TTree::Process();; - SaveSource : save the current session as a C++ macro;; - SetScanFileName : define a name for the file where TTree::Scan command; is redirected when the `<Scan>` button is checked;; - SetTreeName : open a new tree with this name in the viewer;. A specific context menu is activated if expressions/leaves are right-clicked. Commands are :; - Draw : draw a histogram for this item;; - EditExpression : pops-up the expression editor;; - Empty : empty the name and alias of this item;; - RemoveItem : removes clicked item from the list;; - Scan : scan this expression;; - SetExpression : edit name and alias for this item by hand;. Starting the viewer. 1. From the TBrowser: Select a tree in the TBrowser, then call the; StartViewer() method from its context menu (right-click on the tree).; 2. From the command line: Start a ROOT session in the directory where you have; your tree. You will need first to load the library for TTreeViewer and; optionally other libraries for user defined classes (you can do this later in; the session) :; ~~~ {.cpp}; root [0] gSystem->Load(\""TTreeViewer\"");; ~~~; Supposing you have the tree MyTree in the file MyFile, you can do :; ~~~ {.cpp}; root [1] TFile file(""Myfile"");; root [2] new TTreeViewer(""Mytree"");; ~~~; or :; ~~~ {.cpp}; root [2] TTreeViewer *tv = new TTreeViewer();; root [3] tv->SetTreeName(""Mytree"");; ~~~; \image html ttree_treeview.png; */",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:7601,Performance,Load,Load,7601,"enus for mapped items from the left tree-type list :; The items from the left that are provided with context menus are tree and; branch items. You can directly activate the *MENU* marked methods of TTree; from this menu. Context menu for the right panel:. A general context menu is activated if the user right-clicks the right panel. Commands are :; - EmptyAll : clears the content of all expressions;; - ExecuteCommand : execute a ROOT command;; - MakeSelector : equivalent of TTree::MakeSelector();; - NewExpression : add an expression item in the right panel;; - Process : equivalent of TTree::Process();; - SaveSource : save the current session as a C++ macro;; - SetScanFileName : define a name for the file where TTree::Scan command; is redirected when the `<Scan>` button is checked;; - SetTreeName : open a new tree with this name in the viewer;. A specific context menu is activated if expressions/leaves are right-clicked. Commands are :; - Draw : draw a histogram for this item;; - EditExpression : pops-up the expression editor;; - Empty : empty the name and alias of this item;; - RemoveItem : removes clicked item from the list;; - Scan : scan this expression;; - SetExpression : edit name and alias for this item by hand;. Starting the viewer. 1. From the TBrowser: Select a tree in the TBrowser, then call the; StartViewer() method from its context menu (right-click on the tree).; 2. From the command line: Start a ROOT session in the directory where you have; your tree. You will need first to load the library for TTreeViewer and; optionally other libraries for user defined classes (you can do this later in; the session) :; ~~~ {.cpp}; root [0] gSystem->Load(\""TTreeViewer\"");; ~~~; Supposing you have the tree MyTree in the file MyFile, you can do :; ~~~ {.cpp}; root [1] TFile file(""Myfile"");; root [2] new TTreeViewer(""Mytree"");; ~~~; or :; ~~~ {.cpp}; root [2] TTreeViewer *tv = new TTreeViewer();; root [3] tv->SetTreeName(""Mytree"");; ~~~; \image html ttree_treeview.png; */",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:1566,Usability,progress bar,progress bar,1566,"* For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /** \class TTreeViewer; A graphic user interface designed to handle ROOT trees and to take advantage of; TTree class features. It uses ROOT native GUI widgets adapted for ""drag and drop"" functionality.; in the same session. ### The following capabilities are making the viewer a helpful tool for analysis:. - several trees may be opened in the same session;; - branches and leaves can be easily browsed or scanned;; - fast drawing of branch expressions by double-clicking;; - new variables/selections easy to compose with the built-in editor;; - histograms can be composed by dragging leaves or user-defined expressions; to X, Y and Z axis items;; - the tree entries to be processed can be selected with a double slider;; - selections can be defined and activated by dragging them to the 'Cut' item;; - all expressions can be aliased and aliases can be used in composing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCII file (see -Scanning expressions-);",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:2531,Usability,clear,clear,2531,"ing others;; - input/output event lists easy to handle;; - menu with histogram drawing options;; - user commands may be executed within the viewer and the current command; can be echoed;; - current 'Draw' event loop is reflected by a progress bar and may be; interrupted by the user;; - all widgets have self-explaining tool tips and/or context menus;; - expressions/leaves can be dragged to a 'scan box' and scanned by; double-clicking this item. The result can be redirected to an ASCII file;. ### The layout has the following items:. - a menu bar with entries : File, Edit, Run, Options and Help;; - a toolbar in the upper part where you can issue user commands, change; the drawing option and the histogram name, three check buttons Hist, Rec; and Scan.HIST toggles histogram drawing mode, REC enables recording of the; last command issued and SCAN enables redirecting of TTree::Scan command in; an ASCII file (see -Scanning expressions-);; - a button bar in the lower part with : buttons DRAW/STOP that issue histogram; drawing and stop the current command respectively, two text widgets where; input and output event lists can be specified, a message box and a RESET; button on the right that clear edited expression content (see Editing...); - a tree-type list on the main left panel where you can select among trees or; branches. The tree/branch will be detailed in the right panel.; Mapped trees are provided with context menus, activated by right-clicking;; - a view-type list on the right panel. The first column contain X, Y and; Z expression items, an optional cut and ten optional editable expressions.; Expressions and leaf-type items can be dragged or deleted. A right click on; the list-box or item activates context menus. ### Opening a new tree and saving a session :. To open a new tree in the viewer use `<File/Open tree file>` menu; The content of the file (keys) will be listed. Use `<SetTreeName>` function; from the context menu of the right panel, entering a tree name among ",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:6289,Usability,clear,clears,6289,"r at the end. Another way is from the right panel context menu : ExecuteCommand.; All commands can be interrupted at any time by pressing the STOP button; from the bottom-left; You can toggle recording of the current command in the history file by; checking the Rec button from the top-right. ### Context menus. You can activate context menus by right-clicking on items or inside the; right panel. Context menus for mapped items from the left tree-type list :; The items from the left that are provided with context menus are tree and; branch items. You can directly activate the *MENU* marked methods of TTree; from this menu. Context menu for the right panel:. A general context menu is activated if the user right-clicks the right panel. Commands are :; - EmptyAll : clears the content of all expressions;; - ExecuteCommand : execute a ROOT command;; - MakeSelector : equivalent of TTree::MakeSelector();; - NewExpression : add an expression item in the right panel;; - Process : equivalent of TTree::Process();; - SaveSource : save the current session as a C++ macro;; - SetScanFileName : define a name for the file where TTree::Scan command; is redirected when the `<Scan>` button is checked;; - SetTreeName : open a new tree with this name in the viewer;. A specific context menu is activated if expressions/leaves are right-clicked. Commands are :; - Draw : draw a histogram for this item;; - EditExpression : pops-up the expression editor;; - Empty : empty the name and alias of this item;; - RemoveItem : removes clicked item from the list;; - Scan : scan this expression;; - SetExpression : edit name and alias for this item by hand;. Starting the viewer. 1. From the TBrowser: Select a tree in the TBrowser, then call the; StartViewer() method from its context menu (right-click on the tree).; 2. From the command line: Start a ROOT session in the directory where you have; your tree. You will need first to load the library for TTreeViewer and; optionally other libraries for user defined ",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:33,Modifiability,variab,variable,33,"// switch also the global ""tree"" variable",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:3,Performance,load,load,3,"// load the tree via the interpreter",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:26,Modifiability,variab,variable,26,"// define a global ""tree"" variable for the same tree",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:64,Modifiability,variab,variable,64,"// load the tree via the interpreter; // define a global ""tree"" variable for the same tree",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:3,Performance,load,load,3,"// load the tree via the interpreter; // define a global ""tree"" variable for the same tree",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:33,Modifiability,variab,variable,33,"// switch also the global ""tree"" variable",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:64,Modifiability,variab,variable,64,"// load the tree via the interpreter; // define a global ""tree"" variable for the same tree",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:3,Performance,load,load,3,"// load the tree via the interpreter; // define a global ""tree"" variable for the same tree",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:6,Usability,progress bar,progress bar,6,"//--- progress bar",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear the content of all items in the list view.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:37,Deployability,update,updated,37,"// check if only histogram has to be updated",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:17,Integrability,message,messages,17,"// handle slider messages",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:16,Integrability,message,messages,16,"// handle mouse messages in the list-tree (left panel)",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:133,Integrability,depend,depends,133,"// tell coverity that parm1 is a Long_t, and not an enum (even; // if we compare it with an enum value) and the meaning of; // parm1 depends on GET_MSG(msg) and GET_SUBMSG(msg); // coverity[mixed_enums]",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:33,Modifiability,variab,variable,33,"// switch also the global ""tree"" variable",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:17,Integrability,message,messages,17,"// handle button messages",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:15,Integrability,message,messages,15,"// handle menu messages; // check if sent by Options menu",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:10,Integrability,message,messages,10,"// handle messages sent from the listview (right panel)",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:16,Integrability,message,messages,16,"// handle mouse messages",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:53,Availability,echo,echo,53,"// Execute the command, write it to history file and echo it to output",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:93,Integrability,message,message,93,"////////////////////////////////////////////////////////////////////////////////; /// Send a message on the status bar.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:90,Availability,error,error,90,"////////////////////////////////////////////////////////////////////////////////; /// Put error/warning into TMsgBox and also forward to console.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:22,Safety,abort,abort,22,"// in case level will abort we will not come here...",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:86,Deployability,Update,Updates,86,"////////////////////////////////////////////////////////////////////////////////; /// Updates combo box to current session entries.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx:86,Deployability,Update,Updates,86,"////////////////////////////////////////////////////////////////////////////////; /// Updates current record to new X, Y, Z items.",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVLVContainer.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear all names and alias",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTVLVContainer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVLVContainer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVLVContainer.cxx:86,Usability,Clear,Clear,86,"////////////////////////////////////////////////////////////////////////////////; /// Clear all names and aliases for expression type items",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTVLVContainer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVLVContainer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVLVContainer.cxx:86,Integrability,Message,Message,86,"////////////////////////////////////////////////////////////////////////////////; /// Message interpreter",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTVLVContainer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVLVContainer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVLVContainer.cxx:11,Safety,avoid,avoid,11,"// just to avoid warning on CC compiler",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTVLVContainer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVLVContainer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVSession.cxx:86,Deployability,Update,Updates,86,"////////////////////////////////////////////////////////////////////////////////; /// Updates current record according to new X, Y, Z settings",MatchSource.CODE_COMMENT,tree/treeviewer/src/TTVSession.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/treeviewer/src/TTVSession.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx:4,Modifiability,Config,Configures,4,"/** Configures default hierarchy browser visibility, only has effect before showing web window */",MatchSource.CODE_COMMENT,tree/webviewer/inc/ROOT/RTreeViewer.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx:6,Deployability,configurat,configuration,6,"///<! configuration, exchanged between client and server",MatchSource.CODE_COMMENT,tree/webviewer/inc/ROOT/RTreeViewer.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx:6,Modifiability,config,configuration,6,"///<! configuration, exchanged between client and server",MatchSource.CODE_COMMENT,tree/webviewer/inc/ROOT/RTreeViewer.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx:38,Performance,perform,performed,38,"///<! callback invoked when tree draw performed",MatchSource.CODE_COMMENT,tree/webviewer/inc/ROOT/RTreeViewer.hxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/inc/ROOT/RTreeViewer.hxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:2,Testability,log,loglevel,2,/*loglevel*/,MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:4,Safety,timeout,timeout,4,"/// timeout handler; /// used to process postponed requests in main ROOT thread",MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:35,Integrability,message,message,35,"// this is call-back, invoked when message received via websocket",MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:3,Modifiability,config,configure,3,"// configure predefined window geometry",MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:43,Performance,queue,queue,43,"// number of allowed entries in the window queue",MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:95,Deployability,update,update,95,"/////////////////////////////////////////////////////////////////////////////////; /// Show or update viewer in web window; /// If web browser already started - just refresh drawing like ""reload"" button does; /// If no web window exists or \param always_start_new_browser configured, starts new window; /// \param args arguments to display",MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:272,Modifiability,config,configured,272,"/////////////////////////////////////////////////////////////////////////////////; /// Show or update viewer in web window; /// If web browser already started - just refresh drawing like ""reload"" button does; /// If no web window exists or \param always_start_new_browser configured, starts new window; /// \param args arguments to display",MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:100,Deployability,Update,Update,100,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Update tree viewer in all web displays",MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:116,Modifiability,config,config,116,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Add branches to config",MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:100,Deployability,Update,Update,100,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Update RConfig data",MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx:139,Modifiability,plugin,plugin,139,"//////////////////////////////////////////////////////////////////////////////////////////////; /// Create new viewer; /// Method used for plugin",MatchSource.CODE_COMMENT,tree/webviewer/src/RTreeViewer.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tree/webviewer/src/RTreeViewer.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/.enableImplicitMTWrapper.py:52,Testability,test,tests,52,"# this is meant to be used only to run tutorials as tests",MatchSource.CODE_COMMENT,tutorials/.enableImplicitMTWrapper.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/.enableImplicitMTWrapper.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df000_simple.py:65,Usability,Simpl,Simple,65,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Simple RDataFrame example in Python.; ##; ## This tutorial shows a minimal example of RDataFrame. It starts without input; ## data, generates a new column `x` with random numbers, and finally draws; ## a histogram for `x`.; ##; ## \macro_code; ## \macro_output; ##; ## \date September 2021; ## \author Enric Tejedor (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df000_simple.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df000_simple.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:38,Testability,test,test,38,"""""""A simple helper function to fill a test tree: this makes the example stand-alone.""""""",MatchSource.CODE_COMMENT,tutorials/dataframe/df001_introduction.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:5,Usability,simpl,simple,5,"""""""A simple helper function to fill a test tree: this makes the example stand-alone.""""""",MatchSource.CODE_COMMENT,tutorials/dataframe/df001_introduction.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:206,Integrability,depend,depending,206,"# Operations on the dataframe; # We now review some *actions* which can be performed on the data frame.; # Actions can be divided into instant actions (e. g. Foreach()) and lazy; # actions (e. g. Count()), depending on whether they trigger the event ; # loop immediately or only when one of the results is accessed for the ; # first time. Actions that return ""something"" either return their result ; # wrapped in a RResultPtr or in a RDataFrame.; # But first of all, let us we define now our cut-flow with two strings.; # Filters can be expressed as strings. The content must be C++ code. The; # name of the variables must be the name of the branches. The code is; # just-in-time compiled.",MatchSource.CODE_COMMENT,tutorials/dataframe/df001_introduction.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:402,Integrability,wrap,wrapped,402,"# Operations on the dataframe; # We now review some *actions* which can be performed on the data frame.; # Actions can be divided into instant actions (e. g. Foreach()) and lazy; # actions (e. g. Count()), depending on whether they trigger the event ; # loop immediately or only when one of the results is accessed for the ; # first time. Actions that return ""something"" either return their result ; # wrapped in a RResultPtr or in a RDataFrame.; # But first of all, let us we define now our cut-flow with two strings.; # Filters can be expressed as strings. The content must be C++ code. The; # name of the variables must be the name of the branches. The code is; # just-in-time compiled.",MatchSource.CODE_COMMENT,tutorials/dataframe/df001_introduction.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:608,Modifiability,variab,variables,608,"# Operations on the dataframe; # We now review some *actions* which can be performed on the data frame.; # Actions can be divided into instant actions (e. g. Foreach()) and lazy; # actions (e. g. Count()), depending on whether they trigger the event ; # loop immediately or only when one of the results is accessed for the ; # first time. Actions that return ""something"" either return their result ; # wrapped in a RResultPtr or in a RDataFrame.; # But first of all, let us we define now our cut-flow with two strings.; # Filters can be expressed as strings. The content must be C++ code. The; # name of the variables must be the name of the branches. The code is; # just-in-time compiled.",MatchSource.CODE_COMMENT,tutorials/dataframe/df001_introduction.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:75,Performance,perform,performed,75,"# Operations on the dataframe; # We now review some *actions* which can be performed on the data frame.; # Actions can be divided into instant actions (e. g. Foreach()) and lazy; # actions (e. g. Count()), depending on whether they trigger the event ; # loop immediately or only when one of the results is accessed for the ; # first time. Actions that return ""something"" either return their result ; # wrapped in a RResultPtr or in a RDataFrame.; # But first of all, let us we define now our cut-flow with two strings.; # Filters can be expressed as strings. The content must be C++ code. The; # name of the variables must be the name of the branches. The code is; # just-in-time compiled.",MatchSource.CODE_COMMENT,tutorials/dataframe/df001_introduction.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:306,Security,access,accessed,306,"# Operations on the dataframe; # We now review some *actions* which can be performed on the data frame.; # Actions can be divided into instant actions (e. g. Foreach()) and lazy; # actions (e. g. Count()), depending on whether they trigger the event ; # loop immediately or only when one of the results is accessed for the ; # first time. Actions that return ""something"" either return their result ; # wrapped in a RResultPtr or in a RDataFrame.; # But first of all, let us we define now our cut-flow with two strings.; # Filters can be expressed as strings. The content must be C++ code. The; # name of the variables must be the name of the branches. The code is; # just-in-time compiled.",MatchSource.CODE_COMMENT,tutorials/dataframe/df001_introduction.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:137,Deployability,pipeline,pipelines,137,"# Express your chain of operations with clarity!; # We are discussing an example here but it is not hard to imagine much more; # complex pipelines of actions acting on data. Those might require code; # which is well organised, for example allowing to conditionally add filters; # or again to clearly separate filters and actions without the need of; # writing the entire pipeline on one line. This can be easily achieved.; # We'll show this re-working the `Count` example:",MatchSource.CODE_COMMENT,tutorials/dataframe/df001_introduction.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:371,Deployability,pipeline,pipeline,371,"# Express your chain of operations with clarity!; # We are discussing an example here but it is not hard to imagine much more; # complex pipelines of actions acting on data. Those might require code; # which is well organised, for example allowing to conditionally add filters; # or again to clearly separate filters and actions without the need of; # writing the entire pipeline on one line. This can be easily achieved.; # We'll show this re-working the `Count` example:",MatchSource.CODE_COMMENT,tutorials/dataframe/df001_introduction.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py:292,Usability,clear,clearly,292,"# Express your chain of operations with clarity!; # We are discussing an example here but it is not hard to imagine much more; # complex pipelines of actions acting on data. Those might require code; # which is well organised, for example allowing to conditionally add filters; # or again to clearly separate filters and actions without the need of; # writing the entire pipeline on one line. This can be easily achieved.; # We'll show this re-working the `Count` example:",MatchSource.CODE_COMMENT,tutorials/dataframe/df001_introduction.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df001_introduction.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py:37,Testability,test,test,37,"# A simple helper function to fill a test tree: this makes the example stand-alone.",MatchSource.CODE_COMMENT,tutorials/dataframe/df002_dataModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py:4,Usability,simpl,simple,4,"# A simple helper function to fill a test tree: this makes the example stand-alone.",MatchSource.CODE_COMMENT,tutorials/dataframe/df002_dataModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py:738,Energy Efficiency,energy,energy,738,"'''; using FourVector = ROOT::Math::XYZTVector;; using FourVectorVec = std::vector<FourVector>;; using CylFourVector = ROOT::Math::RhoEtaPhiVector;. // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *filename, const char *treeName); {; const double M = 0.13957; // set pi+ mass; TRandom3 R(1);. auto genTracks = [&](){; FourVectorVec tracks;; const auto nPart = R.Poisson(15);; tracks.reserve(nPart);; for (int j = 0; j < nPart; ++j) {; const auto px = R.Gaus(0, 10);; const auto py = R.Gaus(0, 10);; const auto pt = sqrt(px * px + py * py);; const auto eta = R.Uniform(-3, 3);; const auto phi = R.Uniform(0.0, 2 * TMath::Pi());; CylFourVector vcyl(pt, eta, phi);; // set energy; auto E = sqrt(vcyl.R() * vcyl.R() + M * M);; // fill track vector; tracks.emplace_back(vcyl.X(), vcyl.Y(), vcyl.Z(), E);; }; return tracks;; };. ROOT::RDataFrame d(64);; d.Define(""tracks"", genTracks).Snapshot<FourVectorVec>(treeName, filename, {""tracks""});; }; '''",MatchSource.CODE_COMMENT,tutorials/dataframe/df002_dataModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py:187,Testability,test,test,187,"'''; using FourVector = ROOT::Math::XYZTVector;; using FourVectorVec = std::vector<FourVector>;; using CylFourVector = ROOT::Math::RhoEtaPhiVector;. // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *filename, const char *treeName); {; const double M = 0.13957; // set pi+ mass; TRandom3 R(1);. auto genTracks = [&](){; FourVectorVec tracks;; const auto nPart = R.Poisson(15);; tracks.reserve(nPart);; for (int j = 0; j < nPart; ++j) {; const auto px = R.Gaus(0, 10);; const auto py = R.Gaus(0, 10);; const auto pt = sqrt(px * px + py * py);; const auto eta = R.Uniform(-3, 3);; const auto phi = R.Uniform(0.0, 2 * TMath::Pi());; CylFourVector vcyl(pt, eta, phi);; // set energy; auto E = sqrt(vcyl.R() * vcyl.R() + M * M);; // fill track vector; tracks.emplace_back(vcyl.X(), vcyl.Y(), vcyl.Z(), E);; }; return tracks;; };. ROOT::RDataFrame d(64);; d.Define(""tracks"", genTracks).Snapshot<FourVectorVec>(treeName, filename, {""tracks""});; }; '''",MatchSource.CODE_COMMENT,tutorials/dataframe/df002_dataModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py:154,Usability,simpl,simple,154,"'''; using FourVector = ROOT::Math::XYZTVector;; using FourVectorVec = std::vector<FourVector>;; using CylFourVector = ROOT::Math::RhoEtaPhiVector;. // A simple helper function to fill a test tree: this makes the example; // stand-alone.; void fill_tree(const char *filename, const char *treeName); {; const double M = 0.13957; // set pi+ mass; TRandom3 R(1);. auto genTracks = [&](){; FourVectorVec tracks;; const auto nPart = R.Poisson(15);; tracks.reserve(nPart);; for (int j = 0; j < nPart; ++j) {; const auto px = R.Gaus(0, 10);; const auto py = R.Gaus(0, 10);; const auto pt = sqrt(px * px + py * py);; const auto eta = R.Uniform(-3, 3);; const auto phi = R.Uniform(0.0, 2 * TMath::Pi());; CylFourVector vcyl(pt, eta, phi);; // set energy; auto E = sqrt(vcyl.R() * vcyl.R() + M * M);; // fill track vector; tracks.emplace_back(vcyl.X(), vcyl.Y(), vcyl.Z(), E);; }; return tracks;; };. ROOT::RDataFrame d(64);; d.Define(""tracks"", genTracks).Snapshot<FourVectorVec>(treeName, filename, {""tracks""});; }; '''",MatchSource.CODE_COMMENT,tutorials/dataframe/df002_dataModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py:82,Usability,simpl,simplest,82,"# Operating on branches which are collections of objects; # Here we deal with the simplest of the cuts: we decide to accept the event; # only if the number of tracks is greater than 8.",MatchSource.CODE_COMMENT,tutorials/dataframe/df002_dataModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df002_dataModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df003_profiles.py:37,Testability,test,test,37,"# A simple helper function to fill a test tree: this makes the example; # stand-alone.",MatchSource.CODE_COMMENT,tutorials/dataframe/df003_profiles.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df003_profiles.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df003_profiles.py:4,Usability,simpl,simple,4,"# A simple helper function to fill a test tree: this makes the example; # stand-alone.",MatchSource.CODE_COMMENT,tutorials/dataframe/df003_profiles.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df003_profiles.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df006_ranges.py:142,Integrability,depend,depends,142,"# An important thing to notice is that the counts of a filter are relative to the; # number of entries a filter ""sees"". Therefore, if a Range depends on a filter,; # the Range will act on the entries passing the filter only.",MatchSource.CODE_COMMENT,tutorials/dataframe/df006_ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df006_ranges.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df006_ranges.py:14,Integrability,wrap,wrap,14,"# Ok, time to wrap up: let's print all counts!",MatchSource.CODE_COMMENT,tutorials/dataframe/df006_ranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df006_ranges.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df007_snapshot.py:37,Testability,test,test,37,"# A simple helper function to fill a test tree: this makes the example stand-alone.",MatchSource.CODE_COMMENT,tutorials/dataframe/df007_snapshot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df007_snapshot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df007_snapshot.py:4,Usability,simpl,simple,4,"# A simple helper function to fill a test tree: this makes the example stand-alone.",MatchSource.CODE_COMMENT,tutorials/dataframe/df007_snapshot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df007_snapshot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df007_snapshot.py:91,Modifiability,variab,variables,91,"# ## Write it to disk in ROOT format; # We now write to disk a new dataset with one of the variables originally; # present in the tree and the new variables.; # The user can explicitly specify the types of the columns as template; # arguments of the Snapshot method, otherwise they will be automatically; # inferred.",MatchSource.CODE_COMMENT,tutorials/dataframe/df007_snapshot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df007_snapshot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df007_snapshot.py:147,Modifiability,variab,variables,147,"# ## Write it to disk in ROOT format; # We now write to disk a new dataset with one of the variables originally; # present in the tree and the new variables.; # The user can explicitly specify the types of the columns as template; # arguments of the Snapshot method, otherwise they will be automatically; # inferred.",MatchSource.CODE_COMMENT,tutorials/dataframe/df007_snapshot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df007_snapshot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df010_trivialDataSource.py:328,Integrability,interface,interface,328,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Use the ""trivial data source"", an example data source implementation.; ##; ## This tutorial illustrates how use the RDataFrame in combination with a; ## RDataSource. In this case we use a RTrivialDS, which is nothing more; ## than a simple generator: it does not interface to any existing dataset.; ## The RTrivialDS has a single column, col0, which has value n for entry n.; ##; ## Note that RTrivialDS is only a demo data source implementation and superior alternatives; ## typically exist for production use (e.g. constructing an empty RDataFrame as `RDataFrame(nEntries)`).; ##; ## \macro_code; ##; ## \date September 2017; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df010_trivialDataSource.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df010_trivialDataSource.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df010_trivialDataSource.py:298,Usability,simpl,simple,298,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Use the ""trivial data source"", an example data source implementation.; ##; ## This tutorial illustrates how use the RDataFrame in combination with a; ## RDataSource. In this case we use a RTrivialDS, which is nothing more; ## than a simple generator: it does not interface to any existing dataset.; ## The RTrivialDS has a single column, col0, which has value n for entry n.; ##; ## Note that RTrivialDS is only a demo data source implementation and superior alternatives; ## typically exist for production use (e.g. constructing an empty RDataFrame as `RDataFrame(nEntries)`).; ##; ## \macro_code; ##; ## \date September 2017; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df010_trivialDataSource.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df010_trivialDataSource.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py:101,Usability,simpl,simple,101,"## We will inefficiently calculate an approximation of pi by generating; ## some data and doing very simple filtering and analysis on it.; ## We start by creating an empty dataframe where we will insert 10 million; ## random points in a square of side 2.0 (that is, with an inscribed unit; ## circle).",MatchSource.CODE_COMMENT,tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df012_DefinesAndFiltersAsStrings.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df016_vecOps.py:89,Performance,perform,performed,89,"# Now we want to plot 2 quarters of a ring with radii .5 and 1.; # Note how the cuts are performed on RVecs, comparing them with integers and; # among themselves.",MatchSource.CODE_COMMENT,tutorials/dataframe/df016_vecOps.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df016_vecOps.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df017_vecOpsHEP.py:189,Availability,down,down,189,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Use RVecs to plot the transverse momentum of selected particles.; ##; ## This tutorial shows how VecOps can be used to slim down the programming; ## model typically adopted in HEP for analysis.; ## In this case we have a dataset containing the kinematic properties of; ## particles stored in individual arrays.; ## We want to plot the transverse momentum of these particles if the energy is; ## greater than 100 MeV.; ## \macro_code; ## \macro_image; ##; ## \date March 2018; ## \authors Danilo Piparo (CERN), Andre Vieira Silva",MatchSource.CODE_COMMENT,tutorials/dataframe/df017_vecOpsHEP.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df017_vecOpsHEP.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df017_vecOpsHEP.py:446,Energy Efficiency,energy,energy,446,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Use RVecs to plot the transverse momentum of selected particles.; ##; ## This tutorial shows how VecOps can be used to slim down the programming; ## model typically adopted in HEP for analysis.; ## In this case we have a dataset containing the kinematic properties of; ## particles stored in individual arrays.; ## We want to plot the transverse momentum of these particles if the energy is; ## greater than 100 MeV.; ## \macro_code; ## \macro_image; ##; ## \date March 2018; ## \authors Danilo Piparo (CERN), Andre Vieira Silva",MatchSource.CODE_COMMENT,tutorials/dataframe/df017_vecOpsHEP.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df017_vecOpsHEP.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:777,Availability,checkpoint,checkpointing,777,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Cache a processed RDataFrame in memory for further usage.; ##; ## This tutorial shows how the content of a data frame can be cached in memory; ## in form of a dataframe. The content of the columns is stored in memory in; ## contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation; ## is performed.; ##; ## Creating a cached data frame storing all of its content deserialised and uncompressed; ## in memory is particularly useful when dealing with datasets of a moderate size; ## (small enough to fit the RAM) over which several explorative loops need to be; ## performed as fast as possible. In addition, caching can be useful when no file; ## on disk needs to be created as a side effect of checkpointing part of the analysis.; ##; ## All steps in the caching are lazy, i.e. the cached data frame is actually filled; ## only when the event loop is triggered on it.; ##; ## \macro_code; ## \macro_image; ##; ## \date June 2018; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:65,Performance,Cache,Cache,65,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Cache a processed RDataFrame in memory for further usage.; ##; ## This tutorial shows how the content of a data frame can be cached in memory; ## in form of a dataframe. The content of the columns is stored in memory in; ## contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation; ## is performed.; ##; ## Creating a cached data frame storing all of its content deserialised and uncompressed; ## in memory is particularly useful when dealing with datasets of a moderate size; ## (small enough to fit the RAM) over which several explorative loops need to be; ## performed as fast as possible. In addition, caching can be useful when no file; ## on disk needs to be created as a side effect of checkpointing part of the analysis.; ##; ## All steps in the caching are lazy, i.e. the cached data frame is actually filled; ## only when the event loop is triggered on it.; ##; ## \macro_code; ## \macro_image; ##; ## \date June 2018; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:190,Performance,cache,cached,190,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Cache a processed RDataFrame in memory for further usage.; ##; ## This tutorial shows how the content of a data frame can be cached in memory; ## in form of a dataframe. The content of the columns is stored in memory in; ## contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation; ## is performed.; ##; ## Creating a cached data frame storing all of its content deserialised and uncompressed; ## in memory is particularly useful when dealing with datasets of a moderate size; ## (small enough to fit the RAM) over which several explorative loops need to be; ## performed as fast as possible. In addition, caching can be useful when no file; ## on disk needs to be created as a side effect of checkpointing part of the analysis.; ##; ## All steps in the caching are lazy, i.e. the cached data frame is actually filled; ## only when the event loop is triggered on it.; ##; ## \macro_code; ## \macro_image; ##; ## \date June 2018; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:372,Performance,perform,performed,372,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Cache a processed RDataFrame in memory for further usage.; ##; ## This tutorial shows how the content of a data frame can be cached in memory; ## in form of a dataframe. The content of the columns is stored in memory in; ## contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation; ## is performed.; ##; ## Creating a cached data frame storing all of its content deserialised and uncompressed; ## in memory is particularly useful when dealing with datasets of a moderate size; ## (small enough to fit the RAM) over which several explorative loops need to be; ## performed as fast as possible. In addition, caching can be useful when no file; ## on disk needs to be created as a side effect of checkpointing part of the analysis.; ##; ## All steps in the caching are lazy, i.e. the cached data frame is actually filled; ## only when the event loop is triggered on it.; ##; ## \macro_code; ## \macro_image; ##; ## \date June 2018; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:402,Performance,cache,cached,402,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Cache a processed RDataFrame in memory for further usage.; ##; ## This tutorial shows how the content of a data frame can be cached in memory; ## in form of a dataframe. The content of the columns is stored in memory in; ## contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation; ## is performed.; ##; ## Creating a cached data frame storing all of its content deserialised and uncompressed; ## in memory is particularly useful when dealing with datasets of a moderate size; ## (small enough to fit the RAM) over which several explorative loops need to be; ## performed as fast as possible. In addition, caching can be useful when no file; ## on disk needs to be created as a side effect of checkpointing part of the analysis.; ##; ## All steps in the caching are lazy, i.e. the cached data frame is actually filled; ## only when the event loop is triggered on it.; ##; ## \macro_code; ## \macro_image; ##; ## \date June 2018; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:646,Performance,perform,performed,646,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Cache a processed RDataFrame in memory for further usage.; ##; ## This tutorial shows how the content of a data frame can be cached in memory; ## in form of a dataframe. The content of the columns is stored in memory in; ## contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation; ## is performed.; ##; ## Creating a cached data frame storing all of its content deserialised and uncompressed; ## in memory is particularly useful when dealing with datasets of a moderate size; ## (small enough to fit the RAM) over which several explorative loops need to be; ## performed as fast as possible. In addition, caching can be useful when no file; ## on disk needs to be created as a side effect of checkpointing part of the analysis.; ##; ## All steps in the caching are lazy, i.e. the cached data frame is actually filled; ## only when the event loop is triggered on it.; ##; ## \macro_code; ## \macro_image; ##; ## \date June 2018; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:865,Performance,cache,cached,865,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Cache a processed RDataFrame in memory for further usage.; ##; ## This tutorial shows how the content of a data frame can be cached in memory; ## in form of a dataframe. The content of the columns is stored in memory in; ## contiguous slabs of memory and is ""ready to use"", i.e. no ROOT IO operation; ## is performed.; ##; ## Creating a cached data frame storing all of its content deserialised and uncompressed; ## in memory is particularly useful when dealing with datasets of a moderate size; ## (small enough to fit the RAM) over which several explorative loops need to be; ## performed as fast as possible. In addition, caching can be useful when no file; ## on disk needs to be created as a side effect of checkpointing part of the analysis.; ##; ## All steps in the caching are lazy, i.e. the cached data frame is actually filled; ## only when the event loop is triggered on it.; ##; ## \macro_code; ## \macro_image; ##; ## \date June 2018; ## \author Danilo Piparo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:13,Usability,simpl,simple,13,"# We apply a simple cut and define a new column.",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:5,Performance,cache,cache,5,"# We cache the content of the dataset. Nothing has happened yet: the work to accomplish; # has been described.",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:28,Performance,cache,cached,28,"# Now the event loop on the cached dataset is triggered by accessing the histogram.; # This event triggers the loop on the `df` data frame lazily.",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py:59,Security,access,accessing,59,"# Now the event loop on the cached dataset is triggered by accessing the histogram.; # This event triggers the loop on the `df` data frame lazily.",MatchSource.CODE_COMMENT,tutorials/dataframe/df019_Cache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df019_Cache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py:17,Usability,simpl,simple,17,"# Let's create a simple dataframe with ten rows and two columns",MatchSource.CODE_COMMENT,tutorials/dataframe/df026_AsNumpyArrays.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py:19,Security,access,access,19,"# Next, we want to access the data from Python as Numpy arrays. To do so, the; # content of the dataframe is converted using the AsNumpy method. The returned; # object is a dictionary with the column names as keys and 1D numpy arrays with; # the content as values.",MatchSource.CODE_COMMENT,tutorials/dataframe/df026_AsNumpyArrays.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py:153,Energy Efficiency,reduce,reduce,153,"# Since reading out data to memory is expensive, always try to read-out only what; # is needed for your analysis. You can use all RDataFrame features to reduce your; # dataset, e.g., the Filter transformation. Furthermore, you can can pass to the; # AsNumpy method a whitelist of column names with the option `columns` or a blacklist; # with column names with the option `exclude`.",MatchSource.CODE_COMMENT,tutorials/dataframe/df026_AsNumpyArrays.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py:63,Integrability,wrap,wrapped,63,"# You can read-out all objects from ROOT files since these are wrapped by PyROOT; # in the Python world. However, be aware that objects other than fundamental types,; # such as complex C++ objects and not int or float, are costly to read-out.",MatchSource.CODE_COMMENT,tutorials/dataframe/df026_AsNumpyArrays.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py:8,Integrability,Inject,Inject,8,"""""""; // Inject the C++ class CustomObject in the C++ runtime.; class CustomObject {; public:; int x = 42;; };; // Create a function that returns such an object. This is called to fill the dataframe.; CustomObject fill_object() { return CustomObject(); }; """"""",MatchSource.CODE_COMMENT,tutorials/dataframe/df026_AsNumpyArrays.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py:8,Security,Inject,Inject,8,"""""""; // Inject the C++ class CustomObject in the C++ runtime.; class CustomObject {; public:; int x = 42;; };; // Create a function that returns such an object. This is called to fill the dataframe.; CustomObject fill_object() { return CustomObject(); }; """"""",MatchSource.CODE_COMMENT,tutorials/dataframe/df026_AsNumpyArrays.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df026_AsNumpyArrays.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py:9,Performance,multi-thread,multi-threading,9,"# Enable multi-threading",MatchSource.CODE_COMMENT,tutorials/dataframe/df102_NanoAODDimuonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py:81,Energy Efficiency,charge,charge,81,"# For simplicity, select only events with exactly two muons and require opposite charge",MatchSource.CODE_COMMENT,tutorials/dataframe/df102_NanoAODDimuonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py:6,Usability,simpl,simplicity,6,"# For simplicity, select only events with exactly two muons and require opposite charge",MatchSource.CODE_COMMENT,tutorials/dataframe/df102_NanoAODDimuonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:922,Performance,perform,performed,922,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## An example of complex analysis with RDataFrame: reconstructing the Higgs boson.; ##; ## This tutorial is a simplified but yet complex example of an analysis reconstructing the Higgs boson decaying to two Z; ## bosons from events with four leptons. The data and simulated events are taken from CERN OpenData representing a; ## subset of the data recorded in 2012 with the CMS detector at the LHC. The tutorials follows the Higgs to four leptons; ## analysis published on CERN Open Data portal ([10.7483/OPENDATA.CMS.JKB8.RR42](http://opendata.cern.ch/record/5500)).; ## The resulting plots show the invariant mass of the selected four lepton systems in different decay modes (four muons,; ## four electrons and two of each kind) and in a combined plot indicating the decay of the Higgs boson with a mass of; ## about 125 GeV.; ##; ## The following steps are performed for each sample with data and simulated events in order to reconstruct the Higgs; ## boson from the selected muons and electrons:; ## 1. Select interesting events with multiple cuts on event properties, e.g., number of leptons, kinematics of the; ## leptons and quality of the tracks.; ## 2. Reconstruct two Z bosons of which only one on the mass shell from the selected events and apply additional cuts on; ## the reconstructed objects.; ## 3. Reconstruct the Higgs boson from the remaining Z boson candidates and calculate its invariant mass.; ##; ## Another aim of this version of the tutorial is to show a way to blend C++ and Python code. All the functions that; ## make computations on data to define new columns or filter existing ones in a precise way, better suited to be written; ## in C++, have been moved to a header that is then declared to the ROOT C++ interpreter. The functions that instead; ## create nodes of the computational graph (e.g. Filter, Define) remain inside the main Python script.; ##; ## The tutorial has the fast mode enabled by default,",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:440,Safety,detect,detector,440,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## An example of complex analysis with RDataFrame: reconstructing the Higgs boson.; ##; ## This tutorial is a simplified but yet complex example of an analysis reconstructing the Higgs boson decaying to two Z; ## bosons from events with four leptons. The data and simulated events are taken from CERN OpenData representing a; ## subset of the data recorded in 2012 with the CMS detector at the LHC. The tutorials follows the Higgs to four leptons; ## analysis published on CERN Open Data portal ([10.7483/OPENDATA.CMS.JKB8.RR42](http://opendata.cern.ch/record/5500)).; ## The resulting plots show the invariant mass of the selected four lepton systems in different decay modes (four muons,; ## four electrons and two of each kind) and in a combined plot indicating the decay of the Higgs boson with a mass of; ## about 125 GeV.; ##; ## The following steps are performed for each sample with data and simulated events in order to reconstruct the Higgs; ## boson from the selected muons and electrons:; ## 1. Select interesting events with multiple cuts on event properties, e.g., number of leptons, kinematics of the; ## leptons and quality of the tracks.; ## 2. Reconstruct two Z bosons of which only one on the mass shell from the selected events and apply additional cuts on; ## the reconstructed objects.; ## 3. Reconstruct the Higgs boson from the remaining Z boson candidates and calculate its invariant mass.; ##; ## Another aim of this version of the tutorial is to show a way to blend C++ and Python code. All the functions that; ## make computations on data to define new columns or filter existing ones in a precise way, better suited to be written; ## in C++, have been moved to a header that is then declared to the ROOT C++ interpreter. The functions that instead; ## create nodes of the computational graph (e.g. Filter, Define) remain inside the main Python script.; ##; ## The tutorial has the fast mode enabled by default,",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:172,Usability,simpl,simplified,172,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## An example of complex analysis with RDataFrame: reconstructing the Higgs boson.; ##; ## This tutorial is a simplified but yet complex example of an analysis reconstructing the Higgs boson decaying to two Z; ## bosons from events with four leptons. The data and simulated events are taken from CERN OpenData representing a; ## subset of the data recorded in 2012 with the CMS detector at the LHC. The tutorials follows the Higgs to four leptons; ## analysis published on CERN Open Data portal ([10.7483/OPENDATA.CMS.JKB8.RR42](http://opendata.cern.ch/record/5500)).; ## The resulting plots show the invariant mass of the selected four lepton systems in different decay modes (four muons,; ## four electrons and two of each kind) and in a combined plot indicating the decay of the Higgs boson with a mass of; ## about 125 GeV.; ##; ## The following steps are performed for each sample with data and simulated events in order to reconstruct the Higgs; ## boson from the selected muons and electrons:; ## 1. Select interesting events with multiple cuts on event properties, e.g., number of leptons, kinematics of the; ## leptons and quality of the tracks.; ## 2. Reconstruct two Z bosons of which only one on the mass shell from the selected events and apply additional cuts on; ## the reconstructed objects.; ## 3. Reconstruct the Higgs boson from the remaining Z boson candidates and calculate its invariant mass.; ##; ## Another aim of this version of the tutorial is to show a way to blend C++ and Python code. All the functions that; ## make computations on data to define new columns or filter existing ones in a precise way, better suited to be written; ## in C++, have been moved to a header that is then declared to the ROOT C++ interpreter. The functions that instead; ## create nodes of the computational graph (e.g. Filter, Define) remain inside the main Python script.; ##; ## The tutorial has the fast mode enabled by default,",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:9,Performance,multi-thread,multi-threading,9,"# Enable multi-threading",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:37,Deployability,integrat,integrated,37,"# CMS data taken in 2012 (11.6 fb^-1 integrated luminosity)",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:37,Integrability,integrat,integrated,37,"# CMS data taken in 2012 (11.6 fb^-1 integrated luminosity)",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:2,Deployability,Integrat,Integrated,2,"# Integrated luminosity of the data samples",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:2,Integrability,Integrat,Integrated,2,"# Integrated luminosity of the data samples",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:134,Availability,avail,available,134,"# RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:205,Availability,avail,available,205,"# RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:262,Availability,avail,available,262,"# RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py:79,Performance,concurren,concurrently,79,"# RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df103_NanoAODHiggsAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df103_NanoAODHiggsAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:129,Deployability,release,release,129,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:239,Deployability,release,release,239,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:287,Deployability,release,release,287,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:396,Energy Efficiency,energy,energy,396,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:351,Safety,detect,detector,351,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:9,Performance,multi-thread,multi-threading,9,"# Enable multi-threading",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:50,Performance,perform,perform,50,"# Define a new column with the invariant mass and perform final event selection",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:156,Availability,avail,available,156,"# Run the event loop; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:227,Availability,avail,available,227,"# Run the event loop; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:284,Availability,avail,available,284,"# Run the event loop; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py:101,Performance,concurren,concurrently,101,"# Run the event loop; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df104_HiggsToTwoPhotons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df104_HiggsToTwoPhotons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:116,Deployability,release,release,116,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df105_WBosonAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:239,Deployability,release,release,239,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df105_WBosonAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:287,Deployability,release,release,287,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df105_WBosonAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:399,Energy Efficiency,energy,energy,399,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df105_WBosonAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:748,Energy Efficiency,reduce,reduce,748,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df105_WBosonAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:354,Safety,detect,detector,354,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df105_WBosonAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:59,Performance,load,load,59,"# Create a ROOT dataframe for each dataset; # Note that we load the filenames from the external json file placed in the same folder than this script.",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:8,Availability,down,down,8,"# Scale down the datasets if requested",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:80,Performance,perform,performing,80,"# Select events for the analysis; # Just-in-time compile custom helper function performing complex computations",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:78,Energy Efficiency,energy,energy,78,"# Select events with a muon or electron trigger and with a missing transverse energy larger than 30 GeV",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:85,Energy Efficiency,energy,energy,85,"# Compute transverse mass of the W boson using the lepton and the missing transverse energy and make a histogram",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:205,Availability,avail,available,205,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:276,Availability,avail,available,276,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:333,Availability,avail,available,333,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py:150,Performance,concurren,concurrently,150,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df105_WBosonAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df105_WBosonAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:702,Availability,error,errors,702,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson; ## to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads; ## to a narrow invariant mass peak on top a relatively smooth and small background, revealing; ## the Higgs at 125 GeV.; ## Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting.; ## The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020, August 2022, August 2023; ## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:124,Deployability,release,release,124,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson; ## to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads; ## to a narrow invariant mass peak on top a relatively smooth and small background, revealing; ## the Higgs at 125 GeV.; ## Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting.; ## The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020, August 2022, August 2023; ## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:242,Deployability,release,release,242,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson; ## to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads; ## to a narrow invariant mass peak on top a relatively smooth and small background, revealing; ## the Higgs at 125 GeV.; ## Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting.; ## The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020, August 2022, August 2023; ## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:290,Deployability,release,release,290,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson; ## to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads; ## to a narrow invariant mass peak on top a relatively smooth and small background, revealing; ## the Higgs at 125 GeV.; ## Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting.; ## The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020, August 2022, August 2023; ## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:399,Energy Efficiency,energy,energy,399,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson; ## to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads; ## to a narrow invariant mass peak on top a relatively smooth and small background, revealing; ## the Higgs at 125 GeV.; ## Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting.; ## The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020, August 2022, August 2023; ## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:354,Safety,detect,detector,354,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## The Higgs to four lepton analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the Higgs to four lepton analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. The decay of the Standard Model Higgs boson; ## to two Z bosons and subsequently to four leptons is called the ""golden channel"". The selection leads; ## to a narrow invariant mass peak on top a relatively smooth and small background, revealing; ## the Higgs at 125 GeV.; ## Systematic errors for the MC scale factors are computed and the Vary function of RDataFrame is used for plotting.; ## The analysis is translated to an RDataFrame workflow processing about 300 MB of simulated events and data.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df106_HiggsToFourLeptons_spec.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date March 2020, August 2022, August 2023; ## \authors Stefan Wunsch (KIT, CERN), Julia Mathe (CERN), Marta Czurylo (CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:9,Performance,Multi-thread,Multi-threaded,9,"# Enable Multi-threaded mode",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:57,Modifiability,config,config,57,"# Access metadata information that is stored in the JSON config file of the RDataFrame.; # The metadata contained in the JSON file is accessible within a `DefinePerSample` call, through the `RSampleInfo` class.",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:2,Security,Access,Access,2,"# Access metadata information that is stored in the JSON config file of the RDataFrame.; # The metadata contained in the JSON file is accessible within a `DefinePerSample` call, through the `RSampleInfo` class.",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:134,Security,access,accessible,134,"# Access metadata information that is stored in the JSON config file of the RDataFrame.; # The metadata contained in the JSON file is accessible within a `DefinePerSample` call, through the `RSampleInfo` class.",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:143,Availability,mask,mask,143,"# Select events with exactly four good leptons conserving charge and lepton numbers; # Note that all collections are RVecs and good_lep is the mask for the good leptons.; # The lepton types are PDG numbers and set to 11 or 13 for an electron or muon; # irrespective of the charge.",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:58,Energy Efficiency,charge,charge,58,"# Select events with exactly four good leptons conserving charge and lepton numbers; # Note that all collections are RVecs and good_lep is the mask for the good leptons.; # The lepton types are PDG numbers and set to 11 or 13 for an electron or muon; # irrespective of the charge.",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:273,Energy Efficiency,charge,charge,273,"# Select events with exactly four good leptons conserving charge and lepton numbers; # Note that all collections are RVecs and good_lep is the mask for the good leptons.; # The lepton types are PDG numbers and set to 11 or 13 for an electron or muon; # irrespective of the charge.",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:24,Integrability,depend,depending,24,"# Apply additional cuts depending on lepton flavour",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:368,Availability,avail,available,368,"# Evaluate the systematic uncertainty; # The systematic uncertainty in this analysis is the MC scale factor uncertainty that depends on lepton; # kinematics such as pT or pseudorapidity.; # Muons uncertainties are negligible, as stated in https://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PAPERS/MUON-2018-03/.; # Electrons uncertainties are evaluated based on the plots available in https://doi.org/10.48550/arXiv.1908.00005.; # The uncertainties are linearly interpolated, using the `TGraph::Eval()` method, to cover a range of pT values covered by the analysis.; # Create a VaryHelper to interpolate the available data.",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:604,Availability,avail,available,604,"# Evaluate the systematic uncertainty; # The systematic uncertainty in this analysis is the MC scale factor uncertainty that depends on lepton; # kinematics such as pT or pseudorapidity.; # Muons uncertainties are negligible, as stated in https://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PAPERS/MUON-2018-03/.; # Electrons uncertainties are evaluated based on the plots available in https://doi.org/10.48550/arXiv.1908.00005.; # The uncertainties are linearly interpolated, using the `TGraph::Eval()` method, to cover a range of pT values covered by the analysis.; # Create a VaryHelper to interpolate the available data.",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:125,Integrability,depend,depends,125,"# Evaluate the systematic uncertainty; # The systematic uncertainty in this analysis is the MC scale factor uncertainty that depends on lepton; # kinematics such as pT or pseudorapidity.; # Muons uncertainties are negligible, as stated in https://atlas.web.cern.ch/Atlas/GROUPS/PHYSICS/PAPERS/MUON-2018-03/.; # Electrons uncertainties are evaluated based on the plots available in https://doi.org/10.48550/arXiv.1908.00005.; # The uncertainties are linearly interpolated, using the `TGraph::Eval()` method, to cover a range of pT values covered by the analysis.; # Create a VaryHelper to interpolate the available data.",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:198,Performance,perform,performed,198,"# Retrieve values of the data and MC histograms in order to plot them.; # Draw cloned histograms to preserve graphics when original objects goes out of scope; # Note: GetValue() action operation is performed after all lazy actions of the RDF were defined first.",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py:21,Availability,error,errorbars,21,"# Draw raw data with errorbars; # Add legend",MatchSource.CODE_COMMENT,tutorials/dataframe/df106_HiggsToFourLeptons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df106_HiggsToFourLeptons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:113,Deployability,release,release,113,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly; ## produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df107_SingleTopAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:243,Deployability,release,release,243,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly; ## produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df107_SingleTopAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:291,Deployability,release,release,291,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly; ## produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df107_SingleTopAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:210,Energy Efficiency,adapt,adapted,210,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly; ## produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df107_SingleTopAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:403,Energy Efficiency,energy,energy,403,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly; ## produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df107_SingleTopAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:763,Energy Efficiency,reduce,reduce,763,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly; ## produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df107_SingleTopAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:210,Modifiability,adapt,adapted,210,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly; ## produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df107_SingleTopAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:358,Safety,detect,detector,358,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## A single top analysis using the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of single top production adapted from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Top quarks with a mass of about 172 GeV are mostly; ## produced in pairs but also appear alone, dominantly from the decays of a W boson in association with a light jet.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## See the [corresponding spec json file](https://github.com/root-project/root/blob/master/tutorials/dataframe/df107_SingleTopAnalysis.json).; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2020; ## \author Stefan Wunsch (KIT, CERN)",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:59,Performance,load,load,59,"# Create a ROOT dataframe for each dataset; # Note that we load the filenames from the external json file placed in the same folder than this script.",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:8,Availability,down,down,8,"# Scale down the datasets if requested",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:116,Performance,perform,performing,116,"# Select events for the analysis and make histograms of the top mass; # Just-in-time compile custom helper function performing complex computations",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:76,Energy Efficiency,energy,energy,76,"# Select events with electron or muon trigger and with a missing transverse energy above 30 GeV",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:2,Performance,Perform,Perform,2,"# Perform preselection of highly isolated leptons",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:70,Energy Efficiency,energy,energy,70,"# Compute transverse mass of the W boson using the missing transverse energy and the good lepton; # Use only events with a transverse mass of the reconstructed W boson larger than 60 GeV",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:2,Performance,Perform,Perform,2,"# Perform preselection of jets",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:67,Energy Efficiency,energy,energy,67,"# Reconstruct the top mass from the lepton, the missing transverse energy and the b-jet; # Just-in-time compile the function to compute the top mass from the constituents",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:499,Energy Efficiency,energy,energy,499,"""""""; float ComputeTopMass(float lep_pt, float lep_eta, float lep_phi, float lep_e, float jet_pt, float jet_eta, float jet_phi, float jet_e, float met_et, float met_phi); {; const ROOT::Math::PtEtaPhiEVector lep(lep_pt / 1000.0, lep_eta, lep_phi, lep_e / 1000.0);; const ROOT::Math::PtEtaPhiEVector met(met_et / 1000.0, 0, met_phi, met_et / 1000.0);; const ROOT::Math::PtEtaPhiEVector bjet(jet_pt / 1000.0, jet_eta, jet_phi, jet_e / 1000.0);; // Please note that we treat here the missing transverse energy as the neutrino, even though the z component is missing!; return (lep + met + bjet).M();; }; """"""",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:205,Availability,avail,available,205,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:276,Availability,avail,available,276,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:333,Availability,avail,available,333,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:150,Performance,concurren,concurrently,150,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py:41,Security,validat,validation,41,"# Corrected normalization derived from a validation region",MatchSource.CODE_COMMENT,tutorials/dataframe/df107_SingleTopAnalysis.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/df107_SingleTopAnalysis.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:266,Deployability,configurat,configuration,266,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Configure a Spark connection and fill two histograms distributedly.; ##; ## This tutorial shows the ingredients needed to setup the connection to a Spark; ## cluster, namely a SparkConf object holding configuration parameters and a; ## SparkContext object created with the desired options. After this initial; ## setup, an RDataFrame with distributed capabilities is created and connected; ## to the SparkContext instance. Finally, a couple of histograms are drawn from; ## the created columns in the dataset.; ##; ## \macro_code; ## \macro_image; ##; ## \date March 2021; ## \author Vincenzo Eduardo Padulano",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:65,Modifiability,Config,Configure,65,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Configure a Spark connection and fill two histograms distributedly.; ##; ## This tutorial shows the ingredients needed to setup the connection to a Spark; ## cluster, namely a SparkConf object holding configuration parameters and a; ## SparkContext object created with the desired options. After this initial; ## setup, an RDataFrame with distributed capabilities is created and connected; ## to the SparkContext instance. Finally, a couple of histograms are drawn from; ## the created columns in the dataset.; ##; ## \macro_code; ## \macro_image; ##; ## \date March 2021; ## \author Vincenzo Eduardo Padulano",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:266,Modifiability,config,configuration,266,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Configure a Spark connection and fill two histograms distributedly.; ##; ## This tutorial shows the ingredients needed to setup the connection to a Spark; ## cluster, namely a SparkConf object holding configuration parameters and a; ## SparkContext object created with the desired options. After this initial; ## setup, an RDataFrame with distributed capabilities is created and connected; ## to the SparkContext instance. Finally, a couple of histograms are drawn from; ## the created columns in the dataset.; ##; ## \macro_code; ## \macro_image; ##; ## \date March 2021; ## \author Vincenzo Eduardo Padulano",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:599,Availability,avail,available,599,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:850,Availability,avail,availability,850,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:99,Deployability,configurat,configuration,99,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:166,Deployability,configurat,configuration,166,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:952,Deployability,configurat,configuration,952,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:1181,Deployability,configurat,configuration,1181,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:1299,Deployability,configurat,configuration,1299,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:1376,Deployability,configurat,configuration,1376,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:833,Integrability,Depend,Depending,833,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:99,Modifiability,config,configuration,99,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:166,Modifiability,config,configuration,166,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:952,Modifiability,config,configuration,952,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:1181,Modifiability,config,configuration,1181,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:1299,Modifiability,config,configuration,1299,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:1376,Modifiability,config,configuration,1376,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:572,Performance,concurren,concurrent,572,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:676,Security,access,access,676,"# Setup the connection to Spark; # First create a dictionary with keys representing Spark specific configuration; # parameters. In this tutorial we use the following configuration parameters:; #; # 1. spark.app.name: The name of the Spark application; # 2. spark.master: The Spark endpoint responsible for running the; # application. With the syntax ""local[2]"" we signal Spark we want to run; # locally on the same machine with 2 cores, each running a separate; # process. The default behaviour of a Spark application would run; # locally on the same machine with as many concurrent processes as; # available cores, that could be also written as ""local[*]"".; #; # If you have access to a remote cluster you should substitute the endpoint URL; # of your Spark master in the form ""spark://HOST:PORT"" in the value of; # `spark.master`. Depending on the availability of your cluster you may request; # more computing nodes or cores per node with a similar configuration:; #; # sparkconf = pyspark.SparkConf().setAll(; # {""spark.master"": ""spark://HOST:PORT"",; # ""spark.executor.instances"": <number_of_nodes>,; # ""spark.executor.cores"" <cores_per_node>,}.items()); #; # You can find all configuration options and more details in the official Spark; # documentation at https://spark.apache.org/docs/latest/configuration.html .; # Create a SparkConf object with all the desired Spark configuration parameters",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:33,Deployability,configurat,configuration,33,"# Create a SparkContext with the configuration stored in `sparkconf`",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py:33,Modifiability,config,configuration,33,"# Create a SparkContext with the configuration stored in `sparkconf`",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf001_spark_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf001_spark_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:65,Modifiability,Config,Configure,65,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Configure a Dask connection and fill two histograms distributedly.; ##; ## This tutorial shows the ingredients needed to setup the connection to a Dask; ## cluster (e.g. a `LocalCluster` for a single machine). After this initial; ## setup, an RDataFrame with distributed capabilities is created and connected; ## to a Dask `Client` instance. Finally, a couple of histograms are drawn from; ## the created columns in the dataset. Relevant documentation can be found at; ## http://distributed.dask.org/en/stable .; ##; ## \macro_code; ## \macro_image; ##; ## \date February 2022; ## \author Vincenzo Eduardo Padulano",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf002_dask_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:1656,Availability,avail,available,1656,"ed. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'. Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your computations. This is done through the `SSHCluster` class. For; example:. ```python; from dask.distributed import SSHCluster; cluster = SSHCluster(; # A list with machine host names, the first name will be used as; # scheduler, following names will become workers.; hosts=[""machine1"",""machine2"",""machine3""],; # A dictionary of options for each worker node, here we set the number; # of cores to be used on each node.; worker_options={""nprocs"":4,},; ); ```. Another common usecase is interfacing Dask to a batch system like HTCondor or; Slurm. A separate package called dask-jobqueue (https://jobqueue.dask.org); extends the available Dask cluster classes to enable running Dask computations; as batch jobs. In this case, the cluster object usually receives the parameters; that would be written in the job description file. For example:. ```python; from dask_jobqueue import HTCondorCluster; cluster = HTCondorCluster(; cores=1,; memory='2000MB',; disk='1000MB',; ); # Use the scale method to send as many jobs as needed; cluster.scale(4); ```. In this tutorial, a cluster object is created for the local machine, using; multiprocessing (processes=True) on 2 workers (n_workers=2) each using only; 1 core (threads_per_worker=1) and 2GiB of RAM (memory_limit=""2GiB"").; """"""",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf002_dask_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:1249,Energy Efficiency,schedul,scheduler,1249,"posal. To use; only the local machine (e.g. your laptop), a `LocalCluster` object can be; used. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'. Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your computations. This is done through the `SSHCluster` class. For; example:. ```python; from dask.distributed import SSHCluster; cluster = SSHCluster(; # A list with machine host names, the first name will be used as; # scheduler, following names will become workers.; hosts=[""machine1"",""machine2"",""machine3""],; # A dictionary of options for each worker node, here we set the number; # of cores to be used on each node.; worker_options={""nprocs"":4,},; ); ```. Another common usecase is interfacing Dask to a batch system like HTCondor or; Slurm. A separate package called dask-jobqueue (https://jobqueue.dask.org); extends the available Dask cluster classes to enable running Dask computations; as batch jobs. In this case, the cluster object usually receives the parameters; that would be written in the job description file. For example:. ```python; from dask_jobqueue import HTCondorCluster; cluster = HTCondorCluster(; cores=1,; memory='2000MB',; disk='1000MB',; ); # Use the scale method to send as many jobs as needed; cluster.scale(4); ```. In this tutorial, a cluster object is created for the local machine, using; multiprocessing (processes=True) on 2 workers (n_workers=2)",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf002_dask_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:170,Integrability,depend,depending,170,"""""""; Setup connection to a Dask cluster. Two ingredients are needed:; 1. Creating a cluster object that represents computing resources. This can be; done in various ways depending on the type of resources at disposal. To use; only the local machine (e.g. your laptop), a `LocalCluster` object can be; used. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'. Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your computations. This is done through the `SSHCluster` class. For; example:. ```python; from dask.distributed import SSHCluster; cluster = SSHCluster(; # A list with machine host names, the first name will be used as; # scheduler, following names will become workers.; hosts=[""machine1"",""machine2"",""machine3""],; # A dictionary of options for each worker node, here we set the number; # of cores to be used on each node.; worker_options={""nprocs"":4,},; ); ```. Another common usecase is interfacing Dask to a batch system like HTCondor or; Slurm. A separate package called dask-jobqueue (https://jobqueue.dask.org); extends the available Dask cluster classes to enable running Dask computations; as batch jobs. In this case, the cluster object usually receives the parameters; that would be written in the job description file. For example:. ```python; from dask_jobqueue import HTCondorCluster; cluster = HTCondorCluster(; cores=1,; memory='2000MB',; disk='1000MB',; ); # ",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf002_dask_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:1644,Modifiability,extend,extends,1644,"ed. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'. Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your computations. This is done through the `SSHCluster` class. For; example:. ```python; from dask.distributed import SSHCluster; cluster = SSHCluster(; # A list with machine host names, the first name will be used as; # scheduler, following names will become workers.; hosts=[""machine1"",""machine2"",""machine3""],; # A dictionary of options for each worker node, here we set the number; # of cores to be used on each node.; worker_options={""nprocs"":4,},; ); ```. Another common usecase is interfacing Dask to a batch system like HTCondor or; Slurm. A separate package called dask-jobqueue (https://jobqueue.dask.org); extends the available Dask cluster classes to enable running Dask computations; as batch jobs. In this case, the cluster object usually receives the parameters; that would be written in the job description file. For example:. ```python; from dask_jobqueue import HTCondorCluster; cluster = HTCondorCluster(; cores=1,; memory='2000MB',; disk='1000MB',; ); # Use the scale method to send as many jobs as needed; cluster.scale(4); ```. In this tutorial, a cluster object is created for the local machine, using; multiprocessing (processes=True) on 2 workers (n_workers=2) each using only; 1 core (threads_per_worker=1) and 2GiB of RAM (memory_limit=""2GiB"").; """"""",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf002_dask_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:344,Security,access,access,344,"""""""; Setup connection to a Dask cluster. Two ingredients are needed:; 1. Creating a cluster object that represents computing resources. This can be; done in various ways depending on the type of resources at disposal. To use; only the local machine (e.g. your laptop), a `LocalCluster` object can be; used. This step can be skipped if you have access to an existing Dask; cluster; in that case, the cluster administrator should provide you with a; URL to connect to the cluster in step 2. More options for cluster creation; can be found in the Dask docs at; http://distributed.dask.org/en/stable/api.html#cluster .; 2. Creating a Dask client object that connects to the cluster. This accepts; directly the object previously created. In case the cluster was setup; externally, you need to provide an endpoint URL to the client, e.g.; 'https://myscheduler.domain:8786'. Through Dask, you can connect to various types of cluster resources. For; example, you can connect together a set of machines through SSH and use them; to run your computations. This is done through the `SSHCluster` class. For; example:. ```python; from dask.distributed import SSHCluster; cluster = SSHCluster(; # A list with machine host names, the first name will be used as; # scheduler, following names will become workers.; hosts=[""machine1"",""machine2"",""machine3""],; # A dictionary of options for each worker node, here we set the number; # of cores to be used on each node.; worker_options={""nprocs"":4,},; ); ```. Another common usecase is interfacing Dask to a batch system like HTCondor or; Slurm. A separate package called dask-jobqueue (https://jobqueue.dask.org); extends the available Dask cluster classes to enable running Dask computations; as batch jobs. In this case, the cluster object usually receives the parameters; that would be written in the job description file. For example:. ```python; from dask_jobqueue import HTCondorCluster; cluster = HTCondorCluster(; cores=1,; memory='2000MB',; disk='1000MB',; ); # ",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf002_dask_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:91,Integrability,wrap,wrapped,91,"# This tutorial uses Python multiprocessing, so the creation of the cluster; # needs to be wrapped in the main clause as described in the Python docs; # https://docs.python.org/3/library/multiprocessing.html",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf002_dask_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py:31,Testability,mock,mock,31,"# Create the connection to the mock Dask cluster on the local machine",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf002_dask_connection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf002_dask_connection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf003_live_visualization.py:65,Modifiability,Config,Configure,65,"## \file; ## \ingroup tutorial_dataframe; ## \notebook -draw; ## Configure a Dask connection and visualize the filling of a 1D and 2D; ## histograms distributedly.; ##; ## This tutorial showcases the process of setting up real-time data representation ; ## for distributed computations.; ## By calling the LiveVisualize function, you can observe the canvas updating; ## with the intermediate results of the histograms as the; ## distributed computation progresses. ; ##; ## \macro_code; ## \macro_image; ##; ## \date August 2023; ## \author Silia Taider",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf003_live_visualization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf003_live_visualization.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf003_live_visualization.py:40,Modifiability,variab,variable,40,"# Define a gaussean distribution with a variable mean",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf003_live_visualization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf003_live_visualization.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:230,Deployability,release,release,230,"# \file; # \ingroup tutorial_dataframe; #; # Configure a Dask connection to a HTCondor cluster hosted by the CERN batch; # service. To reproduce this tutorial, run the following steps:; #; # 1. Login to lxplus; # 2. Source an LCG release (minimum LCG104). See; # https://lcgdocs.web.cern.ch/lcgdocs/lcgreleases/introduction/ for details; # 3. Install the `dask_lxplus` package, which provides the `CernCluster` class; # needed to properly connect to the CERN condor pools. See; # https://batchdocs.web.cern.ch/specialpayload/dask.html for instructions; # 4. Run this tutorial; #; # The tutorial defines resources that each job will request to the condor; # scheduler, then creates a Dask client that can be used by RDataFrame to; # distribute computations.; #; # \macro_code; #; # \date September 2023; # \author Vincenzo Eduardo Padulano CERN",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf004_dask_lxbatch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:343,Deployability,Install,Install,343,"# \file; # \ingroup tutorial_dataframe; #; # Configure a Dask connection to a HTCondor cluster hosted by the CERN batch; # service. To reproduce this tutorial, run the following steps:; #; # 1. Login to lxplus; # 2. Source an LCG release (minimum LCG104). See; # https://lcgdocs.web.cern.ch/lcgdocs/lcgreleases/introduction/ for details; # 3. Install the `dask_lxplus` package, which provides the `CernCluster` class; # needed to properly connect to the CERN condor pools. See; # https://batchdocs.web.cern.ch/specialpayload/dask.html for instructions; # 4. Run this tutorial; #; # The tutorial defines resources that each job will request to the condor; # scheduler, then creates a Dask client that can be used by RDataFrame to; # distribute computations.; #; # \macro_code; #; # \date September 2023; # \author Vincenzo Eduardo Padulano CERN",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf004_dask_lxbatch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:657,Energy Efficiency,schedul,scheduler,657,"# \file; # \ingroup tutorial_dataframe; #; # Configure a Dask connection to a HTCondor cluster hosted by the CERN batch; # service. To reproduce this tutorial, run the following steps:; #; # 1. Login to lxplus; # 2. Source an LCG release (minimum LCG104). See; # https://lcgdocs.web.cern.ch/lcgdocs/lcgreleases/introduction/ for details; # 3. Install the `dask_lxplus` package, which provides the `CernCluster` class; # needed to properly connect to the CERN condor pools. See; # https://batchdocs.web.cern.ch/specialpayload/dask.html for instructions; # 4. Run this tutorial; #; # The tutorial defines resources that each job will request to the condor; # scheduler, then creates a Dask client that can be used by RDataFrame to; # distribute computations.; #; # \macro_code; #; # \date September 2023; # \author Vincenzo Eduardo Padulano CERN",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf004_dask_lxbatch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:45,Modifiability,Config,Configure,45,"# \file; # \ingroup tutorial_dataframe; #; # Configure a Dask connection to a HTCondor cluster hosted by the CERN batch; # service. To reproduce this tutorial, run the following steps:; #; # 1. Login to lxplus; # 2. Source an LCG release (minimum LCG104). See; # https://lcgdocs.web.cern.ch/lcgdocs/lcgreleases/introduction/ for details; # 3. Install the `dask_lxplus` package, which provides the `CernCluster` class; # needed to properly connect to the CERN condor pools. See; # https://batchdocs.web.cern.ch/specialpayload/dask.html for instructions; # 4. Run this tutorial; #; # The tutorial defines resources that each job will request to the condor; # scheduler, then creates a Dask client that can be used by RDataFrame to; # distribute computations.; #; # \macro_code; #; # \date September 2023; # \author Vincenzo Eduardo Padulano CERN",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf004_dask_lxbatch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:194,Testability,Log,Login,194,"# \file; # \ingroup tutorial_dataframe; #; # Configure a Dask connection to a HTCondor cluster hosted by the CERN batch; # service. To reproduce this tutorial, run the following steps:; #; # 1. Login to lxplus; # 2. Source an LCG release (minimum LCG104). See; # https://lcgdocs.web.cern.ch/lcgdocs/lcgreleases/introduction/ for details; # 3. Install the `dask_lxplus` package, which provides the `CernCluster` class; # needed to properly connect to the CERN condor pools. See; # https://batchdocs.web.cern.ch/specialpayload/dask.html for instructions; # 4. Run this tutorial; #; # The tutorial defines resources that each job will request to the condor; # scheduler, then creates a Dask client that can be used by RDataFrame to; # distribute computations.; #; # \macro_code; #; # \date September 2023; # \author Vincenzo Eduardo Padulano CERN",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf004_dask_lxbatch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:166,Energy Efficiency,schedul,scheduler,166,"# The resources described in the specified arguments to this class represent; # the submission of a single job and will spawn a single Dask worker when; # the condor scheduler launches the job. Specifically, this example has Dask; # workers each with 1 core and 2 GB of memory.",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf004_dask_lxbatch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:231,Availability,avail,available,231,"# The Dask client can be created after the condor jobs have been submitted.; # At this point, the jobs may or may not have actually started. Thus, it is; # not guaranteed that the application already has the requested resources; # available.",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf004_dask_lxbatch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:66,Energy Efficiency,schedul,scheduler,66,"# It is possible to tell the Dask client to wait until the condor scheduler; # has started the requested jobs and launched the Dask workers.; # The client will wait until 'n_workers' workers have been launched. In this; # example, the client waits for all the jobs requested to start before; # continuing with the application.",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf004_dask_lxbatch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py:11,Usability,simpl,simple,11,"""""""; Run a simple example with RDataFrame, using the previously created; connection to the HTCondor cluster.; """"""",MatchSource.CODE_COMMENT,tutorials/dataframe/distrdf004_dask_lxbatch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/dataframe/distrdf004_dask_lxbatch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/combinedFit.py:2,Performance,perform,perform,2,"# perform now global fit",MatchSource.CODE_COMMENT,tutorials/fit/combinedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/combinedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/combinedFit.py:83,Integrability,wrap,wrapped,83,"# we can't pass the Python object globalChi2 directly to FitFCN.; # It needs to be wrapped in a ROOT::Math::Functor.",MatchSource.CODE_COMMENT,tutorials/fit/combinedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/combinedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitConvolution.py:54,Modifiability,variab,variables,54,"# Probability density function of the addition of two variables is the; # convolution of two density functions.",MatchSource.CODE_COMMENT,tutorials/fit/fitConvolution.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitConvolution.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx:408,Deployability,update,update,408,"//; // The ""fitEllipseTGraphDLSF"" macro uses the ""Direct Least Squares Fitting""; // algorithm for fitting an ellipse to a set of data points from a TGraph; //; // To try this macro, in a ROOT prompt, do:; // .L fitEllipseTGraphDLSF.cxx // or "".L fitEllipseTGraphDLSF.cxx++""; // fitEllipseTGraphDLSF(TestGraphDLSF());; // for (int i=0; i<10; i++) { fitEllipseTGraphDLSF(); gSystem->Sleep(333); }; //; // Last update: Thu Jul 31 18:00:00 UTC 2014; //; // Changes:; // 2014.07.31 - (initial version); //",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphDLSF.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx:299,Testability,Test,TestGraphDLSF,299,"//; // The ""fitEllipseTGraphDLSF"" macro uses the ""Direct Least Squares Fitting""; // algorithm for fitting an ellipse to a set of data points from a TGraph; //; // To try this macro, in a ROOT prompt, do:; // .L fitEllipseTGraphDLSF.cxx // or "".L fitEllipseTGraphDLSF.cxx++""; // fitEllipseTGraphDLSF(TestGraphDLSF());; // for (int i=0; i<10; i++) { fitEllipseTGraphDLSF(); gSystem->Sleep(333); }; //; // Last update: Thu Jul 31 18:00:00 UTC 2014; //; // Changes:; // 2014.07.31 - (initial version); //",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphDLSF.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx:3,Energy Efficiency,reduce,reduced,3,"// reduced scatter matrix",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphDLSF.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx:17,Testability,test,test,17,"//; // creates a test TGraph with an ellipse; //",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphDLSF.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx:14,Testability,test,test,14,"// define the test ellipse",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphDLSF.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx:14,Testability,test,test,14,"// create the test TGraph",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphDLSF.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphDLSF.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:395,Deployability,update,update,395,"//; // The ""fitEllipseTGraphRMM"" macro uses the ""ROOT::Math::Minimizer""; // interface for fitting an ellipse to a set of data points from a TGraph; //; // To try this macro, in a ROOT prompt, do:; // .L fitEllipseTGraphRMM.cxx // or "".L fitEllipseTGraphRMM.cxx++""; // fitEllipseTGraphRMM(TestGraphRMM());; // for (int i=0; i<10; i++) { fitEllipseTGraphRMM(); gSystem->Sleep(333); }; //; // Last update: Thu Jul 31 18:00:00 UTC 2014; //; // Changes:; // 2014.07.31 - (initial version); //",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphRMM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:76,Integrability,interface,interface,76,"//; // The ""fitEllipseTGraphRMM"" macro uses the ""ROOT::Math::Minimizer""; // interface for fitting an ellipse to a set of data points from a TGraph; //; // To try this macro, in a ROOT prompt, do:; // .L fitEllipseTGraphRMM.cxx // or "".L fitEllipseTGraphRMM.cxx++""; // fitEllipseTGraphRMM(TestGraphRMM());; // for (int i=0; i<10; i++) { fitEllipseTGraphRMM(); gSystem->Sleep(333); }; //; // Last update: Thu Jul 31 18:00:00 UTC 2014; //; // Changes:; // 2014.07.31 - (initial version); //",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphRMM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:288,Testability,Test,TestGraphRMM,288,"//; // The ""fitEllipseTGraphRMM"" macro uses the ""ROOT::Math::Minimizer""; // interface for fitting an ellipse to a set of data points from a TGraph; //; // To try this macro, in a ROOT prompt, do:; // .L fitEllipseTGraphRMM.cxx // or "".L fitEllipseTGraphRMM.cxx++""; // fitEllipseTGraphRMM(TestGraphRMM());; // for (int i=0; i<10; i++) { fitEllipseTGraphRMM(); gSystem->Sleep(333); }; //; // Last update: Thu Jul 31 18:00:00 UTC 2014; //; // Changes:; // 2014.07.31 - (initial version); //",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphRMM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:21,Availability,toler,tolerance,21,"/* 0 or 1 */; // set tolerance, etc. ...",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphRMM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:33,Integrability,wrap,wrapper,33,"/* 0 or 1 */; // create function wrapper for minimizer (a IMultiGenFunction type)",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphRMM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:45,Modifiability,variab,variables,45,"// ""theta"" = -45 ... 135 degrees; // set the variables to be minimized",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphRMM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:11,Modifiability,variab,variables,11,"// set the variables' limits",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphRMM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:17,Testability,test,test,17,"//; // creates a test TGraph with an ellipse; //",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphRMM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:14,Testability,test,test,14,"// define the test ellipse",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphRMM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx:14,Testability,test,test,14,"// create the test TGraph",MatchSource.CODE_COMMENT,tutorials/fit/fitEllipseTGraphRMM.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitEllipseTGraphRMM.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitNormSum.py:332,Modifiability,variab,variable,332,"# Note: in the C++ tutorial, the parameter value sync is done in one line with:; # ```C++; # f_sum->SetParameters(fnorm_exp_cb->GetParameters().data());; # ```; # However, TF1NormSum::GetParameters() returns an std::vector by value, which; # doesn't survive long enough in Python. That's why we have to explicitly; # assign it to a variable first and can't use a temporary.",MatchSource.CODE_COMMENT,tutorials/fit/fitNormSum.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitNormSum.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitNormSum.py:23,Availability,avail,available,23,"# fit - use Minuit2 if available",MatchSource.CODE_COMMENT,tutorials/fit/fitNormSum.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitNormSum.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitNormSum.py:2,Testability,test,test,2,"# test if parameters are fine",MatchSource.CODE_COMMENT,tutorials/fit/fitNormSum.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/fitNormSum.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/multifit.py:245,Availability,error,errors,245,"## \file; ## \ingroup tutorial_fit; ## \notebook; ## Fitting multiple functions to different ranges of a 1-D histogram; ## Example showing how to fit in a sub-range of an histogram; ## A histogram is created and filled with the bin contents and errors; ## defined in the table below.; ## Three Gaussians are fitted in sub-ranges of this histogram.; ## A new function (a sum of 3 Gaussians) is fitted on another subrange; ## Note that when fitting simple functions, such as Gaussians, the initial; ## values of parameters are automatically computed by ROOT.; ## In the more complicated case of the sum of 3 Gaussians, the initial values; ## of parameters must be given. In this particular case, the initial values; ## are taken from the result of the individual fits.; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \authors Jonas Rembser, Rene Brun (C++ version)",MatchSource.CODE_COMMENT,tutorials/fit/multifit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/multifit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/multifit.py:447,Usability,simpl,simple,447,"## \file; ## \ingroup tutorial_fit; ## \notebook; ## Fitting multiple functions to different ranges of a 1-D histogram; ## Example showing how to fit in a sub-range of an histogram; ## A histogram is created and filled with the bin contents and errors; ## defined in the table below.; ## Three Gaussians are fitted in sub-ranges of this histogram.; ## A new function (a sum of 3 Gaussians) is fitted on another subrange; ## Note that when fitting simple functions, such as Gaussians, the initial; ## values of parameters are automatically computed by ROOT.; ## In the more complicated case of the sum of 3 Gaussians, the initial values; ## of parameters must be given. In this particular case, the initial values; ## are taken from the result of the individual fits.; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \authors Jonas Rembser, Rene Brun (C++ version)",MatchSource.CODE_COMMENT,tutorials/fit/multifit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/multifit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py:156,Usability,Simpl,Simplex,156,"# create minimizer giving a name and a name (optionally) for the specific algorithm; # possible choices are:; # minimizerName algoName; #; # Minuit Migrad, Simplex,Combined,Scan (default is Migrad); # Minuit2 Migrad, BFGS, Simplex,Combined,Scan (default is Migrad); # GSLMultiMin ConjugateFR, ConjugatePR, BFGS, BFGS2, SteepestDescent; # GSLSimAn; # Genetic",MatchSource.CODE_COMMENT,tutorials/fit/NumericalMinimization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py:223,Usability,Simpl,Simplex,223,"# create minimizer giving a name and a name (optionally) for the specific algorithm; # possible choices are:; # minimizerName algoName; #; # Minuit Migrad, Simplex,Combined,Scan (default is Migrad); # Minuit2 Migrad, BFGS, Simplex,Combined,Scan (default is Migrad); # GSLMultiMin ConjugateFR, ConjugatePR, BFGS, BFGS2, SteepestDescent; # GSLSimAn; # Genetic",MatchSource.CODE_COMMENT,tutorials/fit/NumericalMinimization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py:6,Availability,toler,tolerance,6,"# Set tolerance and other minimizer parameters, one can also use default; # values",MatchSource.CODE_COMMENT,tutorials/fit/NumericalMinimization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py:18,Integrability,wrap,wrapper,18,"# Create function wrapper for minimizer",MatchSource.CODE_COMMENT,tutorials/fit/NumericalMinimization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py:15,Modifiability,variab,variables,15,"# Set the free variables to be minimized !",MatchSource.CODE_COMMENT,tutorials/fit/NumericalMinimization.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/fit/NumericalMinimization.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/geom/iterplugin.cxx:26,Modifiability,plugin,plugin,26,"// A simple user iterator plugin that changes volume color",MatchSource.CODE_COMMENT,tutorials/geom/iterplugin.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/geom/iterplugin.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/geom/iterplugin.cxx:5,Usability,simpl,simple,5,"// A simple user iterator plugin that changes volume color",MatchSource.CODE_COMMENT,tutorials/geom/iterplugin.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/geom/iterplugin.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/graphs/bent.py:65,Availability,error,error,65,"## \file; ## \ingroup tutorial_graphs; ## \notebook -js; ## Bent error bars. Inspired from work of Olivier Couet.; ##; ## \macro_image; ## \macro_code; ##; ## \author Alberto Ferro",MatchSource.CODE_COMMENT,tutorials/graphs/bent.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/graphs/bent.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/hist/ratioplot1.py:73,Usability,simpl,simple,73,"## \file; ## \ingroup tutorial_hist; ## \notebook; ## Example creating a simple ratio plot of two histograms using the `pois` division option.; ## Two histograms are set up and filled with random numbers. The constructor of `TRatioPlot`; ## takes the to histograms, name and title for the object, drawing options for the histograms (`hist` and `E` in this case); ## and a drawing option for the output graph.; ## Inspired by the tutorial of Paul Gessinger.; ##; ## \macro_image; ## \macro_code; ##; ## \author Alberto Ferro",MatchSource.CODE_COMMENT,tutorials/hist/ratioplot1.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/hist/ratioplot1.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/hf001_example.py:2,Performance,Perform,Perform,2,"# Perform the fit using Minos to get the correct asymmetric uncertainties",MatchSource.CODE_COMMENT,tutorials/histfactory/hf001_example.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/hf001_example.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:275,Availability,error,errors,275,"#!/usr/bin/env python; #; # A pyROOT script that allows one to; # make quick measuremenst.; #; # This is a command-line script that; # takes in signal and background values,; # as well as potentially uncertainties on those; # values, and returns a fitted signal value; # and errors",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:46,Testability,test,tests,46,""""""" Create a simple model and run statistical tests . This script can be used to make simple statistical using histfactory.; It takes values for signal, background, and data as input, and; can optionally take uncertainties on signal or background.; The model is created and saved to an output ROOT file, and; the model can be fit if requested. """"""",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:13,Usability,simpl,simple,13,""""""" Create a simple model and run statistical tests . This script can be used to make simple statistical using histfactory.; It takes values for signal, background, and data as input, and; can optionally take uncertainties on signal or background.; The model is created and saved to an output ROOT file, and; the model can be fit if requested. """"""",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:86,Usability,simpl,simple,86,""""""" Create a simple model and run statistical tests . This script can be used to make simple statistical using histfactory.; It takes values for signal, background, and data as input, and; can optionally take uncertainties on signal or background.; The model is created and saved to an output ROOT file, and; the model can be fit if requested. """"""",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:42,Integrability,message,messages,42,"# Make a log; # Set the format of the log messages:",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:9,Testability,log,log,9,"# Make a log; # Set the format of the log messages:",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:38,Testability,log,log,38,"# Make a log; # Set the format of the log messages:",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:13,Testability,log,logger,13,"# Create the logger object:",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:13,Safety,sanity check,sanity check,13,"# So a small sanity check:",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:39,Usability,simpl,simply,39,"# Okay, if all input is acceptable, we simply pass; # it to the MakeSimpleMeasurement function, which; # does the real work.",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:11,Usability,simpl,simple,11,""""""" Make a simple measurement using HistFactory; ; Take in simple values for signal, background data, ; and potentially uncertainty on signal and background. """"""",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py:59,Usability,simpl,simple,59,""""""" Make a simple measurement using HistFactory; ; Take in simple values for signal, background data, ; and potentially uncertainty on signal and background. """"""",MatchSource.CODE_COMMENT,tutorials/histfactory/makeQuickModel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/histfactory/makeQuickModel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/http/httptextlog.mjs:7,Usability,clear,clear,7,// add clear function for item,MatchSource.CODE_COMMENT,tutorials/http/httptextlog.mjs,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/http/httptextlog.mjs
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/Bessel.py:99,Availability,avail,available,99,"## \file; ## \ingroup tutorial_math; ## \notebook; ## Show the different kinds of Bessel functions available in ROOT; ## To execute the macro type in:; ##; ## ~~~{.cpp}; ## root[0] .x Bessel.C; ## ~~~; ##; ## It will create one canvas with the representation; ## of the cylindrical and spherical Bessel functions; ## regular and modified; ##; ## Based on Bessel.C by Magdalena Slawinska; ##; ## \macro_image; ## \macro_code; ##; ## \author Juan Fernando Jaramillo Botero",MatchSource.CODE_COMMENT,tutorials/math/Bessel.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/Bessel.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/mathcoreStatFunc.py:189,Modifiability,variab,variables,189,"## \file; ## \ingroup tutorial_math; ## \notebook; ## Example macro showing some major probability density functions in ROOT.; ## The macro shows four of them with; ## respect to their two variables. In order to run the macro type:; ##; ## ~~~{.cpp}; ## root [0] .x mathcoreStatFunc.C; ## ~~~; ##; ## Original tutorial by Andras Zsenei.; ## \macro_image; ## \macro_code; ##; ## \author Alberto Ferro",MatchSource.CODE_COMMENT,tutorials/math/mathcoreStatFunc.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/mathcoreStatFunc.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,Deployability,configurat,configuration,10,"# Set the configuration for the X and Y axis.",MatchSource.CODE_COMMENT,tutorials/math/normalDist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,Modifiability,config,configuration,10,"# Set the configuration for the X and Y axis.",MatchSource.CODE_COMMENT,tutorials/math/normalDist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,Deployability,configurat,configuration,10,"# Set the configuration for the X and Y axis for the cumulative normal; # distribution.",MatchSource.CODE_COMMENT,tutorials/math/normalDist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,Modifiability,config,configuration,10,"# Set the configuration for the X and Y axis for the cumulative normal; # distribution.",MatchSource.CODE_COMMENT,tutorials/math/normalDist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:109,Energy Efficiency,green,green,109,"# Set sigma to 1 and mean to zero, for the survival function of normal; # distribution, and set the color to green and title to none",MatchSource.CODE_COMMENT,tutorials/math/normalDist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,Deployability,configurat,configuration,10,"# Set the configuration of X and Y axis",MatchSource.CODE_COMMENT,tutorials/math/normalDist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:10,Modifiability,config,configuration,10,"# Set the configuration of X and Y axis",MatchSource.CODE_COMMENT,tutorials/math/normalDist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py:111,Energy Efficiency,green,green,111,"# Set sigma to 1 and mean to zero of survival function of quantile of normal; # distribution, and set color to green and title to none.",MatchSource.CODE_COMMENT,tutorials/math/normalDist.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/normalDist.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:289,Modifiability,variab,variables,289,"## \file; ## \ingroup tutorial_math; ## \notebook; ## Principal Components Analysis (PCA) example; ##; ## Example of using TPrincipal as a stand alone class.; ##; ## I create n-dimensional data points, where c = trunc(n / 5) + 1; ## are correlated with the rest n - c randomly distributed variables.; ##; ## Based on principal.C by Rene Brun and Christian Holm Christensen; ##; ## \macro_output; ## \macro_code; ##; ## \authors Juan Fernando, Jaramillo Botero",MatchSource.CODE_COMMENT,tutorials/math/principal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:173,Integrability,depend,dependent,173,"""""""*************************************************; * Principal Component Analysis *; * *; * Number of variables: {0:4d} *; * Number of data points: {1:8d} *; * Number of dependent variables: {2:4d} *; * *; *************************************************""""""",MatchSource.CODE_COMMENT,tutorials/math/principal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:105,Modifiability,variab,variables,105,"""""""*************************************************; * Principal Component Analysis *; * *; * Number of variables: {0:4d} *; * Number of data points: {1:8d} *; * Number of dependent variables: {2:4d} *; * *; *************************************************""""""",MatchSource.CODE_COMMENT,tutorials/math/principal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:183,Modifiability,variab,variables,183,"""""""*************************************************; * Principal Component Analysis *; * *; * Number of variables: {0:4d} *; * Number of data points: {1:8d} *; * Number of dependent variables: {2:4d} *; * *; *************************************************""""""",MatchSource.CODE_COMMENT,tutorials/math/principal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:188,Modifiability,variab,variables,188,"# Initilase the TPrincipal object. Use the empty string for the; # final argument, if you don't wan't the covariance; # matrix. Normalising the covariance matrix is a good idea if your; # variables have different orders of magnitude.",MatchSource.CODE_COMMENT,tutorials/math/principal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:64,Energy Efficiency,Allocate,Allocate,64,"# Make the m data-points; # Make a variable to hold our data; # Allocate memory for the data point",MatchSource.CODE_COMMENT,tutorials/math/principal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:35,Modifiability,variab,variable,35,"# Make the m data-points; # Make a variable to hold our data; # Allocate memory for the data point",MatchSource.CODE_COMMENT,tutorials/math/principal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:44,Modifiability,variab,variables,44,"# First we create the un-correlated, random variables, according; # to one of three distributions",MatchSource.CODE_COMMENT,tutorials/math/principal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:32,Modifiability,variab,variables,32,"# Then we create the correlated variables",MatchSource.CODE_COMMENT,tutorials/math/principal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py:2,Testability,Test,Test,2,"# Test the PCA",MatchSource.CODE_COMMENT,tutorials/math/principal.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/principal.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/math/tStudent.py:27,Performance,load,load,27,"# This is the way to force load of MathMore in Cling",MatchSource.CODE_COMMENT,tutorials/math/tStudent.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/math/tStudent.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c:70,Availability,echo,echo,70,/* fpont 12/99 */; /* pont.net */; /* udpserver.c */; /* Converted to echo client/server with select() (timeout option).; See testTUDPSocket.C */; /* Compile with: gcc udpserver.c -o udpserver */; /* on Windows: cl -nologo -Z7 -MD -GR -EHsc udpserver.c */; /* 3/30/05 John Schultz */,MatchSource.CODE_COMMENT,tutorials/net/udpserver.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c
https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c:104,Safety,timeout,timeout,104,/* fpont 12/99 */; /* pont.net */; /* udpserver.c */; /* Converted to echo client/server with select() (timeout option).; See testTUDPSocket.C */; /* Compile with: gcc udpserver.c -o udpserver */; /* on Windows: cl -nologo -Z7 -MD -GR -EHsc udpserver.c */; /* 3/30/05 John Schultz */,MatchSource.CODE_COMMENT,tutorials/net/udpserver.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c
https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c:126,Testability,test,testTUDPSocket,126,/* fpont 12/99 */; /* pont.net */; /* udpserver.c */; /* Converted to echo client/server with select() (timeout option).; See testTUDPSocket.C */; /* Compile with: gcc udpserver.c -o udpserver */; /* on Windows: cl -nologo -Z7 -MD -GR -EHsc udpserver.c */; /* 3/30/05 John Schultz */,MatchSource.CODE_COMMENT,tutorials/net/udpserver.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c
https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c:11,Integrability,message,message,11,/* receive message */,MatchSource.CODE_COMMENT,tutorials/net/udpserver.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c
https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c:18,Integrability,message,message,18,/* print received message */,MatchSource.CODE_COMMENT,tutorials/net/udpserver.c,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/net/udpserver.c
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/EmptyInclude.h:91,Performance,Load,Load,91,"/// \file EmptyInclude.h; /// \ingroup tutorial_proof; ///; /// Empty file to test TProof::Load in runProof.C and StressProof.cxx in; /// conjunction with ProcFileElements and ProofEventProc .; ///; /// \author Gerardo Ganis (gerardo.ganis@cern.ch)",MatchSource.CODE_COMMENT,tutorials/proof/EmptyInclude.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/EmptyInclude.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/EmptyInclude.h:78,Testability,test,test,78,"/// \file EmptyInclude.h; /// \ingroup tutorial_proof; ///; /// Empty file to test TProof::Load in runProof.C and StressProof.cxx in; /// conjunction with ProcFileElements and ProofEventProc .; ///; /// \author Gerardo Ganis (gerardo.ganis@cern.ch)",MatchSource.CODE_COMMENT,tutorials/proof/EmptyInclude.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/EmptyInclude.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/EmptyInclude.h:30,Performance,Load,Load,30,"// Empty file to test TProof::Load in runProof.C and StressProof.cxx in; // conjunction with ProcFileElements and ProofEventProc .",MatchSource.CODE_COMMENT,tutorials/proof/EmptyInclude.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/EmptyInclude.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/EmptyInclude.h:17,Testability,test,test,17,"// Empty file to test TProof::Load in runProof.C and StressProof.cxx in; // conjunction with ProcFileElements and ProofEventProc .",MatchSource.CODE_COMMENT,tutorials/proof/EmptyInclude.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/EmptyInclude.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h:3,Safety,Abort,Abortion,3,"// Abortion test",MatchSource.CODE_COMMENT,tutorials/proof/ProofEventProc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h:12,Testability,test,test,12,"// Abortion test",MatchSource.CODE_COMMENT,tutorials/proof/ProofEventProc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h:240,Integrability,rout,routine,240,"// The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the branch addresses of the tree; // will be set. It is normaly not necessary to make changes to the; // generated code, but the routine can be extended by the user if needed.; // Init() will be called many times when running with PROOF.; // Set branch addresses",MatchSource.CODE_COMMENT,tutorials/proof/ProofEventProc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h:255,Modifiability,extend,extended,255,"// The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the branch addresses of the tree; // will be set. It is normaly not necessary to make changes to the; // generated code, but the routine can be extended by the user if needed.; // Init() will be called many times when running with PROOF.; // Set branch addresses",MatchSource.CODE_COMMENT,tutorials/proof/ProofEventProc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h:308,Integrability,rout,routine,308,"// The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. Typically here the branch pointers; // will be retrieved. It is normaly not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed.",MatchSource.CODE_COMMENT,tutorials/proof/ProofEventProc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h:323,Modifiability,extend,extended,323,"// The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. Typically here the branch pointers; // will be retrieved. It is normaly not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed.",MatchSource.CODE_COMMENT,tutorials/proof/ProofEventProc.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofEventProc.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofFriends.h:265,Integrability,rout,routine,265,"// The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the branch addresses and branch; // pointers of the tree will be set.; // It is normally not necessary to make changes to the generated; // code, but the routine can be extended by the user if needed.; // Init() will be called many times when running on PROOF; // (once per file to be processed).; // Set branch addresses and branch pointers",MatchSource.CODE_COMMENT,tutorials/proof/ProofFriends.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofFriends.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofFriends.h:280,Modifiability,extend,extended,280,"// The Init() function is called when the selector needs to initialize; // a new tree or chain. Typically here the branch addresses and branch; // pointers of the tree will be set.; // It is normally not necessary to make changes to the generated; // code, but the routine can be extended by the user if needed.; // Init() will be called many times when running on PROOF; // (once per file to be processed).; // Set branch addresses and branch pointers",MatchSource.CODE_COMMENT,tutorials/proof/ProofFriends.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofFriends.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofFriends.h:251,Integrability,rout,routine,251,"// The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. It is normally not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed. The return value is currently not used.",MatchSource.CODE_COMMENT,tutorials/proof/ProofFriends.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofFriends.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofFriends.h:266,Modifiability,extend,extended,266,"// The Notify() function is called when a new file is opened. This; // can be either for a new TTree in a TChain or when when a new TTree; // is started when using PROOF. It is normally not necessary to make changes; // to the generated code, but the routine can be extended by the; // user if needed. The return value is currently not used.",MatchSource.CODE_COMMENT,tutorials/proof/ProofFriends.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofFriends.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofNtuple.h:69,Usability,simpl,simple,69,"/// \file; /// \ingroup tutorial_legacy; ///; /// Selector to fill a simple ntuple; ///; /// \macro_code; ///; /// \author Gerardo Ganis (gerardo.ganis@cern.ch)",MatchSource.CODE_COMMENT,tutorials/proof/ProofNtuple.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofNtuple.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofNtuple.h:7,Performance,optimiz,optimized,7,"// For optimized merging of the ntuple",MatchSource.CODE_COMMENT,tutorials/proof/ProofNtuple.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofNtuple.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofNtuple.h:6,Testability,test,test,6,"// To test double TTree in the same file",MatchSource.CODE_COMMENT,tutorials/proof/ProofNtuple.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofNtuple.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofSimple.h:7,Performance,optimiz,optimized,7,"// For optimized merging of the ntuple",MatchSource.CODE_COMMENT,tutorials/proof/ProofSimple.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofSimple.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofTests.h:82,Testability,test,test,82,"/// \file; /// \ingroup tutorial_ProofTests; ///; /// Auxilliary selector used to test PROOF functionality; ///; /// \macro_code; ///; /// \author Gerardo Ganis (gerardo.ganis@cern.ch)",MatchSource.CODE_COMMENT,tutorials/proof/ProofTests.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/proof/ProofTests.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/demo.py:75,Availability,alive,alive,75,"## wait for input to keep the GUI (which lives on a ROOT event dispatcher) alive",MatchSource.CODE_COMMENT,tutorials/pyroot/demo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/demo.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/DynamicSlice.py:464,Energy Efficiency,power,powerful,464,"## \file; ## \ingroup tutorial_pyroot; ## \notebook; ## Example of function called when a mouse event occurs in a pad.; ## When moving the mouse in the canvas, a second canvas shows the; ## projection along X of the bin corresponding to the Y position; ## of the mouse. The resulting histogram is fitted with a gaussian.; ## A ""dynamic"" line shows the current bin position in Y.; ## This more elaborated example can be used as a starting point; ## to develop more powerful interactive applications exploiting CINT; ## as a development engine.; ##; ## Note that a class is used to hold on to the canvas that display; ## the selected slice.; ##; ## \macro_image; ## \macro_code; ##; ## \author Rene Brun, Johann Cohen-Tanugi, Wim Lavrijsen, Enric Tejedor",MatchSource.CODE_COMMENT,tutorials/pyroot/DynamicSlice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/DynamicSlice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/formula1.py:104,Modifiability,variab,variable,104,"# We create a formula object and compute the value of this formula; # for two different values of the x variable.",MatchSource.CODE_COMMENT,tutorials/pyroot/formula1.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/formula1.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gerrors.py:80,Availability,error,error,80,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -js; ## A Simple Graph with error bars; ##; ## \macro_image; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,tutorials/pyroot/gerrors.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gerrors.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gerrors.py:62,Usability,Simpl,Simple,62,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -js; ## A Simple Graph with error bars; ##; ## \macro_image; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,tutorials/pyroot/gerrors.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gerrors.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/graph.py:58,Usability,Simpl,Simple,58,"## \file; ## \ingroup tutorial_pyroot; ## \notebook; ## A Simple Graph Example; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,tutorials/pyroot/graph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/graph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/graph.py:10,Deployability,Update,Update,10,"# TCanvas.Update() draws the frame, after which one can change it",MatchSource.CODE_COMMENT,tutorials/pyroot/graph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/graph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/graph.py:96,Security,access,access,96,"# If the graph does not appear, try using the ""i"" flag, e.g. ""python3 -i graph.py""; # This will access the interactive mode after executing the script, and thereby persist; # long enough for the graph to appear.",MatchSource.CODE_COMMENT,tutorials/pyroot/graph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/graph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gui_ex.py:44,Usability,Simpl,Simple,44,"## \file; ## \ingroup tutorial_pyroot; ## A Simple GUI Example; ##; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,tutorials/pyroot/gui_ex.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/gui_ex.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py:62,Usability,Simpl,Simple,62,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -js; ## A Simple histogram drawing example; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,tutorials/pyroot/h1ReadAndDraw.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py:88,Usability,guid,guide,88,"#; # Draw hpx as a lego. Clicking on the lego area will show; # a ""transparent cube"" to guide you rotating the lego in real time.",MatchSource.CODE_COMMENT,tutorials/pyroot/h1ReadAndDraw.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py:23,Availability,error,errors,23,"#; # Draw hpx with its errors and a marker.",MatchSource.CODE_COMMENT,tutorials/pyroot/h1ReadAndDraw.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/h1ReadAndDraw.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsimple.py:157,Safety,detect,detector,157,"# Create a new ROOT binary machine independent file.; # Note that this file may contain any kind of ROOT objects, histograms,; # pictures, graphics objects, detector geometries, tracks, events, etc..; # This file is now becoming the current directory.",MatchSource.CODE_COMMENT,tutorials/pyroot/hsimple.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsimple.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsimple.py:22,Performance,cache,cache,22,"# For speed, bind and cache the Fill member functions,",MatchSource.CODE_COMMENT,tutorials/pyroot/hsimple.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsimple.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsimple.py:2,Deployability,Update,Update,2,"# Update display every kUPDATE events.",MatchSource.CODE_COMMENT,tutorials/pyroot/hsimple.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsimple.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsimple.py:27,Performance,cache,cache,27,"# Destroy member functions cache.",MatchSource.CODE_COMMENT,tutorials/pyroot/hsimple.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsimple.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py:60,Usability,Simpl,Simple,60,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -js; ## Simple example illustrating how to use the C++ interpreter; ##; ## \macro_image; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,tutorials/pyroot/hsum.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py:22,Performance,cache,cache,22,"# for speed, bind and cache the Fill member functions",MatchSource.CODE_COMMENT,tutorials/pyroot/hsum.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py:2,Deployability,Update,Update,2,"# Update display every kUPDATE events.",MatchSource.CODE_COMMENT,tutorials/pyroot/hsum.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py:27,Performance,cache,cache,27,"# Destroy member functions cache.",MatchSource.CODE_COMMENT,tutorials/pyroot/hsum.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py:33,Deployability,update,update,33,"# Done, finalized and trigger an update.",MatchSource.CODE_COMMENT,tutorials/pyroot/hsum.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/hsum.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/na49view.py:85,Safety,detect,detector,85,"## \file; ## \ingroup tutorial_pyroot; ## This macro generates two views of the NA49 detector.; ##; ## To have a better and dynamic view of any of these pads,; ## you can click with the middle button of your mouse to select it.; ## Then select ""View with x3d"" in the VIEW menu of the Canvas.; ## Once in x3d, you are in wireframe mode by default.; ## You can switch to:; ## - Hidden Line mode by typing E; ## - Solid mode by typing R; ## - Wireframe mode by typing W; ## - Stereo mode by clicking S (and you need special glasses); ## - To leave x3d type Q; ##; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,tutorials/pyroot/na49view.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/na49view.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/numberEntry.py:150,Deployability,update,updated,150,"## \file; ## \ingroup tutorial_pyroot; ## Example frame with one box where the user can increase or decrease a number; ## and the shown value will be updated accordingly.; ##; ## \macro_code; ##; ## \author Wim Lavrijsen",MatchSource.CODE_COMMENT,tutorials/pyroot/numberEntry.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/numberEntry.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/parse_CSV_file_with_TTree_ReadStream.py:242,Safety,avoid,avoiding,242,"# Clean the data entries: remove the first (header) row.; # Ensure empty strings are tagged as such since; # ROOT doesn't differentiate between different types; # of white space. Therefore, we change all of these; # entries to 'empty'. Also, avoiding any lines that begin; # with '#'",MatchSource.CODE_COMMENT,tutorials/pyroot/parse_CSV_file_with_TTree_ReadStream.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/parse_CSV_file_with_TTree_ReadStream.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot001_arrayInterface.py:2,Integrability,Interface,Interface,2,"# Interface ROOT vector with a numpy array",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot001_arrayInterface.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot001_arrayInterface.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:402,Performance,load,loading,402,"# Let's first define a new C++ class. In this tutorial, we will see how we can; # ""pythonize"" this class, i.e. how we can add some extra behaviour to it to; # make it more pythonic or easier to use from Python.; #; # Note: In this example, the class is defined dynamically for demonstration; # purposes, but it could also be a C++ class defined in some library or header.; # For more information about loading C++ user code to be used from Python with; # PyROOT, please see:; # https://root.cern.ch/manual/python/#loading-user-libraries-and-just-in-time-compilation-jitting",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:514,Performance,load,loading-user-libraries-and-just-in-time-compilation-jitting,514,"# Let's first define a new C++ class. In this tutorial, we will see how we can; # ""pythonize"" this class, i.e. how we can add some extra behaviour to it to; # make it more pythonic or easier to use from Python.; #; # Note: In this example, the class is defined dynamically for demonstration; # purposes, but it could also be a C++ class defined in some library or header.; # For more information about loading C++ user code to be used from Python with; # PyROOT, please see:; # https://root.cern.ch/manual/python/#loading-user-libraries-and-just-in-time-compilation-jitting",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:86,Integrability,inject,injecting,86,"# Next, we define a pythonizor function: the function that will be responsible; # for injecting new behaviour in our C++ class `MyClass`.; #; # To convert a given Python function into a pythonizor, we need to decorate it; # with the @pythonization decorator. Such decorator allows us to define which; # which class we want to pythonize by providing its class name and its; # namespace (if the latter is not specified, it defaults to the global; # namespace, i.e. '::').; #; # The decorated function - the pythonizor - must accept either one or two; # parameters:; # 1. The class to be pythonized (proxy object where new behaviour can be; # injected); # 2. The fully-qualified name of that class (optional).; #; # Let's see all this with a simple example. Suppose I would like to define how; # `MyClass` objects are represented as a string in Python (i.e. what would be; # shown when I print that object). For that purpose, I can define the following; # pythonizor function. There are two important things to be noted here:; # - The @pythonization decorator has one argument that specifies our target; # class is `MyClass`.; # - The pythonizor function `pythonizor_of_myclass` provides and injects a new; # implementation for `__str__`, the mechanism that Python provides to define; # how to represent objects as strings. This new implementation; # always returns the string ""This is a MyClass object"".",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:640,Integrability,inject,injected,640,"# Next, we define a pythonizor function: the function that will be responsible; # for injecting new behaviour in our C++ class `MyClass`.; #; # To convert a given Python function into a pythonizor, we need to decorate it; # with the @pythonization decorator. Such decorator allows us to define which; # which class we want to pythonize by providing its class name and its; # namespace (if the latter is not specified, it defaults to the global; # namespace, i.e. '::').; #; # The decorated function - the pythonizor - must accept either one or two; # parameters:; # 1. The class to be pythonized (proxy object where new behaviour can be; # injected); # 2. The fully-qualified name of that class (optional).; #; # Let's see all this with a simple example. Suppose I would like to define how; # `MyClass` objects are represented as a string in Python (i.e. what would be; # shown when I print that object). For that purpose, I can define the following; # pythonizor function. There are two important things to be noted here:; # - The @pythonization decorator has one argument that specifies our target; # class is `MyClass`.; # - The pythonizor function `pythonizor_of_myclass` provides and injects a new; # implementation for `__str__`, the mechanism that Python provides to define; # how to represent objects as strings. This new implementation; # always returns the string ""This is a MyClass object"".",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:1189,Integrability,inject,injects,1189,"# Next, we define a pythonizor function: the function that will be responsible; # for injecting new behaviour in our C++ class `MyClass`.; #; # To convert a given Python function into a pythonizor, we need to decorate it; # with the @pythonization decorator. Such decorator allows us to define which; # which class we want to pythonize by providing its class name and its; # namespace (if the latter is not specified, it defaults to the global; # namespace, i.e. '::').; #; # The decorated function - the pythonizor - must accept either one or two; # parameters:; # 1. The class to be pythonized (proxy object where new behaviour can be; # injected); # 2. The fully-qualified name of that class (optional).; #; # Let's see all this with a simple example. Suppose I would like to define how; # `MyClass` objects are represented as a string in Python (i.e. what would be; # shown when I print that object). For that purpose, I can define the following; # pythonizor function. There are two important things to be noted here:; # - The @pythonization decorator has one argument that specifies our target; # class is `MyClass`.; # - The pythonizor function `pythonizor_of_myclass` provides and injects a new; # implementation for `__str__`, the mechanism that Python provides to define; # how to represent objects as strings. This new implementation; # always returns the string ""This is a MyClass object"".",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:86,Security,inject,injecting,86,"# Next, we define a pythonizor function: the function that will be responsible; # for injecting new behaviour in our C++ class `MyClass`.; #; # To convert a given Python function into a pythonizor, we need to decorate it; # with the @pythonization decorator. Such decorator allows us to define which; # which class we want to pythonize by providing its class name and its; # namespace (if the latter is not specified, it defaults to the global; # namespace, i.e. '::').; #; # The decorated function - the pythonizor - must accept either one or two; # parameters:; # 1. The class to be pythonized (proxy object where new behaviour can be; # injected); # 2. The fully-qualified name of that class (optional).; #; # Let's see all this with a simple example. Suppose I would like to define how; # `MyClass` objects are represented as a string in Python (i.e. what would be; # shown when I print that object). For that purpose, I can define the following; # pythonizor function. There are two important things to be noted here:; # - The @pythonization decorator has one argument that specifies our target; # class is `MyClass`.; # - The pythonizor function `pythonizor_of_myclass` provides and injects a new; # implementation for `__str__`, the mechanism that Python provides to define; # how to represent objects as strings. This new implementation; # always returns the string ""This is a MyClass object"".",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:640,Security,inject,injected,640,"# Next, we define a pythonizor function: the function that will be responsible; # for injecting new behaviour in our C++ class `MyClass`.; #; # To convert a given Python function into a pythonizor, we need to decorate it; # with the @pythonization decorator. Such decorator allows us to define which; # which class we want to pythonize by providing its class name and its; # namespace (if the latter is not specified, it defaults to the global; # namespace, i.e. '::').; #; # The decorated function - the pythonizor - must accept either one or two; # parameters:; # 1. The class to be pythonized (proxy object where new behaviour can be; # injected); # 2. The fully-qualified name of that class (optional).; #; # Let's see all this with a simple example. Suppose I would like to define how; # `MyClass` objects are represented as a string in Python (i.e. what would be; # shown when I print that object). For that purpose, I can define the following; # pythonizor function. There are two important things to be noted here:; # - The @pythonization decorator has one argument that specifies our target; # class is `MyClass`.; # - The pythonizor function `pythonizor_of_myclass` provides and injects a new; # implementation for `__str__`, the mechanism that Python provides to define; # how to represent objects as strings. This new implementation; # always returns the string ""This is a MyClass object"".",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:1189,Security,inject,injects,1189,"# Next, we define a pythonizor function: the function that will be responsible; # for injecting new behaviour in our C++ class `MyClass`.; #; # To convert a given Python function into a pythonizor, we need to decorate it; # with the @pythonization decorator. Such decorator allows us to define which; # which class we want to pythonize by providing its class name and its; # namespace (if the latter is not specified, it defaults to the global; # namespace, i.e. '::').; #; # The decorated function - the pythonizor - must accept either one or two; # parameters:; # 1. The class to be pythonized (proxy object where new behaviour can be; # injected); # 2. The fully-qualified name of that class (optional).; #; # Let's see all this with a simple example. Suppose I would like to define how; # `MyClass` objects are represented as a string in Python (i.e. what would be; # shown when I print that object). For that purpose, I can define the following; # pythonizor function. There are two important things to be noted here:; # - The @pythonization decorator has one argument that specifies our target; # class is `MyClass`.; # - The pythonizor function `pythonizor_of_myclass` provides and injects a new; # implementation for `__str__`, the mechanism that Python provides to define; # how to represent objects as strings. This new implementation; # always returns the string ""This is a MyClass object"".",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:739,Usability,simpl,simple,739,"# Next, we define a pythonizor function: the function that will be responsible; # for injecting new behaviour in our C++ class `MyClass`.; #; # To convert a given Python function into a pythonizor, we need to decorate it; # with the @pythonization decorator. Such decorator allows us to define which; # which class we want to pythonize by providing its class name and its; # namespace (if the latter is not specified, it defaults to the global; # namespace, i.e. '::').; #; # The decorated function - the pythonizor - must accept either one or two; # parameters:; # 1. The class to be pythonized (proxy object where new behaviour can be; # injected); # 2. The fully-qualified name of that class (optional).; #; # Let's see all this with a simple example. Suppose I would like to define how; # `MyClass` objects are represented as a string in Python (i.e. what would be; # shown when I print that object). For that purpose, I can define the following; # pythonizor function. There are two important things to be noted here:; # - The @pythonization decorator has one argument that specifies our target; # class is `MyClass`.; # - The pythonizor function `pythonizor_of_myclass` provides and injects a new; # implementation for `__str__`, the mechanism that Python provides to define; # how to represent objects as strings. This new implementation; # always returns the string ""This is a MyClass object"".",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:33,Usability,simpl,simple,33,"# The previous example is just a simple one, but there are many ways in which a; # class can be pythonized. Typical examples are the redefinition of dunder; # methods (e.g. `__iter__` and `__next__` to make your objects iterable from; # Python). If you need some inspiration, many ROOT classes are pythonized in; # the way we just saw; their pythonizations can be seen at:; # https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/python/ROOT/pythonization; # The @pythonization decorator offers a few more options when it comes to; # matching classes that you want to pythonize. We saw that we can match a; # single class, but we can also specify a list of classes to pythonize.; #; # The following code defines a couple of new classes:",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:12,Security,access,access,12,"# If we now access both classes, we should see that the pythonizor runs twice.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:735,Integrability,inject,inject,735,"# So far we have seen how pythonizations can be registered for classes that; # have not been used yet. We have discussed how, in that case, the pythonizor; # functions are executed lazily when their target class/es are used for the; # first time in the application.; # However, it can also happen that our target class/es have already been; # accessed by the time we register a pythonization. In such a scenario, the; # pythonizor is applied immediately (at registration time) to the target; # class/es.; # Let's see an example of what was just explained. We will define a new class; # and immediately create an object of that class. We can check how the object; # still does not have a new attribute `pythonized` that we are going to inject; # in the next step.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:343,Security,access,accessed,343,"# So far we have seen how pythonizations can be registered for classes that; # have not been used yet. We have discussed how, in that case, the pythonizor; # functions are executed lazily when their target class/es are used for the; # first time in the application.; # However, it can also happen that our target class/es have already been; # accessed by the time we register a pythonization. In such a scenario, the; # pythonizor is applied immediately (at registration time) to the target; # class/es.; # Let's see an example of what was just explained. We will define a new class; # and immediately create an object of that class. We can check how the object; # still does not have a new attribute `pythonized` that we are going to inject; # in the next step.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py:735,Security,inject,inject,735,"# So far we have seen how pythonizations can be registered for classes that; # have not been used yet. We have discussed how, in that case, the pythonizor; # functions are executed lazily when their target class/es are used for the; # first time in the application.; # However, it can also happen that our target class/es have already been; # accessed by the time we register a pythonization. In such a scenario, the; # pythonizor is applied immediately (at registration time) to the target; # class/es.; # Let's see an example of what was just explained. We will define a new class; # and immediately create an object of that class. We can check how the object; # still does not have a new attribute `pythonized` that we are going to inject; # in the next step.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot002_pythonizationDecorator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot002_pythonizationDecorator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot003_prettyPrinting.py:305,Energy Efficiency,power,powered,305,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -nodraw; ## This tutorial illustrates the pretty printing feature of PyROOT, which reveals; ## the content of the object if a string representation is requested, e.g., by; ## Python's print statement. The printing behaves similar to the ROOT prompt; ## powered by the C++ interpreter cling.; ##; ## \macro_code; ## \macro_output; ##; ## \date June 2018; ## \author Stefan Wunsch, Enric Tejedor",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot003_prettyPrinting.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot003_prettyPrinting.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot004_NumbaDeclare.py:186,Usability,usab,usable,186,"## \file; ## \ingroup tutorial_pyroot; ## \notebook -nodraw; ## This tutorial illustrates how PyROOT supports declaring C++ callables from; ## Python callables making them, for example, usable with RDataFrame. The feature; ## uses the numba Python package for just-in-time compilation of the Python callable; ## and supports fundamental types and ROOT::RVec thereof.; ##; ## \macro_code; ## \macro_output; ##; ## \date March 2020; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot004_NumbaDeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot004_NumbaDeclare.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot004_NumbaDeclare.py:29,Availability,avail,available,29,"# The Python callable is now available from C++ in the Numba namespace.; # For example, we can use it from the interpreter.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot004_NumbaDeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot004_NumbaDeclare.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot004_NumbaDeclare.py:221,Energy Efficiency,power,power,221,"# ROOT uses the numba Python package to create C++ functions from python ones.; # We support as input and return types of the callable fundamental types and; # ROOT::RVec thereof. See the following callable computing the power of the; # elements in an array.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot004_NumbaDeclare.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot004_NumbaDeclare.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot005_tfile_context_manager.py:419,Availability,alive,alive,419,"# Also reading data from a TFile can be done in a context manager. Information; # stored in the objects of the file can be queried and used inside the context.; # After the context, the objects are not usable anymore because the file is; # automatically closed. This means you should use this pattern as a quick way; # to get information or modify objects from a certain file, without needing to; # keep the histograms alive afterwards.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot005_tfile_context_manager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot005_tfile_context_manager.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot005_tfile_context_manager.py:202,Usability,usab,usable,202,"# Also reading data from a TFile can be done in a context manager. Information; # stored in the objects of the file can be queried and used inside the context.; # After the context, the objects are not usable anymore because the file is; # automatically closed. This means you should use this pattern as a quick way; # to get information or modify objects from a certain file, without needing to; # keep the histograms alive afterwards.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot005_tfile_context_manager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot005_tfile_context_manager.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot006_tcontext_context_manager.py:46,Safety,safe,safely,46,"# Changing directory into another file can be safely done through a TContext; # context manager.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot006_tcontext_context_manager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot006_tcontext_context_manager.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot006_tcontext_context_manager.py:191,Availability,avail,available,191,"# After the context, the current directory is restored back to file_2. Also, the; # two files are kept open. This means that objects read, written or modified; # inside the context are still available afterwards.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot006_tcontext_context_manager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot006_tcontext_context_manager.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot006_tcontext_context_manager.py:87,Safety,safe,safely,87,"# TContext and TFile context managers can also be used in conjunction, allowing; # for safely:; # - Opening a file, creating, modifying, writing and reading objects in it.; # - Closing the file, storing it on disk.; # - Restoring the previous value of gDirectory to the latest file opened before; # this context, rather than to the global ROOT.gROOT; # Remember that the TContext must be initialized before the TFile, otherwise the; # current directory would already be set to the file opened for this context.",MatchSource.CODE_COMMENT,tutorials/pyroot/pyroot006_tcontext_context_manager.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/pyroot006_tcontext_context_manager.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/ratioplot.py:30,Availability,error,errors,30,"# Set up plot for markers and errors",MatchSource.CODE_COMMENT,tutorials/pyroot/ratioplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/ratioplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/ratioplot.py:5,Safety,avoid,avoid,5,"# to avoid clipping the bottom zero, redraw a small axis",MatchSource.CODE_COMMENT,tutorials/pyroot/ratioplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/ratioplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/staff.py:56,Security,access,access,56,"## A C/C++ structure is required, to allow memory based access",MatchSource.CODE_COMMENT,tutorials/pyroot/staff.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/staff.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/zdemo.py:161,Safety,predict,predictions,161,"## \file; ## \ingroup tutorial_pyroot; ## \notebook; ## This macro is an example of graphs in log scales with annotations.; ##; ## The presented results; ## are predictions of invariant cross-section of Direct Photons produced; ## at RHIC energies, based on the universality of scaling function H(z).; ##; ##; ## These Figures were published in JINR preprint E2-98-64, Dubna,; ## 1998 and submitted to CPC.; ##; ## \macro_image; ## \macro_code; ##; ## \authors Michael Tokarev, Elena Potrebenikova (JINR Dubna)",MatchSource.CODE_COMMENT,tutorials/pyroot/zdemo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/zdemo.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/zdemo.py:94,Testability,log,log,94,"## \file; ## \ingroup tutorial_pyroot; ## \notebook; ## This macro is an example of graphs in log scales with annotations.; ##; ## The presented results; ## are predictions of invariant cross-section of Direct Photons produced; ## at RHIC energies, based on the universality of scaling function H(z).; ##; ##; ## These Figures were published in JINR preprint E2-98-64, Dubna,; ## 1998 and submitted to CPC.; ##; ## \macro_image; ## \macro_code; ##; ## \authors Michael Tokarev, Elena Potrebenikova (JINR Dubna)",MatchSource.CODE_COMMENT,tutorials/pyroot/zdemo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/zdemo.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/zdemo.py:9,Performance,load,loaded,9,"# run if loaded as script",MatchSource.CODE_COMMENT,tutorials/pyroot/zdemo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/pyroot/zdemo.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:107,Deployability,release,release,107,"## \file; ## \ingroup tutorial_rcanvas; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## This macro is replica of tutorials/dataframe/df104_HiggsToTwoPhotons.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df104.py command to get interactive canvas; ##; ## \macro_image (df104.png); ## \macro_code; ##; ## \date 2021-06-15; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:217,Deployability,release,release,217,"## \file; ## \ingroup tutorial_rcanvas; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## This macro is replica of tutorials/dataframe/df104_HiggsToTwoPhotons.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df104.py command to get interactive canvas; ##; ## \macro_image (df104.png); ## \macro_code; ##; ## \date 2021-06-15; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:265,Deployability,release,release,265,"## \file; ## \ingroup tutorial_rcanvas; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## This macro is replica of tutorials/dataframe/df104_HiggsToTwoPhotons.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df104.py command to get interactive canvas; ##; ## \macro_image (df104.png); ## \macro_code; ##; ## \date 2021-06-15; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:374,Energy Efficiency,energy,energy,374,"## \file; ## \ingroup tutorial_rcanvas; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## This macro is replica of tutorials/dataframe/df104_HiggsToTwoPhotons.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df104.py command to get interactive canvas; ##; ## \macro_image (df104.png); ## \macro_code; ##; ## \date 2021-06-15; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:329,Safety,detect,detector,329,"## \file; ## \ingroup tutorial_rcanvas; ## The Higgs to two photons analysis from the ATLAS Open Data 2020 release, with RDataFrame.; ##; ## This tutorial is the Higgs to two photons analysis from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was taken with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. Although the Higgs to two photons decay is very rare,; ## the contribution of the Higgs can be seen as a narrow peak around 125 GeV because of the excellent; ## reconstruction and identification efficiency of photons at the ATLAS experiment.; ##; ## The analysis is translated to a RDataFrame workflow processing 1.7 GB of simulated events and data.; ##; ## This macro is replica of tutorials/dataframe/df104_HiggsToTwoPhotons.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df104.py command to get interactive canvas; ##; ## \macro_image (df104.png); ## \macro_code; ##; ## \date 2021-06-15; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:9,Performance,multi-thread,multi-threading,9,"# Enable multi-threading",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:50,Performance,perform,perform,50,"# Define a new column with the invariant mass and perform final event selection",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:156,Availability,avail,available,156,"# Run the event loop; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:227,Availability,avail,available,227,"# Run the event loop; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:284,Availability,avail,available,284,"# Run the event loop; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:101,Performance,concurren,concurrently,101,"# Run the event loop; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py:42,Availability,avail,available,42,"# Create the plot; # Set styles - not yet available for v7; # ROOT.gROOT.SetStyle(""ATLAS""); # Create canvas with pads for main plot and data/MC ratio",MatchSource.CODE_COMMENT,tutorials/rcanvas/df104.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df104.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:94,Deployability,release,release,94,"## \file; ## \ingroup tutorial_rcanvas; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## This macro is replica of tutorials/dataframe/df105_WBosonAnalysis.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df105.py command to get interactive canvas; ##; ## \macro_image (rcanvas_js); ## \macro_code; ##; ## \date March 2020; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:217,Deployability,release,release,217,"## \file; ## \ingroup tutorial_rcanvas; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## This macro is replica of tutorials/dataframe/df105_WBosonAnalysis.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df105.py command to get interactive canvas; ##; ## \macro_image (rcanvas_js); ## \macro_code; ##; ## \date March 2020; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:265,Deployability,release,release,265,"## \file; ## \ingroup tutorial_rcanvas; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## This macro is replica of tutorials/dataframe/df105_WBosonAnalysis.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df105.py command to get interactive canvas; ##; ## \macro_image (rcanvas_js); ## \macro_code; ##; ## \date March 2020; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:377,Energy Efficiency,energy,energy,377,"## \file; ## \ingroup tutorial_rcanvas; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## This macro is replica of tutorials/dataframe/df105_WBosonAnalysis.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df105.py command to get interactive canvas; ##; ## \macro_image (rcanvas_js); ## \macro_code; ##; ## \date March 2020; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:726,Energy Efficiency,reduce,reduce,726,"## \file; ## \ingroup tutorial_rcanvas; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## This macro is replica of tutorials/dataframe/df105_WBosonAnalysis.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df105.py command to get interactive canvas; ##; ## \macro_image (rcanvas_js); ## \macro_code; ##; ## \date March 2020; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:332,Safety,detect,detector,332,"## \file; ## \ingroup tutorial_rcanvas; ## The W boson mass analysis from the ATLAS Open Data release of 2020, with RDataFrame.; ##; ## This tutorial is the analysis of the W boson mass taken from the ATLAS Open Data release in 2020; ## (http://opendata.atlas.cern/release/2020/documentation/). The data was recorded with the ATLAS detector; ## during 2016 at a center-of-mass energy of 13 TeV. W bosons are produced frequently at the LHC and; ## are an important background to studies of Standard Model processes, for example the Higgs boson analyses.; ##; ## The analysis is translated to a RDataFrame workflow processing up to 60 GB of simulated events and data.; ## By default the analysis runs on a preskimmed dataset to reduce the runtime. The full dataset can be used with; ## the --full-dataset argument and you can also run only on a fraction of the original dataset using the argument --lumi-scale.; ##; ## This macro is replica of tutorials/dataframe/df105_WBosonAnalysis.py, but with usage of ROOT7 graphics; ## Run macro with python3 -i df105.py command to get interactive canvas; ##; ## \macro_image (rcanvas_js); ## \macro_code; ##; ## \date March 2020; ## \authors Stefan Wunsch (KIT, CERN) Sergey Linev (GSI)",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:59,Performance,load,load,59,"# Create a ROOT dataframe for each dataset; # Note that we load the filenames from the external json file placed in the same folder than this script.",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:8,Availability,down,down,8,"# Scale down the datasets if requested",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:80,Performance,perform,performing,80,"# Select events for the analysis; # Just-in-time compile custom helper function performing complex computations",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:78,Energy Efficiency,energy,energy,78,"# Select events with a muon or electron trigger and with a missing transverse energy larger than 30 GeV",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:85,Energy Efficiency,energy,energy,85,"# Compute transverse mass of the W boson using the lepton and the missing transverse energy and make a histogram",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:205,Availability,avail,available,205,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:276,Availability,avail,available,276,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:333,Availability,avail,available,333,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:150,Performance,concurren,concurrently,150,"# Run the event loop and merge histograms of the respective processes; # RunGraphs allows to run the event loops of the separate RDataFrame graphs; # concurrently. This results in an improved usage of the available resources; # if each separate RDataFrame can not utilize all available resources, e.g.,; # because not enough data is available.",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py:20,Modifiability,config,configure,20,"# Create canvas and configure frame with axis attributes",MatchSource.CODE_COMMENT,tutorials/rcanvas/df105.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/df105.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/raxis.cxx:360,Usability,Feedback,Feedback,360,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT7 example demonstrates how to create a RCanvas and; /// draw several RAxis objects with different options.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-11-03; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <S.Linev@gsi.de>",MatchSource.CODE_COMMENT,tutorials/rcanvas/raxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/raxis.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rbox.cxx:431,Usability,Feedback,Feedback,431,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT 7 example demonstrates how to create a ROOT 7 canvas (RCanvas) and; /// draw ROOT 7 boxes in it (RBox). It generates a set of boxes using the; /// ""normal"" coordinates' system.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2018-10-10; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Olivier Couet",MatchSource.CODE_COMMENT,tutorials/rcanvas/rbox.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rbox.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rbox.py:490,Usability,Feedback,Feedback,490,"## \file; ## \ingroup tutorial_rcanvas; ##; ## This ROOT 7 example demonstrates how to create a ROOT 7 canvas (RCanvas) and; ## draw ROOT 7 boxes in it (RBox). It generates a set of boxes using the; ## ""normal"" coordinates' system.; ## Run macro with python3 -i box.py command to get interactive canvas; ##; ## \macro_image (rcanvas_js); ## \macro_code; ##; ## \date 2021-06-15; ## \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; ## is welcome!; ## \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/rcanvas/rbox.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rbox.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_mt.cxx:199,Deployability,update,updated,199,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro demonstrate usage of ROOT7 graphics from many threads; /// Three different canvases in three different threads are started and regularly updated.; /// Extra thread created in background and used to run http protocol, in/out websocket communications and process http; /// requests; /// Main application thread (CLING interactive session) remains fully functional; ///; /// \macro_code; ///; /// \date 2018-08-16; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_mt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_mt.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_mt.cxx:269,Integrability,protocol,protocol,269,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro demonstrate usage of ROOT7 graphics from many threads; /// Three different canvases in three different threads are started and regularly updated.; /// Extra thread created in background and used to run http protocol, in/out websocket communications and process http; /// requests; /// Main application thread (CLING interactive session) remains fully functional; ///; /// \macro_code; ///; /// \date 2018-08-16; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_mt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_mt.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_mt.cxx:586,Usability,Feedback,Feedback,586,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro demonstrate usage of ROOT7 graphics from many threads; /// Three different canvases in three different threads are started and regularly updated.; /// Extra thread created in background and used to run http protocol, in/out websocket communications and process http; /// requests; /// Main application thread (CLING interactive session) remains fully functional; ///; /// \macro_code; ///; /// \date 2018-08-16; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_mt.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_mt.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx:86,Deployability,Update,Update,86,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro shows how ROOT RCanvas::Update method is working.; /// One can do sync and/or async depending how important is that graphics is updated before next action will be performed; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-07-05; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_update.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx:190,Deployability,update,updated,190,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro shows how ROOT RCanvas::Update method is working.; /// One can do sync and/or async depending how important is that graphics is updated before next action will be performed; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-07-05; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_update.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx:146,Integrability,depend,depending,146,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro shows how ROOT RCanvas::Update method is working.; /// One can do sync and/or async depending how important is that graphics is updated before next action will be performed; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-07-05; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_update.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx:225,Performance,perform,performed,225,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro shows how ROOT RCanvas::Update method is working.; /// One can do sync and/or async depending how important is that graphics is updated before next action will be performed; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-07-05; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_update.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx:428,Usability,Feedback,Feedback,428,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro shows how ROOT RCanvas::Update method is working.; /// One can do sync and/or async depending how important is that graphics is updated before next action will be performed; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-07-05; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_update.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx:52,Deployability,update,update,52,"// new window in web browser should popup and async update will be triggered",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_update.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx:52,Deployability,Update,Update,52,"// invalidate canvas and force repainting with next Update()",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_update.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx:8,Deployability,Update,Update,8,"// call Update again, return before actual drawing will be performed by the browser",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_update.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx:59,Performance,perform,performed,59,"// call Update again, return before actual drawing will be performed by the browser",MatchSource.CODE_COMMENT,tutorials/rcanvas/rcanvas_update.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rcanvas_update.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rframe.cxx:293,Usability,Feedback,Feedback,293,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT 7 example shows how to create a frame.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-02-20; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rframe.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rframe.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rframe.cxx:3,Modifiability,config,configure,3,"// configure RFrame with direct API calls",MatchSource.CODE_COMMENT,tutorials/rcanvas/rframe.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rframe.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rframe.cxx:12,Testability,log,log,12,"// frame->x.log = 2.;",MatchSource.CODE_COMMENT,tutorials/rcanvas/rframe.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rframe.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rframe.cxx:28,Energy Efficiency,green,green,28,"// or in CSS ""x_line_color: green;""",MatchSource.CODE_COMMENT,tutorials/rcanvas/rframe.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rframe.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1.cxx:376,Usability,Feedback,Feedback,376,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates two RH1D, fills them and draw with different options in RCanvas.; /// The canvas is display in the web browser; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2015-03-22; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \authors Axel Naumann <axel@cern.ch>, Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1.cxx:3,Availability,error,errors,3,"// errors draw options",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx:387,Usability,Feedback,Feedback,387,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates really large RH1D histogram, fills it with predefined pattern and; /// draw it in a RCanvas, using Optmize() drawing mode; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-07-02; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx:183,Availability,Error,Error,183,"// draw->fill.color = RColor::kLime;; // draw->fill.style = RAttrFill::kSolid;; // draw->Line(); // configure line draw option; // draw->Bar(); // configure bar draw option; // draw->Error(3); // configure error drawing",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx:206,Availability,error,error,206,"// draw->fill.color = RColor::kLime;; // draw->fill.style = RAttrFill::kSolid;; // draw->Line(); // configure line draw option; // draw->Bar(); // configure bar draw option; // draw->Error(3); // configure error drawing",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx:100,Modifiability,config,configure,100,"// draw->fill.color = RColor::kLime;; // draw->fill.style = RAttrFill::kSolid;; // draw->Line(); // configure line draw option; // draw->Bar(); // configure bar draw option; // draw->Error(3); // configure error drawing",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx:147,Modifiability,config,configure,147,"// draw->fill.color = RColor::kLime;; // draw->fill.style = RAttrFill::kSolid;; // draw->Line(); // configure line draw option; // draw->Bar(); // configure bar draw option; // draw->Error(3); // configure error drawing",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx:196,Modifiability,config,configure,196,"// draw->fill.color = RColor::kLime;; // draw->fill.style = RAttrFill::kSolid;; // draw->Line(); // configure line draw option; // draw->Bar(); // configure bar draw option; // draw->Error(3); // configure error drawing",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx:3,Modifiability,config,configure,3,"// configure hist draw option, default",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx:29,Energy Efficiency,reduce,reduced,29,"// enable draw optimization, reduced data set will be send to clients",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx:15,Performance,optimiz,optimization,15,"// enable draw optimization, reduced data set will be send to clients",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_twoscales.cxx:400,Usability,Feedback,Feedback,400,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates two RH1D, fills them and draw in RCanvas.; /// Second histogram uses enables ""secondy"" attribute to draw separate Y axis on right side; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-05-17; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh1_twoscales.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh1_twoscales.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2.cxx:316,Usability,Feedback,Feedback,316,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates RH2D and draw it with different options in RCanvas; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-06-25; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx:156,Modifiability,config,configured,156,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates a small V7 TH2D, fills it with random values and; /// draw it in a V7 canvas, using configured web browser; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-03-04; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_colz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx:372,Usability,Feedback,Feedback,372,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates a small V7 TH2D, fills it with random values and; /// draw it in a V7 canvas, using configured web browser; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-03-04; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_colz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx:59,Modifiability,config,configure,59,"// draw->line.color = RColor::kLime;; // draw->Surf(2); // configure surf4 draw option; // draw->Lego(2); // configure lego2 draw option; // draw->Contour(); // configure cont draw option; // draw->Scatter(); // configure color draw option (default); // draw->Arrow(); // configure arrow draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_colz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx:109,Modifiability,config,configure,109,"// draw->line.color = RColor::kLime;; // draw->Surf(2); // configure surf4 draw option; // draw->Lego(2); // configure lego2 draw option; // draw->Contour(); // configure cont draw option; // draw->Scatter(); // configure color draw option (default); // draw->Arrow(); // configure arrow draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_colz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx:161,Modifiability,config,configure,161,"// draw->line.color = RColor::kLime;; // draw->Surf(2); // configure surf4 draw option; // draw->Lego(2); // configure lego2 draw option; // draw->Contour(); // configure cont draw option; // draw->Scatter(); // configure color draw option (default); // draw->Arrow(); // configure arrow draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_colz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx:212,Modifiability,config,configure,212,"// draw->line.color = RColor::kLime;; // draw->Surf(2); // configure surf4 draw option; // draw->Lego(2); // configure lego2 draw option; // draw->Contour(); // configure cont draw option; // draw->Scatter(); // configure color draw option (default); // draw->Arrow(); // configure arrow draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_colz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx:272,Modifiability,config,configure,272,"// draw->line.color = RColor::kLime;; // draw->Surf(2); // configure surf4 draw option; // draw->Lego(2); // configure lego2 draw option; // draw->Contour(); // configure cont draw option; // draw->Scatter(); // configure color draw option (default); // draw->Arrow(); // configure arrow draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_colz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx:3,Modifiability,config,configure,3,"// configure color draw option (default)",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_colz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx:3,Modifiability,config,configure,3,"// configure text drawing (can be enabled with most 2d options)",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_colz.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_colz.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:387,Usability,Feedback,Feedback,387,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates really large RH2D histogram, fills it with predefined pattern and; /// draw it in a RCanvas, using Optmize() drawing mode; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-06-26; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:23,Modifiability,config,configure,23,"// draw->Contour(); // configure cont draw option; // draw->Scatter(); // configure scatter draw option; // draw->Arrow(); // configure arrow draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:74,Modifiability,config,configure,74,"// draw->Contour(); // configure cont draw option; // draw->Scatter(); // configure scatter draw option; // draw->Arrow(); // configure arrow draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:126,Modifiability,config,configure,126,"// draw->Contour(); // configure cont draw option; // draw->Scatter(); // configure scatter draw option; // draw->Arrow(); // configure arrow draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:293,Availability,Error,Error,293,"// configure color draw option (default); // draw->Text(true); // configure text drawing (can be enabled with most 2d options); // draw->Box(1); // configure box1 draw option; // draw->Surf(2); // configure surf4 draw option, 3d; // draw->Lego(2); // configure lego2 draw option, 3d; // draw->Error(); // configure error drawing, 3d",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:315,Availability,error,error,315,"// configure color draw option (default); // draw->Text(true); // configure text drawing (can be enabled with most 2d options); // draw->Box(1); // configure box1 draw option; // draw->Surf(2); // configure surf4 draw option, 3d; // draw->Lego(2); // configure lego2 draw option, 3d; // draw->Error(); // configure error drawing, 3d",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:3,Modifiability,config,configure,3,"// configure color draw option (default); // draw->Text(true); // configure text drawing (can be enabled with most 2d options); // draw->Box(1); // configure box1 draw option; // draw->Surf(2); // configure surf4 draw option, 3d; // draw->Lego(2); // configure lego2 draw option, 3d; // draw->Error(); // configure error drawing, 3d",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:66,Modifiability,config,configure,66,"// configure color draw option (default); // draw->Text(true); // configure text drawing (can be enabled with most 2d options); // draw->Box(1); // configure box1 draw option; // draw->Surf(2); // configure surf4 draw option, 3d; // draw->Lego(2); // configure lego2 draw option, 3d; // draw->Error(); // configure error drawing, 3d",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:148,Modifiability,config,configure,148,"// configure color draw option (default); // draw->Text(true); // configure text drawing (can be enabled with most 2d options); // draw->Box(1); // configure box1 draw option; // draw->Surf(2); // configure surf4 draw option, 3d; // draw->Lego(2); // configure lego2 draw option, 3d; // draw->Error(); // configure error drawing, 3d",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:197,Modifiability,config,configure,197,"// configure color draw option (default); // draw->Text(true); // configure text drawing (can be enabled with most 2d options); // draw->Box(1); // configure box1 draw option; // draw->Surf(2); // configure surf4 draw option, 3d; // draw->Lego(2); // configure lego2 draw option, 3d; // draw->Error(); // configure error drawing, 3d",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:251,Modifiability,config,configure,251,"// configure color draw option (default); // draw->Text(true); // configure text drawing (can be enabled with most 2d options); // draw->Box(1); // configure box1 draw option; // draw->Surf(2); // configure surf4 draw option, 3d; // draw->Lego(2); // configure lego2 draw option, 3d; // draw->Error(); // configure error drawing, 3d",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:305,Modifiability,config,configure,305,"// configure color draw option (default); // draw->Text(true); // configure text drawing (can be enabled with most 2d options); // draw->Box(1); // configure box1 draw option; // draw->Surf(2); // configure surf4 draw option, 3d; // draw->Lego(2); // configure lego2 draw option, 3d; // draw->Error(); // configure error drawing, 3d",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:29,Energy Efficiency,reduce,reduced,29,"// enable draw optimization, reduced data set will be send to clients",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx:15,Performance,optimiz,optimization,15,"// enable draw optimization, reduced data set will be send to clients",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh2_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh2_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3.cxx:149,Modifiability,config,configured,149,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates a small RH3D, fills it with random values and; /// draw it in RCanvas, using configured web browser; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-06-18; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3.cxx:365,Usability,Feedback,Feedback,365,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates a small RH3D, fills it with random values and; /// draw it in RCanvas, using configured web browser; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-06-18; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh3.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx:387,Usability,Feedback,Feedback,387,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates really large RH2D histogram, fills it with predefined pattern and; /// draw it in a RCanvas, using Optmize() drawing mode; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-06-26; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2020, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh3_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx:19,Modifiability,config,configure,19,"// draw->Box(); // configure box draw option (default); // draw->Sphere(); // configure sphere draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh3_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx:78,Modifiability,config,configure,78,"// draw->Box(); // configure box draw option (default); // draw->Sphere(); // configure sphere draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh3_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx:3,Modifiability,config,configure,3,"// configure scatter draw option; // draw->Color(); // configure color draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh3_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx:55,Modifiability,config,configure,55,"// configure scatter draw option; // draw->Color(); // configure color draw option",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh3_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx:29,Energy Efficiency,reduce,reduced,29,"// enable draw optimization, reduced data set will be send to clients; // auto stat = canvas->Draw<RHist2StatBox>(pHist, ""hist"");; // stat->fill.color = RColor::kBlue;; // stat->fill.style = RAttrFill::kSolid;",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh3_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx:15,Performance,optimiz,optimization,15,"// enable draw optimization, reduced data set will be send to clients; // auto stat = canvas->Draw<RHist2StatBox>(pHist, ""hist"");; // stat->fill.color = RColor::kBlue;; // stat->fill.style = RAttrFill::kSolid;",MatchSource.CODE_COMMENT,tutorials/rcanvas/rh3_large.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rh3_large.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rlegend.cxx:346,Usability,Feedback,Feedback,346,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro generates two TH1D objects and build RLegend; /// In addition use of auto colors are shown; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2019-10-09; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rlegend.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rlegend.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rline.cxx:461,Usability,Feedback,Feedback,461,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT 7 example demonstrates how to create a ROOT 7 canvas (RCanvas) and; /// draw ROOT 7 lines in it (RLine). It generates a set of lines using the; /// ""normal"" coordinates' system and changing the line color linearly from black; /// to red.; ///; /// \macro_code; ///; /// \date 2018-03-18; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \authors Olivier Couet, Iliana Betsou",MatchSource.CODE_COMMENT,tutorials/rcanvas/rline.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rline.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rline_style.cxx:295,Usability,Feedback,Feedback,295,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT 7 example shows the various line styles.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2018-03-18; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Iliana Betsou",MatchSource.CODE_COMMENT,tutorials/rcanvas/rline_style.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rline_style.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rline_width.cxx:295,Usability,Feedback,Feedback,295,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT 7 example shows the various line widths.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2018-03-18; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \authors Iliana Betsou, Sergey Linev",MatchSource.CODE_COMMENT,tutorials/rcanvas/rline_width.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rline_width.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rmarker.cxx:297,Usability,Feedback,Feedback,297,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT 7 example shows the various marker styles.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2018-03-18; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Iliana Betsou",MatchSource.CODE_COMMENT,tutorials/rcanvas/rmarker.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rmarker.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rpad.cxx:355,Usability,Feedback,Feedback,355,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT 7 example demonstrates how to create a ROOT 7 canvas (RCanvas) and; /// and divide it in 9 sub-pads.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2015-03-22; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Axel Naumann <axel@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rpad.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rpad.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rpave.cxx:352,Usability,Feedback,Feedback,352,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro draw different variants of RPave on the RCanvas.; /// Also usage of custom font is demonstrated.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2020-06-18; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rpave.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rpave.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rstyle.cxx:355,Usability,Feedback,Feedback,355,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT 7 example demonstrates how to customize RLine object using RStyle; /// ""normal"" coordinates' system.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2019-10-04; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Iliana Betsou",MatchSource.CODE_COMMENT,tutorials/rcanvas/rstyle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rstyle.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rtext_align.cxx:303,Usability,Feedback,Feedback,303,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro demonstrate the text align attribute for RText.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-07-07; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rtext_align.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rtext_align.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rtext_angle.cxx:396,Usability,Feedback,Feedback,396,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro demonstrate the text attributes for RText. Angle, size and color are; /// changed in a loop. The text alignment and the text font are fixed.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2017-10-17; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Olivier Couet <Olivier.Couet@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rtext_angle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rtext_angle.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rtext_font.cxx:124,Performance,load,load,124,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro demonstrate usage of existing ROOT fonts for RText.; /// Also load of custom font is shown; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-07-07; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rtext_font.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rtext_font.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rtext_font.cxx:346,Usability,Feedback,Feedback,346,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro demonstrate usage of existing ROOT fonts for RText.; /// Also load of custom font is shown; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-07-07; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/rtext_font.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/rtext_font.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/subpads.cxx:372,Usability,Feedback,Feedback,372,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT 7 example demonstrates how to create a ROOT 7 canvas (RCanvas),; /// divide on sub-sub pads and draw histograms there; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2018-03-13; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/subpads.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/subpads.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/symlog.cxx:405,Usability,Feedback,Feedback,405,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This ROOT 7 example shows how to use symlog scale on RAxis; /// See discussion on forum https://root-forum.cern.ch/t/symlog-scale-for-plotting/ for more details; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-05-26; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/symlog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/symlog.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/symlog.cxx:19,Testability,log,log,19,"// second pad with log scales, negative values missing",MatchSource.CODE_COMMENT,tutorials/rcanvas/symlog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/symlog.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/symlog.cxx:3,Modifiability,config,configure,3,"// configure symlog scale with 10 for linear range, rest will be logarithmic, including negative",MatchSource.CODE_COMMENT,tutorials/rcanvas/symlog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/symlog.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/symlog.cxx:65,Testability,log,logarithmic,65,"// configure symlog scale with 10 for linear range, rest will be logarithmic, including negative",MatchSource.CODE_COMMENT,tutorials/rcanvas/symlog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/symlog.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/th1_twoscales.cxx:438,Usability,Feedback,Feedback,438,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// Macro illustrating how to superimpose two histograms; /// with different scales on the RCanvas. It shows exactly same data; /// as in hist/twoscales.C macro, but with fully interactive graphics; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2021-07-05; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/th1_twoscales.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/th1_twoscales.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/tobject.cxx:325,Usability,Feedback,Feedback,325,"/// \file; /// \ingroup tutorial_rcanvas; ///; /// This macro shows how ROOT objects like TH1, TH2, TGraph can be drawn in RCanvas.; ///; /// \macro_image (rcanvas_js); /// \macro_code; ///; /// \date 2017-06-02; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \authors Axel Naumann <axel@cern.ch>, Sergey Linev <s.linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2021, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/rcanvas/tobject.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/tobject.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/tobject.cxx:40,Availability,alive,alive,40,"// create RStyle here to keep reference alive after leaving tobject() function scope",MatchSource.CODE_COMMENT,tutorials/rcanvas/tobject.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/tobject.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/tobject.cxx:59,Safety,avoid,avoid,59,"// is is highly recommended to set directory to nullptr to avoid ownership conflicts",MatchSource.CODE_COMMENT,tutorials/rcanvas/tobject.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/tobject.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/tobject.cxx:27,Modifiability,config,configure,27,"// add style, here used to configure TGraph attributes, evaluated only on client side",MatchSource.CODE_COMMENT,tutorials/rcanvas/tobject.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/tobject.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/tobject.cxx:52,Deployability,update,update,52,"// new window in web browser should popup and async update will be triggered",MatchSource.CODE_COMMENT,tutorials/rcanvas/tobject.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/rcanvas/tobject.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf101_basics.py:51,Modifiability,variab,variables,51,"# Set up model; # ---------------------; # Declare variables x,mean,sigma with associated name, title, initial; # value and allowed range",MatchSource.CODE_COMMENT,tutorials/roofit/rf101_basics.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf101_basics.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf101_basics.py:72,Availability,error,errors,72,"# Print values of mean and sigma (that now reflect fitted values and; # errors)",MatchSource.CODE_COMMENT,tutorials/roofit/rf101_basics.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf101_basics.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:131,Availability,error,error,131,"# Plot and fit a RooDataHist; # ---------------------------------------------------; # Make plot of binned dataset showing Poisson error bars (RooFit default)",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:43,Availability,error,errors,43,"# Plot and fit a RooDataHist with internal errors; # ---------------------------------------------------------------------------------------------; # If histogram has custom error (i.e. its contents is does not originate from a Poisson process; # but e.g. is a sum of weighted events) you can data with symmetric 'sum-of-weights' error instead; # (same error bars as shown by ROOT)",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:174,Availability,error,error,174,"# Plot and fit a RooDataHist with internal errors; # ---------------------------------------------------------------------------------------------; # If histogram has custom error (i.e. its contents is does not originate from a Poisson process; # but e.g. is a sum of weighted events) you can data with symmetric 'sum-of-weights' error instead; # (same error bars as shown by ROOT)",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:330,Availability,error,error,330,"# Plot and fit a RooDataHist with internal errors; # ---------------------------------------------------------------------------------------------; # If histogram has custom error (i.e. its contents is does not originate from a Poisson process; # but e.g. is a sum of weighted events) you can data with symmetric 'sum-of-weights' error instead; # (same error bars as shown by ROOT)",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:353,Availability,error,error,353,"# Plot and fit a RooDataHist with internal errors; # ---------------------------------------------------------------------------------------------; # If histogram has custom error (i.e. its contents is does not originate from a Poisson process; # but e.g. is a sum of weighted events) you can data with symmetric 'sum-of-weights' error instead; # (same error bars as shown by ROOT)",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:19,Availability,error,error,19,"# Please note that error bars shown (Poisson or SumW2) are for visualization only, the are NOT used; # in a maximum likelihood fit; #; # A (binned) ML fit will ALWAYS assume the Poisson error interpretation of data (the mathematical definition; # of likelihood does not take any external definition of errors). Data with non-unit weights can only be correctly; # fitted with a chi^2 fit (see rf602_chi2fit.py); #; # Importing ROOT TTrees; # -----------------------------------------------------------; # Import ROOT TTree into a RooDataSet",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:186,Availability,error,error,186,"# Please note that error bars shown (Poisson or SumW2) are for visualization only, the are NOT used; # in a maximum likelihood fit; #; # A (binned) ML fit will ALWAYS assume the Poisson error interpretation of data (the mathematical definition; # of likelihood does not take any external definition of errors). Data with non-unit weights can only be correctly; # fitted with a chi^2 fit (see rf602_chi2fit.py); #; # Importing ROOT TTrees; # -----------------------------------------------------------; # Import ROOT TTree into a RooDataSet",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:302,Availability,error,errors,302,"# Please note that error bars shown (Poisson or SumW2) are for visualization only, the are NOT used; # in a maximum likelihood fit; #; # A (binned) ML fit will ALWAYS assume the Poisson error interpretation of data (the mathematical definition; # of likelihood does not take any external definition of errors). Data with non-unit weights can only be correctly; # fitted with a chi^2 fit (see rf602_chi2fit.py); #; # Importing ROOT TTrees; # -----------------------------------------------------------; # Import ROOT TTree into a RooDataSet",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:35,Modifiability,variab,variables,35,"# Read data from input stream. The variables of the dataset need to be supplied; # to the RooDataSet::read() function.",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:2,Modifiability,variab,variables,2,"# variables to be read. If the file has more fields, these are ignored.",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:21,Integrability,message,message,21,"# Prints if a RooFit message stream listens for debug messages. Use Q for quiet.",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py:54,Integrability,message,messages,54,"# Prints if a RooFit message stream listens for debug messages. Use Q for quiet.",MatchSource.CODE_COMMENT,tutorials/roofit/rf102_dataimport.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf102_dataimport.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py:115,Modifiability,variab,variable,115,"# Write class skeleton code; # --------------------------------------------------; # Write skeleton pdf class with variable x,a,b; # To use this class,; # - Edit the file MyPdfV1.cxx and implement the evaluate() method in terms of x,a and b; # - Compile and link class with '.x MyPdfV1.cxx+'; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf104_classfactory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py:144,Modifiability,variab,variable,144,"# With added initial value expression; # ---------------------------------------------------------------------; # Write skeleton pdf class with variable x,a,b and given formula expression; # To use this class,; # - Compile and link class with '.x MyPdfV2.cxx+'; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf104_classfactory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py:162,Modifiability,variab,variable,162,"# With added analytical integral expression; # ---------------------------------------------------------------------------------; # Write skeleton pdf class with variable x,a,b, given formula expression _and_; # given expression for analytical integral over x; # To use this class,; # - Compile and link class with '.x MyPdfV3.cxx+'; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf104_classfactory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py:54,Performance,perform,performs,54,"# The ROOT.RooClassFactory.makePdfInstance() function performs code writing, compiling, linking; # and object instantiation in one go and can serve as a straight; # replacement of ROOT.RooGenericPdf",MatchSource.CODE_COMMENT,tutorials/roofit/rf104_classfactory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf104_classfactory.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf105_funcbinding.py:152,Modifiability,variab,variables,152,"# Bind ROOT::Math::beta_pdf C function; # -----------------------------------------------------------------------; # Bind pdf ROOT.Math.Beta with three variables as ROOT.RooAbsPdf function",MatchSource.CODE_COMMENT,tutorials/roofit/rf105_funcbinding.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf105_funcbinding.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py:94,Availability,error,error,94,"# Data plotting styles; # ---------------------------------------; # Use sqrt(sum(weights^2)) error instead of Poisson errors",MatchSource.CODE_COMMENT,tutorials/roofit/rf107_plotstyles.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py:119,Availability,error,errors,119,"# Data plotting styles; # ---------------------------------------; # Use sqrt(sum(weights^2)) error instead of Poisson errors",MatchSource.CODE_COMMENT,tutorials/roofit/rf107_plotstyles.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py:20,Availability,error,error,20,"# Remove horizontal error bars",MatchSource.CODE_COMMENT,tutorials/roofit/rf107_plotstyles.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py:19,Availability,error,error,19,"# Blue markers and error bors",MatchSource.CODE_COMMENT,tutorials/roofit/rf107_plotstyles.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py:19,Energy Efficiency,green,green,19,"# Filled shapes in green color",MatchSource.CODE_COMMENT,tutorials/roofit/rf107_plotstyles.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf107_plotstyles.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf108_plotbinning.py:119,Modifiability,variab,variable,119,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Basic functionality: plotting unbinned data with alternate and variable binnings; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf108_plotbinning.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf108_plotbinning.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf108_plotbinning.py:420,Modifiability,variab,variable,420,"# NB: Note that bin density for each bin is adjusted to that of default frame binning as shown; # in Y axis label (100 bins -. Events/0.4*Xaxis-dim) so that all bins; # represent a consistent density distribution; # Show mixstate asymmetry with custom binning; # ------------------------------------------------------------------------------------; # Make plot of dt distribution of data asymmetry in 'mixState' with; # variable binning; # Create binning object with range (-10,10)",MatchSource.CODE_COMMENT,tutorials/roofit/rf108_plotbinning.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf108_plotbinning.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py:107,Deployability,integrat,integration,107,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Basic functionality: examples on normalization and integration of pdfs, construction; ## of cumulative distribution functions from monodimensional pdfs; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf110_normintegration.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py:107,Integrability,integrat,integration,107,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Basic functionality: examples on normalization and integration of pdfs, construction; ## of cumulative distribution functions from monodimensional pdfs; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf110_normintegration.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py:2,Deployability,Integrat,Integrate,2,"# Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; # Define a range named ""signal"" in x from -5,5",MatchSource.CODE_COMMENT,tutorials/roofit/rf110_normintegration.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py:2,Integrability,Integrat,Integrate,2,"# Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; # Define a range named ""signal"" in x from -5,5",MatchSource.CODE_COMMENT,tutorials/roofit/rf110_normintegration.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf110_normintegration.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf111_derivatives.py:51,Modifiability,variab,variables,51,"# Set up model; # ---------------------; # Declare variables x,mean, with associated name, title, value and allowed; # range",MatchSource.CODE_COMMENT,tutorials/roofit/rf111_derivatives.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf111_derivatives.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:96,Modifiability,extend,extended,96,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Addition and convolution: setting up an extended maximum likelihood fit; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf202_extendedmlfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:23,Modifiability,extend,extended,23,"# Method 1 - Construct extended composite model; # -------------------------------------------------------------------; # Sum the composite signal and background into an extended pdf; # nsig*sig+nbkg*bkg",MatchSource.CODE_COMMENT,tutorials/roofit/rf202_extendedmlfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:170,Modifiability,extend,extended,170,"# Method 1 - Construct extended composite model; # -------------------------------------------------------------------; # Sum the composite signal and background into an extended pdf; # nsig*sig+nbkg*bkg",MatchSource.CODE_COMMENT,tutorials/roofit/rf202_extendedmlfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:23,Modifiability,extend,extended,23,"# Sample, fit and plot extended model; # ---------------------------------------------------------------------; # Generate a data sample of expected number events in x from model; # = model.expectedEvents() = nsig+nbkg",MatchSource.CODE_COMMENT,tutorials/roofit/rf202_extendedmlfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:23,Modifiability,extend,extended,23,"# Method 2 - Construct extended components first; # ---------------------------------------------------------------------; # Associated nsig/nbkg as expected number of events with sig/bkg",MatchSource.CODE_COMMENT,tutorials/roofit/rf202_extendedmlfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:6,Modifiability,extend,extended,6,"# Sum extended components without coefs; # -------------------------------------------------------------------------; # Construct sum of two extended pdf (no coefficients required)",MatchSource.CODE_COMMENT,tutorials/roofit/rf202_extendedmlfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py:141,Modifiability,extend,extended,141,"# Sum extended components without coefs; # -------------------------------------------------------------------------; # Construct sum of two extended pdf (no coefficients required)",MatchSource.CODE_COMMENT,tutorials/roofit/rf202_extendedmlfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf202_extendedmlfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py:56,Modifiability,Extend,Extended,56,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Extended maximum likelihood fit in multiple ranges.; ##; ## \macro_code; ## \macro_output; ##; ## \date March 2021; ## \authors Harshal Shende, Stephan Hageboeck (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf204a_extendedLikelihood.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py:2,Modifiability,Extend,Extend,2,"# Extend the pdfs; # -----------------------------; # Define signal range in which events counts are to be defined",MatchSource.CODE_COMMENT,tutorials/roofit/rf204a_extendedLikelihood.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py:16,Modifiability,extend,extend,16,"# Use AddPdf to extend the model. Giving as many coefficients as pdfs switches on extension.",MatchSource.CODE_COMMENT,tutorials/roofit/rf204a_extendedLikelihood.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py:67,Performance,Perform,Perform,67,"# Fit full range; # -------------------------------------------; # Perform unbinned ML fit to data, full range; # IMPORTANT:; # The model needs to be copied when fitting with different ranges because; # the interpretation of the coefficients is tied to the fit range; # that's used in the first fit",MatchSource.CODE_COMMENT,tutorials/roofit/rf204a_extendedLikelihood.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204a_extendedLikelihood.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:152,Modifiability,extend,extended,152,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## This macro demonstrates how to set up a fit in two ranges for plain; ## likelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both re",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:244,Modifiability,extend,extended,244,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## This macro demonstrates how to set up a fit in two ranges for plain; ## likelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both re",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:600,Modifiability,extend,extended,600,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## This macro demonstrates how to set up a fit in two ranges for plain; ## likelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both re",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:644,Modifiability,extend,extended,644,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## This macro demonstrates how to set up a fit in two ranges for plain; ## likelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both re",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:876,Modifiability,extend,extended,876,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## This macro demonstrates how to set up a fit in two ranges for plain; ## likelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both re",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:1133,Modifiability,extend,extended,1133,"ikelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both regions correct their interpretation such that N_expected refers to the full range,; ## it is interpreted easily, and consistent in both r",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:1230,Modifiability,extend,extended,1230,"df.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both regions correct their interpretation such that N_expected refers to the full range,; ## it is interpreted easily, and consistent in both regions.; ##; ## This requires that the likelihood model is extended using RooAddPdf in the; ## form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf.; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:1526,Modifiability,extend,extended,1526,"e into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both regions correct their interpretation such that N_expected refers to the full range,; ## it is interpreted easily, and consistent in both regions.; ##; ## This requires that the likelihood model is extended using RooAddPdf in the; ## form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \authors Stephan Hageboeck, Wouter Verkerke",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:1566,Modifiability,extend,extended,1566,"e into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both regions correct their interpretation such that N_expected refers to the full range,; ## it is interpreted easily, and consistent in both regions.; ##; ## This requires that the likelihood model is extended using RooAddPdf in the; ## form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \authors Stephan Hageboeck, Wouter Verkerke",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:2196,Modifiability,extend,extended,2196,"e into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both regions correct their interpretation such that N_expected refers to the full range,; ## it is interpreted easily, and consistent in both regions.; ##; ## This requires that the likelihood model is extended using RooAddPdf in the; ## form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \authors Stephan Hageboeck, Wouter Verkerke",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:892,Performance,perform,performed,892,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## This macro demonstrates how to set up a fit in two ranges for plain; ## likelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both re",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:1593,Performance,perform,performed,1593,"e into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both regions correct their interpretation such that N_expected refers to the full range,; ## it is interpreted easily, and consistent in both regions.; ##; ## This requires that the likelihood model is extended using RooAddPdf in the; ## form SumPdf = Nsig * sigPdf + Nbkg * bkgPdf.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \authors Stephan Hageboeck, Wouter Verkerke",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:416,Safety,predict,predicted,416,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## This macro demonstrates how to set up a fit in two ranges for plain; ## likelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both re",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:851,Usability,intuit,intuition,851,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## This macro demonstrates how to set up a fit in two ranges for plain; ## likelihoods and extended likelihoods.; ##; ## ### 1. Shape fits (plain likelihood); ##; ## If you fit a non-extended pdf in two ranges, e.g. `pdf.fitTo(data,Range=""Range1,Range2"")`,; ## it will fit the shapes in the two selected ranges and also take into account the relative; ## predicted yields in those ranges.; ##; ## This is useful for example to represent a full-range fit, but with a; ## blinded signal region inside it.; ##; ##; ## ### 2. Shape+rate fits (extended likelihood); ##; ## If your pdf is extended, i.e. measuring both the distribution in the observable as well; ## as the event count in the fitted region, some intervention is needed to make fits in ranges; ## work in a way that corresponds to intuition.; ##; ## If an extended fit is performed in a sub-range, the observed yield is only that of the subrange, hence; ## the expected event count will converge to a number that is smaller than what's visible in a plot.; ## In such cases, it is often preferred to interpret the extended term with respect to the full range; ## that's plotted, i.e., apply a correction to the extended likelihood term in such a way; ## that the interpretation of the expected event count remains that of the full range. This can; ## be done by applying a correcion factor (equal to the fraction of the pdf that is contained in the; ## fitted range) in the Poisson term that represents the extended likelihood term.; ##; ## If an extended likelihood fit is performed over *two* sub-ranges, this correction is; ## even more important: without it, each component likelihood would have a different interpretation; ## of the expected event count (each corresponding to the count in its own region), and a joint; ## fit of these regions with different interpretations of the same model parameter results; ## in a number that is not easily interpreted.; ##; ## If both re",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:15,Modifiability,extend,extended,15,"# Construct an extended pdf, which measures the event count N **on the full range**.; # If the actual domain of x that is fitted is identical to FULL, this has no affect.; #; # If the fitted domain is a subset of `FULL`, though, the expected event count is divided by; # \f[; # \mathrm{frac} = \frac{; # \int_{\mathrm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; # \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; # \f]; # `N` will therefore return the count extrapolated to the full range instead of the fit range.; #; # **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; # [RooAddPdf::fixCoefRange()](https://root.cern.ch/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:578,Modifiability,extend,extending,578,"# Construct an extended pdf, which measures the event count N **on the full range**.; # If the actual domain of x that is fitted is identical to FULL, this has no affect.; #; # If the fitted domain is a subset of `FULL`, though, the expected event count is divided by; # \f[; # \mathrm{frac} = \frac{; # \int_{\mathrm{Fit range}} \mathrm{model}(x) \; \mathrm{d}x }{; # \int_{\mathrm{Full range}} \mathrm{model}(x) \; \mathrm{d}x }.; # \f]; # `N` will therefore return the count extrapolated to the full range instead of the fit range.; #; # **Note**: When using a RooAddPdf for extending the likelihood, the same effect can be achieved with; # [RooAddPdf::fixCoefRange()](https://root.cern.ch/doc/master/classRooAddPdf.html#ab631caf4b59e4c4221f8967aecbf2a65),",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:41,Modifiability,extend,extended,41,"# If we now do a simultaneous fit to the extended model, instead of the; # original model, the LEFT and RIGHT range will each correct their local `N`; # such that it refers to the `FULL` range.; #; # This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; # \f[; # L_\mathrm{ext} = L; # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); # \f]",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:286,Modifiability,extend,extended,286,"# If we now do a simultaneous fit to the extended model, instead of the; # original model, the LEFT and RIGHT range will each correct their local `N`; # such that it refers to the `FULL` range.; #; # This joint fit of the extmodel will include (w.r.t. the plain model fit) a product of extended terms; # \f[; # L_\mathrm{ext} = L; # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{LEFT} | N_\mathrm{exp} / \mathrm{frac LEFT} \right); # \cdot \mathrm{Poisson} \left( N_\mathrm{obs}^\mathrm{RIGHT} | N_\mathrm{exp} / \mathrm{frac RIGHT} \right); # \f]",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:10,Modifiability,Extend,Extending,10,"# PART 2: Extending with RooAddPdf; # --------------------------------; #; # Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; # we assume that we already have an extended likelihood model in the form of a RooAddPdf constructed in the form `Nsig * sigPdf + Nbkg * bkgPdf`.; #; # We add a Gaussian to the previously defined exponential background.; # The signal shape parameters are chosen constant, since the signal region is entirely in the blinded region, i.e., the fit has no sensitivity.",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:147,Modifiability,extend,extended,147,"# PART 2: Extending with RooAddPdf; # --------------------------------; #; # Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; # we assume that we already have an extended likelihood model in the form of a RooAddPdf constructed in the form `Nsig * sigPdf + Nbkg * bkgPdf`.; #; # We add a Gaussian to the previously defined exponential background.; # The signal shape parameters are chosen constant, since the signal region is entirely in the blinded region, i.e., the fit has no sensitivity.",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py:238,Modifiability,extend,extended,238,"# PART 2: Extending with RooAddPdf; # --------------------------------; #; # Now we repeat the above exercise, but instead of explicitly adding an extended term to a single shape pdf (RooExponential),; # we assume that we already have an extended likelihood model in the form of a RooAddPdf constructed in the form `Nsig * sigPdf + Nbkg * bkgPdf`.; #; # We add a Gaussian to the previously defined exponential background.; # The signal shape parameters are chosen constant, since the signal region is entirely in the blinded region, i.e., the fit has no sensitivity.",MatchSource.CODE_COMMENT,tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf204b_extendedLikelihood_rangedFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf206_treevistools.py:69,Availability,avail,available,69,"# Make graphic output file with one of the GraphViz tools; # (freely available from www.graphviz.org); #; # 'Top-to-bottom graph'; # unix> dot -Tgif -o rf207_model_dot.gif rf207_model.dot; #; # 'Spring-model graph'; # unix> fdp -Tgif -o rf207_model_fdp.gif rf207_model.dot",MatchSource.CODE_COMMENT,tutorials/roofit/rf206_treevistools.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf206_treevistools.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf207_comptools.py:261,Modifiability,variab,variables,261,"# Basic information requests; # ---------------------------------------------; # Get list of observables; # ---------------------------------------------; # Get list of observables of pdf in context of a dataset; #; # Observables are define each context as the variables; # shared between a model and a dataset. In self case; # that is the variable 'x'",MatchSource.CODE_COMMENT,tutorials/roofit/rf207_comptools.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf207_comptools.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf207_comptools.py:340,Modifiability,variab,variable,340,"# Basic information requests; # ---------------------------------------------; # Get list of observables; # ---------------------------------------------; # Get list of observables of pdf in context of a dataset; #; # Observables are define each context as the variables; # shared between a model and a dataset. In self case; # that is the variable 'x'",MatchSource.CODE_COMMENT,tutorials/roofit/rf207_comptools.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf207_comptools.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf209_anaconv.py:114,Modifiability,Variab,Variables,114,"# B-physics pdf with truth resolution; # ---------------------------------------------------------------------; # Variables of decay pdf",MatchSource.CODE_COMMENT,tutorials/roofit/rf209_anaconv.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf209_anaconv.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf210_angularconv.py:226,Performance,perform,performed,226,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Convolution in cyclical angular observables theta, and; ## construction of p.d.f in terms of transformed angular; ## coordinates, e.g. cos(theta), the convolution; ## is performed in theta rather than cos(theta); ##; ## (require ROOT to be compiled with --enable-fftw3); ##; ## pdf(theta) = ROOT.T(theta) (x) gauss(theta); ## pdf(cosTheta) = ROOT.T(acos(cosTheta)) (x) gauss(acos(cosTheta)); ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf210_angularconv.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf210_angularconv.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py:2,Modifiability,Config,Configure,2,"# Configure convolution to construct a 2-D cache in (x,mean); # rather than a 1-d cache in mean that needs to be recalculated; # for each value of x",MatchSource.CODE_COMMENT,tutorials/roofit/rf211_paramconv.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py:43,Performance,cache,cache,43,"# Configure convolution to construct a 2-D cache in (x,mean); # rather than a 1-d cache in mean that needs to be recalculated; # for each value of x",MatchSource.CODE_COMMENT,tutorials/roofit/rf211_paramconv.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py:82,Performance,cache,cache,82,"# Configure convolution to construct a 2-D cache in (x,mean); # rather than a 1-d cache in mean that needs to be recalculated; # for each value of x",MatchSource.CODE_COMMENT,tutorials/roofit/rf211_paramconv.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py:2,Deployability,Integrat,Integrate,2,"# Integrate model over projModel = Int model dmean",MatchSource.CODE_COMMENT,tutorials/roofit/rf211_paramconv.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py:2,Integrability,Integrat,Integrate,2,"# Integrate model over projModel = Int model dmean",MatchSource.CODE_COMMENT,tutorials/roofit/rf211_paramconv.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf211_paramconv.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:289,Energy Efficiency,adapt,adapt,289,"# Kick tau a bit, and run an unbinned fit where the blinded data are missing.; # ----------------------------------------------------------------------------------------------------------; # The fit should be done only in the unblinded regions, otherwise it would try; # to make the model adapt to the empty bins in the blinded region.",MatchSource.CODE_COMMENT,tutorials/roofit/rf212_plottingInRanges_blinding.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:289,Modifiability,adapt,adapt,289,"# Kick tau a bit, and run an unbinned fit where the blinded data are missing.; # ----------------------------------------------------------------------------------------------------------; # The fit should be done only in the unblinded regions, otherwise it would try; # to make the model adapt to the empty bins in the blinded region.",MatchSource.CODE_COMMENT,tutorials/roofit/rf212_plottingInRanges_blinding.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:145,Safety,avoid,avoid,145,"# Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would be; # automatically taken as the NormRange() for plotting. We want to avoid this,; # because the point of this tutorial is to show what can go wrong when the; # NormRange() is not specified.",MatchSource.CODE_COMMENT,tutorials/roofit/rf212_plottingInRanges_blinding.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:2,Usability,Clear,Clear,2,"# Clear the ""fitrange"" attribute of the PDF. Otherwise, the fitrange would be; # automatically taken as the NormRange() for plotting. We want to avoid this,; # because the point of this tutorial is to show what can go wrong when the; # NormRange() is not specified.",MatchSource.CODE_COMMENT,tutorials/roofit/rf212_plottingInRanges_blinding.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:309,Deployability,integrat,integrated,309,"# Right:; # ----------------------------------------------------------------------------------------------------------; # Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; # a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; # This means that the normalisation of the blue and green curves is slightly different from the left plot,; # because they get a common scale factor.",MatchSource.CODE_COMMENT,tutorials/roofit/rf212_plottingInRanges_blinding.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:387,Energy Efficiency,green,green,387,"# Right:; # ----------------------------------------------------------------------------------------------------------; # Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; # a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; # This means that the normalisation of the blue and green curves is slightly different from the left plot,; # because they get a common scale factor.",MatchSource.CODE_COMMENT,tutorials/roofit/rf212_plottingInRanges_blinding.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py:309,Integrability,integrat,integrated,309,"# Right:; # ----------------------------------------------------------------------------------------------------------; # Make the same plot, but normalise each piece with respect to the regions ""left"" AND ""right"". This requires setting; # a ""NormRange"", which tells RooFit over which range the PDF has to be integrated to normalise.; # This means that the normalisation of the blue and green curves is slightly different from the left plot,; # because they get a common scale factor.",MatchSource.CODE_COMMENT,tutorials/roofit/rf212_plottingInRanges_blinding.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf212_plottingInRanges_blinding.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf301_composition.py:184,Integrability,depend,depends,184,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: multi-dimensional pdfs through composition, e.g. substituting; ## a pdf parameter with a function that depends on other observables; ##; ## `pdf = gauss(x,f(y),s)` with `f(y) = a0 + a1*y`; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf301_composition.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf301_composition.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf302_utilfuncs.py:107,Availability,avail,available,107,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: utility functions classes available for use in tailoring of; ## composite (multidimensional) pdfs; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf302_utilfuncs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf302_utilfuncs.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf304_uncorrprod.py:81,Usability,simpl,simple,81,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: simple uncorrelated multi-dimensional pdfs; ##; ## `pdf = gauss(x,mx,sx) * gauss(y,my,sy)`; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf304_uncorrprod.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf304_uncorrprod.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf304_uncorrprod.py:179,Modifiability,variab,variables,179,"# Create component pdfs in x and y; # ----------------------------------------------------------------; # Create two pdfs gaussx(x,meanx,sigmax) gaussy(y,meany,sigmay) and its; # variables",MatchSource.CODE_COMMENT,tutorials/roofit/rf304_uncorrprod.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf304_uncorrprod.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py:141,Availability,error,errors,141,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: complete example with use of conditional pdf with per-event errors; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf306_condpereventerrors.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py:54,Availability,error,error,54,"# Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr)",MatchSource.CODE_COMMENT,tutorials/roofit/rf306_condpereventerrors.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py:48,Availability,error,error,48,"# Construct fake 'external' data with per-event error; # ------------------------------------------------------------------------------------------------------; # Use landau pdf to get somewhat realistic distribution with long tail",MatchSource.CODE_COMMENT,tutorials/roofit/rf306_condpereventerrors.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py:61,Deployability,integrat,integrating,61,"# Make projection of decay(dt|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process)",MatchSource.CODE_COMMENT,tutorials/roofit/rf306_condpereventerrors.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py:61,Integrability,integrat,integrating,61,"# Make projection of decay(dt|dterr) on dt.; #; # Instead of integrating out dterr, a weighted average of curves; # at values dterr_i as given in the external dataset.; # (The kTRUE argument bins the data before projection to speed up the process)",MatchSource.CODE_COMMENT,tutorials/roofit/rf306_condpereventerrors.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf306_condpereventerrors.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf307_fullpereventerrors.py:114,Availability,error,errors,114,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: usage of full pdf with per-event errors; ##; ## \macro_code; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf307_fullpereventerrors.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf307_fullpereventerrors.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf307_fullpereventerrors.py:54,Availability,error,error,54,"# Build a gaussian resolution model scaled by the per-error =; # gauss(dt,bias,sigma*dterr)",MatchSource.CODE_COMMENT,tutorials/roofit/rf307_fullpereventerrors.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf307_fullpereventerrors.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf307_fullpereventerrors.py:40,Availability,error,error,40,"# Construct empirical pdf for per-event error; # -----------------------------------------------------------------; # Use landau pdf to get empirical distribution with long tail",MatchSource.CODE_COMMENT,tutorials/roofit/rf307_fullpereventerrors.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf307_fullpereventerrors.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py:99,Deployability,integrat,integration,99,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: normalization and integration of pdfs, construction of; ## cumulative distribution functions from pdfs in two dimensions; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf308_normintegration2d.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py:99,Integrability,integrat,integration,99,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: normalization and integration of pdfs, construction of; ## cumulative distribution functions from pdfs in two dimensions; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf308_normintegration2d.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py:2,Deployability,Integrat,Integrate,2,"# Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; # Define a range named ""signal"" in x from -5,5",MatchSource.CODE_COMMENT,tutorials/roofit/rf308_normintegration2d.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py:2,Integrability,Integrat,Integrate,2,"# Integrate normalized pdf over subrange; # ----------------------------------------------------------------------------; # Define a range named ""signal"" in x from -5,5",MatchSource.CODE_COMMENT,tutorials/roofit/rf308_normintegration2d.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf308_normintegration2d.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:48,Availability,error,errors,48,"# Generate BMixing data with above set of event errors",MatchSource.CODE_COMMENT,tutorials/roofit/rf310_sliceplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:135,Deployability,integrat,integrated,135,"# Plot full decay distribution; # ----------------------------------------------------------; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState)",MatchSource.CODE_COMMENT,tutorials/roofit/rf310_sliceplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:135,Integrability,integrat,integrated,135,"# Plot full decay distribution; # ----------------------------------------------------------; # Create frame, data and pdf projection (integrated over tagFlav and; # mixState)",MatchSource.CODE_COMMENT,tutorials/roofit/rf310_sliceplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:88,Deployability,integrat,integrated,88,"# Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,tutorials/roofit/rf310_sliceplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:88,Integrability,integrat,integrated,88,"# Position slice in mixState at ""mixed"" and plot slice of pdf in mixstate; # over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,tutorials/roofit/rf310_sliceplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:90,Deployability,integrat,integrated,90,"# Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,tutorials/roofit/rf310_sliceplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py:90,Integrability,integrat,integrated,90,"# Position slice in mixState at ""unmixed"" and plot slice of pdf in; # mixstate over data (integrated over tagFlav)",MatchSource.CODE_COMMENT,tutorials/roofit/rf310_sliceplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf310_sliceplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf311_rangeplot.py:115,Deployability,continuous,continuous,115,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: projecting pdf and data ranges in continuous observables; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf311_rangeplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf311_rangeplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py:89,Performance,perform,performing,89,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Multidimensional models: performing fits in multiple (disjoint) ranges in one or more dimensions; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf312_multirangefit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py:2,Performance,Perform,Perform,2,"# Perform fits in individual sideband regions; # -------------------------------------------------------------------------------------; # Perform fit in SideBand1 region (ROOT.RooAddPdf coefficients will be; # interpreted in full range)",MatchSource.CODE_COMMENT,tutorials/roofit/rf312_multirangefit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py:138,Performance,Perform,Perform,138,"# Perform fits in individual sideband regions; # -------------------------------------------------------------------------------------; # Perform fit in SideBand1 region (ROOT.RooAddPdf coefficients will be; # interpreted in full range)",MatchSource.CODE_COMMENT,tutorials/roofit/rf312_multirangefit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py:2,Performance,Perform,Perform,2,"# Perform fit in SideBand2 region (ROOT.RooAddPdf coefficients will be; # interpreted in full range)",MatchSource.CODE_COMMENT,tutorials/roofit/rf312_multirangefit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py:2,Performance,Perform,Perform,2,"# Perform fits in joint sideband regions; # -----------------------------------------------------------------------------; # Now perform fit to joint 'L-shaped' sideband region 'SB1|SB2'; # (ROOT.RooAddPdf coefficients will be interpreted in full range)",MatchSource.CODE_COMMENT,tutorials/roofit/rf312_multirangefit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py:129,Performance,perform,perform,129,"# Perform fits in joint sideband regions; # -----------------------------------------------------------------------------; # Now perform fit to joint 'L-shaped' sideband region 'SB1|SB2'; # (ROOT.RooAddPdf coefficients will be interpreted in full range)",MatchSource.CODE_COMMENT,tutorials/roofit/rf312_multirangefit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf312_multirangefit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py:169,Deployability,integrat,integration,169,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: working with parameterized ranges to define non-rectangular; ## regions for fitting and integration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf313_paramranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py:169,Integrability,integrat,integration,169,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: working with parameterized ranges to define non-rectangular; ## regions for fitting and integration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf313_paramranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py:94,Modifiability,parameteriz,parameterized,94,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: working with parameterized ranges to define non-rectangular; ## regions for fitting and integration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf313_paramranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py:215,Modifiability,parameteriz,parameterized,215,"# Defined non-rectangular region R in (x, y, z); # -------------------------------------------------------------------------------------; #; # R = Z[0 - 0.1*Y^2] * Y[0.1*X - 0.9*X] * X[0 - 10]; #; # Construct range parameterized in ""R"" in y [ 0.1*x, 0.9*x ]",MatchSource.CODE_COMMENT,tutorials/roofit/rf313_paramranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py:12,Modifiability,parameteriz,parameterized,12,"# Construct parameterized ranged ""R"" in z [ 0, 0.1*y^2 ]",MatchSource.CODE_COMMENT,tutorials/roofit/rf313_paramranges.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf313_paramranges.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf314_paramfitrange.py:94,Modifiability,parameteriz,parameterized,94,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: working with parameterized ranges in a fit.; ## This an example of a fit with an acceptance that changes per-event; ##; ## `pdf = exp(-t/tau)` with `t[tmin,5]`; ##; ## where `t` and `tmin` are both observables in the dataset; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf314_paramfitrange.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf314_paramfitrange.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf314_paramfitrange.py:7,Modifiability,parameteriz,parameterized,7,"# Make parameterized range in t : [tmin,5]",MatchSource.CODE_COMMENT,tutorials/roofit/rf314_paramfitrange.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf314_paramfitrange.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py:133,Deployability,integrat,integration,133,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: marginizalization of multi-dimensional pdfs through integration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf315_projectpdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py:133,Integrability,integrat,integration,133,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: marginizalization of multi-dimensional pdfs through integration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf315_projectpdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py:144,Deployability,integrat,integration,144,"# Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,tutorials/roofit/rf315_projectpdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py:208,Deployability,integrat,integration,208,"# Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,tutorials/roofit/rf315_projectpdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py:144,Integrability,integrat,integration,144,"# Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,tutorials/roofit/rf315_projectpdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py:208,Integrability,integrat,integration,208,"# Create pdf m(x,y) = gx(x|y) * g(y); # --------------------------------------------------------------; # Increase default precision of numeric integration; # as self exercise has high sensitivity to numeric integration precision",MatchSource.CODE_COMMENT,tutorials/roofit/rf315_projectpdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf315_projectpdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:144,Modifiability,enhance,enhanced,144,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Multidimensional models: using the likelihood ratio technique to construct a signal; ## enhanced one-dimensional projection of a multi-dimensional pdf; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf316_llratioplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:213,Deployability,integrat,integrate,213,"# Define projected signal likelihood ratio; # ----------------------------------------------------------------------------------; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x",MatchSource.CODE_COMMENT,tutorials/roofit/rf316_llratioplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:213,Integrability,integrat,integrate,213,"# Define projected signal likelihood ratio; # ----------------------------------------------------------------------------------; # Calculate projection of signal and total likelihood on (y,z) observables; # i.e. integrate signal and composite model over x",MatchSource.CODE_COMMENT,tutorials/roofit/rf316_llratioplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:16,Testability,log,log,16,"# Construct the log of the signal / signal+background probability",MatchSource.CODE_COMMENT,tutorials/roofit/rf316_llratioplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:190,Deployability,integrat,integration,190,"# Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; # Generate large number of events for MC integration of pdf projection",MatchSource.CODE_COMMENT,tutorials/roofit/rf316_llratioplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py:190,Integrability,integrat,integration,190,"# Make MC projection of pdf with same LL ratio cut; # ---------------------------------------------------------------------------------------------; # Generate large number of events for MC integration of pdf projection",MatchSource.CODE_COMMENT,tutorials/roofit/rf316_llratioplot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf316_llratioplot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:188,Integrability,interface,interface,188,"# WVE Add reduction by range; # Binned (RooDataHist) and unbinned datasets (RooDataSet) share; # many properties and inherit from a common abstract base class; # (RooAbsData), provides an interface for all operations; # that can be performed regardless of the data format",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:117,Modifiability,inherit,inherit,117,"# WVE Add reduction by range; # Binned (RooDataHist) and unbinned datasets (RooDataSet) share; # many properties and inherit from a common abstract base class; # (RooAbsData), provides an interface for all operations; # that can be performed regardless of the data format",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:232,Performance,perform,performed,232,"# WVE Add reduction by range; # Binned (RooDataHist) and unbinned datasets (RooDataSet) share; # many properties and inherit from a common abstract base class; # (RooAbsData), provides an interface for all operations; # that can be performed regardless of the data format",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:103,Modifiability,variab,variables,103,"# Unlike ROOT.RooAbsArgs (ROOT.RooAbsPdf, ROOT.RooFormulaVar,....) datasets are not attached to; # the variables they are constructed from. Instead they are attached to an internal; # clone of the supplied set of arguments; # Fill d with dummy values",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:23,Performance,load,loads,23,"# Get with an argument loads a specific data point in row and returns; # a pointer to row argset. get() always returns the same pointer, unless; # an invalid row number is specified. In that case a null ptr is returned",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:106,Energy Efficiency,reduce,reduce,106,"# Reducing, appending and merging; # -------------------------------------------------------------; # The reduce() function returns a dataset which is a subset of the; # original",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:22,Modifiability,variab,variables,22,"# The binning of real variables (like x,y) is done using their fit range; # 'get/setRange()' and number of specified fit bins 'get/setBins()'.; # Category dimensions of binned datasets get one bin per defined category; # state",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:2,Performance,load,load,2,"# load bin center coordinates in internal buffer",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:46,Energy Efficiency,Reduce,Reduce,46,"# return weight of last loaded coordinates; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:130,Energy Efficiency,reduce,reduce,130,"# return weight of last loaded coordinates; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:151,Integrability,interface,interfaced,151,"# return weight of last loaded coordinates; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:24,Performance,load,loaded,24,"# return weight of last loaded coordinates; # Reduce the 2-dimensional binned dataset to a 1-dimensional binned dataset; #; # All reduce() methods are interfaced in RooAbsData. All reduction techniques; # demonstrated on unbinned datasets can be applied to binned datasets as; # well.",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py:13,Performance,load,loading,13,"# Saving and loading from file; # -------------------------------------------------------; # Datasets can be persisted with ROOT I/O",MatchSource.CODE_COMMENT,tutorials/roofit/rf402_datahandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf402_datahandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:18,Modifiability,variab,variable,18,"# Add column with variable w to previously generated dataset",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:142,Availability,error,error,142,"# Fit quadratic polynomial to weighted data; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:251,Availability,error,errors,251,"# Fit quadratic polynomial to weighted data; # NOTE: A plain Maximum likelihood fit to weighted data does in general; # NOT result in correct error estimates, individual; # event weights represent Poisson statistics themselves.; #; # Fit with 'wrong' errors",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:50,Availability,error,errors,50,"# A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:421,Performance,perform,performed,421,"# A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:230,Testability,log,logL,230,"# A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:249,Testability,log,log,249,"# A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:313,Testability,log,logL,313,"# A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:334,Testability,log,log,334,"# A first order correction to estimated parameter errors in an; # (unbinned) ML fit can be obtained by calculating the; # covariance matrix as; #; # V' = V C-1 V; #; # where V is the covariance matrix calculated from a fit; # to -logL = - sum [ w_i log f(x_i) ] and C is the covariance; # matrix calculated from -logL' = -sum [ w_i^2 log f(x_i) ]; # (i.e. the weights are applied squared); #; # A fit in self mode can be performed as follows:",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:41,Availability,error,error,41,"# Plot data using sum-of-weights-squared error rather than Poisson errors",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:67,Availability,error,errors,67,"# Plot data using sum-of-weights-squared error rather than Poisson errors",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:67,Availability,error,errors,67,"# Perform chi2 fit to binned weighted dataset using sum-of-weights errors; #; # NB: Within the usual approximations of a chi2 fit, chi2 fit to weighted; # data using sum-of-weights-squared errors does give correct error; # estimates",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:189,Availability,error,errors,189,"# Perform chi2 fit to binned weighted dataset using sum-of-weights errors; #; # NB: Within the usual approximations of a chi2 fit, chi2 fit to weighted; # data using sum-of-weights-squared errors does give correct error; # estimates",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:214,Availability,error,error,214,"# Perform chi2 fit to binned weighted dataset using sum-of-weights errors; #; # NB: Within the usual approximations of a chi2 fit, chi2 fit to weighted; # data using sum-of-weights-squared errors does give correct error; # estimates",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:2,Performance,Perform,Perform,2,"# Perform chi2 fit to binned weighted dataset using sum-of-weights errors; #; # NB: Within the usual approximations of a chi2 fit, chi2 fit to weighted; # data using sum-of-weights-squared errors does give correct error; # estimates",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py:300,Availability,error,error,300,"# Compare fit results of chi2, L fits to (un)weighted data; # ------------------------------------------------------------; # Note that ML fit on 1Kevt of weighted data is closer to result of ML fit on 43Kevt of unweighted data; # than to 1Kevt of unweighted data, the reference chi^2 fit with SumW2 error gives a result closer to; # that of an unbinned ML fit to 1Kevt of unweighted data.",MatchSource.CODE_COMMENT,tutorials/roofit/rf403_weightedevts.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf403_weightedevts.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf404_categories.py:144,Modifiability,variab,variables,144,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Data and categories: working with ROOT.RooCategory objects to describe discrete variables; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf404_categories.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf404_categories.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf405_realtocatfuncs.py:331,Modifiability,variab,variable,331,"# Create a binning real -> cat function; # ----------------------------------------------------------------------; # A RooBinningCategory is a category function that maps bins of a (named) binning definition; # in a real-valued input observable observables to state names. The state names are automatically; # constructed from the variable name, binning name and the bin number. If no binning name; # is specified the default binning is mapped",MatchSource.CODE_COMMENT,tutorials/roofit/rf405_realtocatfuncs.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf405_realtocatfuncs.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf407_latextables.py:25,Availability,error,error,25,"# Do fit to data, obtain error estimates on parameters",MatchSource.CODE_COMMENT,tutorials/roofit/rf407_latextables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf407_latextables.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py:19,Modifiability,variab,variables,19,"# We create RooFit variables that will represent the dataset.",MatchSource.CODE_COMMENT,tutorials/roofit/rf408_RDataFrameToRooFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py:513,Modifiability,variab,variables,513,"# Booking the creation of RooDataSet / RooDataHist in RDataFrame; # ----------------------------------------------------------------; # Method 1:; # ---------; # We directly book the RooDataSetHelper action.; # We need to pass; # - the RDataFrame column types as template parameters; # - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); # - the column names that RDataFrame should fill into the dataset; # NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; #; # The returned object is not yet a RooDataSet, but an RResultPtr that will be; # lazy-evaluated once you call GetValue() on it. We will only evaluate the; # RResultPtr once all other RDataFrame related actions are declared. This way; # we trigger the event loop computation only once, which will improve the; # runtime significantly.; #; # To learn more about lazy actions, see:; # https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions",MatchSource.CODE_COMMENT,tutorials/roofit/rf408_RDataFrameToRooFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py:898,Usability,learn,learn,898,"# Booking the creation of RooDataSet / RooDataHist in RDataFrame; # ----------------------------------------------------------------; # Method 1:; # ---------; # We directly book the RooDataSetHelper action.; # We need to pass; # - the RDataFrame column types as template parameters; # - the constructor arguments for RooDataSet (they follow the same syntax as the usual RooDataSet constructors); # - the column names that RDataFrame should fill into the dataset; # NOTE: RDataFrame columns are matched to RooFit variables by position, *not by name*!; #; # The returned object is not yet a RooDataSet, but an RResultPtr that will be; # lazy-evaluated once you call GetValue() on it. We will only evaluate the; # RResultPtr once all other RDataFrame related actions are declared. This way; # we trigger the event loop computation only once, which will improve the; # runtime significantly.; #; # To learn more about lazy actions, see:; # https://root.cern/doc/master/classROOT_1_1RDataFrame.html#actions",MatchSource.CODE_COMMENT,tutorials/roofit/rf408_RDataFrameToRooFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf408_RDataFrameToRooFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py:50,Deployability,update,updated,50,"# Let's fit the Gaussian to the data. The mean is updated accordingly.",MatchSource.CODE_COMMENT,tutorials/roofit/rf409_NumPyPandasToRooFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py:269,Integrability,interface,interface,269,"# The array values should be the same!; # Importing a RooDataHist from NumPy arrays with histogram counts and bin edges; # -----------------------------------------------------------------------------; # There is also a `RooDataHist.from_numpy` function, again with an interface; # inspired by `numpy.histogramdd`. You need to pass at least the histogram; # counts and the list of variables. The binning is optional: the default; # binning of the RooRealVars is used if not explicitly specified.",MatchSource.CODE_COMMENT,tutorials/roofit/rf409_NumPyPandasToRooFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py:381,Modifiability,variab,variables,381,"# The array values should be the same!; # Importing a RooDataHist from NumPy arrays with histogram counts and bin edges; # -----------------------------------------------------------------------------; # There is also a `RooDataHist.from_numpy` function, again with an interface; # inspired by `numpy.histogramdd`. You need to pass at least the histogram; # counts and the list of variables. The binning is optional: the default; # binning of the RooRealVars is used if not explicitly specified.",MatchSource.CODE_COMMENT,tutorials/roofit/rf409_NumPyPandasToRooFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py:232,Performance,optimiz,optimizations,232,"# Alternatively, you can specify only the number of bins and the range if your; # binning is uniform. This is preferred over passing the full list of bin; # edges, because RooFit will know that the binning is uniform and do some; # optimizations.",MatchSource.CODE_COMMENT,tutorials/roofit/rf409_NumPyPandasToRooFit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf409_NumPyPandasToRooFit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py:2,Performance,Perform,Perform,2,"# Perform a simultaneous fit; # ---------------------------------------------------; # Perform simultaneous fit of model to data and model_ctl to data_ctl",MatchSource.CODE_COMMENT,tutorials/roofit/rf501_simultaneouspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py:87,Performance,Perform,Perform,87,"# Perform a simultaneous fit; # ---------------------------------------------------; # Perform simultaneous fit of model to data and model_ctl to data_ctl",MatchSource.CODE_COMMENT,tutorials/roofit/rf501_simultaneouspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py:224,Deployability,integrat,integrated,224,"# Plot ""physics"" slice of simultaneous pdf.; # NB: You *must* project the sample index category with data using ProjWData as; # a RooSimultaneous makes no prediction on the shape in the index category and; # can thus not be integrated. In other words: Since the PDF doesn't know the; # number of events in the different category states, it doesn't know how much; # of each component it has to project out. This info is read from the data.",MatchSource.CODE_COMMENT,tutorials/roofit/rf501_simultaneouspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py:224,Integrability,integrat,integrated,224,"# Plot ""physics"" slice of simultaneous pdf.; # NB: You *must* project the sample index category with data using ProjWData as; # a RooSimultaneous makes no prediction on the shape in the index category and; # can thus not be integrated. In other words: Since the PDF doesn't know the; # number of events in the different category states, it doesn't know how much; # of each component it has to project out. This info is read from the data.",MatchSource.CODE_COMMENT,tutorials/roofit/rf501_simultaneouspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py:155,Safety,predict,prediction,155,"# Plot ""physics"" slice of simultaneous pdf.; # NB: You *must* project the sample index category with data using ProjWData as; # a RooSimultaneous makes no prediction on the shape in the index category and; # can thus not be integrated. In other words: Since the PDF doesn't know the; # number of events in the different category states, it doesn't know how much; # of each component it has to project out. This info is read from the data.",MatchSource.CODE_COMMENT,tutorials/roofit/rf501_simultaneouspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py:344,Testability,log,logical,344,"# The same plot for the control sample slice. We do this with a different; # approach this time, for illustration purposes. Here, we are slicing the; # dataset and then use the data slice for the projection, because then the; # RooFit::Slice() becomes unnecessary. This approach is more general,; # because you can plot sums of slices by using logical or in the Cut(); # command.",MatchSource.CODE_COMMENT,tutorials/roofit/rf501_simultaneouspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf501_simultaneouspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py:144,Deployability,configurat,configuration,144,"## \file rf505_asciicfg.py; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Organization and simultaneous fits: reading and writing ASCII configuration files; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf505_asciicfg.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py:144,Modifiability,config,configuration,144,"## \file rf505_asciicfg.py; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Organization and simultaneous fits: reading and writing ASCII configuration files; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf505_asciicfg.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py:63,Modifiability,variab,variables,63,"# Read parameters from section 'Section3' of file. Mark all; # variables that were processed with the ""READ"" attribute",MatchSource.CODE_COMMENT,tutorials/roofit/rf505_asciicfg.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf505_asciicfg.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:139,Integrability,message,message,139,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Organization and simultaneous fits: tuning and customizing the ROOT.RooFit message logging facility; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:147,Testability,log,logging,147,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Organization and simultaneous fits: tuning and customizing the ROOT.RooFit message logging facility; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:8,Deployability,configurat,configuration,8,"# Print configuration of message service; # ------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:104,Deployability,configurat,configuration,104,"# Print configuration of message service; # ------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:25,Integrability,message,message,25,"# Print configuration of message service; # ------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:8,Modifiability,config,configuration,8,"# Print configuration of message service; # ------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:104,Modifiability,config,configuration,104,"# Print configuration of message service; # ------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:9,Deployability,integrat,integration,9,"# Adding integration topic to existing INFO stream; # ---------------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:123,Deployability,configurat,configuration,123,"# Adding integration topic to existing INFO stream; # ---------------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:9,Integrability,integrat,integration,9,"# Adding integration topic to existing INFO stream; # ---------------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:123,Modifiability,config,configuration,123,"# Adding integration topic to existing INFO stream; # ---------------------------------------------------; # Print streams configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:6,Deployability,Integrat,Integration,6,"# Add Integration topic to existing INFO stream",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:6,Integrability,Integrat,Integration,6,"# Add Integration topic to existing INFO stream",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:47,Integrability,message,message,47,"# Construct integral over gauss to demonstrate message stream",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:16,Deployability,configurat,configuration,16,"# Print streams configuration in verbose, also shows inactive streams",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:16,Modifiability,config,configuration,16,"# Print streams configuration in verbose, also shows inactive streams",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:127,Integrability,message,message,127,"# Examples of pdf value tracing; # -----------------------------------------------------------------------; # Show DEBUG level message on function tracing, ROOT.RooGaussian only",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:41,Integrability,message,messages,41,"# Perform a fit to generate some tracing messages",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:2,Performance,Perform,Perform,2,"# Perform a fit to generate some tracing messages",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:42,Deployability,configurat,configuration,42,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:8,Integrability,message,message,8,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:42,Modifiability,config,configuration,42,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:19,Integrability,message,message,19,"# Show DEBUG level message on function tracing on all objects, output to; # file",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:41,Integrability,message,messages,41,"# Perform a fit to generate some tracing messages",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:2,Performance,Perform,Perform,2,"# Perform a fit to generate some tracing messages",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:42,Deployability,configurat,configuration,42,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:8,Integrability,message,message,8,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:42,Modifiability,config,configuration,42,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:131,Integrability,message,messages,131,"# Example of another debugging stream; # ---------------------------------------------------------------------; # Show DEBUG level messages on client/server link state management",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:42,Deployability,configurat,configuration,42,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:8,Integrability,message,message,8,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py:42,Modifiability,config,configuration,42,"# Reset message service to default stream configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf506_msgservice.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf506_msgservice.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:81,Modifiability,variab,variables,81,"# Create dummy objects; # ---------------------------------------; # Create some variables",MatchSource.CODE_COMMENT,tutorials/roofit/rf508_listsetmanip.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:2,Security,Access,Accessing,2,"# Accessing RooArgSet contents; # -------------------------------------------------------; # You can look up objects by name",MatchSource.CODE_COMMENT,tutorials/roofit/rf508_listsetmanip.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:293,Availability,error,error,293,"# Owning RooArgSets; # ---------------------------------; # You can create a RooArgSet that owns copies of the objects instead of; # referencing the originals. A set either owns all of its components or none,; # so once addClone() is used, add() can no longer be used and will result in an; # error message",MatchSource.CODE_COMMENT,tutorials/roofit/rf508_listsetmanip.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:299,Integrability,message,message,299,"# Owning RooArgSets; # ---------------------------------; # You can create a RooArgSet that owns copies of the objects instead of; # referencing the originals. A set either owns all of its components or none,; # so once addClone() is used, add() can no longer be used and will result in an; # error message",MatchSource.CODE_COMMENT,tutorials/roofit/rf508_listsetmanip.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:284,Integrability,depend,dependencies,284,"# If a set contains function objects, the head node; # is cloned in a snapshot. To make a snapshot of all; # servers of a function object do as follows. The result; # of a RooArgSet snapshot with deepCloning option is a set; # of cloned objects, all their clone (recursive) server; # dependencies, together form a self-consistent; # set that is free of external dependencies",MatchSource.CODE_COMMENT,tutorials/roofit/rf508_listsetmanip.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:362,Integrability,depend,dependencies,362,"# If a set contains function objects, the head node; # is cloned in a snapshot. To make a snapshot of all; # servers of a function object do as follows. The result; # of a RooArgSet snapshot with deepCloning option is a set; # of cloned objects, all their clone (recursive) server; # dependencies, together form a self-consistent; # set that is free of external dependencies",MatchSource.CODE_COMMENT,tutorials/roofit/rf508_listsetmanip.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py:2,Security,Access,Access,2,"# Access by index is provided",MatchSource.CODE_COMMENT,tutorials/roofit/rf508_listsetmanip.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf508_listsetmanip.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf509_wsinteractive.py:109,Security,access,access,109,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Organization and simultaneous fits: easy interactive access to workspace contents - CINT; ## to CLING code migration; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf509_wsinteractive.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf509_wsinteractive.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf509_wsinteractive.py:209,Security,access,access,209,"# self does not work anymore with CLING; # use normal workspace functionality; # Use workspace contents; # ----------------------------------------------; # Old syntax to use the name space prefix operator to access the workspace contents; #; # d = w.model.generate(w.x,1000); # r = w.model.fitTo(*d); # use normal workspace methods",MatchSource.CODE_COMMENT,tutorials/roofit/rf509_wsinteractive.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf509_wsinteractive.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf509_wsinteractive.py:27,Modifiability,variab,variable,27,"# old syntax to access the variable x; # frame = w.x.frame()",MatchSource.CODE_COMMENT,tutorials/roofit/rf509_wsinteractive.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf509_wsinteractive.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf509_wsinteractive.py:16,Security,access,access,16,"# old syntax to access the variable x; # frame = w.x.frame()",MatchSource.CODE_COMMENT,tutorials/roofit/rf509_wsinteractive.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf509_wsinteractive.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:202,Modifiability,variab,variables,202,"# Encode definition of parameters in workspace; # ---------------------------------------------------------------------------------------; # Define named sets ""parameters"" and ""observables"", list which variables should be considered; # parameters and observables by the users convention; #; # Variables appearing in sets _must_ live in the workspace already, the autoImport flag; # of defineSet must be set to import them on the fly. Named sets contain only references; # to the original variables, the value of observables in named sets already; # reflect their 'current' value",MatchSource.CODE_COMMENT,tutorials/roofit/rf510_wsnamedsets.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:293,Modifiability,Variab,Variables,293,"# Encode definition of parameters in workspace; # ---------------------------------------------------------------------------------------; # Define named sets ""parameters"" and ""observables"", list which variables should be considered; # parameters and observables by the users convention; #; # Variables appearing in sets _must_ live in the workspace already, the autoImport flag; # of defineSet must be set to import them on the fly. Named sets contain only references; # to the original variables, the value of observables in named sets already; # reflect their 'current' value",MatchSource.CODE_COMMENT,tutorials/roofit/rf510_wsnamedsets.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:488,Modifiability,variab,variables,488,"# Encode definition of parameters in workspace; # ---------------------------------------------------------------------------------------; # Define named sets ""parameters"" and ""observables"", list which variables should be considered; # parameters and observables by the users convention; #; # Variables appearing in sets _must_ live in the workspace already, the autoImport flag; # of defineSet must be set to import them on the fly. Named sets contain only references; # to the original variables, the value of observables in named sets already; # reflect their 'current' value",MatchSource.CODE_COMMENT,tutorials/roofit/rf510_wsnamedsets.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:509,Availability,error,errors,509,"# Encode reference value for parameters in workspace; # ---------------------------------------------------------------------------------------------------; # Define a parameter 'snapshot' in the p.d.f.; # Unlike a named set, parameter snapshot stores an independent set of values for; # a given set of variables in the workspace. The values can be stored and reloaded; # into the workspace variable objects using the loadSnapshot() and saveSnapshot(); # methods. A snapshot saves the value of each variable, errors that are stored; # with it as well as the 'Constant' flag that is used in fits to determine if a; # parameter is kept fixed or not.; # Do a dummy fit to a (supposedly) reference dataset here and store the results; # of that fit into a snapshot",MatchSource.CODE_COMMENT,tutorials/roofit/rf510_wsnamedsets.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:303,Modifiability,variab,variables,303,"# Encode reference value for parameters in workspace; # ---------------------------------------------------------------------------------------------------; # Define a parameter 'snapshot' in the p.d.f.; # Unlike a named set, parameter snapshot stores an independent set of values for; # a given set of variables in the workspace. The values can be stored and reloaded; # into the workspace variable objects using the loadSnapshot() and saveSnapshot(); # methods. A snapshot saves the value of each variable, errors that are stored; # with it as well as the 'Constant' flag that is used in fits to determine if a; # parameter is kept fixed or not.; # Do a dummy fit to a (supposedly) reference dataset here and store the results; # of that fit into a snapshot",MatchSource.CODE_COMMENT,tutorials/roofit/rf510_wsnamedsets.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:391,Modifiability,variab,variable,391,"# Encode reference value for parameters in workspace; # ---------------------------------------------------------------------------------------------------; # Define a parameter 'snapshot' in the p.d.f.; # Unlike a named set, parameter snapshot stores an independent set of values for; # a given set of variables in the workspace. The values can be stored and reloaded; # into the workspace variable objects using the loadSnapshot() and saveSnapshot(); # methods. A snapshot saves the value of each variable, errors that are stored; # with it as well as the 'Constant' flag that is used in fits to determine if a; # parameter is kept fixed or not.; # Do a dummy fit to a (supposedly) reference dataset here and store the results; # of that fit into a snapshot",MatchSource.CODE_COMMENT,tutorials/roofit/rf510_wsnamedsets.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:499,Modifiability,variab,variable,499,"# Encode reference value for parameters in workspace; # ---------------------------------------------------------------------------------------------------; # Define a parameter 'snapshot' in the p.d.f.; # Unlike a named set, parameter snapshot stores an independent set of values for; # a given set of variables in the workspace. The values can be stored and reloaded; # into the workspace variable objects using the loadSnapshot() and saveSnapshot(); # methods. A snapshot saves the value of each variable, errors that are stored; # with it as well as the 'Constant' flag that is used in fits to determine if a; # parameter is kept fixed or not.; # Do a dummy fit to a (supposedly) reference dataset here and store the results; # of that fit into a snapshot",MatchSource.CODE_COMMENT,tutorials/roofit/rf510_wsnamedsets.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py:418,Performance,load,loadSnapshot,418,"# Encode reference value for parameters in workspace; # ---------------------------------------------------------------------------------------------------; # Define a parameter 'snapshot' in the p.d.f.; # Unlike a named set, parameter snapshot stores an independent set of values for; # a given set of variables in the workspace. The values can be stored and reloaded; # into the workspace variable objects using the loadSnapshot() and saveSnapshot(); # methods. A snapshot saves the value of each variable, errors that are stored; # with it as well as the 'Constant' flag that is used in fits to determine if a; # parameter is kept fixed or not.; # Do a dummy fit to a (supposedly) reference dataset here and store the results; # of that fit into a snapshot",MatchSource.CODE_COMMENT,tutorials/roofit/rf510_wsnamedsets.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf510_wsnamedsets.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py:233,Modifiability,Variab,Variable,233,"# Creating and adding basic pdfs; # ----------------------------------------------------------------; # Remake example pdf of tutorial rs502_wspacewrite.C:; #; # Basic pdf construction: ClassName.ObjectName(constructor arguments); # Variable construction : VarName[x,xlo,xhi], VarName[xlo,xhi], VarName[x]; # P.d.f. addition : SUM.ObjectName(coef1*pdf1,...coefM*pdfM,pdfN); #",MatchSource.CODE_COMMENT,tutorials/roofit/rf511_wsfactory_basic.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py:73,Integrability,Contract,Contracted,73,"# Use object factory to build pdf of tutorial rs502_wspacewrite but; # - Contracted to a single line recursive expression,; # - Omitting explicit names for components that are not referred to explicitly later",MatchSource.CODE_COMMENT,tutorials/roofit/rf511_wsfactory_basic.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py:295,Integrability,depend,depending,295,"# Advanced pdf constructor arguments; # ----------------------------------------------------------------; #; # P.d.f. constructor arguments may by any type of ROOT.RooAbsArg, also; #; # Double_t -. converted to ROOT.RooConst(...); # {a,b,c} -. converted to ROOT.RooArgSet() or ROOT.RooArgList() depending on required ctor arg; # dataset name -. converted to ROOT.RooAbsData reference for any dataset residing in the workspace; # enum -. Any enum label that belongs to an enum defined in the (base); # class; # Make a dummy dataset pdf 'model' and import it in the workspace",MatchSource.CODE_COMMENT,tutorials/roofit/rf511_wsfactory_basic.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf511_wsfactory_basic.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf512_wsfactory_oper.py:2,Modifiability,Extend,Extended,2,"# Extended PDF addition is done with SUM (yield1*pdf1,yield2*pdf2)",MatchSource.CODE_COMMENT,tutorials/roofit/rf512_wsfactory_oper.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf512_wsfactory_oper.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py:165,Integrability,interface,interface,165,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Organization and simultaneous fits: illustration use of ROOT.RooCustomizer and; ## ROOT.RooSimWSTool interface in factory workspace tool in a complex standalone B physics example; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf513_wsfactory_tools.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py:26,Integrability,interface,interface,26,"# Example of RooSimWSTool interface; # ------------------------------------------------------------------; # Introduce a flavour tagging category tagCat as observable with 4 states corresponding; # to 4 flavour tagging techniques with different performance that require different; # parameterizations of the fit model; #; # ROOT.RooSimWSTool operation:; # - Make 4 clones of model (for each tagCat) state, will gain an individual; # copy of parameters w, and biasC. The other parameters remain common; # - Make a simultaneous pdf of the 4 clones assigning each to the appropriate; # state of the tagCat index category; # ROOT.RooSimWSTool is interfaced as meta-type SIMCLONE in the factory. The $SplitParam(); # argument maps to the SplitParam() named argument in the; # ROOT.RooSimWSTool constructor",MatchSource.CODE_COMMENT,tutorials/roofit/rf513_wsfactory_tools.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py:642,Integrability,interface,interfaced,642,"# Example of RooSimWSTool interface; # ------------------------------------------------------------------; # Introduce a flavour tagging category tagCat as observable with 4 states corresponding; # to 4 flavour tagging techniques with different performance that require different; # parameterizations of the fit model; #; # ROOT.RooSimWSTool operation:; # - Make 4 clones of model (for each tagCat) state, will gain an individual; # copy of parameters w, and biasC. The other parameters remain common; # - Make a simultaneous pdf of the 4 clones assigning each to the appropriate; # state of the tagCat index category; # ROOT.RooSimWSTool is interfaced as meta-type SIMCLONE in the factory. The $SplitParam(); # argument maps to the SplitParam() named argument in the; # ROOT.RooSimWSTool constructor",MatchSource.CODE_COMMENT,tutorials/roofit/rf513_wsfactory_tools.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py:283,Modifiability,parameteriz,parameterizations,283,"# Example of RooSimWSTool interface; # ------------------------------------------------------------------; # Introduce a flavour tagging category tagCat as observable with 4 states corresponding; # to 4 flavour tagging techniques with different performance that require different; # parameterizations of the fit model; #; # ROOT.RooSimWSTool operation:; # - Make 4 clones of model (for each tagCat) state, will gain an individual; # copy of parameters w, and biasC. The other parameters remain common; # - Make a simultaneous pdf of the 4 clones assigning each to the appropriate; # state of the tagCat index category; # ROOT.RooSimWSTool is interfaced as meta-type SIMCLONE in the factory. The $SplitParam(); # argument maps to the SplitParam() named argument in the; # ROOT.RooSimWSTool constructor",MatchSource.CODE_COMMENT,tutorials/roofit/rf513_wsfactory_tools.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py:245,Performance,perform,performance,245,"# Example of RooSimWSTool interface; # ------------------------------------------------------------------; # Introduce a flavour tagging category tagCat as observable with 4 states corresponding; # to 4 flavour tagging techniques with different performance that require different; # parameterizations of the fit model; #; # ROOT.RooSimWSTool operation:; # - Make 4 clones of model (for each tagCat) state, will gain an individual; # copy of parameters w, and biasC. The other parameters remain common; # - Make a simultaneous pdf of the 4 clones assigning each to the appropriate; # state of the tagCat index category; # ROOT.RooSimWSTool is interfaced as meta-type SIMCLONE in the factory. The $SplitParam(); # argument maps to the SplitParam() named argument in the; # ROOT.RooSimWSTool constructor",MatchSource.CODE_COMMENT,tutorials/roofit/rf513_wsfactory_tools.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py:27,Integrability,interface,interface,27,"# Example of RooCustomizer interface; # -------------------------------------------------------------------; #; # Class ROOT.RooCustomizer makes clones of existing pdfs with certain prescribed; # modifications (branch of leaf node replacements); #; # Here we take our model (the original before ROOT.RooSimWSTool modifications); # and request that the parameter w (the mistag rate) is replaced with; # an expression-based function that calculates w in terms of the Dilution; # parameter D that is defined D = 1-2*w; # Make a clone model_D of original 'model' replacing 'w' with; # 'expr('0.5-D/2',D[0,1])'",MatchSource.CODE_COMMENT,tutorials/roofit/rf513_wsfactory_tools.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf513_wsfactory_tools.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf514_RooCustomizer.py:141,Modifiability,variab,variable,141,"# 2. Each sample should have its own signal yield, but there is an extra complication:; # We need the yields 1 and 2 to be a function of the variable ""mass"".; # For this, we pre-define nodes with exactly the names that the customiser would have created automatically,; # that is, ""<nodeName>_<categoryName>"", and we register them in the set of customiser nodes.; # The customiser will pick them up instead of creating new ones.; # If we don't provide one (e.g. for ""yieldSig_Sample3""), it will be created automatically by cloning `yieldSig`.",MatchSource.CODE_COMMENT,tutorials/roofit/rf514_RooCustomizer.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf514_RooCustomizer.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf515_hfJSON.py:236,Usability,simpl,simple,236,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Code HistFactory Models in JSON.; ##; ## With the HS3 standard, it is possible to code RooFit-Models of any kind as JSON files.; ## In this tutorial, you can see how to code up a (simple) HistFactory-based model in JSON and import it into a RooWorkspace.; ##; ## \macro_code; ##; ## \date November 2021; ## \author Carsten Burgard",MatchSource.CODE_COMMENT,tutorials/roofit/rf515_hfJSON.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf515_hfJSON.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf515_hfJSON.py:93,Modifiability,config,config,93,"# now, you can easily use your workspace to run your fit (as you usually would); # the model config is named after your pdf, i.e. <the pdf name>_modelConfig",MatchSource.CODE_COMMENT,tutorials/roofit/rf515_hfJSON.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf515_hfJSON.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:28,Availability,error,error,28,"# Interactive minimization, error analysis; # -------------------------------------------------------------------------------; # Create MINUIT interface object",MatchSource.CODE_COMMENT,tutorials/roofit/rf601_intminuit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:143,Integrability,interface,interface,143,"# Interactive minimization, error analysis; # -------------------------------------------------------------------------------; # Create MINUIT interface object",MatchSource.CODE_COMMENT,tutorials/roofit/rf601_intminuit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:19,Testability,log,logging,19,"# Activate verbose logging of MINUIT parameter space stepping",MatchSource.CODE_COMMENT,tutorials/roofit/rf601_intminuit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:54,Availability,error,error,54,"# Print values of all parameters, reflect values (and error estimates); # that are back propagated from MINUIT",MatchSource.CODE_COMMENT,tutorials/roofit/rf601_intminuit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:18,Testability,log,logging,18,"# Disable verbose logging",MatchSource.CODE_COMMENT,tutorials/roofit/rf601_intminuit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:25,Availability,error,errors,25,"# Run HESSE to calculate errors from d2L/dp2",MatchSource.CODE_COMMENT,tutorials/roofit/rf601_intminuit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:19,Availability,error,error,19,"# Print value (and error) of sigma_g2 parameter, reflects; # value and error back propagated from MINUIT",MatchSource.CODE_COMMENT,tutorials/roofit/rf601_intminuit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:71,Availability,error,error,71,"# Print value (and error) of sigma_g2 parameter, reflects; # value and error back propagated from MINUIT",MatchSource.CODE_COMMENT,tutorials/roofit/rf601_intminuit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:19,Availability,error,error,19,"# Print value (and error) of sigma_g2 parameter, reflects; # value and error back propagated from MINUIT",MatchSource.CODE_COMMENT,tutorials/roofit/rf601_intminuit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py:71,Availability,error,error,71,"# Print value (and error) of sigma_g2 parameter, reflects; # value and error back propagated from MINUIT",MatchSource.CODE_COMMENT,tutorials/roofit/rf601_intminuit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf601_intminuit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py:202,Modifiability,extend,extended,202,"# Construct a chi^2 of the data and the model.; # When a p.d.f. is used in a chi^2 fit, probability density scaled; # by the number of events in the dataset to obtain the fit function; # If model is an extended p.d.f, expected number events is used; # instead of the observed number of events.",MatchSource.CODE_COMMENT,tutorials/roofit/rf602_chi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py:206,Availability,error,error,206,"# NB: It is also possible to fit a ROOT.RooAbsReal function to a ROOT.RooDataHist; # using chi2FitTo().; # Note that entries with zero bins are _not_ allowed; # for a proper chi^2 calculation and will give error; # messages",MatchSource.CODE_COMMENT,tutorials/roofit/rf602_chi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py:215,Integrability,message,messages,215,"# NB: It is also possible to fit a ROOT.RooAbsReal function to a ROOT.RooDataHist; # using chi2FitTo().; # Note that entries with zero bins are _not_ allowed; # for a proper chi^2 calculation and will give error; # messages",MatchSource.CODE_COMMENT,tutorials/roofit/rf602_chi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf602_chi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf603_multicpu.py:39,Deployability,integrat,integration,39,"# Perform parallel projection using MC integration of pdf using given input dataSet.; # In self mode the data-weighted average of the pdf is calculated by splitting the; # input dataset in N equal pieces and calculating in parallel the weighted average; # one each subset. The N results of those calculations are then weighted into the; # final result; # Use four processes",MatchSource.CODE_COMMENT,tutorials/roofit/rf603_multicpu.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf603_multicpu.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf603_multicpu.py:39,Integrability,integrat,integration,39,"# Perform parallel projection using MC integration of pdf using given input dataSet.; # In self mode the data-weighted average of the pdf is calculated by splitting the; # input dataset in N equal pieces and calculating in parallel the weighted average; # one each subset. The N results of those calculations are then weighted into the; # final result; # Use four processes",MatchSource.CODE_COMMENT,tutorials/roofit/rf603_multicpu.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf603_multicpu.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf603_multicpu.py:2,Performance,Perform,Perform,2,"# Perform parallel projection using MC integration of pdf using given input dataSet.; # In self mode the data-weighted average of the pdf is calculated by splitting the; # input dataset in N equal pieces and calculating in parallel the weighted average; # one each subset. The N results of those calculations are then weighted into the; # final result; # Use four processes",MatchSource.CODE_COMMENT,tutorials/roofit/rf603_multicpu.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf603_multicpu.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:151,Availability,error,error,151,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## 'LIKELIHOOD AND MINIMIZATION' RooFit tutorial macro #606; ##; ## Understanding and customizing error handling in likelihood evaluations; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:154,Availability,error,errors,154,"# Fit model to data; # ---------------------------------; # The ARGUS background shape has a sharp kinematic cutoff at m=m0; # and is prone to evaluation errors if the cutoff parameter m0; # is floated: when the pdf cutoff value is lower than that in data; # events with m>m0 will have zero probability; # Perform unbinned ML fit. Print detailed error messages for up to; # 10 events per likelihood evaluation. The default error handling strategy; # is to return a very high value of the likelihood to MINUIT if errors occur,; # which will force MINUIT to retreat from the problematic area",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:346,Availability,error,error,346,"# Fit model to data; # ---------------------------------; # The ARGUS background shape has a sharp kinematic cutoff at m=m0; # and is prone to evaluation errors if the cutoff parameter m0; # is floated: when the pdf cutoff value is lower than that in data; # events with m>m0 will have zero probability; # Perform unbinned ML fit. Print detailed error messages for up to; # 10 events per likelihood evaluation. The default error handling strategy; # is to return a very high value of the likelihood to MINUIT if errors occur,; # which will force MINUIT to retreat from the problematic area",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:423,Availability,error,error,423,"# Fit model to data; # ---------------------------------; # The ARGUS background shape has a sharp kinematic cutoff at m=m0; # and is prone to evaluation errors if the cutoff parameter m0; # is floated: when the pdf cutoff value is lower than that in data; # events with m>m0 will have zero probability; # Perform unbinned ML fit. Print detailed error messages for up to; # 10 events per likelihood evaluation. The default error handling strategy; # is to return a very high value of the likelihood to MINUIT if errors occur,; # which will force MINUIT to retreat from the problematic area",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:512,Availability,error,errors,512,"# Fit model to data; # ---------------------------------; # The ARGUS background shape has a sharp kinematic cutoff at m=m0; # and is prone to evaluation errors if the cutoff parameter m0; # is floated: when the pdf cutoff value is lower than that in data; # events with m>m0 will have zero probability; # Perform unbinned ML fit. Print detailed error messages for up to; # 10 events per likelihood evaluation. The default error handling strategy; # is to return a very high value of the likelihood to MINUIT if errors occur,; # which will force MINUIT to retreat from the problematic area",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:352,Integrability,message,messages,352,"# Fit model to data; # ---------------------------------; # The ARGUS background shape has a sharp kinematic cutoff at m=m0; # and is prone to evaluation errors if the cutoff parameter m0; # is floated: when the pdf cutoff value is lower than that in data; # events with m>m0 will have zero probability; # Perform unbinned ML fit. Print detailed error messages for up to; # 10 events per likelihood evaluation. The default error handling strategy; # is to return a very high value of the likelihood to MINUIT if errors occur,; # which will force MINUIT to retreat from the problematic area",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:306,Performance,Perform,Perform,306,"# Fit model to data; # ---------------------------------; # The ARGUS background shape has a sharp kinematic cutoff at m=m0; # and is prone to evaluation errors if the cutoff parameter m0; # is floated: when the pdf cutoff value is lower than that in data; # events with m>m0 will have zero probability; # Perform unbinned ML fit. Print detailed error messages for up to; # 10 events per likelihood evaluation. The default error handling strategy; # is to return a very high value of the likelihood to MINUIT if errors occur,; # which will force MINUIT to retreat from the problematic area",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:64,Availability,error,errors,64,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:195,Availability,error,error,195,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:31,Deployability,configurat,configuration,31,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:31,Modifiability,config,configuration,31,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:2,Performance,Perform,Perform,2,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:392,Testability,log,log,392,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:566,Usability,clear,clearly,566,"# Perform another fit. In self configuration only the number of errors per; # likelihood evaluation is shown, it is greater than zero. The; # EvalErrorWall(kFALSE) arguments disables the default error handling strategy; # and will cause the actual (problematic) value of the likelihood to be passed; # to MINUIT.; #; # NB: Use of self option is NOT recommended as default strategt as broken -log(L) values; # can often be lower than 'good' ones because offending events are removed.; # ROOT.This may effectively create a False minimum in problem areas. ROOT.This is clearly; # illustrated in the second plot",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:141,Availability,error,errors,141,"# Plot likelihood in m0 in range that includes problematic values; # In self configuration no messages are printed for likelihood evaluation errors,; # but if an likelihood value evaluates with error, corresponding value; # on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:194,Availability,error,error,194,"# Plot likelihood in m0 in range that includes problematic values; # In self configuration no messages are printed for likelihood evaluation errors,; # but if an likelihood value evaluates with error, corresponding value; # on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:77,Deployability,configurat,configuration,77,"# Plot likelihood in m0 in range that includes problematic values; # In self configuration no messages are printed for likelihood evaluation errors,; # but if an likelihood value evaluates with error, corresponding value; # on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:94,Integrability,message,messages,94,"# Plot likelihood in m0 in range that includes problematic values; # In self configuration no messages are printed for likelihood evaluation errors,; # but if an likelihood value evaluates with error, corresponding value; # on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py:77,Modifiability,config,configuration,77,"# Plot likelihood in m0 in range that includes problematic values; # In self configuration no messages are printed for likelihood evaluation errors,; # but if an likelihood value evaluates with error, corresponding value; # on the curve will be set to the value given in EvalErrorValue().",MatchSource.CODE_COMMENT,tutorials/roofit/rf606_nllerrorhandling.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf606_nllerrorhandling.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf607_fitresult.py:103,Performance,Perform,Perform,103,"# Fit pdf to data, save fit result; # -------------------------------------------------------------; # Perform fit and save result",MatchSource.CODE_COMMENT,tutorials/roofit/rf607_fitresult.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf607_fitresult.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf607_fitresult.py:2,Security,Access,Access,2,"# Access fit result information; # ---------------------------------------------------------; # Access basic information",MatchSource.CODE_COMMENT,tutorials/roofit/rf607_fitresult.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf607_fitresult.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf607_fitresult.py:96,Security,Access,Access,96,"# Access fit result information; # ---------------------------------------------------------; # Access basic information",MatchSource.CODE_COMMENT,tutorials/roofit/rf607_fitresult.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf607_fitresult.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf607_fitresult.py:2,Security,Access,Access,2,"# Access list of final fit parameter values",MatchSource.CODE_COMMENT,tutorials/roofit/rf607_fitresult.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf607_fitresult.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf607_fitresult.py:2,Security,Access,Access,2,"# Access correlation matrix elements",MatchSource.CODE_COMMENT,tutorials/roofit/rf607_fitresult.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf607_fitresult.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py:59,Availability,error,error,59,"# Sample a 3-D histogram of the pdf to be visualized as an error; # ellipsoid using the GLISO draw option",MatchSource.CODE_COMMENT,tutorials/roofit/rf608_fitresultaspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py:27,Availability,down,down,27,"# Project 3D parameter pdf down to 3 permutations of two-dimensional pdfs; # The integrations corresponding to these projections are performed analytically; # by the MV Gaussian pdf",MatchSource.CODE_COMMENT,tutorials/roofit/rf608_fitresultaspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py:81,Deployability,integrat,integrations,81,"# Project 3D parameter pdf down to 3 permutations of two-dimensional pdfs; # The integrations corresponding to these projections are performed analytically; # by the MV Gaussian pdf",MatchSource.CODE_COMMENT,tutorials/roofit/rf608_fitresultaspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py:81,Integrability,integrat,integrations,81,"# Project 3D parameter pdf down to 3 permutations of two-dimensional pdfs; # The integrations corresponding to these projections are performed analytically; # by the MV Gaussian pdf",MatchSource.CODE_COMMENT,tutorials/roofit/rf608_fitresultaspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py:133,Performance,perform,performed,133,"# Project 3D parameter pdf down to 3 permutations of two-dimensional pdfs; # The integrations corresponding to these projections are performed analytically; # by the MV Gaussian pdf",MatchSource.CODE_COMMENT,tutorials/roofit/rf608_fitresultaspdf.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf608_fitresultaspdf.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:152,Availability,error,errors,152,"# Create dataset with X and Y values; # -------------------------------------------------------------------; # Make weighted XY dataset with asymmetric errors stored; # The StoreError() argument is essential as it makes; # the dataset store the error in addition to the values; # of the observables. If errors on one or more observables; # are asymmetric, can store the asymmetric error; # using the StoreAsymError() argument",MatchSource.CODE_COMMENT,tutorials/roofit/rf609_xychi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:245,Availability,error,error,245,"# Create dataset with X and Y values; # -------------------------------------------------------------------; # Make weighted XY dataset with asymmetric errors stored; # The StoreError() argument is essential as it makes; # the dataset store the error in addition to the values; # of the observables. If errors on one or more observables; # are asymmetric, can store the asymmetric error; # using the StoreAsymError() argument",MatchSource.CODE_COMMENT,tutorials/roofit/rf609_xychi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:303,Availability,error,errors,303,"# Create dataset with X and Y values; # -------------------------------------------------------------------; # Make weighted XY dataset with asymmetric errors stored; # The StoreError() argument is essential as it makes; # the dataset store the error in addition to the values; # of the observables. If errors on one or more observables; # are asymmetric, can store the asymmetric error; # using the StoreAsymError() argument",MatchSource.CODE_COMMENT,tutorials/roofit/rf609_xychi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:381,Availability,error,error,381,"# Create dataset with X and Y values; # -------------------------------------------------------------------; # Make weighted XY dataset with asymmetric errors stored; # The StoreError() argument is essential as it makes; # the dataset store the error in addition to the values; # of the observables. If errors on one or more observables; # are asymmetric, can store the asymmetric error; # using the StoreAsymError() argument",MatchSource.CODE_COMMENT,tutorials/roofit/rf609_xychi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:18,Availability,error,error,18,"# Set Y value and error",MatchSource.CODE_COMMENT,tutorials/roofit/rf609_xychi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:2,Performance,Perform,Perform,2,"# Perform chi2 fit to X +/- dX and Y +/- dY values; # ---------------------------------------------------------------------------------------; # Make fit function",MatchSource.CODE_COMMENT,tutorials/roofit/rf609_xychi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:26,Availability,error,errors,26,"# Fit chi^2 using X and Y errors",MatchSource.CODE_COMMENT,tutorials/roofit/rf609_xychi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:67,Availability,error,errors,67,"# Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; # than taking point at center of bin",MatchSource.CODE_COMMENT,tutorials/roofit/rf609_xychi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:25,Deployability,integrat,integrating,25,"# Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; # than taking point at center of bin",MatchSource.CODE_COMMENT,tutorials/roofit/rf609_xychi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py:25,Integrability,integrat,integrating,25,"# Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; # than taking point at center of bin",MatchSource.CODE_COMMENT,tutorials/roofit/rf609_xychi2fit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf609_xychi2fit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:102,Availability,error,errors,102,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Likelihood and minimization: visualization of errors from a covariance matrix; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:2,Performance,Perform,Perform,2,"# Perform fit and save fit result",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:16,Availability,error,error,16,"# Visualize fit error; # -------------------------------------; # Make plot frame",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:20,Availability,error,error,20,"# Visualize 1-sigma error encoded in fit result 'r' as orange band using linear error propagation; # ROOT.This results in an error band that is by construction symmetric; #; # The linear error is calculated as; # error(x) = Z* F_a(x) * Corr(a,a') F_a'(x); #; # where F_a(x) = [ f(x,a+da) - f(x,a-da) ] / 2,; #; # with f(x) = the plotted curve; # 'da' = error taken from the fit result; # Corr(a,a') = the correlation matrix from the fit result; # Z = requested significance 'Z sigma band'; #; # The linear method is fast (required 2*N evaluations of the curve, N is the number of parameters),; # but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and; # Gaussian approximations made; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:80,Availability,error,error,80,"# Visualize 1-sigma error encoded in fit result 'r' as orange band using linear error propagation; # ROOT.This results in an error band that is by construction symmetric; #; # The linear error is calculated as; # error(x) = Z* F_a(x) * Corr(a,a') F_a'(x); #; # where F_a(x) = [ f(x,a+da) - f(x,a-da) ] / 2,; #; # with f(x) = the plotted curve; # 'da' = error taken from the fit result; # Corr(a,a') = the correlation matrix from the fit result; # Z = requested significance 'Z sigma band'; #; # The linear method is fast (required 2*N evaluations of the curve, N is the number of parameters),; # but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and; # Gaussian approximations made; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:125,Availability,error,error,125,"# Visualize 1-sigma error encoded in fit result 'r' as orange band using linear error propagation; # ROOT.This results in an error band that is by construction symmetric; #; # The linear error is calculated as; # error(x) = Z* F_a(x) * Corr(a,a') F_a'(x); #; # where F_a(x) = [ f(x,a+da) - f(x,a-da) ] / 2,; #; # with f(x) = the plotted curve; # 'da' = error taken from the fit result; # Corr(a,a') = the correlation matrix from the fit result; # Z = requested significance 'Z sigma band'; #; # The linear method is fast (required 2*N evaluations of the curve, N is the number of parameters),; # but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and; # Gaussian approximations made; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:187,Availability,error,error,187,"# Visualize 1-sigma error encoded in fit result 'r' as orange band using linear error propagation; # ROOT.This results in an error band that is by construction symmetric; #; # The linear error is calculated as; # error(x) = Z* F_a(x) * Corr(a,a') F_a'(x); #; # where F_a(x) = [ f(x,a+da) - f(x,a-da) ] / 2,; #; # with f(x) = the plotted curve; # 'da' = error taken from the fit result; # Corr(a,a') = the correlation matrix from the fit result; # Z = requested significance 'Z sigma band'; #; # The linear method is fast (required 2*N evaluations of the curve, N is the number of parameters),; # but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and; # Gaussian approximations made; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:213,Availability,error,error,213,"# Visualize 1-sigma error encoded in fit result 'r' as orange band using linear error propagation; # ROOT.This results in an error band that is by construction symmetric; #; # The linear error is calculated as; # error(x) = Z* F_a(x) * Corr(a,a') F_a'(x); #; # where F_a(x) = [ f(x,a+da) - f(x,a-da) ] / 2,; #; # with f(x) = the plotted curve; # 'da' = error taken from the fit result; # Corr(a,a') = the correlation matrix from the fit result; # Z = requested significance 'Z sigma band'; #; # The linear method is fast (required 2*N evaluations of the curve, N is the number of parameters),; # but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and; # Gaussian approximations made; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:353,Availability,error,error,353,"# Visualize 1-sigma error encoded in fit result 'r' as orange band using linear error propagation; # ROOT.This results in an error band that is by construction symmetric; #; # The linear error is calculated as; # error(x) = Z* F_a(x) * Corr(a,a') F_a'(x); #; # where F_a(x) = [ f(x,a+da) - f(x,a-da) ] / 2,; #; # with f(x) = the plotted curve; # 'da' = error taken from the fit result; # Corr(a,a') = the correlation matrix from the fit result; # Z = requested significance 'Z sigma band'; #; # The linear method is fast (required 2*N evaluations of the curve, N is the number of parameters),; # but may not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and; # Gaussian approximations made; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:12,Availability,error,error,12,"# Calculate error using sampling method and visualize as dashed red line.; #; # In self method a number of curves is calculated with variations of the parameter values, sampled; # from a multi-variate Gaussian pdf that is constructed from the fit results covariance matrix.; # The error(x) is determined by calculating a central interval that capture N% of the variations; # for each value of x, N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves; # is chosen to be such that at least 100 curves are expected to be outside the N% interval, is minimally; # 100 (e.g. Z=1.Ncurve=356, Z=2.Ncurve=2156)) Intervals from the sampling method can be asymmetric,; # and may perform better in the presence of strong correlations, may take; # (much) longer to calculate",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:281,Availability,error,error,281,"# Calculate error using sampling method and visualize as dashed red line.; #; # In self method a number of curves is calculated with variations of the parameter values, sampled; # from a multi-variate Gaussian pdf that is constructed from the fit results covariance matrix.; # The error(x) is determined by calculating a central interval that capture N% of the variations; # for each value of x, N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves; # is chosen to be such that at least 100 curves are expected to be outside the N% interval, is minimally; # 100 (e.g. Z=1.Ncurve=356, Z=2.Ncurve=2156)) Intervals from the sampling method can be asymmetric,; # and may perform better in the presence of strong correlations, may take; # (much) longer to calculate",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:690,Performance,perform,perform,690,"# Calculate error using sampling method and visualize as dashed red line.; #; # In self method a number of curves is calculated with variations of the parameter values, sampled; # from a multi-variate Gaussian pdf that is constructed from the fit results covariance matrix.; # The error(x) is determined by calculating a central interval that capture N% of the variations; # for each value of x, N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves; # is chosen to be such that at least 100 curves are expected to be outside the N% interval, is minimally; # 100 (e.g. Z=1.Ncurve=356, Z=2.Ncurve=2156)) Intervals from the sampling method can be asymmetric,; # and may perform better in the presence of strong correlations, may take; # (much) longer to calculate",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:27,Availability,error,error,27,"# Perform the same type of error visualization on the background component only.; # The VisualizeError() option can generally applied to _any_ kind of; # plot (components, asymmetries, etc..)",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:2,Performance,Perform,Perform,2,"# Perform the same type of error visualization on the background component only.; # The VisualizeError() option can generally applied to _any_ kind of; # plot (components, asymmetries, etc..)",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:24,Availability,error,error,24,"# Visualize partial fit error; # ------------------------------------------------------; # Make plot frame",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:20,Availability,error,error,20,"# Visualize partial error. For partial error visualization the covariance matrix is first reduced as follows; # ___ -1; # Vred = V22 = V11 - V12 * V22 * V21; #; # Where V11,V12,V21, represent a block decomposition of the covariance matrix into observables that; # are propagated (labeled by index '1') and that are not propagated (labeled by index '2'), V22bar; # is the Shur complement of V22, as shown above; #; # (Note that Vred is _not_ a simple sub-matrix of V); # Propagate partial error due to shape parameters (m,m2) using linear and; # sampling method",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:39,Availability,error,error,39,"# Visualize partial error. For partial error visualization the covariance matrix is first reduced as follows; # ___ -1; # Vred = V22 = V11 - V12 * V22 * V21; #; # Where V11,V12,V21, represent a block decomposition of the covariance matrix into observables that; # are propagated (labeled by index '1') and that are not propagated (labeled by index '2'), V22bar; # is the Shur complement of V22, as shown above; #; # (Note that Vred is _not_ a simple sub-matrix of V); # Propagate partial error due to shape parameters (m,m2) using linear and; # sampling method",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:488,Availability,error,error,488,"# Visualize partial error. For partial error visualization the covariance matrix is first reduced as follows; # ___ -1; # Vred = V22 = V11 - V12 * V22 * V21; #; # Where V11,V12,V21, represent a block decomposition of the covariance matrix into observables that; # are propagated (labeled by index '1') and that are not propagated (labeled by index '2'), V22bar; # is the Shur complement of V22, as shown above; #; # (Note that Vred is _not_ a simple sub-matrix of V); # Propagate partial error due to shape parameters (m,m2) using linear and; # sampling method",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:90,Energy Efficiency,reduce,reduced,90,"# Visualize partial error. For partial error visualization the covariance matrix is first reduced as follows; # ___ -1; # Vred = V22 = V11 - V12 * V22 * V21; #; # Where V11,V12,V21, represent a block decomposition of the covariance matrix into observables that; # are propagated (labeled by index '1') and that are not propagated (labeled by index '2'), V22bar; # is the Shur complement of V22, as shown above; #; # (Note that Vred is _not_ a simple sub-matrix of V); # Propagate partial error due to shape parameters (m,m2) using linear and; # sampling method",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:443,Usability,simpl,simple,443,"# Visualize partial error. For partial error visualization the covariance matrix is first reduced as follows; # ___ -1; # Vred = V22 = V11 - V12 * V22 * V21; #; # Where V11,V12,V21, represent a block decomposition of the covariance matrix into observables that; # are propagated (labeled by index '1') and that are not propagated (labeled by index '2'), V22bar; # is the Shur complement of V22, as shown above; #; # (Note that Vred is _not_ a simple sub-matrix of V); # Propagate partial error due to shape parameters (m,m2) using linear and; # sampling method",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:20,Availability,error,error,20,"# Propagate partial error due to yield parameter using linear and sampling; # method",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py:20,Availability,error,error,20,"# Propagate partial error due to yield parameter using linear and sampling; # method",MatchSource.CODE_COMMENT,tutorials/roofit/rf610_visualerror.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf610_visualerror.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:85,Availability,Recover,Recover,85,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Likelihood and minimization: Recover from regions where the function is not defined.; ##; ## We demonstrate improved recovery from disallowed parameters. For this, we use a polynomial PDF of the form; ## \f[; ## \mathrm{Pol2} = \mathcal{N} \left( c + a_1 \cdot x + a_2 \cdot x^2 + 0.01 \cdot x^3 \right),; ## \f]; ## where \f$ \mathcal{N} \f$ is a normalisation factor. Unless the parameters are chosen carefully,; ## this function can be negative, and hence, it cannot be used as a PDF. In this case, RooFit passes; ## an error to the minimiser, which might try to recover.; ##; ## \macro_code; ## \macro_output; ##; ## \date June 2021; ## \author Harshal Shende, Stephan Hageboeck (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:173,Availability,recover,recovery,173,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Likelihood and minimization: Recover from regions where the function is not defined.; ##; ## We demonstrate improved recovery from disallowed parameters. For this, we use a polynomial PDF of the form; ## \f[; ## \mathrm{Pol2} = \mathcal{N} \left( c + a_1 \cdot x + a_2 \cdot x^2 + 0.01 \cdot x^3 \right),; ## \f]; ## where \f$ \mathcal{N} \f$ is a normalisation factor. Unless the parameters are chosen carefully,; ## this function can be negative, and hence, it cannot be used as a PDF. In this case, RooFit passes; ## an error to the minimiser, which might try to recover.; ##; ## \macro_code; ## \macro_output; ##; ## \date June 2021; ## \author Harshal Shende, Stephan Hageboeck (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:579,Availability,error,error,579,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Likelihood and minimization: Recover from regions where the function is not defined.; ##; ## We demonstrate improved recovery from disallowed parameters. For this, we use a polynomial PDF of the form; ## \f[; ## \mathrm{Pol2} = \mathcal{N} \left( c + a_1 \cdot x + a_2 \cdot x^2 + 0.01 \cdot x^3 \right),; ## \f]; ## where \f$ \mathcal{N} \f$ is a normalisation factor. Unless the parameters are chosen carefully,; ## this function can be negative, and hence, it cannot be used as a PDF. In this case, RooFit passes; ## an error to the minimiser, which might try to recover.; ##; ## \macro_code; ## \macro_output; ##; ## \date June 2021; ## \author Harshal Shende, Stephan Hageboeck (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:622,Availability,recover,recover,622,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Likelihood and minimization: Recover from regions where the function is not defined.; ##; ## We demonstrate improved recovery from disallowed parameters. For this, we use a polynomial PDF of the form; ## \f[; ## \mathrm{Pol2} = \mathcal{N} \left( c + a_1 \cdot x + a_2 \cdot x^2 + 0.01 \cdot x^3 \right),; ## \f]; ## where \f$ \mathcal{N} \f$ is a normalisation factor. Unless the parameters are chosen carefully,; ## this function can be negative, and hence, it cannot be used as a PDF. In this case, RooFit passes; ## an error to the minimiser, which might try to recover.; ##; ## \macro_code; ## \macro_output; ##; ## \date June 2021; ## \author Harshal Shende, Stephan Hageboeck (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:85,Safety,Recover,Recover,85,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Likelihood and minimization: Recover from regions where the function is not defined.; ##; ## We demonstrate improved recovery from disallowed parameters. For this, we use a polynomial PDF of the form; ## \f[; ## \mathrm{Pol2} = \mathcal{N} \left( c + a_1 \cdot x + a_2 \cdot x^2 + 0.01 \cdot x^3 \right),; ## \f]; ## where \f$ \mathcal{N} \f$ is a normalisation factor. Unless the parameters are chosen carefully,; ## this function can be negative, and hence, it cannot be used as a PDF. In this case, RooFit passes; ## an error to the minimiser, which might try to recover.; ##; ## \macro_code; ## \macro_output; ##; ## \date June 2021; ## \author Harshal Shende, Stephan Hageboeck (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:173,Safety,recover,recovery,173,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Likelihood and minimization: Recover from regions where the function is not defined.; ##; ## We demonstrate improved recovery from disallowed parameters. For this, we use a polynomial PDF of the form; ## \f[; ## \mathrm{Pol2} = \mathcal{N} \left( c + a_1 \cdot x + a_2 \cdot x^2 + 0.01 \cdot x^3 \right),; ## \f]; ## where \f$ \mathcal{N} \f$ is a normalisation factor. Unless the parameters are chosen carefully,; ## this function can be negative, and hence, it cannot be used as a PDF. In this case, RooFit passes; ## an error to the minimiser, which might try to recover.; ##; ## \macro_code; ## \macro_output; ##; ## \date June 2021; ## \author Harshal Shende, Stephan Hageboeck (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:622,Safety,recover,recover,622,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Likelihood and minimization: Recover from regions where the function is not defined.; ##; ## We demonstrate improved recovery from disallowed parameters. For this, we use a polynomial PDF of the form; ## \f[; ## \mathrm{Pol2} = \mathcal{N} \left( c + a_1 \cdot x + a_2 \cdot x^2 + 0.01 \cdot x^3 \right),; ## \f]; ## where \f$ \mathcal{N} \f$ is a normalisation factor. Unless the parameters are chosen carefully,; ## this function can be negative, and hence, it cannot be used as a PDF. In this case, RooFit passes; ## an error to the minimiser, which might try to recover.; ##; ## \macro_code; ## \macro_output; ##; ## \date June 2021; ## \author Harshal Shende, Stephan Hageboeck (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:80,Availability,error,error,80,"# Plotting a PDF with disallowed parameters doesn't work. We would get a lot of error messages.; # Therefore, we disable plotting messages in RooFit's message streams:",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:86,Integrability,message,messages,86,"# Plotting a PDF with disallowed parameters doesn't work. We would get a lot of error messages.; # Therefore, we disable plotting messages in RooFit's message streams:",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:130,Integrability,message,messages,130,"# Plotting a PDF with disallowed parameters doesn't work. We would get a lot of error messages.; # Therefore, we disable plotting messages in RooFit's message streams:",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:151,Integrability,message,message,151,"# Plotting a PDF with disallowed parameters doesn't work. We would get a lot of error messages.; # Therefore, we disable plotting messages in RooFit's message streams:",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:100,Availability,recover,recover,100,"# RooFit before ROOT 6.24; # --------------------------------; # Before 6.24, RooFit wasn't able to recover from invalid parameters. The minimiser just errs around; # the starting values of the parameters without finding any improvement.; # Set up the parameters such that the PDF would come out negative. The PDF is now undefined.",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:100,Safety,recover,recover,100,"# RooFit before ROOT 6.24; # --------------------------------; # Before 6.24, RooFit wasn't able to recover from invalid parameters. The minimiser just errs around; # the starting values of the parameters without finding any improvement.; # Set up the parameters such that the PDF would come out negative. The PDF is now undefined.",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:2,Performance,Perform,Perform,2,"# Perform a fit:",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:39,Availability,error,errors,39,"# We are expecting a lot of evaluation errors. -1 switches off printing.",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:22,Availability,recover,recovery,22,"# Fit again, but pass recovery information to the minimiser:",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:22,Safety,recover,recovery,22,"# Fit again, but pass recovery information to the minimiser:",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:23,Availability,recover,recovery,23,"# The magnitude of the recovery information can be chosen here.; # Higher values mean more aggressive recovery.",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:102,Availability,recover,recovery,102,"# The magnitude of the recovery information can be chosen here.; # Higher values mean more aggressive recovery.",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:23,Safety,recover,recovery,23,"# The magnitude of the recovery information can be chosen here.; # Higher values mean more aggressive recovery.",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:102,Safety,recover,recovery,102,"# The magnitude of the recovery information can be chosen here.; # Higher values mean more aggressive recovery.",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:42,Availability,error,errors,42,"# We are still expecting a few evaluation errors.",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:157,Availability,recover,recovery,157,"# Collect results and plot.; # --------------------------------; # We print the two fit results, and plot the fitted curves.; # The curve of the fit without recovery cannot be plotted, because the PDF is undefined if a2 < 0.",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py:157,Safety,recover,recovery,157,"# Collect results and plot.; # --------------------------------; # We print the two fit results, and plot the fitted curves.; # The curve of the fit without recovery cannot be plotted, because the PDF is undefined if a2 < 0.",MatchSource.CODE_COMMENT,tutorials/roofit/rf612_recoverFromInvalidParameters.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf612_recoverFromInvalidParameters.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf613_global_observables.py:832,Integrability,depend,depend,832,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## This tutorial explains the concept of global observables in RooFit, and; ## showcases how their values can be stored either in the model or in the; ## dataset.; ##; ## ### Introduction; ##; ## Note: in this tutorial, we are multiplying the likelihood with an additional; ## likelihood to constrain the parameters with auxiliary measurements. This is; ## different from the `rf604_constraints` tutorial, where the likelihood is; ## multiplied with a Bayesian prior to constrain the parameters.; ##; ##; ## With RooFit, you usually optimize some model parameters `p` to maximize the; ## likelihood `L` given the per-event or per-bin observations `x`:; ##; ## \f[ L( x | p ) \f]; ##; ## Often, the parameters are constrained with some prior likelihood `C`, which; ## doesn't depend on the observables `x`:; ##; ## \f[ L'( x | p ) = L( x | p ) * C( p ) \f]; ##; ## Usually, these constraint terms depend on some auxiliary measurements of; ## other observables `g`. The constraint term is then the likelihood of the; ## so-called global observables:; ##; ## \f[ L'( x | p ) = L( x | p ) * C( g | p ) \f]; ##; ## For example, think of a model where the true luminosity `lumi` is a; ## nuisance parameter that is constrained by an auxiliary measurement; ## `lumi_obs` with uncertainty `lumi_obs_sigma`:; ##; ## \f[ L'(data | mu, lumi) = L(data | mu, lumi) * \text{Gauss}(lumi_obs | lumi, lumi_obs_sigma) \f]; ##; ## As a Gaussian is symmetric under exchange of the observable and the mean; ## parameter, you can also sometimes find this equivalent but less conventional; ## formulation for Gaussian constraints:; ##; ## \f[ L'(data | mu, lumi) = L(data | mu, lumi) * \text{Gauss}(lumi | lumi_obs, lumi_obs_sigma) \f]; ##; ## If you wanted to constrain a parameter that represents event counts, you; ## would use a Poissonian constraint, e.g.:; ##; ## \f[ L'(data | mu, count) = L(data | mu, count) * \text{Poisson}(count_obs | count) \f]; ##; ## Un",MatchSource.CODE_COMMENT,tutorials/roofit/rf613_global_observables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf613_global_observables.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf613_global_observables.py:953,Integrability,depend,depend,953,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## This tutorial explains the concept of global observables in RooFit, and; ## showcases how their values can be stored either in the model or in the; ## dataset.; ##; ## ### Introduction; ##; ## Note: in this tutorial, we are multiplying the likelihood with an additional; ## likelihood to constrain the parameters with auxiliary measurements. This is; ## different from the `rf604_constraints` tutorial, where the likelihood is; ## multiplied with a Bayesian prior to constrain the parameters.; ##; ##; ## With RooFit, you usually optimize some model parameters `p` to maximize the; ## likelihood `L` given the per-event or per-bin observations `x`:; ##; ## \f[ L( x | p ) \f]; ##; ## Often, the parameters are constrained with some prior likelihood `C`, which; ## doesn't depend on the observables `x`:; ##; ## \f[ L'( x | p ) = L( x | p ) * C( p ) \f]; ##; ## Usually, these constraint terms depend on some auxiliary measurements of; ## other observables `g`. The constraint term is then the likelihood of the; ## so-called global observables:; ##; ## \f[ L'( x | p ) = L( x | p ) * C( g | p ) \f]; ##; ## For example, think of a model where the true luminosity `lumi` is a; ## nuisance parameter that is constrained by an auxiliary measurement; ## `lumi_obs` with uncertainty `lumi_obs_sigma`:; ##; ## \f[ L'(data | mu, lumi) = L(data | mu, lumi) * \text{Gauss}(lumi_obs | lumi, lumi_obs_sigma) \f]; ##; ## As a Gaussian is symmetric under exchange of the observable and the mean; ## parameter, you can also sometimes find this equivalent but less conventional; ## formulation for Gaussian constraints:; ##; ## \f[ L'(data | mu, lumi) = L(data | mu, lumi) * \text{Gauss}(lumi | lumi_obs, lumi_obs_sigma) \f]; ##; ## If you wanted to constrain a parameter that represents event counts, you; ## would use a Poissonian constraint, e.g.:; ##; ## \f[ L'(data | mu, count) = L(data | mu, count) * \text{Poisson}(count_obs | count) \f]; ##; ## Un",MatchSource.CODE_COMMENT,tutorials/roofit/rf613_global_observables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf613_global_observables.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf613_global_observables.py:590,Performance,optimiz,optimize,590,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## This tutorial explains the concept of global observables in RooFit, and; ## showcases how their values can be stored either in the model or in the; ## dataset.; ##; ## ### Introduction; ##; ## Note: in this tutorial, we are multiplying the likelihood with an additional; ## likelihood to constrain the parameters with auxiliary measurements. This is; ## different from the `rf604_constraints` tutorial, where the likelihood is; ## multiplied with a Bayesian prior to constrain the parameters.; ##; ##; ## With RooFit, you usually optimize some model parameters `p` to maximize the; ## likelihood `L` given the per-event or per-bin observations `x`:; ##; ## \f[ L( x | p ) \f]; ##; ## Often, the parameters are constrained with some prior likelihood `C`, which; ## doesn't depend on the observables `x`:; ##; ## \f[ L'( x | p ) = L( x | p ) * C( p ) \f]; ##; ## Usually, these constraint terms depend on some auxiliary measurements of; ## other observables `g`. The constraint term is then the likelihood of the; ## so-called global observables:; ##; ## \f[ L'( x | p ) = L( x | p ) * C( g | p ) \f]; ##; ## For example, think of a model where the true luminosity `lumi` is a; ## nuisance parameter that is constrained by an auxiliary measurement; ## `lumi_obs` with uncertainty `lumi_obs_sigma`:; ##; ## \f[ L'(data | mu, lumi) = L(data | mu, lumi) * \text{Gauss}(lumi_obs | lumi, lumi_obs_sigma) \f]; ##; ## As a Gaussian is symmetric under exchange of the observable and the mean; ## parameter, you can also sometimes find this equivalent but less conventional; ## formulation for Gaussian constraints:; ##; ## \f[ L'(data | mu, lumi) = L(data | mu, lumi) * \text{Gauss}(lumi | lumi_obs, lumi_obs_sigma) \f]; ##; ## If you wanted to constrain a parameter that represents event counts, you; ## would use a Poissonian constraint, e.g.:; ##; ## \f[ L'(data | mu, count) = L(data | mu, count) * \text{Poisson}(count_obs | count) \f]; ##; ## Un",MatchSource.CODE_COMMENT,tutorials/roofit/rf613_global_observables.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf613_global_observables.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:429,Deployability,integrat,integrating,429,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## A tutorial that explains you how to solve problems with binning effects and; ## numerical stability in binned fits.; ##; ## ### Introduction; ##; ## In this tutorial, you will learn three new things:; ##; ## 1. How to reduce the bias in binned fits by changing the definition of the; ## normalization integral; ##; ## 2. How to completely get rid of binning effects by integrating the pdf over each bin; ##; ## 3. How to improve the numeric stability of fits with a greatly different; ## number of events per bin, using a constant per-bin counterterm; ##; ## \macro_code; ## \macro_output; ##; ## \date January 2023; ## \author Jonas Rembser",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:278,Energy Efficiency,reduce,reduce,278,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## A tutorial that explains you how to solve problems with binning effects and; ## numerical stability in binned fits.; ##; ## ### Introduction; ##; ## In this tutorial, you will learn three new things:; ##; ## 1. How to reduce the bias in binned fits by changing the definition of the; ## normalization integral; ##; ## 2. How to completely get rid of binning effects by integrating the pdf over each bin; ##; ## 3. How to improve the numeric stability of fits with a greatly different; ## number of events per bin, using a constant per-bin counterterm; ##; ## \macro_code; ## \macro_output; ##; ## \date January 2023; ## \author Jonas Rembser",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:429,Integrability,integrat,integrating,429,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## A tutorial that explains you how to solve problems with binning effects and; ## numerical stability in binned fits.; ##; ## ### Introduction; ##; ## In this tutorial, you will learn three new things:; ##; ## 1. How to reduce the bias in binned fits by changing the definition of the; ## normalization integral; ##; ## 2. How to completely get rid of binning effects by integrating the pdf over each bin; ##; ## 3. How to improve the numeric stability of fits with a greatly different; ## number of events per bin, using a constant per-bin counterterm; ##; ## \macro_code; ## \macro_output; ##; ## \date January 2023; ## \author Jonas Rembser",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:236,Usability,learn,learn,236,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## A tutorial that explains you how to solve problems with binning effects and; ## numerical stability in binned fits.; ##; ## ### Introduction; ##; ## In this tutorial, you will learn three new things:; ##; ## 1. How to reduce the bias in binned fits by changing the definition of the; ## normalization integral; ##; ## 2. How to completely get rid of binning effects by integrating the pdf over each bin; ##; ## 3. How to improve the numeric stability of fits with a greatly different; ## number of events per bin, using a constant per-bin counterterm; ##; ## \macro_code; ## \macro_output; ##; ## \date January 2023; ## \author Jonas Rembser",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:42,Deployability,continuous,continuous,42,"""""""; Generate binned Asimov dataset for a continuous pdf.; One should in principle be able to use; pdf.generateBinned(x, n_events, RooFit::ExpectedData()).; Unfortunately it has a problem: it also has the bin bias that this tutorial; demonstrates, to if we would use it, the biases would cancel out.; """"""",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:19,Deployability,integrat,integration,19,"""""""; Force numeric integration and do this numeric integration with the; RooBinIntegrator, which sums the function values at the bin centers.; """"""",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:51,Deployability,integrat,integration,51,"""""""; Force numeric integration and do this numeric integration with the; RooBinIntegrator, which sums the function values at the bin centers.; """"""",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:19,Integrability,integrat,integration,19,"""""""; Force numeric integration and do this numeric integration with the; RooBinIntegrator, which sums the function values at the bin centers.; """"""",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:51,Integrability,integrat,integration,51,"""""""; Force numeric integration and do this numeric integration with the; RooBinIntegrator, which sums the function values at the bin centers.; """"""",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:15,Deployability,integrat,integrator,15,"""""""; Reset the integrator config to disable the RooBinIntegrator.; """"""",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:15,Integrability,integrat,integrator,15,"""""""; Reset the integrator config to disable the RooBinIntegrator.; """"""",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:26,Modifiability,config,config,26,"""""""; Reset the integrator config to disable the RooBinIntegrator.; """"""",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:103,Deployability,continuous,continuous,103,"# If you do the fit the usual was in RooFit, you will get a bias in the; # result. This is because the continuous, normalized pdf is evaluated only; # at the bin centers.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:446,Deployability,integrat,integrated,446,"# In the case of an exponential function, the bias that you get by; # evaluating the pdf only at the bin centers is a constant scale factor in; # each bin. Here, we can do a trick to get rid of the bias: we also; # evaluate the normalization integral for the pdf the same way, i.e.,; # summing the values of the unnormalized pdf at the bin centers. Like this; # the bias cancels out. You can achieve this by customizing the way how the; # pdf is integrated (see also the rf901_numintconfig tutorial).",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:446,Integrability,integrat,integrated,446,"# In the case of an exponential function, the bias that you get by; # evaluating the pdf only at the bin centers is a constant scale factor in; # each bin. Here, we can do a trick to get rid of the bias: we also; # evaluate the normalization integral for the pdf the same way, i.e.,; # summing the values of the unnormalized pdf at the bin centers. Like this; # the bias cancels out. You can achieve this by customizing the way how the; # pdf is integrated (see also the rf901_numintconfig tutorial).",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:2,Energy Efficiency,Power,Power,2,"# Power law example; # -----------------; # Let's not look at another example: a power law \f[x^a\f].",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:81,Energy Efficiency,power,power,81,"# Power law example; # -----------------; # Let's not look at another example: a power law \f[x^a\f].",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:332,Deployability,integrat,integrating,332,"# This time, the bias is not the same factor in each bin! This means our; # trick by sampling the integral in the same way doesn't cancel out the; # bias completely. The average bias is canceled, but there are per-bin; # biases that remain. Still, this method has some value: it is cheaper than; # rigurously correcting the bias by integrating the pdf in each bin. So if; # you know your per-bin bias variations are small or performance is an; # issue, this approach can be sufficient.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:332,Integrability,integrat,integrating,332,"# This time, the bias is not the same factor in each bin! This means our; # trick by sampling the integral in the same way doesn't cancel out the; # bias completely. The average bias is canceled, but there are per-bin; # biases that remain. Still, this method has some value: it is cheaper than; # rigurously correcting the bias by integrating the pdf in each bin. So if; # you know your per-bin bias variations are small or performance is an; # issue, this approach can be sufficient.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:425,Performance,perform,performance,425,"# This time, the bias is not the same factor in each bin! This means our; # trick by sampling the integral in the same way doesn't cancel out the; # bias completely. The average bias is canceled, but there are per-bin; # biases that remain. Still, this method has some value: it is cheaper than; # rigurously correcting the bias by integrating the pdf in each bin. So if; # you know your per-bin bias variations are small or performance is an; # issue, this approach can be sufficient.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:76,Deployability,Integrat,IntegrateBins,76,"# To get rid of the binning effects in the general case, one can use the; # IntegrateBins() command argument. Now, the pdf is not evaluated at the; # bin centers, but numerically integrated over each bin and divided by the; # bin width. The parameter for IntegrateBins() is the required precision; # for the numeric integrals. This is computationally expensive, but the; # bias is now not a problem anymore.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:179,Deployability,integrat,integrated,179,"# To get rid of the binning effects in the general case, one can use the; # IntegrateBins() command argument. Now, the pdf is not evaluated at the; # bin centers, but numerically integrated over each bin and divided by the; # bin width. The parameter for IntegrateBins() is the required precision; # for the numeric integrals. This is computationally expensive, but the; # bias is now not a problem anymore.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:255,Deployability,Integrat,IntegrateBins,255,"# To get rid of the binning effects in the general case, one can use the; # IntegrateBins() command argument. Now, the pdf is not evaluated at the; # bin centers, but numerically integrated over each bin and divided by the; # bin width. The parameter for IntegrateBins() is the required precision; # for the numeric integrals. This is computationally expensive, but the; # bias is now not a problem anymore.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:76,Integrability,Integrat,IntegrateBins,76,"# To get rid of the binning effects in the general case, one can use the; # IntegrateBins() command argument. Now, the pdf is not evaluated at the; # bin centers, but numerically integrated over each bin and divided by the; # bin width. The parameter for IntegrateBins() is the required precision; # for the numeric integrals. This is computationally expensive, but the; # bias is now not a problem anymore.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:179,Integrability,integrat,integrated,179,"# To get rid of the binning effects in the general case, one can use the; # IntegrateBins() command argument. Now, the pdf is not evaluated at the; # bin centers, but numerically integrated over each bin and divided by the; # bin width. The parameter for IntegrateBins() is the required precision; # for the numeric integrals. This is computationally expensive, but the; # bias is now not a problem anymore.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:255,Integrability,Integrat,IntegrateBins,255,"# To get rid of the binning effects in the general case, one can use the; # IntegrateBins() command argument. Now, the pdf is not evaluated at the; # bin centers, but numerically integrated over each bin and divided by the; # bin width. The parameter for IntegrateBins() is the required precision; # for the numeric integrals. This is computationally expensive, but the; # bias is now not a problem anymore.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:452,Safety,predict,predicted,452,"# Improving numerical stability; # -----------------------------; # There is one more problem with binned fits that is related to the binning; # effects because often, a binned fit is affected by both problems.; #; # The issue is numerical stability for fits with a greatly different number; # of events in each bin. For each bin, you have a term \f[n\log(p)\f] in; # the NLL, where \f[n\f] is the number of observations in the bin, and; # \f[p\f] the predicted probability to have an event in that bin. The; # difference in the logarithms for each bin is small, but the difference in; # \f[n\f] can be orders of magnitudes! Therefore, when summing these terms,; # lots of numerical precision is lost for the bins with less events.; # We can study this with the example of an exponential plus a Gaussian. The; # Gaussian is only a faint signal in the tail of the exponential where; # there are not so many events. And we can't afford any precision loss for; # these bins, otherwise we can't fit the Gaussian.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:352,Testability,log,log,352,"# Improving numerical stability; # -----------------------------; # There is one more problem with binned fits that is related to the binning; # effects because often, a binned fit is affected by both problems.; #; # The issue is numerical stability for fits with a greatly different number; # of events in each bin. For each bin, you have a term \f[n\log(p)\f] in; # the NLL, where \f[n\f] is the number of observations in the bin, and; # \f[p\f] the predicted probability to have an event in that bin. The; # difference in the logarithms for each bin is small, but the difference in; # \f[n\f] can be orders of magnitudes! Therefore, when summing these terms,; # lots of numerical precision is lost for the bins with less events.; # We can study this with the example of an exponential plus a Gaussian. The; # Gaussian is only a faint signal in the tail of the exponential where; # there are not so many events. And we can't afford any precision loss for; # these bins, otherwise we can't fit the Gaussian.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:529,Testability,log,logarithms,529,"# Improving numerical stability; # -----------------------------; # There is one more problem with binned fits that is related to the binning; # effects because often, a binned fit is affected by both problems.; #; # The issue is numerical stability for fits with a greatly different number; # of events in each bin. For each bin, you have a term \f[n\log(p)\f] in; # the NLL, where \f[n\f] is the number of observations in the bin, and; # \f[p\f] the predicted probability to have an event in that bin. The; # difference in the logarithms for each bin is small, but the difference in; # \f[n\f] can be orders of magnitudes! Therefore, when summing these terms,; # lots of numerical precision is lost for the bins with less events.; # We can study this with the example of an exponential plus a Gaussian. The; # Gaussian is only a faint signal in the tail of the exponential where; # there are not so many events. And we can't afford any precision loss for; # these bins, otherwise we can't fit the Gaussian.",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py:276,Testability,log,log,276,"# You should see in the previous fit result that the fit did not converge:; # the `MINIMIZE` return code should be -1 (a successful fit has status code zero).; # To improve the situation, we can apply a numeric trick: if we subtract in; # each bin a constant counterterm \f[n\log(n/N)\f], we get terms for each; # bin that are closer to each other in order of magnitude as long as the; # initial model is not extremely off. Proving this mathematically is left; # as an exercise to the reader.; # This counterterms can be enabled by passing the Offset(""bin"") option to; # RooAbsPdf::fitTo() or RooAbsPdf::createNLL().",MatchSource.CODE_COMMENT,tutorials/roofit/rf614_binned_fit_problems.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf614_binned_fit_problems.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:1348,Testability,log,logarithmic,1348,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use Simulation Based Inference (SBI) in RooFit.; ##; ## This tutorial shows how to use SBI in ROOT. As reference distribution we; ## choose a simple uniform distribution. The target distribution is chosen to; ## be gaussian with different mean values.; ## The classifier is trained to discriminate between the reference and target; ## distribution.; ## We see how the neural networks generalize to unknown mean values.; ##; ## We compare the approach of using the likelihood ratio trick to morphing.; ##; ## An introduction of SBI can be found in https://arxiv.org/pdf/2010.06439.; ##; ## A short recap:; ## The idea of SBI is to fit a surrogate model to the data, in order to really; ## learn the likelihood function instead of calculating it. Therefore, a classifier is trained to discriminate between; ## samples from a target distribution (here the Gaussian) $$x\sim p(x|\theta)$$ and a reference distribution (here the Uniform); ## $$x\sim p_{ref}(x|\theta)$$.; ##; ## The output of the classifier $$\hat{s}(\theta)$$ is a monotonic function of the likelihood ration and can be turned into an estimate of the likelihood ratio; ## via $$\hat{r}(\theta)=\frac{1-\hat{s}(\theta)}{\hat{s}(\theta)}.$$; ## This is called the likelihood ratio trick.; ##; ## In the end we compare the negative logarithmic likelihoods of the learned, morphed and analytical likelihood with minuit and as a plot.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:198,Usability,simpl,simple,198,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use Simulation Based Inference (SBI) in RooFit.; ##; ## This tutorial shows how to use SBI in ROOT. As reference distribution we; ## choose a simple uniform distribution. The target distribution is chosen to; ## be gaussian with different mean values.; ## The classifier is trained to discriminate between the reference and target; ## distribution.; ## We see how the neural networks generalize to unknown mean values.; ##; ## We compare the approach of using the likelihood ratio trick to morphing.; ##; ## An introduction of SBI can be found in https://arxiv.org/pdf/2010.06439.; ##; ## A short recap:; ## The idea of SBI is to fit a surrogate model to the data, in order to really; ## learn the likelihood function instead of calculating it. Therefore, a classifier is trained to discriminate between; ## samples from a target distribution (here the Gaussian) $$x\sim p(x|\theta)$$ and a reference distribution (here the Uniform); ## $$x\sim p_{ref}(x|\theta)$$.; ##; ## The output of the classifier $$\hat{s}(\theta)$$ is a monotonic function of the likelihood ration and can be turned into an estimate of the likelihood ratio; ## via $$\hat{r}(\theta)=\frac{1-\hat{s}(\theta)}{\hat{s}(\theta)}.$$; ## This is called the likelihood ratio trick.; ##; ## In the end we compare the negative logarithmic likelihoods of the learned, morphed and analytical likelihood with minuit and as a plot.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:744,Usability,learn,learn,744,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use Simulation Based Inference (SBI) in RooFit.; ##; ## This tutorial shows how to use SBI in ROOT. As reference distribution we; ## choose a simple uniform distribution. The target distribution is chosen to; ## be gaussian with different mean values.; ## The classifier is trained to discriminate between the reference and target; ## distribution.; ## We see how the neural networks generalize to unknown mean values.; ##; ## We compare the approach of using the likelihood ratio trick to morphing.; ##; ## An introduction of SBI can be found in https://arxiv.org/pdf/2010.06439.; ##; ## A short recap:; ## The idea of SBI is to fit a surrogate model to the data, in order to really; ## learn the likelihood function instead of calculating it. Therefore, a classifier is trained to discriminate between; ## samples from a target distribution (here the Gaussian) $$x\sim p(x|\theta)$$ and a reference distribution (here the Uniform); ## $$x\sim p_{ref}(x|\theta)$$.; ##; ## The output of the classifier $$\hat{s}(\theta)$$ is a monotonic function of the likelihood ration and can be turned into an estimate of the likelihood ratio; ## via $$\hat{r}(\theta)=\frac{1-\hat{s}(\theta)}{\hat{s}(\theta)}.$$; ## This is called the likelihood ratio trick.; ##; ## In the end we compare the negative logarithmic likelihoods of the learned, morphed and analytical likelihood with minuit and as a plot.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:1379,Usability,learn,learned,1379,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use Simulation Based Inference (SBI) in RooFit.; ##; ## This tutorial shows how to use SBI in ROOT. As reference distribution we; ## choose a simple uniform distribution. The target distribution is chosen to; ## be gaussian with different mean values.; ## The classifier is trained to discriminate between the reference and target; ## distribution.; ## We see how the neural networks generalize to unknown mean values.; ##; ## We compare the approach of using the likelihood ratio trick to morphing.; ##; ## An introduction of SBI can be found in https://arxiv.org/pdf/2010.06439.; ##; ## A short recap:; ## The idea of SBI is to fit a surrogate model to the data, in order to really; ## learn the likelihood function instead of calculating it. Therefore, a classifier is trained to discriminate between; ## samples from a target distribution (here the Gaussian) $$x\sim p(x|\theta)$$ and a reference distribution (here the Uniform); ## $$x\sim p_{ref}(x|\theta)$$.; ##; ## The output of the classifier $$\hat{s}(\theta)$$ is a monotonic function of the likelihood ration and can be turned into an estimate of the likelihood ratio; ## via $$\hat{r}(\theta)=\frac{1-\hat{s}(\theta)}{\hat{s}(\theta)}.$$; ## This is called the likelihood ratio trick.; ##; ## In the end we compare the negative logarithmic likelihoods of the learned, morphed and analytical likelihood with minuit and as a plot.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:16,Integrability,message,messages,16,"# Kills warning messages",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:14,Usability,learn,learned,14,"# Compute the learned likelihood ratio",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:28,Testability,log,log,28,"# Create the exact negative log likelihood functions for Gaussian model",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:13,Usability,learn,learned,13,"# Create the learned pdf and NLL sum based on the learned likelihood ratio",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:50,Usability,learn,learned,50,"# Create the learned pdf and NLL sum based on the learned likelihood ratio",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:20,Testability,log,logarithmic,20,"# Plot the negative logarithmic summed likelihood",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:13,Availability,error,error,13,"# Adjust the error level in the minimization to work with likelihoods",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py:17,Usability,Clear,ClearProxiedObjects,17,"# Hack to bypass ClearProxiedObjects()",MatchSource.CODE_COMMENT,tutorials/roofit/rf615_simulation_based_inference.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf615_simulation_based_inference.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py:378,Testability,log,log,378,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use Morphing in RooFit.; ##; ## This tutorial shows how to use template morphing inside RooFit. As input we have several; ## Gaussian distributions. The output is one gaussian, with a specific mean value.; ## Since likelihoods are often used within the framework of morphing, we provide a; ## way to estimate the negative log likelihood (nll).; ##; ## Based on example of Kyle Cranmer https://gist.github.com/cranmer/46fff8d22015e5a26619.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date August 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,tutorials/roofit/rf616_morphing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py:16,Integrability,message,messages,16,"# Kills warning messages",MatchSource.CODE_COMMENT,tutorials/roofit/rf616_morphing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py:77,Integrability,message,messages,77,"# Normalizes the morphed object to be a pdf, set it false to prevent warning messages and gain computational speed up",MatchSource.CODE_COMMENT,tutorials/roofit/rf616_morphing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py:28,Testability,log,log,28,"# Create the exact negative log likelihood functions for Gaussian model",MatchSource.CODE_COMMENT,tutorials/roofit/rf616_morphing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py:20,Testability,log,logarithmic,20,"# Plot the negative logarithmic summed likelihood",MatchSource.CODE_COMMENT,tutorials/roofit/rf616_morphing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf616_morphing.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:873,Testability,log,log,873,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use Simulation Based Inference (SBI) in multiple dimensions in RooFit.; ##; ## This tutorial shows how to use SBI in higher dimension in ROOT.; ## This tutorial transfers the simple concepts of the 1D case introduced in; ## rf615_simulation_based_inference.py onto the higher dimensional case.; ##; ## Again as reference distribution we; ## choose a simple uniform distribution. The target distribution is chosen to; ## be Gaussian with different mean values.; ## The classifier is trained to discriminate between the reference and target; ## distribution.; ## We see how the neural networks generalize to unknown mean values.; ##; ## Furthermore, we compare SBI to the approach of moment morphing. In this case,; ## we can conclude, that SBI is way more sample eficcient when it comes to; ## estimating the negative log likelihood ratio.; ##; ## For an introductory background see rf615_simulation_based_inference.py; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:231,Usability,simpl,simple,231,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use Simulation Based Inference (SBI) in multiple dimensions in RooFit.; ##; ## This tutorial shows how to use SBI in higher dimension in ROOT.; ## This tutorial transfers the simple concepts of the 1D case introduced in; ## rf615_simulation_based_inference.py onto the higher dimensional case.; ##; ## Again as reference distribution we; ## choose a simple uniform distribution. The target distribution is chosen to; ## be Gaussian with different mean values.; ## The classifier is trained to discriminate between the reference and target; ## distribution.; ## We see how the neural networks generalize to unknown mean values.; ##; ## Furthermore, we compare SBI to the approach of moment morphing. In this case,; ## we can conclude, that SBI is way more sample eficcient when it comes to; ## estimating the negative log likelihood ratio.; ##; ## For an introductory background see rf615_simulation_based_inference.py; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:406,Usability,simpl,simple,406,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use Simulation Based Inference (SBI) in multiple dimensions in RooFit.; ##; ## This tutorial shows how to use SBI in higher dimension in ROOT.; ## This tutorial transfers the simple concepts of the 1D case introduced in; ## rf615_simulation_based_inference.py onto the higher dimensional case.; ##; ## Again as reference distribution we; ## choose a simple uniform distribution. The target distribution is chosen to; ## be Gaussian with different mean values.; ## The classifier is trained to discriminate between the reference and target; ## distribution.; ## We see how the neural networks generalize to unknown mean values.; ##; ## Furthermore, we compare SBI to the approach of moment morphing. In this case,; ## we can conclude, that SBI is way more sample eficcient when it comes to; ## estimating the negative log likelihood ratio.; ##; ## For an introductory background see rf615_simulation_based_inference.py; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date July 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:16,Integrability,message,messages,16,"# Kills warning messages",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:22,Modifiability,variab,variable,22,"# Set bins for each x variable",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:34,Modifiability,variab,variables,34,"# Build the workspace and extract variables",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:18,Modifiability,variab,variable,18,"# Create combined variable list for ROOT",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:35,Testability,log,logarithmic,35,"# Define the 'analytical' negative logarithmic likelihood ratio",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:13,Usability,learn,learned,13,"# Create the learned pdf and NLL sum based on the learned likelihood ratio",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:50,Usability,learn,learned,50,"# Create the learned pdf and NLL sum based on the learned likelihood ratio",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:11,Usability,learn,learned,11,"# Plot the learned and analytical summed negativelogarithmic likelihood",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py:17,Usability,Clear,ClearProxiedObjects,17,"# Hack to bypass ClearProxiedObjects()",MatchSource.CODE_COMMENT,tutorials/roofit/rf617_simulation_based_inference_multidimensional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf617_simulation_based_inference_multidimensional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py:1465,Integrability,depend,dependence,1465,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use of mixture models in RooFit.; ##; ## This tutorial shows, how to use mixture models for Likelihood Calculation in ROOT. Instead of directly; ## calculating the likelihood we use simulation based inference (SBI) as shown in tutorial 'rf615_simulation_based_inference.py'.; ## We train the classifier to discriminate between samples from an background hypothesis here the zz samples and a target; ## hypothesis, here the higgs samples. The data preparation is based on the tutorial 'df106_HiggsToFourLeptons.py'.; ##; ## An introduction to mixture models can be found here https://arxiv.org/pdf/1506.02169.; ##; ## A short summary:; ## We assume the whole probability distribution can be written as a mixture of several components, i.e.; ## $$p(x|\theta)= \sum_{c}w_{c}(\theta)p_{c}(x|\theta)$$; ## We can write the likelihood ratio in terms of pairwise classification problems; ## \begin{align*}; ## \frac{p(x|\mu)}{p(x|0)}&= \frac{\sum_{c}w_{c}(\mu)p_{c}(x|\mu)}{\sum_{c'}w_{c'}(0)p_{c'}(x|0)}\\; ## &=\sum_{c}\Bigg[\sum_{c'}\frac{w_{c'}(0)}{w_{c}(\mu)}\frac{p_{c'}(x|0)}{p_{c}(x|\mu)}\Bigg]^{-1},; ## \end{align*}; ## where mu is the signal strength, and a value of 0 corresponds to the background hypothesis. Using this decomposition, one is able to use the pairwise likelihood ratios.; ##; ## Since the only free parameter in our case is mu, the distributions are independent of this parameter and the dependence on the signal strength can be encoded into the weights.; ## Thus, the subratios simplify dramatically since they are independent of theta and these ratios can be pre-computed and the classifier does; ## not need to be parametrized.; ##; ## If you wish to see an analysis done with template histograms see 'hf001_example.py'.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date September 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,tutorials/roofit/rf618_mixture_models.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py:1556,Usability,simpl,simplify,1556,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Use of mixture models in RooFit.; ##; ## This tutorial shows, how to use mixture models for Likelihood Calculation in ROOT. Instead of directly; ## calculating the likelihood we use simulation based inference (SBI) as shown in tutorial 'rf615_simulation_based_inference.py'.; ## We train the classifier to discriminate between samples from an background hypothesis here the zz samples and a target; ## hypothesis, here the higgs samples. The data preparation is based on the tutorial 'df106_HiggsToFourLeptons.py'.; ##; ## An introduction to mixture models can be found here https://arxiv.org/pdf/1506.02169.; ##; ## A short summary:; ## We assume the whole probability distribution can be written as a mixture of several components, i.e.; ## $$p(x|\theta)= \sum_{c}w_{c}(\theta)p_{c}(x|\theta)$$; ## We can write the likelihood ratio in terms of pairwise classification problems; ## \begin{align*}; ## \frac{p(x|\mu)}{p(x|0)}&= \frac{\sum_{c}w_{c}(\mu)p_{c}(x|\mu)}{\sum_{c'}w_{c'}(0)p_{c'}(x|0)}\\; ## &=\sum_{c}\Bigg[\sum_{c'}\frac{w_{c'}(0)}{w_{c}(\mu)}\frac{p_{c'}(x|0)}{p_{c}(x|\mu)}\Bigg]^{-1},; ## \end{align*}; ## where mu is the signal strength, and a value of 0 corresponds to the background hypothesis. Using this decomposition, one is able to use the pairwise likelihood ratios.; ##; ## Since the only free parameter in our case is mu, the distributions are independent of this parameter and the dependence on the signal strength can be encoded into the weights.; ## Thus, the subratios simplify dramatically since they are independent of theta and these ratios can be pre-computed and the classifier does; ## not need to be parametrized.; ##; ## If you wish to see an analysis done with template histograms see 'hf001_example.py'.; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date September 2024; ## \author Robin Syring",MatchSource.CODE_COMMENT,tutorials/roofit/rf618_mixture_models.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py:40,Safety,avoid,avoid,40,"# Extract the relevant columns once and avoid repeated calls",MatchSource.CODE_COMMENT,tutorials/roofit/rf618_mixture_models.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py:34,Usability,learn,learned,34,"# Define functions to compute the learned likelihood.",MatchSource.CODE_COMMENT,tutorials/roofit/rf618_mixture_models.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py:13,Availability,error,error,13,"# Adjust the error level in the minimization to work with likelihoods",MatchSource.CODE_COMMENT,tutorials/roofit/rf618_mixture_models.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py:17,Usability,Clear,ClearProxiedObjects,17,"# Hack to bypass ClearProxiedObjects()",MatchSource.CODE_COMMENT,tutorials/roofit/rf618_mixture_models.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf618_mixture_models.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf701_efficiencyfit.py:119,Modifiability,variab,variables,119,"# Construct efficiency function e(x); # -------------------------------------------------------------------; # Declare variables x,mean, with associated name, title, value and allowed; # range",MatchSource.CODE_COMMENT,tutorials/roofit/rf701_efficiencyfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf701_efficiencyfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf702_efficiencyfit_2D.py:125,Modifiability,variab,variables,125,"# Construct efficiency function e(x,y); # -----------------------------------------------------------------------; # Declare variables x,mean, with associated name, title, value and allowed; # range",MatchSource.CODE_COMMENT,tutorials/roofit/rf702_efficiencyfit_2D.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf702_efficiencyfit_2D.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf703_effpdfprod.py:91,Availability,error,error,91,"# Define efficiency function; # ---------------------------------------------------; # Use error function to simulate turn-on slope",MatchSource.CODE_COMMENT,tutorials/roofit/rf703_effpdfprod.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf703_effpdfprod.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py:102,Modifiability,variab,variable,102,"# Create interpolating pdf; # -----------------------------------------------; # Create interpolation variable",MatchSource.CODE_COMMENT,tutorials/roofit/rf705_linearmorph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py:59,Modifiability,variab,variable,59,"# Specify sampling density on observable and interpolation variable",MatchSource.CODE_COMMENT,tutorials/roofit/rf705_linearmorph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py:8,Testability,log,log,8,"# Scan -log(L) vs alpha; # -----------------------------------------; # Show scan -log(L) of dataset w.r.t alpha",MatchSource.CODE_COMMENT,tutorials/roofit/rf705_linearmorph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py:83,Testability,log,log,83,"# Scan -log(L) vs alpha; # -----------------------------------------; # Show scan -log(L) of dataset w.r.t alpha",MatchSource.CODE_COMMENT,tutorials/roofit/rf705_linearmorph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf705_linearmorph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:151,Deployability,configurat,configuration,151,"# Create 1D kernel estimation pdf; # ---------------------------------------------------------------; # Create adaptive kernel estimation pdf. In self configuration the input data; # is mirrored over the boundaries to minimize edge effects in distribution; # that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:111,Energy Efficiency,adapt,adaptive,111,"# Create 1D kernel estimation pdf; # ---------------------------------------------------------------; # Create adaptive kernel estimation pdf. In self configuration the input data; # is mirrored over the boundaries to minimize edge effects in distribution; # that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:111,Modifiability,adapt,adaptive,111,"# Create 1D kernel estimation pdf; # ---------------------------------------------------------------; # Create adaptive kernel estimation pdf. In self configuration the input data; # is mirrored over the boundaries to minimize edge effects in distribution; # that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:151,Modifiability,config,configuration,151,"# Create 1D kernel estimation pdf; # ---------------------------------------------------------------; # Create adaptive kernel estimation pdf. In self configuration the input data; # is mirrored over the boundaries to minimize edge effects in distribution; # that do not fall to zero towards the edges",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:5,Energy Efficiency,adapt,adaptive,5,"# An adaptive kernel estimation pdf on the same data without mirroring option; # for comparison",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:5,Modifiability,adapt,adaptive,5,"# An adaptive kernel estimation pdf on the same data without mirroring option; # for comparison",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:2,Energy Efficiency,Adapt,Adaptive,2,"# Adaptive kernel estimation pdf with increased bandwidth scale factor; # (promotes smoothness over detail preservation)",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:2,Modifiability,Adapt,Adaptive,2,"# Adaptive kernel estimation pdf with increased bandwidth scale factor; # (promotes smoothness over detail preservation)",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:114,Energy Efficiency,adapt,adaptive,114,"# Create 2D kernel estimation pdf; # ---------------------------------------------------------------; # Create 2D adaptive kernel estimation pdf with mirroring",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:114,Modifiability,adapt,adaptive,114,"# Create 2D kernel estimation pdf; # ---------------------------------------------------------------; # Create 2D adaptive kernel estimation pdf with mirroring",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:12,Energy Efficiency,adapt,adaptive,12,"# Create 2D adaptive kernel estimation pdf with mirroring and double; # bandwidth",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py:12,Modifiability,adapt,adaptive,12,"# Create 2D adaptive kernel estimation pdf with mirroring and double; # bandwidth",MatchSource.CODE_COMMENT,tutorials/roofit/rf707_kernelestimation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf707_kernelestimation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py:41,Modifiability,parameteriz,parameterized,41,"# Case 1 - 'Barlow Beeston'; # Construct parameterized histogram shapes for signal and background",MatchSource.CODE_COMMENT,tutorials/roofit/rf709_BarlowBeeston.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py:408,Availability,down,down,408,"# Case 2 - 'Barlow Beeston' light (one parameter per bin for all samples); # Construct the histogram shapes, using the same parameters for signal and background; # This requires passing the first histogram to the second, so that their common parameters; # can be re-used.; # The first ParamHistFunc will create one parameter per bin, such as `p_ph_sig2_gamma_bin_0`.; # This allows bin 0 to fluctuate up and down.; # Then, the SAME parameters are connected to the background histogram, so the bins fluctuate; # synchronously. This reduces the number of parameters.",MatchSource.CODE_COMMENT,tutorials/roofit/rf709_BarlowBeeston.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py:531,Energy Efficiency,reduce,reduces,531,"# Case 2 - 'Barlow Beeston' light (one parameter per bin for all samples); # Construct the histogram shapes, using the same parameters for signal and background; # This requires passing the first histogram to the second, so that their common parameters; # can be re-used.; # The first ParamHistFunc will create one parameter per bin, such as `p_ph_sig2_gamma_bin_0`.; # This allows bin 0 to fluctuate up and down.; # Then, the SAME parameters are connected to the background histogram, so the bins fluctuate; # synchronously. This reduces the number of parameters.",MatchSource.CODE_COMMENT,tutorials/roofit/rf709_BarlowBeeston.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py:46,Availability,error,error,46,"# Plot data again to show it on top of model0 error bands:",MatchSource.CODE_COMMENT,tutorials/roofit/rf709_BarlowBeeston.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py:39,Availability,error,error,39,"# Plot data again to show it on top of error bands:",MatchSource.CODE_COMMENT,tutorials/roofit/rf709_BarlowBeeston.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py:46,Availability,error,error,46,"# Plot data again to show it on top of model0 error bands:",MatchSource.CODE_COMMENT,tutorials/roofit/rf709_BarlowBeeston.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf709_BarlowBeeston.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py:12,Modifiability,coupling,couplings,12,"# Setup two couplings that enters the morphing function; # kSM -> SM coupling set to constant (1); # cHq3 -> EFT parameter with NewPhysics attribute set to true",MatchSource.CODE_COMMENT,tutorials/roofit/rf711_lagrangianmorph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py:69,Modifiability,coupling,coupling,69,"# Setup two couplings that enters the morphing function; # kSM -> SM coupling set to constant (1); # cHq3 -> EFT parameter with NewPhysics attribute set to true",MatchSource.CODE_COMMENT,tutorials/roofit/rf711_lagrangianmorph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py:18,Modifiability,config,config,18,"# Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",MatchSource.CODE_COMMENT,tutorials/roofit/rf711_lagrangianmorph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py:6,Modifiability,Config,Config,6,"# Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",MatchSource.CODE_COMMENT,tutorials/roofit/rf711_lagrangianmorph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py:9,Integrability,wrap,wrapped,9,"# Create wrapped pdf to generate 2D dataset of cHq3 as a function of pTV; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",MatchSource.CODE_COMMENT,tutorials/roofit/rf711_lagrangianmorph.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf711_lagrangianmorph.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py:60,Performance,Perform,Performing,60,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## Performing a simple fit with RooLagrangianMorphFunc; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date January 2022; ## \author Rahul Balasubramanian",MatchSource.CODE_COMMENT,tutorials/roofit/rf712_lagrangianmorphfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py:73,Usability,simpl,simple,73,"## \file; ## \ingroup tutorial_roofit; ## \notebook -js; ## Performing a simple fit with RooLagrangianMorphFunc; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date January 2022; ## \author Rahul Balasubramanian",MatchSource.CODE_COMMENT,tutorials/roofit/rf712_lagrangianmorphfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py:18,Modifiability,config,config,18,"# Inputs to setup config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",MatchSource.CODE_COMMENT,tutorials/roofit/rf712_lagrangianmorphfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py:6,Modifiability,Config,Config,6,"# Set Config; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -",MatchSource.CODE_COMMENT,tutorials/roofit/rf712_lagrangianmorphfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py:6,Availability,error,error,6,"# set error to set initial step size in fit",MatchSource.CODE_COMMENT,tutorials/roofit/rf712_lagrangianmorphfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py:2,Integrability,Wrap,Wrap,2,"# Wrap pdf on morphfunc and fit to data histogram; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # wrapper pdf to normalise morphing function to a morphing pdf",MatchSource.CODE_COMMENT,tutorials/roofit/rf712_lagrangianmorphfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py:148,Integrability,wrap,wrapper,148,"# Wrap pdf on morphfunc and fit to data histogram; # -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -; # wrapper pdf to normalise morphing function to a morphing pdf",MatchSource.CODE_COMMENT,tutorials/roofit/rf712_lagrangianmorphfit.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf712_lagrangianmorphfit.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:110,Performance,perform,perform,110,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Validation and MC studies: toy Monte Carlo study that perform cycles of event generation and fitting; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:56,Security,Validat,Validation,56,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Validation and MC studies: toy Monte Carlo study that perform cycles of event generation and fitting; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:271,Availability,error,error,271,"# Create manager; # ---------------------------; # Instantiate ROOT.RooMCStudy manager on model with x as observable and given choice of fit options; #; # The Silence() option kills all messages below the PROGRESS level, only a single message; # per sample executed, any error message that occur during fitting; #; # The Extended() option has two effects:; # 1) The extended ML term is included in the likelihood and; # 2) A poisson fluctuation is introduced on the number of generated events; #; # The FitOptions() given here are passed to the fitting stage of each toy experiment.; # If Save() is specified, fit result of each experiment is saved by the manager; #; # A Binned() option is added in self example to bin the data between generation and fitting; # to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:186,Integrability,message,messages,186,"# Create manager; # ---------------------------; # Instantiate ROOT.RooMCStudy manager on model with x as observable and given choice of fit options; #; # The Silence() option kills all messages below the PROGRESS level, only a single message; # per sample executed, any error message that occur during fitting; #; # The Extended() option has two effects:; # 1) The extended ML term is included in the likelihood and; # 2) A poisson fluctuation is introduced on the number of generated events; #; # The FitOptions() given here are passed to the fitting stage of each toy experiment.; # If Save() is specified, fit result of each experiment is saved by the manager; #; # A Binned() option is added in self example to bin the data between generation and fitting; # to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:235,Integrability,message,message,235,"# Create manager; # ---------------------------; # Instantiate ROOT.RooMCStudy manager on model with x as observable and given choice of fit options; #; # The Silence() option kills all messages below the PROGRESS level, only a single message; # per sample executed, any error message that occur during fitting; #; # The Extended() option has two effects:; # 1) The extended ML term is included in the likelihood and; # 2) A poisson fluctuation is introduced on the number of generated events; #; # The FitOptions() given here are passed to the fitting stage of each toy experiment.; # If Save() is specified, fit result of each experiment is saved by the manager; #; # A Binned() option is added in self example to bin the data between generation and fitting; # to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:277,Integrability,message,message,277,"# Create manager; # ---------------------------; # Instantiate ROOT.RooMCStudy manager on model with x as observable and given choice of fit options; #; # The Silence() option kills all messages below the PROGRESS level, only a single message; # per sample executed, any error message that occur during fitting; #; # The Extended() option has two effects:; # 1) The extended ML term is included in the likelihood and; # 2) A poisson fluctuation is introduced on the number of generated events; #; # The FitOptions() given here are passed to the fitting stage of each toy experiment.; # If Save() is specified, fit result of each experiment is saved by the manager; #; # A Binned() option is added in self example to bin the data between generation and fitting; # to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:321,Modifiability,Extend,Extended,321,"# Create manager; # ---------------------------; # Instantiate ROOT.RooMCStudy manager on model with x as observable and given choice of fit options; #; # The Silence() option kills all messages below the PROGRESS level, only a single message; # per sample executed, any error message that occur during fitting; #; # The Extended() option has two effects:; # 1) The extended ML term is included in the likelihood and; # 2) A poisson fluctuation is introduced on the number of generated events; #; # The FitOptions() given here are passed to the fitting stage of each toy experiment.; # If Save() is specified, fit result of each experiment is saved by the manager; #; # A Binned() option is added in self example to bin the data between generation and fitting; # to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:366,Modifiability,extend,extended,366,"# Create manager; # ---------------------------; # Instantiate ROOT.RooMCStudy manager on model with x as observable and given choice of fit options; #; # The Silence() option kills all messages below the PROGRESS level, only a single message; # per sample executed, any error message that occur during fitting; #; # The Extended() option has two effects:; # 1) The extended ML term is included in the likelihood and; # 2) A poisson fluctuation is introduced on the number of generated events; #; # The FitOptions() given here are passed to the fitting stage of each toy experiment.; # If Save() is specified, fit result of each experiment is saved by the manager; #; # A Binned() option is added in self example to bin the data between generation and fitting; # to speed up the study at the expemse of some precision",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:123,Availability,error,error,123,"# Explore results of study; # ------------------------------------------------; # Make plots of the distributions of mean, error on mean and the pull of; # mean",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:2,Security,Access,Access,2,"# Access some of the saved fit results from individual toys",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py:30,Availability,avail,available,30,"# Make ROOT.RooMCStudy object available on command line after; # macro finishes",MatchSource.CODE_COMMENT,tutorials/roofit/rf801_mcstudy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf801_mcstudy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py:51,Security,VALIDAT,VALIDATION,51,"## \ingroup tutorial_roofit; ## \notebook; ##; ## 'VALIDATION AND MC STUDIES' RooFit tutorial macro #802; ##; ## RooMCStudy: using separate fit and generator models, the chi^2 calculator model; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \author Clemens Lange",MatchSource.CODE_COMMENT,tutorials/roofit/rf802_mcstudy_addons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py:73,Deployability,configurat,configuration,73,"# Create study manager with separate generation and fit model. ROOT.This configuration; # is set up to generate bad fits as the fit and generator model have different means; # and the mean parameter is not floating in the fit",MatchSource.CODE_COMMENT,tutorials/roofit/rf802_mcstudy_addons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py:73,Modifiability,config,configuration,73,"# Create study manager with separate generation and fit model. ROOT.This configuration; # is set up to generate bad fits as the fit and generator model have different means; # and the mean parameter is not floating in the fit",MatchSource.CODE_COMMENT,tutorials/roofit/rf802_mcstudy_addons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py:365,Safety,risk,risky,365,"# Request a the pull plot of mean. The pulls will be one-sided because; # `mean` is limited to 1.8.; # Note that RooFit will have trouble to compute the pulls because the parameters; # are called `mean` in the fit, but `mean2` in the generator model. It is not obvious; # that these are related. RooFit will nevertheless compute pulls, but complain that; # this is risky.",MatchSource.CODE_COMMENT,tutorials/roofit/rf802_mcstudy_addons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py:25,Availability,avail,available,25,"# Make RooMCStudy object available on command line after; # macro finishes",MatchSource.CODE_COMMENT,tutorials/roofit/rf802_mcstudy_addons.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf802_mcstudy_addons.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:51,Security,VALIDAT,VALIDATION,51,"## \ingroup tutorial_roofit; ## \notebook; ##; ## 'VALIDATION AND MC STUDIES' RooFit tutorial macro #803; ##; ## RooMCStudy: Using the randomizer and profile likelihood add-on models; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \author Clemens Lange",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:51,Modifiability,Config,Configure,51,"# Create manager; # ---------------------------; # Configure manager to perform binned extended likelihood fits (Binned=True, Extended=True) on data generated; # with a Poisson fluctuation on Nobs (Extended=True)",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:87,Modifiability,extend,extended,87,"# Create manager; # ---------------------------; # Configure manager to perform binned extended likelihood fits (Binned=True, Extended=True) on data generated; # with a Poisson fluctuation on Nobs (Extended=True)",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:126,Modifiability,Extend,Extended,126,"# Create manager; # ---------------------------; # Configure manager to perform binned extended likelihood fits (Binned=True, Extended=True) on data generated; # with a Poisson fluctuation on Nobs (Extended=True)",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:198,Modifiability,Extend,Extended,198,"# Create manager; # ---------------------------; # Configure manager to perform binned extended likelihood fits (Binned=True, Extended=True) on data generated; # with a Poisson fluctuation on Nobs (Extended=True)",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:72,Performance,perform,perform,72,"# Create manager; # ---------------------------; # Configure manager to perform binned extended likelihood fits (Binned=True, Extended=True) on data generated; # with a Poisson fluctuation on Nobs (Extended=True)",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:151,Testability,log,log,151,"# Add profile likelihood calculation of significance. Redo each; # fit while keeping parameter nsig fixed to zero. For each toy,; # the difference in -log(L) of both fits is stored, well; # a simple significance interpretation of the delta(-logL); # Dnll = 0.5 sigma^2",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:241,Testability,log,logL,241,"# Add profile likelihood calculation of significance. Redo each; # fit while keeping parameter nsig fixed to zero. For each toy,; # the difference in -log(L) of both fits is stored, well; # a simple significance interpretation of the delta(-logL); # Dnll = 0.5 sigma^2",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:192,Usability,simpl,simple,192,"# Add profile likelihood calculation of significance. Redo each; # fit while keeping parameter nsig fixed to zero. For each toy,; # the difference in -log(L) of both fits is stored, well; # a simple significance interpretation of the delta(-logL); # Dnll = 0.5 sigma^2",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:110,Deployability,configurat,configuration,110,"# Run manager, make plots; # ---------------------------------------------; # Run 1000 experiments. ROOT.This configuration will generate a fair number; # of (harmless) MINUIT warnings due to the instability of the Chebychev polynomial fit; # at low statistics.",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:110,Modifiability,config,configuration,110,"# Run manager, make plots; # ---------------------------------------------; # Run 1000 experiments. ROOT.This configuration will generate a fair number; # of (harmless) MINUIT warnings due to the instability of the Chebychev polynomial fit; # at low statistics.",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py:30,Availability,avail,available,30,"# Make ROOT.RooMCStudy object available on command line after; # macro finishes",MatchSource.CODE_COMMENT,tutorials/roofit/rf803_mcstudy_addons2.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf803_mcstudy_addons2.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf804_mcstudy_constr.py:51,Security,VALIDAT,VALIDATION,51,"## \ingroup tutorial_roofit; ## \notebook; ##; ## 'VALIDATION AND MC STUDIES' RooFit tutorial macro #804; ##; ## Using RooMCStudy on models with constraints; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \author Clemens Lange",MatchSource.CODE_COMMENT,tutorials/roofit/rf804_mcstudy_constr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf804_mcstudy_constr.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf804_mcstudy_constr.py:87,Performance,Perform,Perform,87,"# Setup toy study with model; # ---------------------------------------------------; # Perform toy study with internal constraint on f",MatchSource.CODE_COMMENT,tutorials/roofit/rf804_mcstudy_constr.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf804_mcstudy_constr.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:90,Deployability,configurat,configuration,90,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Numeric algorithm tuning: configuration and customization of how numeric (partial) integrals are executed; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:90,Modifiability,config,configuration,90,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Numeric algorithm tuning: configuration and customization of how numeric (partial) integrals are executed; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:19,Deployability,integrat,integration,19,"# Adjust global 1D integration precision; # ----------------------------------------------------------------------------; # Print current global default configuration for numeric integration; # strategies",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:153,Deployability,configurat,configuration,153,"# Adjust global 1D integration precision; # ----------------------------------------------------------------------------; # Print current global default configuration for numeric integration; # strategies",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:179,Deployability,integrat,integration,179,"# Adjust global 1D integration precision; # ----------------------------------------------------------------------------; # Print current global default configuration for numeric integration; # strategies",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:19,Integrability,integrat,integration,19,"# Adjust global 1D integration precision; # ----------------------------------------------------------------------------; # Print current global default configuration for numeric integration; # strategies",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:179,Integrability,integrat,integration,179,"# Adjust global 1D integration precision; # ----------------------------------------------------------------------------; # Print current global default configuration for numeric integration; # strategies",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:153,Modifiability,config,configuration,153,"# Adjust global 1D integration precision; # ----------------------------------------------------------------------------; # Print current global default configuration for numeric integration; # strategies",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:382,Deployability,integrat,integrate,382,"# Example: Change global precision for 1D integrals from 1e-7 to 1e-6; #; # The relative epsilon (change as fraction of current best integral estimate) and; # absolute epsilon (absolute change w.r.t last best integral estimate) can be specified; # separately. For most pdf integrals the relative change criterium is the most important,; # however for certain non-pdf functions that integrate out to zero a separate absolute; # change criterium is necessary to declare convergence of the integral; #; # NB: ROOT.This change is for illustration only. In general the precision should be at least 1e-7; # for normalization integrals for MINUIT to succeed.; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:382,Integrability,integrat,integrate,382,"# Example: Change global precision for 1D integrals from 1e-7 to 1e-6; #; # The relative epsilon (change as fraction of current best integral estimate) and; # absolute epsilon (absolute change w.r.t last best integral estimate) can be specified; # separately. For most pdf integrals the relative change criterium is the most important,; # however for certain non-pdf functions that integrate out to zero a separate absolute; # change criterium is necessary to declare convergence of the integral; #; # NB: ROOT.This change is for illustration only. In general the precision should be at least 1e-7; # for normalization integrals for MINUIT to succeed.; #",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:19,Deployability,integrat,integration,19,"# Disable analytic integration from demonstration purposes",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:19,Integrability,integrat,integration,19,"# Disable analytic integration from demonstration purposes",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:42,Deployability,integrat,integration,42,"# Activate debug-level messages for topic integration to be able to follow; # actions below",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:23,Integrability,message,messages,23,"# Activate debug-level messages for topic integration to be able to follow; # actions below",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:42,Integrability,integrat,integration,42,"# Activate debug-level messages for topic integration to be able to follow; # actions below",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:64,Deployability,integrat,integrator,64,"# Calculate integral over landau with default choice of numeric integrator",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:64,Integrability,integrat,integrator,64,"# Calculate integral over landau with default choice of numeric integrator",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:39,Deployability,configurat,configuration,39,"# setprecision(15); # Same with custom configuration; # -----------------------------------------------------------; # Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; # for closed 1D integrals",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:138,Deployability,configurat,configuration,138,"# setprecision(15); # Same with custom configuration; # -----------------------------------------------------------; # Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; # for closed 1D integrals",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:167,Energy Efficiency,adapt,adaptive,167,"# setprecision(15); # Same with custom configuration; # -----------------------------------------------------------; # Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; # for closed 1D integrals",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:39,Modifiability,config,configuration,39,"# setprecision(15); # Same with custom configuration; # -----------------------------------------------------------; # Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; # for closed 1D integrals",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:138,Modifiability,config,configuration,138,"# setprecision(15); # Same with custom configuration; # -----------------------------------------------------------; # Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; # for closed 1D integrals",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:167,Modifiability,adapt,adaptive,167,"# setprecision(15); # Same with custom configuration; # -----------------------------------------------------------; # Construct a custom configuration which uses the adaptive Gauss-Kronrod technique; # for closed 1D integrals",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:184,Deployability,integrat,integration,184,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom numeric integration configuration; # as default for object 'landau'",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:196,Deployability,configurat,configuration,196,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom numeric integration configuration; # as default for object 'landau'",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:184,Integrability,integrat,integration,184,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom numeric integration configuration; # as default for object 'landau'",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:20,Modifiability,config,config,20,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom numeric integration configuration; # as default for object 'landau'",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:196,Modifiability,config,configuration,196,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom numeric integration configuration; # as default for object 'landau'",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:48,Deployability,integrat,integrator,48,"# Calculate integral over landau custom numeric integrator specified as; # object default",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:48,Integrability,integrat,integrator,48,"# Calculate integral over landau custom numeric integrator specified as; # object default",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:60,Deployability,integrat,integration,60,"# Another possibility: Change global default for 1D numeric integration; # strategy on finite domains",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:60,Integrability,integrat,integration,60,"# Another possibility: Change global default for 1D numeric integration; # strategy on finite domains",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:221,Deployability,configurat,configuration,221,"# Adjusting parameters of a specific technique; # ---------------------------------------------------------------------------------------; # Adjust maximum number of steps of ROOT.RooIntegrator1D in the global; # default configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:221,Modifiability,config,configuration,221,"# Adjusting parameters of a specific technique; # ---------------------------------------------------------------------------------------; # Adjust maximum number of steps of ROOT.RooIntegrator1D in the global; # default configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:55,Deployability,integrat,integrator,55,"# Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options)",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:55,Integrability,integrat,integrator,55,"# Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options)",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py:75,Modifiability,config,config,75,"# Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options)",MatchSource.CODE_COMMENT,tutorials/roofit/rf901_numintconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf901_numintconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:90,Deployability,configurat,configuration,90,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Numeric algorithm tuning: configuration and customization of how MC sampling algorithms; ## on specific pdfs are executed; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:90,Modifiability,config,configuration,90,"## \file; ## \ingroup tutorial_roofit; ## \notebook -nodraw; ## Numeric algorithm tuning: configuration and customization of how MC sampling algorithms; ## on specific pdfs are executed; ##; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:224,Energy Efficiency,adapt,adaptive,224,"# Change global strategy for 1D sampling problems without conditional observable; # (1st kFALSE) and without discrete observable (2nd kFALSE) from ROOT.RooFoamGenerator,; # ( an interface to the ROOT.TFoam MC generator with adaptive subdivisioning strategy ) to ROOT.RooAcceptReject,; # a plain accept/reject sampling algorithm [ ROOT.RooFit default before; # ROOT 5.23/04 ]",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:178,Integrability,interface,interface,178,"# Change global strategy for 1D sampling problems without conditional observable; # (1st kFALSE) and without discrete observable (2nd kFALSE) from ROOT.RooFoamGenerator,; # ( an interface to the ROOT.TFoam MC generator with adaptive subdivisioning strategy ) to ROOT.RooAcceptReject,; # a plain accept/reject sampling algorithm [ ROOT.RooFit default before; # ROOT 5.23/04 ]",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:224,Modifiability,adapt,adaptive,224,"# Change global strategy for 1D sampling problems without conditional observable; # (1st kFALSE) and without discrete observable (2nd kFALSE) from ROOT.RooFoamGenerator,; # ( an interface to the ROOT.TFoam MC generator with adaptive subdivisioning strategy ) to ROOT.RooAcceptReject,; # a plain accept/reject sampling algorithm [ ROOT.RooFit default before; # ROOT 5.23/04 ]",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:188,Deployability,configurat,configuration,188,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:259,Deployability,install,install,259,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:290,Deployability,configurat,configuration,290,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:319,Deployability,configurat,configuration,319,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:20,Modifiability,config,config,20,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:188,Modifiability,config,configuration,188,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:290,Modifiability,config,configuration,290,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:319,Modifiability,config,configuration,319,"# Adjusting default config for a specific pdf; # -------------------------------------------------------------------------------------; # Another possibility: associate custom MC sampling configuration as default for object 'model'; # The kTRUE argument will install a clone of the default configuration as specialized configuration; # for self model if none existed so far",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:221,Deployability,configurat,configuration,221,"# Adjusting parameters of a specific technique; # ---------------------------------------------------------------------------------------; # Adjust maximum number of steps of ROOT.RooIntegrator1D in the global; # default configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:221,Modifiability,config,configuration,221,"# Adjusting parameters of a specific technique; # ---------------------------------------------------------------------------------------; # Adjust maximum number of steps of ROOT.RooIntegrator1D in the global; # default configuration",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:55,Deployability,integrat,integrator,55,"# Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options)",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:55,Integrability,integrat,integrator,55,"# Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options)",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py:75,Modifiability,config,config,75,"# Example of how to change the parameters of a numeric integrator; # (Each config section is a ROOT.RooArgSet with ROOT.RooRealVars holding real-valued parameters; # and ROOT.RooCategories holding parameters with a finite set of options)",MatchSource.CODE_COMMENT,tutorials/roofit/rf902_numgenconfig.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf902_numgenconfig.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:120,Modifiability,parameteriz,parameterizations,120,"## \file; ## \ingroup tutorial_roofit; ## \notebook; ## Numeric algorithm tuning: caching of slow numeric integrals and parameterizations of slow numeric integrals; ##; ## \macro_image; ## \macro_code; ## \macro_output; ##; ## \date February 2018; ## \authors Clemens Lange, Wouter Verkerke (C++ version)",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:18,Performance,load,load,18,"# Create, save or load workspace with pdf; # -----------------------------------------------------------------------------------; #; # Mode = 0 : Create workspace for plain running (no integral caching); # Mode = 1 : Generate workspace with precalculated integral and store it on file; # Mode = 2 : Load previously stored workspace from file",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:299,Performance,Load,Load,299,"# Create, save or load workspace with pdf; # -----------------------------------------------------------------------------------; #; # Mode = 0 : Create workspace for plain running (no integral caching); # Mode = 1 : Generate workspace with precalculated integral and store it on file; # Mode = 2 : Load previously stored workspace from file",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:63,Deployability,integrat,integrated,63,"# Make a difficult to normalize pdf in 3 dimensions that is; # integrated numerically.",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:63,Integrability,integrat,integrated,63,"# Make a difficult to normalize pdf in 3 dimensions that is; # integrated numerically.",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:217,Availability,avail,available,217,"# Instruct model to precalculate normalization integral that integrate at least; # two dimensions numerically. In self specific case the integral value for; # all values of parameter 'a' are stored in a histogram and available for use; # in subsequent fitting and plotting operations (interpolation is; # applied); # w.pdf(""model"").setNormValueCaching(3)",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:61,Deployability,integrat,integrate,61,"# Instruct model to precalculate normalization integral that integrate at least; # two dimensions numerically. In self specific case the integral value for; # all values of parameter 'a' are stored in a histogram and available for use; # in subsequent fitting and plotting operations (interpolation is; # applied); # w.pdf(""model"").setNormValueCaching(3)",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:61,Integrability,integrat,integrate,61,"# Instruct model to precalculate normalization integral that integrate at least; # two dimensions numerically. In self specific case the integral value for; # all values of parameter 'a' are stored in a histogram and available for use; # in subsequent fitting and plotting operations (interpolation is; # applied); # w.pdf(""model"").setNormValueCaching(3)",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:42,Performance,cache,cache,42,"# Evaluate pdf once to trigger filling of cache",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:2,Performance,Load,Load,2,"# Load preexisting workspace from file in mode==2",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:20,Performance,load,loaded,20,"# Return created or loaded workspace",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:215,Performance,cache,cached,215,"# Mode = 0 : Run plain fit (slow); # Mode = 1 : Generate workspace with precalculated integral and store it on file (prepare for accelerated running); # Mode = 2 : Run fit from previously stored workspace including cached; # integrals (fast, run in mode=1 first); # Create, save or load workspace with pdf; # -----------------------------------------------------------------------------------; # Make/load workspace, here in mode 1",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:282,Performance,load,load,282,"# Mode = 0 : Run plain fit (slow); # Mode = 1 : Generate workspace with precalculated integral and store it on file (prepare for accelerated running); # Mode = 2 : Run fit from previously stored workspace including cached; # integrals (fast, run in mode=1 first); # Create, save or load workspace with pdf; # -----------------------------------------------------------------------------------; # Make/load workspace, here in mode 1",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:401,Performance,load,load,401,"# Mode = 0 : Run plain fit (slow); # Mode = 1 : Generate workspace with precalculated integral and store it on file (prepare for accelerated running); # Mode = 2 : Run fit from previously stored workspace including cached; # integrals (fast, run in mode=1 first); # Create, save or load workspace with pdf; # -----------------------------------------------------------------------------------; # Make/load workspace, here in mode 1",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:15,Performance,cache,cached,15,"# Show plot of cached integral values",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:85,Performance,cache,cached,85,"# Projection on x (always slow as 2D integral over Y, at fitted value of a; # is not cached)",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py:17,Availability,avail,available,17,"# Make workspace available on command line after macro finishes",MatchSource.CODE_COMMENT,tutorials/roofit/rf903_numintcache.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roofit/rf903_numintcache.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:2110,Availability,error,errors,2110," ## joint distribution for ""x"" and ""y"" can be factorized.; ## Generally, these regions have many events, so it the ratio can be; ## measured very precisely there. So we extend the model to describe the; ## left two boxes... denoted with ""bar"".; ## - In the upper left we observe nonbar events and expect bbar events; ## - In the bottom left we observe noffbar events and expect tau bbar events; ## Note again we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the numerical stability of the algorithms.; ## The ""bar"" measurements typically have more events (& smaller relative errors).; ## If we choose; ##; ## ~~~{.cpp}; ## <expectation noffbar> = tau * rho * <expectation noonbar>; ## ~~~; ##; ## the product tau*rho will be known very precisely (~1/sqrt(bbar)) and the contour; ## in those parameters will be narrow and have a non-trivial tau~1/rho shape.; ## However, if we choose to put rho on the non/noff measurements (where the; ## product will have an error `~1/sqrt(b))`, the contours will be more amenable; ## to numerical techniques. Thus, here we choose to define:; ##; ## ~~~{.cpp}; ## tau := <expectation off bar> / (<expectation on bar>); ## rho := <expectation off> / (<expectation on> * tau); ##; ## ^ y; ## |; ## |---------------------------+; ## | | |; ## | nonbar | non |; ## | bbar | s+b |; ## | | |; ## |---------------+-----------|; ## | | |; ## | noffbar | noff |; ## | tau bbar | tau b rho |; ## | | |; ## +-----------------------------> x; ## ~~~; ##; ## Left in this way, the problem is under-constrained. However, o",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:2494,Availability,error,error,2494," we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the numerical stability of the algorithms.; ## The ""bar"" measurements typically have more events (& smaller relative errors).; ## If we choose; ##; ## ~~~{.cpp}; ## <expectation noffbar> = tau * rho * <expectation noonbar>; ## ~~~; ##; ## the product tau*rho will be known very precisely (~1/sqrt(bbar)) and the contour; ## in those parameters will be narrow and have a non-trivial tau~1/rho shape.; ## However, if we choose to put rho on the non/noff measurements (where the; ## product will have an error `~1/sqrt(b))`, the contours will be more amenable; ## to numerical techniques. Thus, here we choose to define:; ##; ## ~~~{.cpp}; ## tau := <expectation off bar> / (<expectation on bar>); ## rho := <expectation off> / (<expectation on> * tau); ##; ## ^ y; ## |; ## |---------------------------+; ## | | |; ## | nonbar | non |; ## | bbar | s+b |; ## | | |; ## |---------------+-----------|; ## | | |; ## | noffbar | noff |; ## | tau bbar | tau b rho |; ## | | |; ## +-----------------------------> x; ## ~~~; ##; ## Left in this way, the problem is under-constrained. However, one may; ## have some auxiliary measurement (usually based on Monte Carlo) to; ## constrain rho. Let us call this auxiliary measurement that gives; ## the nominal value of rho ""rhonom"". Thus, there is a 'constraint' term in; ## the full model: P(rhonom | rho). In this case, we consider a Gaussian; ## constraint with standard deviation sigma.; ##; ## In the example, the initial values of the parameters are:",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:4409,Availability,error,error,4409,"#; ## ~~~{.cpp}; ## - s = 40; ## - b = 100; ## - tau = 5; ## - bbar = 1000; ## - rho = 1; ## (sigma for rho = 20%); ## ~~~; ##; ## and in the toy dataset:; ##; ## ~~~{.cpp}; ## - non = 139; ## - noff = 528; ## - nonbar = 993; ## - noffbar = 4906; ## - rhonom = 1.27824; ## ~~~; ##; ## Note, the covariance matrix of the parameters has large off-diagonal terms.; ## Clearly s,b are anti-correlated. Similarly, since noffbar >> nonbar, one would; ## expect bbar,tau to be anti-correlated.; ##; ## This can be seen below.; ##; ## ~~~{.cpp}; ## GLOBAL b bbar rho s tau; ## b 0.96820 1.000 0.191 -0.942 -0.762 -0.209; ## bbar 0.91191 0.191 1.000 0.000 -0.146 -0.912; ## rho 0.96348 -0.942 0.000 1.000 0.718 -0.000; ## s 0.76250 -0.762 -0.146 0.718 1.000 0.160; ## tau 0.92084 -0.209 -0.912 -0.000 0.160 1.000; ## ~~~; ##; ## Similarly, since tau*rho appears as a product, we expect rho,tau; ## to be anti-correlated. When the error on rho is significantly; ## larger than 1/sqrt(bbar), tau is essentially known and the; ## correlation is minimal (tau mainly cares about bbar, and rho about b,s).; ## In the alternate parametrization (bbar* tau * rho) the correlation coefficient; ## for rho,tau is large (and negative).; ##; ## The code below uses best-practices for RooFit & RooStats as of June 2010.; ##; ## It proceeds as follows:; ## - create a workspace to hold the model; ## - use workspace factory to quickly create the terms of the model; ## - use workspace factory to define total model (a prod pdf); ## - create a RooStats ModelConfig to specify observables, parameters of interest; ## - add to the ModelConfig a prior on the parameters for Bayesian techniques; ## note, the pdf it is factorized for parameters of interest & nuisance params; ## - visualize the model; ## - write the workspace to a file; ## - use several of RooStats IntervalCalculators & compare results; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date July 2022; ## \authors Artem Busorgin, Kyle Cranmer and ",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:1045,Integrability,depend,depends,1045,"le is a generalization of the on/off problem.; ##; ## This example is a generalization of the on/off problem.; ## It's a common setup for SUSY searches. Imagine that one has two; ## variables ""x"" and ""y"" (eg. missing ET and SumET), see figure.; ## The signal region has high values of both of these variables (top right).; ## One can see low values of ""x"" or ""y"" acting as side-bands. If we; ## just used ""y"" as a sideband, we would have the on/off problem.; ## - In the signal region we observe non events and expect s+b events.; ## - In the region with low values of ""y"" (bottom right); ## we observe noff events and expect tau*b events.; ## Note the significance of tau. In the background only case:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off> / <expectation on>; ## ~~~; ##; ## If tau is known, this model is sufficient, but often tau is not known exactly.; ## So one can use low values of ""x"" as an additional constraint for tau.; ## Note that this technique critically depends on the notion that the; ## joint distribution for ""x"" and ""y"" can be factorized.; ## Generally, these regions have many events, so it the ratio can be; ## measured very precisely there. So we extend the model to describe the; ## left two boxes... denoted with ""bar"".; ## - In the upper left we observe nonbar events and expect bbar events; ## - In the bottom left we observe noffbar events and expect tau bbar events; ## Note again we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the numerical stability of the algorithms.; ## The ""bar"" measurements typica",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:250,Modifiability,variab,variables,250,"## \file; ## \ingroup tutorial_roostats; ## \notebook; ## This example is a generalization of the on/off problem.; ##; ## This example is a generalization of the on/off problem.; ## It's a common setup for SUSY searches. Imagine that one has two; ## variables ""x"" and ""y"" (eg. missing ET and SumET), see figure.; ## The signal region has high values of both of these variables (top right).; ## One can see low values of ""x"" or ""y"" acting as side-bands. If we; ## just used ""y"" as a sideband, we would have the on/off problem.; ## - In the signal region we observe non events and expect s+b events.; ## - In the region with low values of ""y"" (bottom right); ## we observe noff events and expect tau*b events.; ## Note the significance of tau. In the background only case:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off> / <expectation on>; ## ~~~; ##; ## If tau is known, this model is sufficient, but often tau is not known exactly.; ## So one can use low values of ""x"" as an additional constraint for tau.; ## Note that this technique critically depends on the notion that the; ## joint distribution for ""x"" and ""y"" can be factorized.; ## Generally, these regions have many events, so it the ratio can be; ## measured very precisely there. So we extend the model to describe the; ## left two boxes... denoted with ""bar"".; ## - In the upper left we observe nonbar events and expect bbar events; ## - In the bottom left we observe noffbar events and expect tau bbar events; ## Note again we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the nume",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:367,Modifiability,variab,variables,367,"## \file; ## \ingroup tutorial_roostats; ## \notebook; ## This example is a generalization of the on/off problem.; ##; ## This example is a generalization of the on/off problem.; ## It's a common setup for SUSY searches. Imagine that one has two; ## variables ""x"" and ""y"" (eg. missing ET and SumET), see figure.; ## The signal region has high values of both of these variables (top right).; ## One can see low values of ""x"" or ""y"" acting as side-bands. If we; ## just used ""y"" as a sideband, we would have the on/off problem.; ## - In the signal region we observe non events and expect s+b events.; ## - In the region with low values of ""y"" (bottom right); ## we observe noff events and expect tau*b events.; ## Note the significance of tau. In the background only case:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off> / <expectation on>; ## ~~~; ##; ## If tau is known, this model is sufficient, but often tau is not known exactly.; ## So one can use low values of ""x"" as an additional constraint for tau.; ## Note that this technique critically depends on the notion that the; ## joint distribution for ""x"" and ""y"" can be factorized.; ## Generally, these regions have many events, so it the ratio can be; ## measured very precisely there. So we extend the model to describe the; ## left two boxes... denoted with ""bar"".; ## - In the upper left we observe nonbar events and expect bbar events; ## - In the bottom left we observe noffbar events and expect tau bbar events; ## Note again we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the nume",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:1245,Modifiability,extend,extend,1245," ""y"" (eg. missing ET and SumET), see figure.; ## The signal region has high values of both of these variables (top right).; ## One can see low values of ""x"" or ""y"" acting as side-bands. If we; ## just used ""y"" as a sideband, we would have the on/off problem.; ## - In the signal region we observe non events and expect s+b events.; ## - In the region with low values of ""y"" (bottom right); ## we observe noff events and expect tau*b events.; ## Note the significance of tau. In the background only case:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off> / <expectation on>; ## ~~~; ##; ## If tau is known, this model is sufficient, but often tau is not known exactly.; ## So one can use low values of ""x"" as an additional constraint for tau.; ## Note that this technique critically depends on the notion that the; ## joint distribution for ""x"" and ""y"" can be factorized.; ## Generally, these regions have many events, so it the ratio can be; ## measured very precisely there. So we extend the model to describe the; ## left two boxes... denoted with ""bar"".; ## - In the upper left we observe nonbar events and expect bbar events; ## - In the bottom left we observe noffbar events and expect tau bbar events; ## Note again we have:; ##; ## ~~~{.cpp}; ## tau ~ <expectation off bar> / <expectation on bar>; ## ~~~; ##; ## One can further expand the model to account for the systematic associated; ## to assuming the distribution of ""x"" and ""y"" factorizes (eg. that; ## tau is the same for off/on and offbar/onbar). This can be done in several; ## ways, but here we introduce an additional parameter rho, which so that; ## one set of models will use tau and the other tau*rho. The choice is arbitrary,; ## but it has consequences on the numerical stability of the algorithms.; ## The ""bar"" measurements typically have more events (& smaller relative errors).; ## If we choose; ##; ## ~~~{.cpp}; ## <expectation noffbar> = tau * rho * <expectation noonbar>; ## ~~~; ##; ## the product tau*rho will be known ve",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:3853,Usability,Clear,Clearly,3853,"---------+-----------|; ## | | |; ## | noffbar | noff |; ## | tau bbar | tau b rho |; ## | | |; ## +-----------------------------> x; ## ~~~; ##; ## Left in this way, the problem is under-constrained. However, one may; ## have some auxiliary measurement (usually based on Monte Carlo) to; ## constrain rho. Let us call this auxiliary measurement that gives; ## the nominal value of rho ""rhonom"". Thus, there is a 'constraint' term in; ## the full model: P(rhonom | rho). In this case, we consider a Gaussian; ## constraint with standard deviation sigma.; ##; ## In the example, the initial values of the parameters are:; ##; ## ~~~{.cpp}; ## - s = 40; ## - b = 100; ## - tau = 5; ## - bbar = 1000; ## - rho = 1; ## (sigma for rho = 20%); ## ~~~; ##; ## and in the toy dataset:; ##; ## ~~~{.cpp}; ## - non = 139; ## - noff = 528; ## - nonbar = 993; ## - noffbar = 4906; ## - rhonom = 1.27824; ## ~~~; ##; ## Note, the covariance matrix of the parameters has large off-diagonal terms.; ## Clearly s,b are anti-correlated. Similarly, since noffbar >> nonbar, one would; ## expect bbar,tau to be anti-correlated.; ##; ## This can be seen below.; ##; ## ~~~{.cpp}; ## GLOBAL b bbar rho s tau; ## b 0.96820 1.000 0.191 -0.942 -0.762 -0.209; ## bbar 0.91191 0.191 1.000 0.000 -0.146 -0.912; ## rho 0.96348 -0.942 0.000 1.000 0.718 -0.000; ## s 0.76250 -0.762 -0.146 0.718 1.000 0.160; ## tau 0.92084 -0.209 -0.912 -0.000 0.160 1.000; ## ~~~; ##; ## Similarly, since tau*rho appears as a product, we expect rho,tau; ## to be anti-correlated. When the error on rho is significantly; ## larger than 1/sqrt(bbar), tau is essentially known and the; ## correlation is minimal (tau mainly cares about bbar, and rho about b,s).; ## In the alternate parametrization (bbar* tau * rho) the correlation coefficient; ## for rho,tau is large (and negative).; ##; ## The code below uses best-practices for RooFit & RooStats as of June 2010.; ##; ## It proceeds as follows:; ## - create a workspace to hold the model; ## - u",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:79,Testability,test,test,79,"# for 2-d plots to inspect correlations:; # wspace.defineSet(""poi"",""s,rho""); # test simpler cases where parameters are known.; # wspace[""tau""].setConstant(); # wspace[""rho""].setConstant(); # wspace[""b""].setConstant(); # wspace[""bbar""].setConstant(); # inspect workspace; # wspace.Print(); # ----------------------------------------------------------; # Generate toy data; # generate toy data assuming current value of the parameters; # import into workspace.; # add Verbose() to see how it's being generated",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:84,Usability,simpl,simpler,84,"# for 2-d plots to inspect correlations:; # wspace.defineSet(""poi"",""s,rho""); # test simpler cases where parameters are known.; # wspace[""tau""].setConstant(); # wspace[""rho""].setConstant(); # wspace[""b""].setConstant(); # wspace[""bbar""].setConstant(); # inspect workspace; # wspace.Print(); # ----------------------------------------------------------; # Generate toy data; # generate toy data assuming current value of the parameters; # import into workspace.; # add Verbose() to see how it's being generated",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:75,Modifiability,config,config,75,"# ----------------------------------; # Now the statistical tests; # model config",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:60,Testability,test,tests,60,"# ----------------------------------; # Now the statistical tests; # model config",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:52,Energy Efficiency,efficient,efficient,52,"# use MCMCCalculator (takes about 1 min); # Want an efficient proposal function, so derive it from covariance; # matrix of fit",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:47,Availability,error,error,47,"# the plot takes a long time and print lots of error; # using a scan it is better",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:91,Availability,fault,faults,91,"# TODO: The calculators have to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py:98,Integrability,depend,depending,98,"# TODO: The calculators have to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,tutorials/roostats/FourBinInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/FourBinInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:420,Deployability,integrat,integration,420,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # Example demonstrating usage of HybridCalcultor; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example must be run with the ACLIC (the + option ) due to the; # new class that is defined.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$\eta(b)\f$ then one can obtain a posterior from the auxiliary measurement; # \f$\pi(b) = \eta(b) * Pois(y|tau*b).\f$ This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cous",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:420,Integrability,integrat,integration,420,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # Example demonstrating usage of HybridCalcultor; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example must be run with the ACLIC (the + option ) due to the; # new class that is defined.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$\eta(b)\f$ then one can obtain a posterior from the auxiliary measurement; # \f$\pi(b) = \eta(b) * Pois(y|tau*b).\f$ This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cous",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:456,Security,validat,validates,456,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # Example demonstrating usage of HybridCalcultor; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example must be run with the ACLIC (the + option ) due to the; # new class that is defined.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$\eta(b)\f$ then one can obtain a posterior from the auxiliary measurement; # \f$\pi(b) = \eta(b) * Pois(y|tau*b).\f$ This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cous",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:124,Testability,test,testing,124,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # Example demonstrating usage of HybridCalcultor; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example must be run with the ACLIC (the + option ) due to the; # new class that is defined.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$\eta(b)\f$ then one can obtain a posterior from the auxiliary measurement; # \f$\pi(b) = \eta(b) * Pois(y|tau*b).\f$ This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cous",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:564,Testability,test,test,564,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # Example demonstrating usage of HybridCalcultor; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example must be run with the ACLIC (the + option ) due to the; # new class that is defined.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$\eta(b)\f$ then one can obtain a posterior from the auxiliary measurement; # \f$\pi(b) = \eta(b) * Pois(y|tau*b).\f$ This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cous",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:1649,Testability,test,testing,1649,"lytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$\eta(b)\f$ then one can obtain a posterior from the auxiliary measurement; # \f$\pi(b) = \eta(b) * Pois(y|tau*b).\f$ This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cousins, James T. Linnemann, Jordan Tucker; # http://arxiv.org/abs/physics/0702156; # NIM A 595 (2008) 480--501; #; # - Statistical Challenges for Searches for New Physics at the LHC; # Author: Kyle Cranmer; # http://arxiv.org/abs/physics/0511028; #; # - Measures of Significance in HEP and Astrophysics; # Authors J. T. Linnemann; # http://arxiv.org/abs/physics/0312059; #; # \macro_image; # \macro_output; # \macro_code; #; # \authors Kyle Cranmer, Wouter Verkerke, Sven Kreiss, and Jolly Chen (Python translation)",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:1911,Testability,test,test,1911,"lytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$\eta(b)\f$ then one can obtain a posterior from the auxiliary measurement; # \f$\pi(b) = \eta(b) * Pois(y|tau*b).\f$ This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cousins, James T. Linnemann, Jordan Tucker; # http://arxiv.org/abs/physics/0702156; # NIM A 595 (2008) 480--501; #; # - Statistical Challenges for Searches for New Physics at the LHC; # Author: Kyle Cranmer; # http://arxiv.org/abs/physics/0511028; #; # - Measures of Significance in HEP and Astrophysics; # Authors J. T. Linnemann; # http://arxiv.org/abs/physics/0312059; #; # \macro_image; # \macro_output; # \macro_code; #; # \authors Kyle Cranmer, Wouter Verkerke, Sven Kreiss, and Jolly Chen (Python translation)",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:7,Deployability,configurat,configuration,7,"# User configuration parameters",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:7,Modifiability,config,configuration,7,"# User configuration parameters",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:76,Testability,Test,Test,76,"# ratio Ntoys Null/ntoys ALT; # ----------------------------------; # A New Test Statistic Class for this example.; # It simply returns the sum of the values in a particular; # column of a dataset.; # You can ignore this class and focus on the macro below",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:121,Usability,simpl,simply,121,"# ratio Ntoys Null/ntoys ALT; # ----------------------------------; # A New Test Statistic Class for this example.; # It simply returns the sum of the values in a particular; # column of a dataset.; # You can ignore this class and focus on the macro below",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:336,Integrability,interface,interface,336,"""""""; using namespace RooFit;; using namespace RooStats;. class BinCountTestStat : public TestStatistic {; public:; BinCountTestStat(void) : fColumnName(""tmp"") {}; BinCountTestStat(string columnName) : fColumnName(columnName) {}. virtual Double_t Evaluate(RooAbsData &data, RooArgSet & /*nullPOI*/); {; // This is the main method in the interface; Double_t value = 0.0;; for (int i = 0; i < data.numEntries(); i++) {; value += data.get(i)->getRealValue(fColumnName.c_str());; }; return value;; }; virtual const TString GetVarName() const { return fColumnName; }. private:; string fColumnName;. protected:; ClassDef(BinCountTestStat, 1); };; """"""",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:89,Testability,Test,TestStatistic,89,"""""""; using namespace RooFit;; using namespace RooStats;. class BinCountTestStat : public TestStatistic {; public:; BinCountTestStat(void) : fColumnName(""tmp"") {}; BinCountTestStat(string columnName) : fColumnName(columnName) {}. virtual Double_t Evaluate(RooAbsData &data, RooArgSet & /*nullPOI*/); {; // This is the main method in the interface; Double_t value = 0.0;; for (int i = 0; i < data.numEntries(); i++) {; value += data.get(i)->getRealValue(fColumnName.c_str());; }; return value;; }; virtual const TString GetVarName() const { return fColumnName; }. private:; string fColumnName;. protected:; ClassDef(BinCountTestStat, 1); };; """"""",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:217,Deployability,integrat,integration,217,"# ----------------------------------; # The Actual Tutorial Macro; # This tutorial has 6 parts; # Table of Contents; # Setup; # 1. Make the model for the 'prototype problem'; # Special cases; # 2. Use RooFit's direct integration to get p-value & significance; # 3. Use RooStats analytic solution for this problem; # RooStats HybridCalculator -- can be generalized; # 4. RooStats ToyMC version of 2. & 3.; # 5. RooStats ToyMC with an equivalent test statistic; # 6. RooStats ToyMC with simultaneous control & main measurement; # It takes ~4 min without PROOF and ~2 min with PROOF on 4 cores.; # Of course, everything looks nicer with more toys, which takes longer.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:217,Integrability,integrat,integration,217,"# ----------------------------------; # The Actual Tutorial Macro; # This tutorial has 6 parts; # Table of Contents; # Setup; # 1. Make the model for the 'prototype problem'; # Special cases; # 2. Use RooFit's direct integration to get p-value & significance; # 3. Use RooStats analytic solution for this problem; # RooStats HybridCalculator -- can be generalized; # 4. RooStats ToyMC version of 2. & 3.; # 5. RooStats ToyMC with an equivalent test statistic; # 6. RooStats ToyMC with simultaneous control & main measurement; # It takes ~4 min without PROOF and ~2 min with PROOF on 4 cores.; # Of course, everything looks nicer with more toys, which takes longer.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:444,Testability,test,test,444,"# ----------------------------------; # The Actual Tutorial Macro; # This tutorial has 6 parts; # Table of Contents; # Setup; # 1. Make the model for the 'prototype problem'; # Special cases; # 2. Use RooFit's direct integration to get p-value & significance; # 3. Use RooStats analytic solution for this problem; # RooStats HybridCalculator -- can be generalized; # 4. RooStats ToyMC version of 2. & 3.; # 5. RooStats ToyMC with an equivalent test statistic; # 6. RooStats ToyMC with simultaneous control & main measurement; # It takes ~4 min without PROOF and ~2 min with PROOF on 4 cores.; # Of course, everything looks nicer with more toys, which takes longer.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:80,Integrability,message,messages,80,"# We will control the output level in a few places to avoid; # verbose progress messages. We start by keeping track; # of the current threshold on messages.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:147,Integrability,message,messages,147,"# We will control the output level in a few places to avoid; # verbose progress messages. We start by keeping track; # of the current threshold on messages.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:54,Safety,avoid,avoid,54,"# We will control the output level in a few places to avoid; # verbose progress messages. We start by keeping track; # of the current threshold on messages.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:337,Deployability,integrat,integration,337,"# ----------------------------------------------------; # P A R T 2 : D I R E C T I N T E G R A T I O N; # ====================================================; # This is not the 'RooStats' way, but in this case the distribution; # of the test statistic is simply x and can be calculated directly; # from the PDF using RooFit's built-in integration.; # Note, this does not generalize to situations in which the test statistic; # depends on many events (rows in a dataset).; # construct the Bayesian-averaged model (eg. a projection pdf); # $p'(x|s) = \int db p(x|s+b) * [ p(y|b) * prior(b) ]$",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:337,Integrability,integrat,integration,337,"# ----------------------------------------------------; # P A R T 2 : D I R E C T I N T E G R A T I O N; # ====================================================; # This is not the 'RooStats' way, but in this case the distribution; # of the test statistic is simply x and can be calculated directly; # from the PDF using RooFit's built-in integration.; # Note, this does not generalize to situations in which the test statistic; # depends on many events (rows in a dataset).; # construct the Bayesian-averaged model (eg. a projection pdf); # $p'(x|s) = \int db p(x|s+b) * [ p(y|b) * prior(b) ]$",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:429,Integrability,depend,depends,429,"# ----------------------------------------------------; # P A R T 2 : D I R E C T I N T E G R A T I O N; # ====================================================; # This is not the 'RooStats' way, but in this case the distribution; # of the test statistic is simply x and can be calculated directly; # from the PDF using RooFit's built-in integration.; # Note, this does not generalize to situations in which the test statistic; # depends on many events (rows in a dataset).; # construct the Bayesian-averaged model (eg. a projection pdf); # $p'(x|s) = \int db p(x|s+b) * [ p(y|b) * prior(b) ]$",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:239,Testability,test,test,239,"# ----------------------------------------------------; # P A R T 2 : D I R E C T I N T E G R A T I O N; # ====================================================; # This is not the 'RooStats' way, but in this case the distribution; # of the test statistic is simply x and can be calculated directly; # from the PDF using RooFit's built-in integration.; # Note, this does not generalize to situations in which the test statistic; # depends on many events (rows in a dataset).; # construct the Bayesian-averaged model (eg. a projection pdf); # $p'(x|s) = \int db p(x|s+b) * [ p(y|b) * prior(b) ]$",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:411,Testability,test,test,411,"# ----------------------------------------------------; # P A R T 2 : D I R E C T I N T E G R A T I O N; # ====================================================; # This is not the 'RooStats' way, but in this case the distribution; # of the test statistic is simply x and can be calculated directly; # from the PDF using RooFit's built-in integration.; # Note, this does not generalize to situations in which the test statistic; # depends on many events (rows in a dataset).; # construct the Bayesian-averaged model (eg. a projection pdf); # $p'(x|s) = \int db p(x|s+b) * [ p(y|b) * prior(b) ]$",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:257,Usability,simpl,simply,257,"# ----------------------------------------------------; # P A R T 2 : D I R E C T I N T E G R A T I O N; # ====================================================; # This is not the 'RooStats' way, but in this case the distribution; # of the test statistic is simply x and can be calculated directly; # from the PDF using RooFit's built-in integration.; # Note, this does not generalize to situations in which the test statistic; # depends on many events (rows in a dataset).; # construct the Bayesian-averaged model (eg. a projection pdf); # $p'(x|s) = \int db p(x|s+b) * [ p(y|b) * prior(b) ]$",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:57,Energy Efficiency,green,green,57,"# lower message level; # plot it, red is averaged model, green is b known exactly, blue is s+b av model",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:8,Integrability,message,message,8,"# lower message level; # plot it, red is averaged model, green is b known exactly, blue is s+b av model",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:17,Integrability,message,messages,17,"# get ugly print messages out of the way",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:771,Modifiability,variab,variables,771,"# -------------------------------------------------------------; # P A R T 4 : U S I N G H Y B R I D C A L C U L A T O R; # =============================================================; # Now we demonstrate the RooStats HybridCalculator.; #; # Like all RooStats calculators it needs the data and a ModelConfig; # for the relevant hypotheses. Since we are doing hypothesis testing; # we need a ModelConfig for the null (background only) and the alternate; # (signal+background) hypotheses. We also need to specify the PDF,; # the parameters of interest, and the observables. Furthermore, since; # the parameter of interest is floating, we need to specify which values; # of the parameter corresponds to the null and alternate (eg. s=0 and s=50); #; # define some sets of variables obs={x} and poi={s}; # note here, x is the only observable in the main measurement; # and y is treated as a separate measurement, which is used; # to produce the prior that will be used in this calculation; # to randomize the nuisance parameters.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:373,Testability,test,testing,373,"# -------------------------------------------------------------; # P A R T 4 : U S I N G H Y B R I D C A L C U L A T O R; # =============================================================; # Now we demonstrate the RooStats HybridCalculator.; #; # Like all RooStats calculators it needs the data and a ModelConfig; # for the relevant hypotheses. Since we are doing hypothesis testing; # we need a ModelConfig for the null (background only) and the alternate; # (signal+background) hypotheses. We also need to specify the PDF,; # the parameters of interest, and the observables. Furthermore, since; # the parameter of interest is floating, we need to specify which values; # of the parameter corresponds to the null and alternate (eg. s=0 and s=50); #; # define some sets of variables obs={x} and poi={s}; # note here, x is the only observable in the main measurement; # and y is treated as a separate measurement, which is used; # to produce the prior that will be used in this calculation; # to randomize the nuisance parameters.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:277,Integrability,interface,interface,277,"# Part 3b : Choose Test Statistic; # ----------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:242,Modifiability,inherit,inherits,242,"# Part 3b : Choose Test Statistic; # ----------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:19,Testability,Test,Test,19,"# Part 3b : Choose Test Statistic; # ----------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:133,Testability,test,test,133,"# Part 3b : Choose Test Statistic; # ----------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:175,Testability,test,test,175,"# Part 3b : Choose Test Statistic; # ----------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:263,Testability,Test,TestStatistic,263,"# Part 3b : Choose Test Statistic; # ----------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:292,Usability,simpl,simply,292,"# Part 3b : Choose Test Statistic; # ----------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:82,Testability,log,log-normal,82,"# this corresponds to the ""Z_N"" calculation.; #; # or one could use the analogous log-normal prior",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:682,Modifiability,config,configure,682,"#; # Ideally, the HybridCalculator would be able to inspect the full; # model $Pois(x | s+b) * Pois(y | tau b )$ and be given the original; # prior $\eta(b)$ to form $\pi(b) = Pois(y|tau*b) * \eta(b)$.; # This is not yet implemented because in the general case; # it is not easy to identify the terms in the PDF that correspond; # to the auxiliary measurement. So for now, it must be set; # explicitly with:; # - ForcePriorNuisanceNull(); # - ForcePriorNuisanceAlt(); # the name ""ForcePriorNuisance"" was chosen because we anticipate; # this to be auto-detected, but will leave the option open; # to force to a different prior for the nuisance parameters.; # Part 3d : Construct and configure the HybridCalculator; # -------------------------------------------------------",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:552,Safety,detect,detected,552,"#; # Ideally, the HybridCalculator would be able to inspect the full; # model $Pois(x | s+b) * Pois(y | tau b )$ and be given the original; # prior $\eta(b)$ to form $\pi(b) = Pois(y|tau*b) * \eta(b)$.; # This is not yet implemented because in the general case; # it is not easy to identify the terms in the PDF that correspond; # to the auxiliary measurement. So for now, it must be set; # explicitly with:; # - ForcePriorNuisanceNull(); # - ForcePriorNuisanceAlt(); # the name ""ForcePriorNuisance"" was chosen because we anticipate; # this to be auto-detected, but will leave the option open; # to force to a different prior for the nuisance parameters.; # Part 3d : Construct and configure the HybridCalculator; # -------------------------------------------------------",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:10,Testability,test,test,10,"# set the test statistic",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:426,Availability,ERROR,ERROR,426,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:411,Integrability,message,messages,411,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:209,Testability,log,log-normal,209,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:225,Testability,test,test,225,"# -------------------------------------------------------------------------; # # P A R T 5 : U S I N G H Y B R I D C A L C U L A T O R; # # W I T H A N A L T E R N A T I V E T E S T S T A T I S T I C; #; # A likelihood ratio test statistics should be 1-to-1 with the count x; # when the value of b is fixed in the likelihood. This is implemented; # by the SimpleLikelihoodRatioTestStat",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:356,Usability,Simpl,SimpleLikelihoodRatioTestStat,356,"# -------------------------------------------------------------------------; # # P A R T 5 : U S I N G H Y B R I D C A L C U L A T O R; # # W I T H A N A L T E R N A T I V E T E S T S T A T I S T I C; #; # A likelihood ratio test statistics should be 1-to-1 with the count x; # when the value of b is fixed in the likelihood. This is implemented; # by the SimpleLikelihoodRatioTestStat",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:426,Availability,ERROR,ERROR,426,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:411,Integrability,message,messages,411,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:209,Testability,log,log-normal,209,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:272,Testability,test,test,272,"# -----------------------------------------------------------------------------; # # P A R T 6 : U S I N G H Y B R I D C A L C U L A T O R W I T H A N A L T E R N A T I V E T E S T; # # S T A T I S T I C A N D S I M U L T A N E O U S M O D E L; #; # If one wants to use a test statistic in which the nuisance parameters; # are profiled (in one way or another), then the PDF must constrain b.; # Otherwise any observation x can always be explained with s=0 and b=x/tau.; #; # In this case, one is really thinking about the problem in a; # different way. They are considering x,y simultaneously.; # and the PDF should be $Pois(x | s+b) * Pois(y | tau b )$; # and the set 'obs' should be {x,y}.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:24,Modifiability,config,configs,24,"# now we need new model configs, with PDF=""model""",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:86,Testability,Test,Test,86,"# without this print, their can be a crash when using PROOF. Strange.; # w.Print(); # Test statistics like the profile likelihood ratio; # (or the ratio of profiled likelihoods (Tevatron) or the MLE for s); # will now work, since the nuisance parameter b is constrained by y.; # ratio of alt and null likelihoods with background yield profiled.; #; # NOTE: These are slower because they have to run fits for each toy; # Tevatron-style Ratio of profiled likelihoods; # $Q_Tev = -log L(s=0,\hat\hat{b})/L(s=50,\hat\hat{b})$",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:478,Testability,log,log,478,"# without this print, their can be a crash when using PROOF. Strange.; # w.Print(); # Test statistics like the profile likelihood ratio; # (or the ratio of profiled likelihoods (Tevatron) or the MLE for s); # will now work, since the nuisance parameter b is constrained by y.; # ratio of alt and null likelihoods with background yield profiled.; #; # NOTE: These are slower because they have to run fits for each toy; # Tevatron-style Ratio of profiled likelihoods; # $Q_Tev = -log L(s=0,\hat\hat{b})/L(s=50,\hat\hat{b})$",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:89,Testability,log,log,89,"# profile likelihood where alternate is best fit value of signal yield; # $\lambda(0) = -log L(s=0,\hat\hat{b})/L(\hat{s},\hat{b})$",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:22,Usability,clear,clear,22,"# However, it is less clear how to justify the prior used in randomizing; # the nuisance parameters (since that is a property of the ensemble,; # and y is a property of each toy pseudo experiment. In that case,; # one probably wants to consider a different y0 which will be held; # constant and the prior $\pi(b) = Pois(y0 | tau b) * \eta(b)$.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:206,Testability,test,test,206,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~{.cpp}; # hc3.ForcePriorNuisanceAlt(w.pdf(""gauss_prior_y0"")); # hc3.ForcePriorNuisanceNull(w.pdf(""gauss_prior_y0"")); # ~~~; # choose fit-based test statistic",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:139,Availability,ERROR,ERROR,139,"# toymcs3.SetTestStatistic(ropl); # toymcs3.SetTestStatistic(mlets); # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:124,Integrability,message,messages,124,"# toymcs3.SetTestStatistic(ropl); # toymcs3.SetTestStatistic(mlets); # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:219,Deployability,integrat,integration,219,"# -----------------------------------------; # OUTPUT W/O PROOF (2.66 GHz Intel Core i7); # =========================================; # -----------------------------------------; # Part 2; # Hybrid p-value from direct integration = 0.00094165; # Z_Gamma Significance = 3.10804; # -----------------------------------------; #; # Part 3; # Z_Bi p-value (analytic): 0.00094165; # Z_Bi significance (analytic): 3.10804; # Real time 0:00:00, CP time 0.610; # -----------------------------------------; # Part 4; # Results HybridCalculator_result:; # - Null p-value = 0.00115 +/- 0.000228984; # - Significance = 3.04848 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 150; # - CL_b: 0.99885 +/- 0.000239654; # - CL_s+b: 0.476 +/- 0.0157932; # - CL_s: 0.476548 +/- 0.0158118; # Real time 0:00:07, CP time 7.620; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.0009 +/- 0.000206057; # - Significance = 3.12139 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.9991 +/- 0.000212037; # - CL_s+b: 0.465 +/- 0.0157726; # - CL_s: 0.465419 +/- 0.0157871; # Real time 0:00:34, CP time 34.360; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.000666667 +/- 0.000149021; # - Significance = 3.20871 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.999333 +/- 0.000149021; # - CL_s+b: 0.511 +/- 0.0158076; # - CL_s: 0.511341 +/- 0.0158183; # Real time 0:05:06, CP time 306.330; # ---------------------------------------------------------; # OUTPUT w/ PROOF (2.66 GHz Intel Core i7, 4 virtual cores); # =========================================================; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00075 +/- 0.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:219,Integrability,integrat,integration,219,"# -----------------------------------------; # OUTPUT W/O PROOF (2.66 GHz Intel Core i7); # =========================================; # -----------------------------------------; # Part 2; # Hybrid p-value from direct integration = 0.00094165; # Z_Gamma Significance = 3.10804; # -----------------------------------------; #; # Part 3; # Z_Bi p-value (analytic): 0.00094165; # Z_Bi significance (analytic): 3.10804; # Real time 0:00:00, CP time 0.610; # -----------------------------------------; # Part 4; # Results HybridCalculator_result:; # - Null p-value = 0.00115 +/- 0.000228984; # - Significance = 3.04848 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 150; # - CL_b: 0.99885 +/- 0.000239654; # - CL_s+b: 0.476 +/- 0.0157932; # - CL_s: 0.476548 +/- 0.0158118; # Real time 0:00:07, CP time 7.620; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.0009 +/- 0.000206057; # - Significance = 3.12139 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.9991 +/- 0.000212037; # - CL_s+b: 0.465 +/- 0.0157726; # - CL_s: 0.465419 +/- 0.0157871; # Real time 0:00:34, CP time 34.360; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.000666667 +/- 0.000149021; # - Significance = 3.20871 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.999333 +/- 0.000149021; # - CL_s+b: 0.511 +/- 0.0158076; # - CL_s: 0.511341 +/- 0.0158183; # Real time 0:05:06, CP time 306.330; # ---------------------------------------------------------; # OUTPUT w/ PROOF (2.66 GHz Intel Core i7, 4 virtual cores); # =========================================================; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00075 +/- 0.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:685,Testability,Test,Test,685,"# -----------------------------------------; # OUTPUT W/O PROOF (2.66 GHz Intel Core i7); # =========================================; # -----------------------------------------; # Part 2; # Hybrid p-value from direct integration = 0.00094165; # Z_Gamma Significance = 3.10804; # -----------------------------------------; #; # Part 3; # Z_Bi p-value (analytic): 0.00094165; # Z_Bi significance (analytic): 3.10804; # Real time 0:00:00, CP time 0.610; # -----------------------------------------; # Part 4; # Results HybridCalculator_result:; # - Null p-value = 0.00115 +/- 0.000228984; # - Significance = 3.04848 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 150; # - CL_b: 0.99885 +/- 0.000239654; # - CL_s+b: 0.476 +/- 0.0157932; # - CL_s: 0.476548 +/- 0.0158118; # Real time 0:00:07, CP time 7.620; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.0009 +/- 0.000206057; # - Significance = 3.12139 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.9991 +/- 0.000212037; # - CL_s+b: 0.465 +/- 0.0157726; # - CL_s: 0.465419 +/- 0.0157871; # Real time 0:00:34, CP time 34.360; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.000666667 +/- 0.000149021; # - Significance = 3.20871 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.999333 +/- 0.000149021; # - CL_s+b: 0.511 +/- 0.0158076; # - CL_s: 0.511341 +/- 0.0158183; # Real time 0:05:06, CP time 306.330; # ---------------------------------------------------------; # OUTPUT w/ PROOF (2.66 GHz Intel Core i7, 4 virtual cores); # =========================================================; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00075 +/- 0.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:1093,Testability,Test,Test,1093," Intel Core i7); # =========================================; # -----------------------------------------; # Part 2; # Hybrid p-value from direct integration = 0.00094165; # Z_Gamma Significance = 3.10804; # -----------------------------------------; #; # Part 3; # Z_Bi p-value (analytic): 0.00094165; # Z_Bi significance (analytic): 3.10804; # Real time 0:00:00, CP time 0.610; # -----------------------------------------; # Part 4; # Results HybridCalculator_result:; # - Null p-value = 0.00115 +/- 0.000228984; # - Significance = 3.04848 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 150; # - CL_b: 0.99885 +/- 0.000239654; # - CL_s+b: 0.476 +/- 0.0157932; # - CL_s: 0.476548 +/- 0.0158118; # Real time 0:00:07, CP time 7.620; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.0009 +/- 0.000206057; # - Significance = 3.12139 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.9991 +/- 0.000212037; # - CL_s+b: 0.465 +/- 0.0157726; # - CL_s: 0.465419 +/- 0.0157871; # Real time 0:00:34, CP time 34.360; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.000666667 +/- 0.000149021; # - Significance = 3.20871 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.999333 +/- 0.000149021; # - CL_s+b: 0.511 +/- 0.0158076; # - CL_s: 0.511341 +/- 0.0158183; # Real time 0:05:06, CP time 306.330; # ---------------------------------------------------------; # OUTPUT w/ PROOF (2.66 GHz Intel Core i7, 4 virtual cores); # =========================================================; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00075 +/- 0.000173124; # - Significance = 3.17468 sigma; # - Number of S+B toys: 1000",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:1510,Testability,Test,Test,1510,"------; # Part 4; # Results HybridCalculator_result:; # - Null p-value = 0.00115 +/- 0.000228984; # - Significance = 3.04848 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 150; # - CL_b: 0.99885 +/- 0.000239654; # - CL_s+b: 0.476 +/- 0.0157932; # - CL_s: 0.476548 +/- 0.0158118; # Real time 0:00:07, CP time 7.620; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.0009 +/- 0.000206057; # - Significance = 3.12139 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.9991 +/- 0.000212037; # - CL_s+b: 0.465 +/- 0.0157726; # - CL_s: 0.465419 +/- 0.0157871; # Real time 0:00:34, CP time 34.360; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.000666667 +/- 0.000149021; # - Significance = 3.20871 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.999333 +/- 0.000149021; # - CL_s+b: 0.511 +/- 0.0158076; # - CL_s: 0.511341 +/- 0.0158183; # Real time 0:05:06, CP time 306.330; # ---------------------------------------------------------; # OUTPUT w/ PROOF (2.66 GHz Intel Core i7, 4 virtual cores); # =========================================================; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00075 +/- 0.000173124; # - Significance = 3.17468 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.99925 +/- 0.000193577; # - CL_s+b: 0.454 +/- 0.0157443; # - CL_s: 0.454341 +/- 0.0157564; # Real time 0:00:16, CP time 0.990; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.0007 +/- 0.000152699; # - Significance = 3.19465 sigma; # - Number of S+B toys: 1000; # ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:2109,Testability,Test,Test,2109,"# - Test statistic evaluated on data: 10.8198; # - CL_b: 0.9991 +/- 0.000212037; # - CL_s+b: 0.465 +/- 0.0157726; # - CL_s: 0.465419 +/- 0.0157871; # Real time 0:00:34, CP time 34.360; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.000666667 +/- 0.000149021; # - Significance = 3.20871 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.999333 +/- 0.000149021; # - CL_s+b: 0.511 +/- 0.0158076; # - CL_s: 0.511341 +/- 0.0158183; # Real time 0:05:06, CP time 306.330; # ---------------------------------------------------------; # OUTPUT w/ PROOF (2.66 GHz Intel Core i7, 4 virtual cores); # =========================================================; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00075 +/- 0.000173124; # - Significance = 3.17468 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.99925 +/- 0.000193577; # - CL_s+b: 0.454 +/- 0.0157443; # - CL_s: 0.454341 +/- 0.0157564; # Real time 0:00:16, CP time 0.990; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.0007 +/- 0.000152699; # - Significance = 3.19465 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.9993 +/- 0.000152699; # - CL_s+b: 0.518 +/- 0.0158011; # - CL_s: 0.518363 +/- 0.0158124; # Real time 0:01:25, CP time 0.580; # ----------------------------------; # Comparison; # ----------------------------------; # LEPStatToolsForLHC; # https:#plone4.fnal.gov:4430/P0/phystat/packages/0703002; # Uses Gaussian prior; # CL_b = 6.218476e-04, Significance = 3.228665 sigma; #; # ----------------------------------; # Comparison; # ----------------------------------; # Asymptotic; # From the value of the profile li",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py:2521,Testability,Test,Test,2521,"- 0.0157871; # Real time 0:00:34, CP time 34.360; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.000666667 +/- 0.000149021; # - Significance = 3.20871 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.999333 +/- 0.000149021; # - CL_s+b: 0.511 +/- 0.0158076; # - CL_s: 0.511341 +/- 0.0158183; # Real time 0:05:06, CP time 306.330; # ---------------------------------------------------------; # OUTPUT w/ PROOF (2.66 GHz Intel Core i7, 4 virtual cores); # =========================================================; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00075 +/- 0.000173124; # - Significance = 3.17468 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.99925 +/- 0.000193577; # - CL_s+b: 0.454 +/- 0.0157443; # - CL_s: 0.454341 +/- 0.0157564; # Real time 0:00:16, CP time 0.990; # -----------------------------------------; # Part 6; # Results HybridCalculator_result:; # - Null p-value = 0.0007 +/- 0.000152699; # - Significance = 3.19465 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 5.03388; # - CL_b: 0.9993 +/- 0.000152699; # - CL_s+b: 0.518 +/- 0.0158011; # - CL_s: 0.518363 +/- 0.0158124; # Real time 0:01:25, CP time 0.580; # ----------------------------------; # Comparison; # ----------------------------------; # LEPStatToolsForLHC; # https:#plone4.fnal.gov:4430/P0/phystat/packages/0703002; # Uses Gaussian prior; # CL_b = 6.218476e-04, Significance = 3.228665 sigma; #; # ----------------------------------; # Comparison; # ----------------------------------; # Asymptotic; # From the value of the profile likelihood ratio (5.0338); # The significance can be estimated using Wilks's theorem; # significance = sqrt(2*profileLR) = 3.1729 sigma",MatchSource.CODE_COMMENT,tutorials/roostats/HybridInstructional.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridInstructional.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:1493,Deployability,integrat,integration,1493,"onding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary measurement; # \f$ \pi(b) = \eta(b) * Pois(y|tau*b) \f$. This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:1493,Integrability,integrat,integration,1493,"onding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary measurement; # \f$ \pi(b) = \eta(b) * Pois(y|tau*b) \f$. This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:502,Modifiability,extend,extended,502,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:538,Modifiability,variab,variable,538,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:684,Modifiability,extend,extended,684,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:742,Modifiability,extend,extended,742,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:778,Modifiability,variab,variable,778,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:940,Modifiability,extend,extended,940,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:1020,Modifiability,variab,variable,1020,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:1195,Modifiability,extend,extended,1195,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:1339,Modifiability,variab,variable,1339,"s more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary me",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:1529,Security,validat,validates,1529,"onding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary measurement; # \f$ \pi(b) = \eta(b) * Pois(y|tau*b) \f$. This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:71,Testability,test,testing,71,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:160,Testability,test,testing,160,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:1637,Testability,test,test,1637,"onding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary measurement; # \f$ \pi(b) = \eta(b) * Pois(y|tau*b) \f$. This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:2726,Testability,test,testing,2726,"ytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary measurement; # \f$ \pi(b) = \eta(b) * Pois(y|tau*b) \f$. This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cousins, James T. Linnemann, Jordan Tucker; # http:#arxiv.org/abs/physics/0702156; # NIM A 595 (2008) 480--501; #; # - Statistical Challenges for Searches for New Physics at the LHC; # Author: Kyle Cranmer; # http:#arxiv.org/abs/physics/0511028; #; # - Measures of Significance in HEP and Astrophysics; # Author: J. T. Linnemann; # http:#arxiv.org/abs/physics/0312059; #; # \macro_image; # \macro_output; # \macro_code; #; # \authors Kyle Cranmer, Wouter Verkerke, Sven Kreiss, and Jolly Chen (Python translation)",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:2988,Testability,test,test,2988,"ytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to base it on an auxiliary measurement. In this case, the auxiliary; # measurement (aka control measurement, sideband) is another counting experiment; # with measurement y and expectation tau*b. With an 'original prior' on b,; # called \f$ \eta(b) \f$ then one can obtain a posterior from the auxiliary measurement; # \f$ \pi(b) = \eta(b) * Pois(y|tau*b) \f$. This is a principled choice for a prior; # on b in the main measurement of x, which can then be treated in a hybrid; # Bayesian/Frequentist way. Additionally, one can try to treat the two; # measurements simultaneously, which is detailed in Part 6 of the tutorial.; #; # This tutorial is related to the FourBin.C tutorial in the modeling, but; # focuses on hypothesis testing instead of interval estimation.; #; # More background on this 'prototype problem' can be found in the; # following papers:; #; # - Evaluation of three methods for calculating statistical significance; # when incorporating a systematic uncertainty into a test of the; # background-only hypothesis for a Poisson process; # Authors: Robert D. Cousins, James T. Linnemann, Jordan Tucker; # http:#arxiv.org/abs/physics/0702156; # NIM A 595 (2008) 480--501; #; # - Statistical Challenges for Searches for New Physics at the LHC; # Author: Kyle Cranmer; # http:#arxiv.org/abs/physics/0511028; #; # - Measures of Significance in HEP and Astrophysics; # Author: J. T. Linnemann; # http:#arxiv.org/abs/physics/0312059; #; # \macro_image; # \macro_output; # \macro_code; #; # \authors Kyle Cranmer, Wouter Verkerke, Sven Kreiss, and Jolly Chen (Python translation)",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:309,Usability,clear,clearly,309,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # A hypothesis testing example based on number counting with background uncertainty.; #; # A hypothesis testing example based on number counting; # with background uncertainty.; #; # NOTE: This example is like HybridInstructional, but the model is more clearly; # generalizable to an analysis with shapes. There is a lot of flexibility; # for how one models a problem in RooFit/RooStats. Models come in a few; # common forms:; # - standard form: extended PDF of some discriminating variable m:; # eg: P(m) ~ S*fs(m) + B*fb(m), with S+B events expected; # in this case the dataset has N rows corresponding to N events; # and the extended term is Pois(N|S+B); #; # - fractional form: non-extended PDF of some discriminating variable m:; # eg: P(m) ~ s*fs(m) + (1-s)*fb(m), where s is a signal fraction; # in this case the dataset has N rows corresponding to N events; # and there is no extended term; #; # - number counting form: in which there is no discriminating variable; # and the counts are modeled directly (see HybridInstructional); # eg: P(N) = Pois(N|S+B); # in this case the dataset has 1 row corresponding to N events; # and the extended term is the PDF itself.; #; # Here we convert the number counting form into the standard form by; # introducing a dummy discriminating variable m with a uniform distribution.; #; # This example:; # - demonstrates the usage of the HybridCalcultor (Part 4-6); # - demonstrates the numerical integration of RooFit (Part 2); # - validates the RooStats against an example with a known analytic answer; # - demonstrates usage of different test statistics; # - explains subtle choices in the prior used for hybrid methods; # - demonstrates usage of different priors for the nuisance parameters; # - demonstrates usage of PROOF; #; # The basic setup here is that a main measurement has observed x events with an; # expectation of s+b. One can choose an ad hoc prior for the uncertainty on b,; # or try to ",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:7,Deployability,configurat,configuration,7,"# User configuration parameters",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:7,Modifiability,config,configuration,7,"# User configuration parameters",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:97,Testability,Test,Test,97,"# ratio Ntoys Null/ntoys ALT; # -------------------------------------------------------; # A New Test Statistic Class for this example.; # It simply returns the sum of the values in a particular; # column of a dataset.; # You can ignore this class and focus on the macro below",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:142,Usability,simpl,simply,142,"# ratio Ntoys Null/ntoys ALT; # -------------------------------------------------------; # A New Test Statistic Class for this example.; # It simply returns the sum of the values in a particular; # column of a dataset.; # You can ignore this class and focus on the macro below",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:336,Integrability,interface,interface,336,"""""""; using namespace RooFit;; using namespace RooStats;. class BinCountTestStat : public TestStatistic {; public:; BinCountTestStat(void) : fColumnName(""tmp"") {}; BinCountTestStat(string columnName) : fColumnName(columnName) {}. virtual Double_t Evaluate(RooAbsData &data, RooArgSet & /*nullPOI*/); {; // This is the main method in the interface; Double_t value = 0.0;; for (int i = 0; i < data.numEntries(); i++) {; value += data.get(i)->getRealValue(fColumnName.c_str());; }; return value;; }; virtual const TString GetVarName() const { return fColumnName; }. private:; string fColumnName;. protected:; ClassDef(BinCountTestStat, 1); };; """"""",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:89,Testability,Test,TestStatistic,89,"""""""; using namespace RooFit;; using namespace RooStats;. class BinCountTestStat : public TestStatistic {; public:; BinCountTestStat(void) : fColumnName(""tmp"") {}; BinCountTestStat(string columnName) : fColumnName(columnName) {}. virtual Double_t Evaluate(RooAbsData &data, RooArgSet & /*nullPOI*/); {; // This is the main method in the interface; Double_t value = 0.0;; for (int i = 0; i < data.numEntries(); i++) {; value += data.get(i)->getRealValue(fColumnName.c_str());; }; return value;; }; virtual const TString GetVarName() const { return fColumnName; }. private:; string fColumnName;. protected:; ClassDef(BinCountTestStat, 1); };; """"""",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:428,Testability,test,test,428,"# -----------------------------; # The Actual Tutorial Macro; # -----------------------------; # This tutorial has 6 parts; # Table of Contents; # Setup; # 1. Make the model for the 'prototype problem'; # Special cases; # 2. NOT RELEVANT HERE; # 3. Use RooStats analytic solution for this problem; # RooStats HybridCalculator -- can be generalized; # 4. RooStats ToyMC version of 2. & 3.; # 5. RooStats ToyMC with an equivalent test statistic; # 6. RooStats ToyMC with simultaneous control & main measurement; # Part 4 takes ~4 min without PROOF.; # Part 5 takes about ~2 min with PROOF on 4 cores.; # Of course, everything looks nicer with more toys, which takes longer.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:30,Modifiability,variab,variable,30,"# m is a dummy discriminating variable",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:80,Integrability,message,messages,80,"# We will control the output level in a few places to avoid; # verbose progress messages. We start by keeping track; # of the current threshold on messages.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:147,Integrability,message,messages,147,"# We will control the output level in a few places to avoid; # verbose progress messages. We start by keeping track; # of the current threshold on messages.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:54,Safety,avoid,avoid,54,"# We will control the output level in a few places to avoid; # verbose progress messages. We start by keeping track; # of the current threshold on messages.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:773,Modifiability,variab,variables,773,"# --------------------------------------------------------------; # P A R T 4 : U S I N G H Y B R I D C A L C U L A T O R; # ==============================================================; # Now we demonstrate the RooStats HybridCalculator.; #; # Like all RooStats calculators it needs the data and a ModelConfig; # for the relevant hypotheses. Since we are doing hypothesis testing; # we need a ModelConfig for the null (background only) and the alternate; # (signal+background) hypotheses. We also need to specify the PDF,; # the parameters of interest, and the observables. Furthermore, since; # the parameter of interest is floating, we need to specify which values; # of the parameter corresponds to the null and alternate (eg. s=0 and s=50); #; # define some sets of variables obs={x} and poi={s}; # note here, x is the only observable in the main measurement; # and y is treated as a separate measurement, which is used; # to produce the prior that will be used in this calculation; # to randomize the nuisance parameters.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:375,Testability,test,testing,375,"# --------------------------------------------------------------; # P A R T 4 : U S I N G H Y B R I D C A L C U L A T O R; # ==============================================================; # Now we demonstrate the RooStats HybridCalculator.; #; # Like all RooStats calculators it needs the data and a ModelConfig; # for the relevant hypotheses. Since we are doing hypothesis testing; # we need a ModelConfig for the null (background only) and the alternate; # (signal+background) hypotheses. We also need to specify the PDF,; # the parameters of interest, and the observables. Furthermore, since; # the parameter of interest is floating, we need to specify which values; # of the parameter corresponds to the null and alternate (eg. s=0 and s=50); #; # define some sets of variables obs={x} and poi={s}; # note here, x is the only observable in the main measurement; # and y is treated as a separate measurement, which is used; # to produce the prior that will be used in this calculation; # to randomize the nuisance parameters.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:314,Integrability,interface,interface,314,"# Part 3b : Choose Test Statistic; # --------------------------------------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # RooStats.TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:270,Modifiability,inherit,inherits,270,"# Part 3b : Choose Test Statistic; # --------------------------------------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # RooStats.TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:19,Testability,Test,Test,19,"# Part 3b : Choose Test Statistic; # --------------------------------------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # RooStats.TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:161,Testability,test,test,161,"# Part 3b : Choose Test Statistic; # --------------------------------------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # RooStats.TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:203,Testability,test,test,203,"# Part 3b : Choose Test Statistic; # --------------------------------------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # RooStats.TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:300,Testability,Test,TestStatistic,300,"# Part 3b : Choose Test Statistic; # --------------------------------------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # RooStats.TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:329,Usability,simpl,simply,329,"# Part 3b : Choose Test Statistic; # --------------------------------------------------------------; # To make an equivalent calculation we need to use x as the test; # statistic. This is not a built-in test statistic in RooStats; # so we define it above. The new class inherits from the; # RooStats.TestStatistic interface, and simply returns the value; # of x in the dataset.",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:82,Testability,log,log-normal,82,"# this corresponds to the ""Z_N"" calculation.; #; # or one could use the analogous log-normal prior",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:680,Modifiability,config,configure,680,"#; # Ideally, the HybridCalculator would be able to inspect the full; # model Pois(x | s+b) * Pois(y | tau b ) and be given the original; # prior $\eta(b)$ to form $\pi(b) = Pois(y|tau*b) * \eta(b)$.; # This is not yet implemented because in the general case; # it is not easy to identify the terms in the PDF that correspond; # to the auxiliary measurement. So for now, it must be set; # explicitly with:; # - ForcePriorNuisanceNull(); # - ForcePriorNuisanceAlt(); # the name ""ForcePriorNuisance"" was chosen because we anticipate; # this to be auto-detected, but will leave the option open; # to force to a different prior for the nuisance parameters.; # Part 3d : Construct and configure the HybridCalculator; # -------------------------------------------------------",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:550,Safety,detect,detected,550,"#; # Ideally, the HybridCalculator would be able to inspect the full; # model Pois(x | s+b) * Pois(y | tau b ) and be given the original; # prior $\eta(b)$ to form $\pi(b) = Pois(y|tau*b) * \eta(b)$.; # This is not yet implemented because in the general case; # it is not easy to identify the terms in the PDF that correspond; # to the auxiliary measurement. So for now, it must be set; # explicitly with:; # - ForcePriorNuisanceNull(); # - ForcePriorNuisanceAlt(); # the name ""ForcePriorNuisance"" was chosen because we anticipate; # this to be auto-detected, but will leave the option open; # to force to a different prior for the nuisance parameters.; # Part 3d : Construct and configure the HybridCalculator; # -------------------------------------------------------",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:10,Testability,test,test,10,"# set the test statistic; # toymcs1.SetGenerateBinned()",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:426,Availability,ERROR,ERROR,426,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:411,Integrability,message,messages,411,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:209,Testability,log,log-normal,209,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc1.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc1.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:267,Testability,test,test,267,"# keep the running time short by default; # -------------------------------------------------------------------------; # # P A R T 5 : U S I N G H Y B R I D C A L C U L A T O R W I T H; # # A N A L T E R N A T I V E T E S T S T A T I S T I C; #; # A likelihood ratio test statistics should be 1-to-1 with the count x; # when the value of b is fixed in the likelihood. This is implemented; # by the SimpleLikelihoodRatioTestStat",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:398,Usability,Simpl,SimpleLikelihoodRatioTestStat,398,"# keep the running time short by default; # -------------------------------------------------------------------------; # # P A R T 5 : U S I N G H Y B R I D C A L C U L A T O R W I T H; # # A N A L T E R N A T I V E T E S T S T A T I S T I C; #; # A likelihood ratio test statistics should be 1-to-1 with the count x; # when the value of b is fixed in the likelihood. This is implemented; # by the SimpleLikelihoodRatioTestStat",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:426,Availability,ERROR,ERROR,426,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:411,Integrability,message,messages,411,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:209,Testability,log,log-normal,209,"# if you wanted to use the ad hoc Gaussian prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""gauss_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""gauss_prior"")); # ~~~; # if you wanted to use the ad hoc log-normal prior instead; # ~~~; # hc2.ForcePriorNuisanceAlt(w.pdf(""lognorm_prior"")); # hc2.ForcePriorNuisanceNull(w.pdf(""lognorm_prior"")); # ~~~; # these lines save current msg level and then kill any messages below ERROR",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:529,Testability,Test,Test,529,"# so standard tutorial runs faster; # ---------------------------------------------; # OUTPUT W/O PROOF (2.66 GHz Intel Core i7); # ============================================; # -----------------------------------------; # Part 3; # Z_Bi p-value (analytic): 0.00094165; # Z_Bi significance (analytic): 3.10804; # Real time 0:00:00, CP time 0.610; # Results HybridCalculator_result:; # - Null p-value = 0.00103333 +/- 0.000179406; # - Significance = 3.08048 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 150; # - CL_b: 0.998967 +/- 0.000185496; # - CL_s+b: 0.495 +/- 0.0158106; # - CL_s: 0.495512 +/- 0.0158272; # Real time 0:04:43, CP time 283.780; # With PROOF; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00105 +/- 0.000206022; # - Significance = 3.07571 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.99895 +/- 0.000229008; # - CL_s+b: 0.491 +/- 0.0158088; # - CL_s: 0.491516 +/- 0.0158258; # Real time 0:02:22, CP time 0.990; # -------------------------------------------------------; # Comparison; # -------------------------------------------------------; # LEPStatToolsForLHC; # https:#plone4.fnal.gov:4430/P0/phystat/packages/0703002; # Uses Gaussian prior; # CL_b = 6.218476e-04, Significance = 3.228665 sigma; #; # -------------------------------------------------------; # Comparison; # -------------------------------------------------------; # Asymptotic; # From the value of the profile likelihood ratio (5.0338); # The significance can be estimated using Wilks's theorem; # significance = sqrt(2*profileLR) = 3.1729 sigma",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py:955,Testability,Test,Test,955,"# so standard tutorial runs faster; # ---------------------------------------------; # OUTPUT W/O PROOF (2.66 GHz Intel Core i7); # ============================================; # -----------------------------------------; # Part 3; # Z_Bi p-value (analytic): 0.00094165; # Z_Bi significance (analytic): 3.10804; # Real time 0:00:00, CP time 0.610; # Results HybridCalculator_result:; # - Null p-value = 0.00103333 +/- 0.000179406; # - Significance = 3.08048 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 30000; # - Test statistic evaluated on data: 150; # - CL_b: 0.998967 +/- 0.000185496; # - CL_s+b: 0.495 +/- 0.0158106; # - CL_s: 0.495512 +/- 0.0158272; # Real time 0:04:43, CP time 283.780; # With PROOF; # -----------------------------------------; # Part 5; # Results HybridCalculator_result:; # - Null p-value = 0.00105 +/- 0.000206022; # - Significance = 3.07571 sigma; # - Number of S+B toys: 1000; # - Number of B toys: 20000; # - Test statistic evaluated on data: 10.8198; # - CL_b: 0.99895 +/- 0.000229008; # - CL_s+b: 0.491 +/- 0.0158088; # - CL_s: 0.491516 +/- 0.0158258; # Real time 0:02:22, CP time 0.990; # -------------------------------------------------------; # Comparison; # -------------------------------------------------------; # LEPStatToolsForLHC; # https:#plone4.fnal.gov:4430/P0/phystat/packages/0703002; # Uses Gaussian prior; # CL_b = 6.218476e-04, Significance = 3.228665 sigma; #; # -------------------------------------------------------; # Comparison; # -------------------------------------------------------; # Asymptotic; # From the value of the profile likelihood ratio (5.0338); # The significance can be estimated using Wilks's theorem; # significance = sqrt(2*profileLR) = 3.1729 sigma",MatchSource.CODE_COMMENT,tutorials/roostats/HybridStandardForm.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/HybridStandardForm.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py:329,Security,validat,validate,329,"## \file; ## \ingroup tutorial_roostats; ## \notebook; ## Example showing confidence intervals with four techniques.; ##; ## An example that shows confidence intervals with four techniques.; ## The model is a Normal Gaussian G(x|mu,sigma) with 100 samples of x.; ## The answer is known analytically, so this is a good example to validate; ## the RooStats tools.; ##; ## - expected interval is [-0.162917, 0.229075]; ## - plc interval is [-0.162917, 0.229075]; ## - fc interval is [-0.17 , 0.23] // stepsize is 0.01; ## - bc interval is [-0.162918, 0.229076]; ## - mcmc interval is [-0.166999, 0.230224]; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date July 2022; ## \authors Artem Busorgin, Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/IntervalExamples.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py:9,Usability,simpl,simple,9,"# make a simple model via the workspace factory",MatchSource.CODE_COMMENT,tutorials/roostats/IntervalExamples.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py:22,Testability,test,test,22,"# number of points to test per parameter",MatchSource.CODE_COMMENT,tutorials/roostats/IntervalExamples.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py:92,Modifiability,extend,extended,92,"# make it go faster; # Here, we consider only ensembles with 100 events; # The PDF could be extended and this could be removed",MatchSource.CODE_COMMENT,tutorials/roostats/IntervalExamples.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py:117,Availability,fault,faults,117,"# TODO: The BayesianCalculator and MCMCCalculator have to be destructed first.; # Otherwise, we can get segmentation faults depending on the destruction order,; # which is random in Python. Probably the issue is that some object has a; # non-owning pointer to another object, which it uses in its destructor. This; # should be fixed either in the design of RooStats in C++, or with; # phythonizations.",MatchSource.CODE_COMMENT,tutorials/roostats/IntervalExamples.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py:124,Integrability,depend,depending,124,"# TODO: The BayesianCalculator and MCMCCalculator have to be destructed first.; # Otherwise, we can get segmentation faults depending on the destruction order,; # which is random in Python. Probably the issue is that some object has a; # non-owning pointer to another object, which it uses in its destructor. This; # should be fixed either in the design of RooStats in C++, or with; # phythonizations.",MatchSource.CODE_COMMENT,tutorials/roostats/IntervalExamples.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/IntervalExamples.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py:405,Testability,test,test,405,"## \file; ## \ingroup tutorial_roostats; ## \notebook; ## Comparison of MCMC and PLC in a multi-variate gaussian problem; ##; ## This tutorial produces an N-dimensional multivariate Gaussian; ## with a non-trivial covariance matrix. By default N=4 (called ""dim"").; ##; ## A subset of these are considered parameters of interest.; ## This problem is tractable analytically.; ##; ## We use this mainly as a test of Markov Chain Monte Carlo; ## and we compare the result to the profile likelihood ratio.; ##; ## We use the proposal helper to create a customized; ## proposal function for this problem.; ##; ## For N=4 and 2 parameters of interest it takes about 10-20 seconds; ## and the acceptance rate is 37%; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date July 2022; ## \authors Artem Busorgin, Kevin Belasco and Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/MultivariateGaussianTest.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py:23,Modifiability,config,config,23,"# now create the model config for this problem",MatchSource.CODE_COMMENT,tutorials/roostats/MultivariateGaussianTest.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py:110,Energy Efficiency,efficient,efficient,110,"# -------------------------------------------------------; # Setup calculators; # MCMC; # we want to setup an efficient proposal function; # using the covariance matrix from a fit to the data",MatchSource.CODE_COMMENT,tutorials/roostats/MultivariateGaussianTest.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py:93,Availability,fault,faults,93,"# TODO: The MCMCCalculator has to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,tutorials/roostats/MultivariateGaussianTest.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py:100,Integrability,depend,depending,100,"# TODO: The MCMCCalculator has to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,tutorials/roostats/MultivariateGaussianTest.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/MultivariateGaussianTest.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs101_limitexample.py:22,Testability,test,test,22,"# number of points to test per parameter",MatchSource.CODE_COMMENT,tutorials/roostats/rs101_limitexample.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs101_limitexample.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs101_limitexample.py:70,Modifiability,config,configuring,70,"# Third, use a Calculator based on Markov Chain monte carlo; # Before configuring the calculator, let's make a ProposalFunction; # that will achieve a high acceptance rate",MatchSource.CODE_COMMENT,tutorials/roostats/rs101_limitexample.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs101_limitexample.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:347,Modifiability,variab,variable,347,"# \file; # \ingroup roostats_python_tutorials; # \notebook -js; # SPlot tutorial; #; # This tutorial shows an example of using SPlot to unfold two distributions.; # The physics context for the example is that we want to know; # the isolation distribution for real electrons from Z events; # and fake electrons from QCD. Isolation is our 'control' variable.; # To unfold them, we need a model for an uncorrelated variable that; # discriminates between Z and QCD. To do this, we use the invariant; # mass of two electrons. We model the Z with a Gaussian and the QCD; # with a falling exponential.; #; # Note, since we don't have real data in this tutorial, we need to generate; # toy data. To do that we need a model for the isolation variable for; # both Z and QCD. This is only used to generate the toy data, and would; # not be needed if we had real data.; #; # \macro_image; # \macro_code; # \macro_output; #; # \authors P. P., Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:412,Modifiability,variab,variable,412,"# \file; # \ingroup roostats_python_tutorials; # \notebook -js; # SPlot tutorial; #; # This tutorial shows an example of using SPlot to unfold two distributions.; # The physics context for the example is that we want to know; # the isolation distribution for real electrons from Z events; # and fake electrons from QCD. Isolation is our 'control' variable.; # To unfold them, we need a model for an uncorrelated variable that; # discriminates between Z and QCD. To do this, we use the invariant; # mass of two electrons. We model the Z with a Gaussian and the QCD; # with a falling exponential.; #; # Note, since we don't have real data in this tutorial, we need to generate; # toy data. To do that we need a model for the isolation variable for; # both Z and QCD. This is only used to generate the toy data, and would; # not be needed if we had real data.; #; # \macro_image; # \macro_code; # \macro_output; #; # \authors P. P., Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:733,Modifiability,variab,variable,733,"# \file; # \ingroup roostats_python_tutorials; # \notebook -js; # SPlot tutorial; #; # This tutorial shows an example of using SPlot to unfold two distributions.; # The physics context for the example is that we want to know; # the isolation distribution for real electrons from Z events; # and fake electrons from QCD. Isolation is our 'control' variable.; # To unfold them, we need a model for an uncorrelated variable that; # discriminates between Z and QCD. To do this, we use the invariant; # mass of two electrons. We model the Z with a Gaussian and the QCD; # with a falling exponential.; #; # Note, since we don't have real data in this tutorial, we need to generate; # toy data. To do that we need a model for the isolation variable for; # both Z and QCD. This is only used to generate the toy data, and would; # not be needed if we had real data.; #; # \macro_image; # \macro_code; # \macro_output; #; # \authors P. P., Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:26,Modifiability,variab,variables,26,"# combined model; # These variables represent the number of Z or QCD events; # They will be fitted.",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:2,Performance,Perform,Perform,2,"# Perform the plot",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:63,Modifiability,variab,variable,63,"# Now we use the SPlot class to add SWeights for the isolation variable to; # our data set based on fitting the yields to the invariant mass variable.; # Any keyword arguments will be forwarded to the underlying call to RooAbsPdf::fitTo().",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:141,Modifiability,variab,variable,141,"# Now we use the SPlot class to add SWeights for the isolation variable to; # our data set based on fitting the yields to the invariant mass variable.; # Any keyword arguments will be forwarded to the underlying call to RooAbsPdf::fitTo().",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:43,Modifiability,variab,variable,43,"# Here we make plots of the discriminating variable (invMass) after the fit; # and of the control variable (isolation) after unfolding with sPlot.; # make our canvas",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:98,Modifiability,variab,variable,98,"# Here we make plots of the discriminating variable (invMass) after the fit; # and of the control variable (isolation) after unfolding with sPlot.; # make our canvas",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:402,Modifiability,variab,variable,402,"# Now use the sWeights to show isolation distribution for Z and QCD.; # The SPlot class can make this easier, but here we demonstrate in more; # detail how the sWeights are used. The SPlot class should make this; # very easy and needs some more development.; # Plot isolation for Z component.; # Do this by plotting all events weighted by the sWeight for the Z component.; # The SPlot class adds a new variable that has the name of the corresponding; # yield + ""_sw"".",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:59,Availability,error,errors,59,"# Since the data are weighted, we use SumW2 to compute the errors.",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:136,Modifiability,variab,variable,136,"# Plot isolation for QCD component.; # Eg. plot all events weighted by the sWeight for the QCD component.; # The SPlot class adds a new variable that has the name of the corresponding; # yield + ""_sw"".",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:45,Modifiability,variab,variable,45,"# Make some plots showing the discriminating variable and; # the control variable after unfolding.",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py:73,Modifiability,variab,variable,73,"# Make some plots showing the discriminating variable and; # the control variable after unfolding.",MatchSource.CODE_COMMENT,tutorials/roostats/rs301_splot.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs301_splot.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py:9,Usability,simpl,simple,9,"# make a simple model",MatchSource.CODE_COMMENT,tutorials/roostats/rs401c_FeldmanCousins.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py:14,Testability,test,test,14,"# set size of test",MatchSource.CODE_COMMENT,tutorials/roostats/rs401c_FeldmanCousins.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py:22,Testability,test,test,22,"# number of points to test per parameter; # use the Feldman-Cousins tool",MatchSource.CODE_COMMENT,tutorials/roostats/rs401c_FeldmanCousins.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py:22,Testability,test,test,22,"# loop over points to test",MatchSource.CODE_COMMENT,tutorials/roostats/rs401c_FeldmanCousins.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py:51,Testability,test,test,51,"# get a parameter point from the list of points to test.",MatchSource.CODE_COMMENT,tutorials/roostats/rs401c_FeldmanCousins.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs401c_FeldmanCousins.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs601_HLFactoryexample.py:96,Usability,simpl,simple,96,"## \file; ## \ingroup tutorial_roostats; ## \notebook -js; ## High Level Factory: creation of a simple model; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date July 2022; ## \authors Artem Busorgin, Danilo Piparo (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/rs601_HLFactoryexample.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs601_HLFactoryexample.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs601_HLFactoryexample.py:14,Modifiability,extend,extended,14,"# --- Perform extended ML fit of composite PDF to toy data ---",MatchSource.CODE_COMMENT,tutorials/roostats/rs601_HLFactoryexample.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs601_HLFactoryexample.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs601_HLFactoryexample.py:6,Performance,Perform,Perform,6,"# --- Perform extended ML fit of composite PDF to toy data ---",MatchSource.CODE_COMMENT,tutorials/roostats/rs601_HLFactoryexample.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs601_HLFactoryexample.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py:14,Integrability,message,messages,14,"# to suppress messages when pdf goes to zero",MatchSource.CODE_COMMENT,tutorials/roostats/rs701_BayesianCalculator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py:97,Availability,fault,faults,97,"# TODO: The BayesianCalculator has to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,tutorials/roostats/rs701_BayesianCalculator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py:104,Integrability,depend,depending,104,"# TODO: The BayesianCalculator has to be destructed first. Otherwise, we can get; # segmentation faults depending on the destruction order, which is random in; # Python. Probably the issue is that some object has a non-owning pointer to; # another object, which it uses in its destructor. This should be fixed either; # in the design of RooStats in C++, or with phythonizations.",MatchSource.CODE_COMMENT,tutorials/roostats/rs701_BayesianCalculator.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs701_BayesianCalculator.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:775,Availability,toler,tolerance,775,"## \file; ## \ingroup tutorial_roostats; ## \notebook -js; ## Example of the BernsteinCorrection utility in RooStats.; ##; ## The idea is that one has a distribution coming either from data or Monte Carlo; ## (called ""reality"" in the macro) and a nominal model that is not sufficiently; ## flexible to take into account the real distribution. One wants to take into; ## account the systematic associated with this imperfect modeling by augmenting; ## the nominal model with some correction term (in this case a polynomial).; ## The BernsteinCorrection utility will import into your workspace a corrected model; ## given by nominal(x) * poly_N(x), where poly_N is an n-th order polynomial in; ## the Bernstein basis. The degree N of the polynomial is chosen by specifying the tolerance; ## one has in adding an extra term to the polynomial.; ## The Bernstein basis is nice because it only has positive-definite terms; ## and works well with PDFs.; ## Finally, the macro makes a plot of:; ## - the data (drawn from 'reality'),; ## - the best fit of the nominal model (blue); ## - and the best fit corrected model.; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date June 2022; ## \authors Artem Busorgin, Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/rs_bernsteinCorrection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:290,Modifiability,flexible,flexible,290,"## \file; ## \ingroup tutorial_roostats; ## \notebook -js; ## Example of the BernsteinCorrection utility in RooStats.; ##; ## The idea is that one has a distribution coming either from data or Monte Carlo; ## (called ""reality"" in the macro) and a nominal model that is not sufficiently; ## flexible to take into account the real distribution. One wants to take into; ## account the systematic associated with this imperfect modeling by augmenting; ## the nominal model with some correction term (in this case a polynomial).; ## The BernsteinCorrection utility will import into your workspace a corrected model; ## given by nominal(x) * poly_N(x), where poly_N is an n-th order polynomial in; ## the Bernstein basis. The degree N of the polynomial is chosen by specifying the tolerance; ## one has in adding an extra term to the polynomial.; ## The Bernstein basis is nice because it only has positive-definite terms; ## and works well with PDFs.; ## Finally, the macro makes a plot of:; ## - the data (drawn from 'reality'),; ## - the best fit of the nominal model (blue); ## - and the best fit corrected model.; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date June 2022; ## \authors Artem Busorgin, Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/rs_bernsteinCorrection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:6,Availability,toler,tolerance,6,"# The tolerance sets the probability to add an unnecessary term.; # lower tolerance will add fewer terms, while higher tolerance; # will add more terms and provide a more flexible function.",MatchSource.CODE_COMMENT,tutorials/roostats/rs_bernsteinCorrection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:74,Availability,toler,tolerance,74,"# The tolerance sets the probability to add an unnecessary term.; # lower tolerance will add fewer terms, while higher tolerance; # will add more terms and provide a more flexible function.",MatchSource.CODE_COMMENT,tutorials/roostats/rs_bernsteinCorrection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:119,Availability,toler,tolerance,119,"# The tolerance sets the probability to add an unnecessary term.; # lower tolerance will add fewer terms, while higher tolerance; # will add more terms and provide a more flexible function.",MatchSource.CODE_COMMENT,tutorials/roostats/rs_bernsteinCorrection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:171,Modifiability,flexible,flexible,171,"# The tolerance sets the probability to add an unnecessary term.; # lower tolerance will add fewer terms, while higher tolerance; # will add more terms and provide a more flexible function.",MatchSource.CODE_COMMENT,tutorials/roostats/rs_bernsteinCorrection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:55,Energy Efficiency,green,green,55,"# plot the correction term (* norm constant) in dashed green; # should make norm constant just be 1, not depend on binning of data",MatchSource.CODE_COMMENT,tutorials/roostats/rs_bernsteinCorrection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:105,Integrability,depend,depend,105,"# plot the correction term (* norm constant) in dashed green; # should make norm constant just be 1, not depend on binning of data",MatchSource.CODE_COMMENT,tutorials/roostats/rs_bernsteinCorrection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:260,Availability,toler,tolerance,260,"# this is a switch to check the sampling distribution; # of -2 log LR for two comparisons:; # the first is for n-1 vs. n degree polynomial corrections; # the second is for n vs. n+1 degree polynomial corrections; # Here we choose n to be the one chosen by the tolerance; # criterion above, eg. n = ""degree"" in the code.; # Setting this to true is takes about 10 min.",MatchSource.CODE_COMMENT,tutorials/roostats/rs_bernsteinCorrection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py:63,Testability,log,log,63,"# this is a switch to check the sampling distribution; # of -2 log LR for two comparisons:; # the first is for n-1 vs. n degree polynomial corrections; # the second is for n vs. n+1 degree polynomial corrections; # Here we choose n to be the one chosen by the tolerance; # criterion above, eg. n = ""degree"" in the code.; # Setting this to true is takes about 10 min.",MatchSource.CODE_COMMENT,tutorials/roostats/rs_bernsteinCorrection.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_bernsteinCorrection.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_numbercountingutils.py:706,Energy Efficiency,energy,energy,706,"## \file; ## \ingroup tutorial_roostats; ## \notebook -nodraw; ## 'Number Counting Utils' RooStats tutorial; ##; ## This tutorial shows an example of the RooStats standalone; ## utilities that calculate the p-value or Z value (eg. significance in; ## 1-sided Gaussian standard deviations) for a number counting experiment.; ## This is a hypothesis test between background only and signal-plus-background.; ## The background estimate has uncertainty derived from an auxiliary or sideband; ## measurement.; ##; ## Documentation for these utilities can be found here:; ## https://root.cern.ch/doc/master/namespaceNumberCountingUtils.html; ##; ##; ## This problem is often called a proto-type problem for high energy physics.; ## In some references it is referred to as the on/off problem.; ##; ## The problem is treated in a fully frequentist fashion by; ## interpreting the relative background uncertainty as; ## being due to an auxiliary or sideband observation; ## that is also Poisson distributed with only background.; ## Finally, one considers the test as a ratio of Poisson means; ## where an interval is well known based on the conditioning on the total; ## number of events and the binomial distribution.; ## For more on this, see; ## - http://arxiv.org/abs/0905.3831; ## - http://arxiv.org/abs/physics/physics/0702156; ## - http://arxiv.org/abs/physics/0511028; ##; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date July 2022; ## \authors Artem Busorgin, Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/rs_numbercountingutils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_numbercountingutils.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_numbercountingutils.py:348,Testability,test,test,348,"## \file; ## \ingroup tutorial_roostats; ## \notebook -nodraw; ## 'Number Counting Utils' RooStats tutorial; ##; ## This tutorial shows an example of the RooStats standalone; ## utilities that calculate the p-value or Z value (eg. significance in; ## 1-sided Gaussian standard deviations) for a number counting experiment.; ## This is a hypothesis test between background only and signal-plus-background.; ## The background estimate has uncertainty derived from an auxiliary or sideband; ## measurement.; ##; ## Documentation for these utilities can be found here:; ## https://root.cern.ch/doc/master/namespaceNumberCountingUtils.html; ##; ##; ## This problem is often called a proto-type problem for high energy physics.; ## In some references it is referred to as the on/off problem.; ##; ## The problem is treated in a fully frequentist fashion by; ## interpreting the relative background uncertainty as; ## being due to an auxiliary or sideband observation; ## that is also Poisson distributed with only background.; ## Finally, one considers the test as a ratio of Poisson means; ## where an interval is well known based on the conditioning on the total; ## number of events and the binomial distribution.; ## For more on this, see; ## - http://arxiv.org/abs/0905.3831; ## - http://arxiv.org/abs/physics/physics/0702156; ## - http://arxiv.org/abs/physics/0511028; ##; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date July 2022; ## \authors Artem Busorgin, Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/rs_numbercountingutils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_numbercountingutils.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_numbercountingutils.py:1051,Testability,test,test,1051,"## \file; ## \ingroup tutorial_roostats; ## \notebook -nodraw; ## 'Number Counting Utils' RooStats tutorial; ##; ## This tutorial shows an example of the RooStats standalone; ## utilities that calculate the p-value or Z value (eg. significance in; ## 1-sided Gaussian standard deviations) for a number counting experiment.; ## This is a hypothesis test between background only and signal-plus-background.; ## The background estimate has uncertainty derived from an auxiliary or sideband; ## measurement.; ##; ## Documentation for these utilities can be found here:; ## https://root.cern.ch/doc/master/namespaceNumberCountingUtils.html; ##; ##; ## This problem is often called a proto-type problem for high energy physics.; ## In some references it is referred to as the on/off problem.; ##; ## The problem is treated in a fully frequentist fashion by; ## interpreting the relative background uncertainty as; ## being due to an auxiliary or sideband observation; ## that is also Poisson distributed with only background.; ## Finally, one considers the test as a ratio of Poisson means; ## where an interval is well known based on the conditioning on the total; ## number of events and the binomial distribution.; ## For more on this, see; ## - http://arxiv.org/abs/0905.3831; ## - http://arxiv.org/abs/physics/physics/0702156; ## - http://arxiv.org/abs/physics/0511028; ##; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \date July 2022; ## \authors Artem Busorgin, Kyle Cranmer (C++ version)",MatchSource.CODE_COMMENT,tutorials/roostats/rs_numbercountingutils.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/rs_numbercountingutils.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/StandardProfileInspectorDemo.py:83,Security,access,access,83,"# -------------------------------------------------------; # First part is just to access a user-defined file; # or create the standard example file if it doesn't exist",MatchSource.CODE_COMMENT,tutorials/roostats/StandardProfileInspectorDemo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/StandardProfileInspectorDemo.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/StandardProfileLikelihoodDemo.py:207,Modifiability,config,config,207,"# ---------------------------------------------; # create and use the ProfileLikelihoodCalculator; # to find and plot the 95% confidence interval; # on the parameter of interest as specified; # in the model config",MatchSource.CODE_COMMENT,tutorials/roostats/StandardProfileLikelihoodDemo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/StandardProfileLikelihoodDemo.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/StandardProfileLikelihoodDemo.py:63,Performance,perform,perform,63,"# use option TF1 if too slow (plot.Draw(""tf1""); # if requested perform also an hypothesis test for the significance",MatchSource.CODE_COMMENT,tutorials/roostats/StandardProfileLikelihoodDemo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/StandardProfileLikelihoodDemo.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/StandardProfileLikelihoodDemo.py:90,Testability,test,test,90,"# use option TF1 if too slow (plot.Draw(""tf1""); # if requested perform also an hypothesis test for the significance",MatchSource.CODE_COMMENT,tutorials/roostats/StandardProfileLikelihoodDemo.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/StandardProfileLikelihoodDemo.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TestNonCentral.py:27,Testability,test,test,27,"# w.var(""kk"").setVal(4.) # test a large kk",MatchSource.CODE_COMMENT,tutorials/roostats/TestNonCentral.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TestNonCentral.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:2839,Deployability,install,installed,2839,"ce; # interval for any particular dataset by finding the intersection; # of the observed test statistic and the confidence belt. First; # this is done on the observed data to get an observed 1-sided upper limt.; #; # Finally, there expected limit and bands (from background-only) are; # formed by generating background-only data and finding the upper limit.; # The background-only is defined as such that the nuisance parameters are; # fixed to their best fit value based on the data with the signal rate fixed to 0.; # The bands are done by hand for now, will later be part of the RooStats tools.; #; # On a technical note, this technique IS the generalization of Feldman-Cousins; # with nuisance parameters.; #; # Building the confidence belt can be computationally expensive.; # Once it is built, one could save it to a file and use it in a separate step.; #; # We can use PROOF to speed things along in parallel, however,; # the test statistic has to be installed on the workers; # so either turn off PROOF or include the modified test statistic; # in your $ROOTSYS/roofit/roostats/inc directory,; # add the additional line to the LinkDef.h file,; # and recompile root.; #; # Note, if you have a boundary on the parameter of interest (eg. cross-section); # the threshold on the two-sided test statistic starts off at moderate values and plateaus.; #; # [#0] PROGRESS:Generation -- generated toys: 500 / 999; # NeymanConstruction: Prog: 12/50 total MC = 39 this test stat = 0; # SigXsecOverSM=0.69 alpha_syst1=0.136515 alpha_syst3=0.425415 beta_syst2=1.08496 [-1e+30, 0.011215] in interval = 1; #; # this tells you the values of the parameters being used to generate the pseudo-experiments; # and the threshold in this case is 0.011215. One would expect for 95% that the threshold; # would be ~1.35 once the cross-section is far enough away from 0 that it is essentially; # unaffected by the boundary. As one reaches the last points in the scan, the; # threshold starts to get artificially high. Th",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:781,Testability,test,test,781,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # TwoSidedFrequentistUpperLimitWithBands; #; #; # This is a standard demo that can be used with any ROOT file; # prepared in the standard way. You specify:; # - name for input ROOT file; # - name of workspace inside ROOT file that holds model and data; # - name of ModelConfig that specifies details for calculator tools; # - name of dataset; #; # With default parameters the macro will attempt to run the; # standard hist2workspace example and read the ROOT file; # that it produces.; #; # You may want to control:; # ~~~{.cpp}; # double confidenceLevel=0.95;; # double additionalToysFac = 1.;; # int nPointsToScan = 12;; # int nToyMC = 200;; # ~~~; #; # This uses a modified version of the profile likelihood ratio as; # a test statistic for upper limits (eg. test stat = 0 if muhat>mu).; #; # Based on the observed data, one defines a set of parameter points; # to be tested based on the value of the parameter of interest; # and the conditional MLE (eg. profiled) values of the nuisance parameters.; #; # At each parameter point, pseudo-experiments are generated using this; # fixed reference model and then the test statistic is evaluated.; # The auxiliary measurements (global observables) associated with the; # constraint terms in nuisance parameters are also fluctuated in the; # process of generating the pseudo-experiments in a frequentist manner; # forming an 'unconditional ensemble'. One could form a 'conditional'; # ensemble in which these auxiliary measurements are fixed. Note that the; # nuisance parameters are not randomized, which is a Bayesian procedure.; # Note, the nuisance parameters are floating in the fits. For each point,; # the threshold that defines the 95% acceptance region is found. This; # forms a ""Confidence Belt"".; #; # After constructing the confidence belt, one can find the confidence; # interval for any particular dataset by finding the intersection; # of the observed test statistic and the confiden",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:818,Testability,test,test,818,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # TwoSidedFrequentistUpperLimitWithBands; #; #; # This is a standard demo that can be used with any ROOT file; # prepared in the standard way. You specify:; # - name for input ROOT file; # - name of workspace inside ROOT file that holds model and data; # - name of ModelConfig that specifies details for calculator tools; # - name of dataset; #; # With default parameters the macro will attempt to run the; # standard hist2workspace example and read the ROOT file; # that it produces.; #; # You may want to control:; # ~~~{.cpp}; # double confidenceLevel=0.95;; # double additionalToysFac = 1.;; # int nPointsToScan = 12;; # int nToyMC = 200;; # ~~~; #; # This uses a modified version of the profile likelihood ratio as; # a test statistic for upper limits (eg. test stat = 0 if muhat>mu).; #; # Based on the observed data, one defines a set of parameter points; # to be tested based on the value of the parameter of interest; # and the conditional MLE (eg. profiled) values of the nuisance parameters.; #; # At each parameter point, pseudo-experiments are generated using this; # fixed reference model and then the test statistic is evaluated.; # The auxiliary measurements (global observables) associated with the; # constraint terms in nuisance parameters are also fluctuated in the; # process of generating the pseudo-experiments in a frequentist manner; # forming an 'unconditional ensemble'. One could form a 'conditional'; # ensemble in which these auxiliary measurements are fixed. Note that the; # nuisance parameters are not randomized, which is a Bayesian procedure.; # Note, the nuisance parameters are floating in the fits. For each point,; # the threshold that defines the 95% acceptance region is found. This; # forms a ""Confidence Belt"".; #; # After constructing the confidence belt, one can find the confidence; # interval for any particular dataset by finding the intersection; # of the observed test statistic and the confiden",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:927,Testability,test,tested,927,"# \file; # \ingroup tutorial_roostats; # \notebook -js; # TwoSidedFrequentistUpperLimitWithBands; #; #; # This is a standard demo that can be used with any ROOT file; # prepared in the standard way. You specify:; # - name for input ROOT file; # - name of workspace inside ROOT file that holds model and data; # - name of ModelConfig that specifies details for calculator tools; # - name of dataset; #; # With default parameters the macro will attempt to run the; # standard hist2workspace example and read the ROOT file; # that it produces.; #; # You may want to control:; # ~~~{.cpp}; # double confidenceLevel=0.95;; # double additionalToysFac = 1.;; # int nPointsToScan = 12;; # int nToyMC = 200;; # ~~~; #; # This uses a modified version of the profile likelihood ratio as; # a test statistic for upper limits (eg. test stat = 0 if muhat>mu).; #; # Based on the observed data, one defines a set of parameter points; # to be tested based on the value of the parameter of interest; # and the conditional MLE (eg. profiled) values of the nuisance parameters.; #; # At each parameter point, pseudo-experiments are generated using this; # fixed reference model and then the test statistic is evaluated.; # The auxiliary measurements (global observables) associated with the; # constraint terms in nuisance parameters are also fluctuated in the; # process of generating the pseudo-experiments in a frequentist manner; # forming an 'unconditional ensemble'. One could form a 'conditional'; # ensemble in which these auxiliary measurements are fixed. Note that the; # nuisance parameters are not randomized, which is a Bayesian procedure.; # Note, the nuisance parameters are floating in the fits. For each point,; # the threshold that defines the 95% acceptance region is found. This; # forms a ""Confidence Belt"".; #; # After constructing the confidence belt, one can find the confidence; # interval for any particular dataset by finding the intersection; # of the observed test statistic and the confiden",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:1172,Testability,test,test,1172," that can be used with any ROOT file; # prepared in the standard way. You specify:; # - name for input ROOT file; # - name of workspace inside ROOT file that holds model and data; # - name of ModelConfig that specifies details for calculator tools; # - name of dataset; #; # With default parameters the macro will attempt to run the; # standard hist2workspace example and read the ROOT file; # that it produces.; #; # You may want to control:; # ~~~{.cpp}; # double confidenceLevel=0.95;; # double additionalToysFac = 1.;; # int nPointsToScan = 12;; # int nToyMC = 200;; # ~~~; #; # This uses a modified version of the profile likelihood ratio as; # a test statistic for upper limits (eg. test stat = 0 if muhat>mu).; #; # Based on the observed data, one defines a set of parameter points; # to be tested based on the value of the parameter of interest; # and the conditional MLE (eg. profiled) values of the nuisance parameters.; #; # At each parameter point, pseudo-experiments are generated using this; # fixed reference model and then the test statistic is evaluated.; # The auxiliary measurements (global observables) associated with the; # constraint terms in nuisance parameters are also fluctuated in the; # process of generating the pseudo-experiments in a frequentist manner; # forming an 'unconditional ensemble'. One could form a 'conditional'; # ensemble in which these auxiliary measurements are fixed. Note that the; # nuisance parameters are not randomized, which is a Bayesian procedure.; # Note, the nuisance parameters are floating in the fits. For each point,; # the threshold that defines the 95% acceptance region is found. This; # forms a ""Confidence Belt"".; #; # After constructing the confidence belt, one can find the confidence; # interval for any particular dataset by finding the intersection; # of the observed test statistic and the confidence belt. First; # this is done on the observed data to get an observed 1-sided upper limt.; #; # Finally, there expected limit a",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:1970,Testability,test,test,1970,"r points; # to be tested based on the value of the parameter of interest; # and the conditional MLE (eg. profiled) values of the nuisance parameters.; #; # At each parameter point, pseudo-experiments are generated using this; # fixed reference model and then the test statistic is evaluated.; # The auxiliary measurements (global observables) associated with the; # constraint terms in nuisance parameters are also fluctuated in the; # process of generating the pseudo-experiments in a frequentist manner; # forming an 'unconditional ensemble'. One could form a 'conditional'; # ensemble in which these auxiliary measurements are fixed. Note that the; # nuisance parameters are not randomized, which is a Bayesian procedure.; # Note, the nuisance parameters are floating in the fits. For each point,; # the threshold that defines the 95% acceptance region is found. This; # forms a ""Confidence Belt"".; #; # After constructing the confidence belt, one can find the confidence; # interval for any particular dataset by finding the intersection; # of the observed test statistic and the confidence belt. First; # this is done on the observed data to get an observed 1-sided upper limt.; #; # Finally, there expected limit and bands (from background-only) are; # formed by generating background-only data and finding the upper limit.; # The background-only is defined as such that the nuisance parameters are; # fixed to their best fit value based on the data with the signal rate fixed to 0.; # The bands are done by hand for now, will later be part of the RooStats tools.; #; # On a technical note, this technique IS the generalization of Feldman-Cousins; # with nuisance parameters.; #; # Building the confidence belt can be computationally expensive.; # Once it is built, one could save it to a file and use it in a separate step.; #; # We can use PROOF to speed things along in parallel, however,; # the test statistic has to be installed on the workers; # so either turn off PROOF or include the mo",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:2814,Testability,test,test,2814,"ce; # interval for any particular dataset by finding the intersection; # of the observed test statistic and the confidence belt. First; # this is done on the observed data to get an observed 1-sided upper limt.; #; # Finally, there expected limit and bands (from background-only) are; # formed by generating background-only data and finding the upper limit.; # The background-only is defined as such that the nuisance parameters are; # fixed to their best fit value based on the data with the signal rate fixed to 0.; # The bands are done by hand for now, will later be part of the RooStats tools.; #; # On a technical note, this technique IS the generalization of Feldman-Cousins; # with nuisance parameters.; #; # Building the confidence belt can be computationally expensive.; # Once it is built, one could save it to a file and use it in a separate step.; #; # We can use PROOF to speed things along in parallel, however,; # the test statistic has to be installed on the workers; # so either turn off PROOF or include the modified test statistic; # in your $ROOTSYS/roofit/roostats/inc directory,; # add the additional line to the LinkDef.h file,; # and recompile root.; #; # Note, if you have a boundary on the parameter of interest (eg. cross-section); # the threshold on the two-sided test statistic starts off at moderate values and plateaus.; #; # [#0] PROGRESS:Generation -- generated toys: 500 / 999; # NeymanConstruction: Prog: 12/50 total MC = 39 this test stat = 0; # SigXsecOverSM=0.69 alpha_syst1=0.136515 alpha_syst3=0.425415 beta_syst2=1.08496 [-1e+30, 0.011215] in interval = 1; #; # this tells you the values of the parameters being used to generate the pseudo-experiments; # and the threshold in this case is 0.011215. One would expect for 95% that the threshold; # would be ~1.35 once the cross-section is far enough away from 0 that it is essentially; # unaffected by the boundary. As one reaches the last points in the scan, the; # threshold starts to get artificially high. Th",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:2916,Testability,test,test,2916,"ce; # interval for any particular dataset by finding the intersection; # of the observed test statistic and the confidence belt. First; # this is done on the observed data to get an observed 1-sided upper limt.; #; # Finally, there expected limit and bands (from background-only) are; # formed by generating background-only data and finding the upper limit.; # The background-only is defined as such that the nuisance parameters are; # fixed to their best fit value based on the data with the signal rate fixed to 0.; # The bands are done by hand for now, will later be part of the RooStats tools.; #; # On a technical note, this technique IS the generalization of Feldman-Cousins; # with nuisance parameters.; #; # Building the confidence belt can be computationally expensive.; # Once it is built, one could save it to a file and use it in a separate step.; #; # We can use PROOF to speed things along in parallel, however,; # the test statistic has to be installed on the workers; # so either turn off PROOF or include the modified test statistic; # in your $ROOTSYS/roofit/roostats/inc directory,; # add the additional line to the LinkDef.h file,; # and recompile root.; #; # Note, if you have a boundary on the parameter of interest (eg. cross-section); # the threshold on the two-sided test statistic starts off at moderate values and plateaus.; #; # [#0] PROGRESS:Generation -- generated toys: 500 / 999; # NeymanConstruction: Prog: 12/50 total MC = 39 this test stat = 0; # SigXsecOverSM=0.69 alpha_syst1=0.136515 alpha_syst3=0.425415 beta_syst2=1.08496 [-1e+30, 0.011215] in interval = 1; #; # this tells you the values of the parameters being used to generate the pseudo-experiments; # and the threshold in this case is 0.011215. One would expect for 95% that the threshold; # would be ~1.35 once the cross-section is far enough away from 0 that it is essentially; # unaffected by the boundary. As one reaches the last points in the scan, the; # threshold starts to get artificially high. Th",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:3173,Testability,test,test,3173," generating background-only data and finding the upper limit.; # The background-only is defined as such that the nuisance parameters are; # fixed to their best fit value based on the data with the signal rate fixed to 0.; # The bands are done by hand for now, will later be part of the RooStats tools.; #; # On a technical note, this technique IS the generalization of Feldman-Cousins; # with nuisance parameters.; #; # Building the confidence belt can be computationally expensive.; # Once it is built, one could save it to a file and use it in a separate step.; #; # We can use PROOF to speed things along in parallel, however,; # the test statistic has to be installed on the workers; # so either turn off PROOF or include the modified test statistic; # in your $ROOTSYS/roofit/roostats/inc directory,; # add the additional line to the LinkDef.h file,; # and recompile root.; #; # Note, if you have a boundary on the parameter of interest (eg. cross-section); # the threshold on the two-sided test statistic starts off at moderate values and plateaus.; #; # [#0] PROGRESS:Generation -- generated toys: 500 / 999; # NeymanConstruction: Prog: 12/50 total MC = 39 this test stat = 0; # SigXsecOverSM=0.69 alpha_syst1=0.136515 alpha_syst3=0.425415 beta_syst2=1.08496 [-1e+30, 0.011215] in interval = 1; #; # this tells you the values of the parameters being used to generate the pseudo-experiments; # and the threshold in this case is 0.011215. One would expect for 95% that the threshold; # would be ~1.35 once the cross-section is far enough away from 0 that it is essentially; # unaffected by the boundary. As one reaches the last points in the scan, the; # threshold starts to get artificially high. This is because the range of the parameter in; # the fit is the same as the range in the scan. In the future, these should be independently; # controlled, but they are not now. As a result the ~50% of pseudo-experiments that have an; # upward fluctuation end up with muhat = muMax. Because of this",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:3346,Testability,test,test,3346,"ters are; # fixed to their best fit value based on the data with the signal rate fixed to 0.; # The bands are done by hand for now, will later be part of the RooStats tools.; #; # On a technical note, this technique IS the generalization of Feldman-Cousins; # with nuisance parameters.; #; # Building the confidence belt can be computationally expensive.; # Once it is built, one could save it to a file and use it in a separate step.; #; # We can use PROOF to speed things along in parallel, however,; # the test statistic has to be installed on the workers; # so either turn off PROOF or include the modified test statistic; # in your $ROOTSYS/roofit/roostats/inc directory,; # add the additional line to the LinkDef.h file,; # and recompile root.; #; # Note, if you have a boundary on the parameter of interest (eg. cross-section); # the threshold on the two-sided test statistic starts off at moderate values and plateaus.; #; # [#0] PROGRESS:Generation -- generated toys: 500 / 999; # NeymanConstruction: Prog: 12/50 total MC = 39 this test stat = 0; # SigXsecOverSM=0.69 alpha_syst1=0.136515 alpha_syst3=0.425415 beta_syst2=1.08496 [-1e+30, 0.011215] in interval = 1; #; # this tells you the values of the parameters being used to generate the pseudo-experiments; # and the threshold in this case is 0.011215. One would expect for 95% that the threshold; # would be ~1.35 once the cross-section is far enough away from 0 that it is essentially; # unaffected by the boundary. As one reaches the last points in the scan, the; # threshold starts to get artificially high. This is because the range of the parameter in; # the fit is the same as the range in the scan. In the future, these should be independently; # controlled, but they are not now. As a result the ~50% of pseudo-experiments that have an; # upward fluctuation end up with muhat = muMax. Because of this, the upper range of the; # parameter should be well above the expected upper limit... but not too high or one will; # need a ve",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:4904,Testability,test,test,4904," at moderate values and plateaus.; #; # [#0] PROGRESS:Generation -- generated toys: 500 / 999; # NeymanConstruction: Prog: 12/50 total MC = 39 this test stat = 0; # SigXsecOverSM=0.69 alpha_syst1=0.136515 alpha_syst3=0.425415 beta_syst2=1.08496 [-1e+30, 0.011215] in interval = 1; #; # this tells you the values of the parameters being used to generate the pseudo-experiments; # and the threshold in this case is 0.011215. One would expect for 95% that the threshold; # would be ~1.35 once the cross-section is far enough away from 0 that it is essentially; # unaffected by the boundary. As one reaches the last points in the scan, the; # threshold starts to get artificially high. This is because the range of the parameter in; # the fit is the same as the range in the scan. In the future, these should be independently; # controlled, but they are not now. As a result the ~50% of pseudo-experiments that have an; # upward fluctuation end up with muhat = muMax. Because of this, the upper range of the; # parameter should be well above the expected upper limit... but not too high or one will; # need a very large value of nPointsToScan to resolve the relevant region. This can be; # improved, but this is the first version of this script.; #; # Important note: when the model includes external constraint terms, like a Gaussian; # constraint to a nuisance parameter centered around some nominal value there is; # a subtlety. The asymptotic results are all based on the assumption that all the; # measurements fluctuate... including the nominal values from auxiliary measurements.; # If these do not fluctuate, this corresponds to an ""conditional ensemble"". The; # result is that the distribution of the test statistic can become very non-chi^2.; # This results in thresholds that become very large.; #; # \macro_image; # \macro_output; # \macro_code; #; # \authors Kyle Cranmer, contributions from Aaron Armbruster, Haoshuang Ji, Haichen Wang, Daniel Whiteson, and Jolly Chen (Python translation)",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:66,Deployability,configurat,configuration,66,"# -------------------------------------------------------; # User configuration parameters",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:66,Modifiability,config,configuration,66,"# -------------------------------------------------------; # User configuration parameters",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:144,Security,access,access,144,"# number of toys used to define the expected limit and band; # -------------------------------------------------------; # First part is just to access a user-defined file; # or create the standard example file if it doesn't exist",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:254,Modifiability,config,config,254,"# firstPOI.setMin(0); # firstPOI.setMax(10); # -------------------------------------------------------; # create and use the FeldmanCousins tool; # to find and plot the 95% confidence interval; # on the parameter of interest as specified; # in the model config; # REMEMBER, we will change the test statistic; # so this is NOT a Feldman-Cousins interval",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:293,Testability,test,test,293,"# firstPOI.setMin(0); # firstPOI.setMax(10); # -------------------------------------------------------; # create and use the FeldmanCousins tool; # to find and plot the 95% confidence interval; # on the parameter of interest as specified; # in the model config; # REMEMBER, we will change the test statistic; # so this is NOT a Feldman-Cousins interval",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:318,Testability,test,test,318,"# save the information in the belt for plotting; # -------------------------------------------------------; # Feldman-Cousins is a unified limit by definition; # but the tool takes care of a few things for us like which values; # of the nuisance parameters should be used to generate toys.; # so let's just change the test statistic and realize this is; # no longer ""Feldman-Cousins"" but is a fully frequentist Neyman-Construction.; # fc.GetTestStatSampler().SetTestStatistic(onesided); # fc.GetTestStatSampler().SetGenerateBinned(True)",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:63,Modifiability,extend,extended,63,"# Since this tool needs to throw toy MC the PDF needs to be; # extended or the tool needs to know how many entries in a dataset; # per pseudo experiment.; # In the 'number counting form' where the entries in the dataset; # are counts, and not values of discriminating variables, the; # datasets typically only have one entry and the PDF is not; # extended.",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:268,Modifiability,variab,variables,268,"# Since this tool needs to throw toy MC the PDF needs to be; # extended or the tool needs to know how many entries in a dataset; # per pseudo experiment.; # In the 'number counting form' where the entries in the dataset; # are counts, and not values of discriminating variables, the; # datasets typically only have one entry and the PDF is not; # extended.",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:347,Modifiability,extend,extended,347,"# Since this tool needs to throw toy MC the PDF needs to be; # extended or the tool needs to know how many entries in a dataset; # per pseudo experiment.; # In the 'number counting form' where the entries in the dataset; # are counts, and not values of discriminating variables, the; # datasets typically only have one entry and the PDF is not; # extended.",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:31,Testability,test,test,31,"# get observed UL and value of test statistic evaluated there",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:36,Testability,test,tested,36,"# loop through the points that were tested and ask confidence belt; # what the upper/lower thresholds were.; # For FeldmanCousins, the lower cut off is always 0",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:100,Energy Efficiency,power,power-constraint,100,"# -------------------------------------------------------; # Now we generate the expected bands and power-constraint; # First: find parameter point for mu=0, with conditional MLEs for nuisance parameters",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:20,Modifiability,extend,extended,20,"# print(""generating extended dataset"")",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:282,Integrability,interface,interface,282,"# generate global observables; # need to be careful for simpdf.; # In ROOT 5.28 there is a problem with generating global observables; # with a simultaneous PDF. In 5.29 there is a solution with; # RooSimultaneous::generateSimGlobal, but this may change to; # the standard generate interface in 5.30.",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:6,Testability,test,test,6,"# get test stat at observed UL in observed data",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py:467,Energy Efficiency,power,power,467,"# if you want to see a plot of the sampling distribution for a particular scan point:; #; # sampPlot = ROOT.RooStats.SamplingDistPlot(); # indexInScan = 0; # tmpPoint = parameterScan.get(indexInScan).clone(""temp""); # firstPOI.setVal( tmpPoint.getRealValue(firstPOI.GetName()) ); # toymcsampler.SetParametersForTestStat(tmpPOI); # samp = toymcsampler.GetSamplingDistribution(tmpPoint); # sampPlot.AddSamplingDistribution(samp); # sampPlot.Draw(); # Now find bands and power constraint",MatchSource.CODE_COMMENT,tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/TwoSidedFrequentistUpperLimitWithBands.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/Zbi_Zgamma.py:17,Integrability,message,messages,17,"# get ugly print messages out of the way",MatchSource.CODE_COMMENT,tutorials/roostats/Zbi_Zgamma.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/roostats/Zbi_Zgamma.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlcreatedb.py:98,Testability,test,test,98,"## \file; ## \ingroup tutorial_sql; ## \notebook -nodraw; ## Create a runcatalog table in a MySQL test database.; ##; ## Based on the code sqlcreatedb.C by Sergey Linev; ##; ## \macro_code; ##; ## \author Juan Fernando Jaramillo Botero",MatchSource.CODE_COMMENT,tutorials/sql/sqlcreatedb.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlcreatedb.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py:175,Deployability,install,installed,175,"## \file; ## \ingroup tutorial_sql; ##; ## Query example to MySQL test database.; ## Example of query by using the test database made in MySQL, you need the; ## database test installed in localhost, with user nobody without password.; ##; ## Based on sqlselect.C by Sergey Linev; ##; ## \macro_code; ##; ## \author Juan Fernando Jaramillo Botero",MatchSource.CODE_COMMENT,tutorials/sql/sqlselect.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py:224,Security,password,password,224,"## \file; ## \ingroup tutorial_sql; ##; ## Query example to MySQL test database.; ## Example of query by using the test database made in MySQL, you need the; ## database test installed in localhost, with user nobody without password.; ##; ## Based on sqlselect.C by Sergey Linev; ##; ## \macro_code; ##; ## \author Juan Fernando Jaramillo Botero",MatchSource.CODE_COMMENT,tutorials/sql/sqlselect.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py:66,Testability,test,test,66,"## \file; ## \ingroup tutorial_sql; ##; ## Query example to MySQL test database.; ## Example of query by using the test database made in MySQL, you need the; ## database test installed in localhost, with user nobody without password.; ##; ## Based on sqlselect.C by Sergey Linev; ##; ## \macro_code; ##; ## \author Juan Fernando Jaramillo Botero",MatchSource.CODE_COMMENT,tutorials/sql/sqlselect.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py:115,Testability,test,test,115,"## \file; ## \ingroup tutorial_sql; ##; ## Query example to MySQL test database.; ## Example of query by using the test database made in MySQL, you need the; ## database test installed in localhost, with user nobody without password.; ##; ## Based on sqlselect.C by Sergey Linev; ##; ## \macro_code; ##; ## \author Juan Fernando Jaramillo Botero",MatchSource.CODE_COMMENT,tutorials/sql/sqlselect.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py:170,Testability,test,test,170,"## \file; ## \ingroup tutorial_sql; ##; ## Query example to MySQL test database.; ## Example of query by using the test database made in MySQL, you need the; ## database test installed in localhost, with user nobody without password.; ##; ## Based on sqlselect.C by Sergey Linev; ##; ## \macro_code; ##; ## \author Juan Fernando Jaramillo Botero",MatchSource.CODE_COMMENT,tutorials/sql/sqlselect.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py:17,Availability,avail,available,17,"# list databases available on server",MatchSource.CODE_COMMENT,tutorials/sql/sqlselect.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py:27,Testability,test,test,27,"# list tables in database ""test"" (the permission tables)",MatchSource.CODE_COMMENT,tutorials/sql/sqlselect.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py:77,Testability,test,test,77,"# query database and print results; # sql = ""select dataset,rawfilepath from test.runcatalog "" \; # ""WHERE tag&(1<<2) AND (run=490001 OR run=300122)""",MatchSource.CODE_COMMENT,tutorials/sql/sqlselect.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/sql/sqlselect.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/PyTorch_Generate_CNN_Model.py:30,Performance,Optimiz,Optimizer,30,"# Construct loss function and Optimizer.",MatchSource.CODE_COMMENT,tutorials/tmva/PyTorch_Generate_CNN_Model.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/PyTorch_Generate_CNN_Model.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/PyTorch_Generate_CNN_Model.py:2,Security,Validat,Validation,2,"# Validation Loop; # Set to eval mode",MatchSource.CODE_COMMENT,tutorials/tmva/PyTorch_Generate_CNN_Model.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/PyTorch_Generate_CNN_Model.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_NumPy.py:15,Security,Validat,Validation,15,"# Loop through Validation set",MatchSource.CODE_COMMENT,tutorials/tmva/RBatchGenerator_NumPy.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_NumPy.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_PyTorch.py:50,Security,validat,validation,50,"# Returns two generators that return training and validation batches; # as PyTorch tensors.",MatchSource.CODE_COMMENT,tutorials/tmva/RBatchGenerator_PyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_PyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_PyTorch.py:7,Safety,predict,prediction,7,"# Make prediction and calculate loss",MatchSource.CODE_COMMENT,tutorials/tmva/RBatchGenerator_PyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_PyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_PyTorch.py:69,Security,Validat,Validation,69,"#################################################################; # Validation; #################################################################; # Evaluate the model on the validation set",MatchSource.CODE_COMMENT,tutorials/tmva/RBatchGenerator_PyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_PyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_PyTorch.py:176,Security,validat,validation,176,"#################################################################; # Validation; #################################################################; # Evaluate the model on the validation set",MatchSource.CODE_COMMENT,tutorials/tmva/RBatchGenerator_PyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_PyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_PyTorch.py:7,Safety,predict,prediction,7,"# Make prediction and calculate accuracy",MatchSource.CODE_COMMENT,tutorials/tmva/RBatchGenerator_PyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_PyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_TensorFlow.py:42,Security,validat,validation,42,"# Returns two TF.Dataset for training and validation batches.",MatchSource.CODE_COMMENT,tutorials/tmva/RBatchGenerator_TensorFlow.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/RBatchGenerator_TensorFlow.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py:159,Usability,learn,learning,159,"## \file; ## \ingroup tutorial_tmva; ## \notebook -nodraw; ## This tutorial illustrates how to prepare ROOT datasets to be nicely readable; ## by most machine learning methods. This requires filtering the initial complex; ## datasets and writing the data in a flat format.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2019; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,tutorials/tmva/tmva100_DataPreparation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py:5,Energy Efficiency,Reduce,Reduce,5,"""""""; Reduce initial dataset to only events which shall be used for training; """"""",MatchSource.CODE_COMMENT,tutorials/tmva/tmva100_DataPreparation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py:16,Modifiability,variab,variables,16,"""""""; Define the variables which shall be used for training; """"""",MatchSource.CODE_COMMENT,tutorials/tmva/tmva100_DataPreparation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py:67,Modifiability,variab,variables,67,"# Load dataset, filter the required events and define the training variables",MatchSource.CODE_COMMENT,tutorials/tmva/tmva100_DataPreparation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py:2,Performance,Load,Load,2,"# Load dataset, filter the required events and define the training variables",MatchSource.CODE_COMMENT,tutorials/tmva/tmva100_DataPreparation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py:49,Testability,test,testing,49,"# Split dataset by event number for training and testing",MatchSource.CODE_COMMENT,tutorials/tmva/tmva100_DataPreparation.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva100_DataPreparation.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py:508,Safety,avoid,avoid,508,"## \file; ## \ingroup tutorial_tmva; ## \notebook -nodraw; ## This tutorial show how you can train a machine learning model with any package; ## reading the training data directly from ROOT files. Using XGBoost, we illustrate; ## how you can convert an externally trained model in a format serializable and readable; ## with the fast tree inference engine offered by TMVA.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2019; ## \author Stefan Wunsch; # XGBoost has to be imported before ROOT to avoid crashes because of clashing; # std::regexp symbols that are exported by cppyy.; # See also: https://github.com/wlav/cppyy/issues/227",MatchSource.CODE_COMMENT,tutorials/tmva/tmva101_Training.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py:109,Usability,learn,learning,109,"## \file; ## \ingroup tutorial_tmva; ## \notebook -nodraw; ## This tutorial show how you can train a machine learning model with any package; ## reading the training data directly from ROOT files. Using XGBoost, we illustrate; ## how you can convert an externally trained model in a format serializable and readable; ## with the fast tree inference engine offered by TMVA.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2019; ## \author Stefan Wunsch; # XGBoost has to be imported before ROOT to avoid crashes because of clashing; # std::regexp symbols that are exported by cppyy.; # See also: https://github.com/wlav/cppyy/issues/227",MatchSource.CODE_COMMENT,tutorials/tmva/tmva101_Training.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py:47,Usability,learn,learning,47,"# Convert inputs to format readable by machine learning tools",MatchSource.CODE_COMMENT,tutorials/tmva/tmva101_Training.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/tmva101_Training.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva101_Training.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py:100,Testability,test,test,100,"## \file; ## \ingroup tutorial_tmva; ## \notebook -nodraw; ## This tutorial illustrates how you can test a trained BDT model using the fast; ## tree inference engine offered by TMVA and external tools such as scikit-learn.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2019; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,tutorials/tmva/tmva102_Testing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py:216,Usability,learn,learn,216,"## \file; ## \ingroup tutorial_tmva; ## \notebook -nodraw; ## This tutorial illustrates how you can test a trained BDT model using the fast; ## tree inference engine offered by TMVA and external tools such as scikit-learn.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2019; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,tutorials/tmva/tmva102_Testing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/tmva102_Testing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py:2,Performance,Load,Load,2,"# Load trained model",MatchSource.CODE_COMMENT,tutorials/tmva/tmva102_Testing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py:7,Safety,predict,prediction,7,"# Make prediction",MatchSource.CODE_COMMENT,tutorials/tmva/tmva102_Testing.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/tmva102_Testing.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:44,Safety,avoid,avoid,44,"# PyTorch has to be imported before ROOT to avoid crashes because of clashing; # std::regexp symbols that are exported by cppyy.; # See also: https://github.com/wlav/cppyy/issues/227",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:540,Deployability,configurat,configuration,540,"## Create TMVA Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; # - The first argument is the base of the name of all the output; # weight files in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the; # option string; # - note that we disable any pre-transformation of the input variables and we avoid computing correlations between; # input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:540,Modifiability,config,configuration,540,"## Create TMVA Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; # - The first argument is the base of the name of all the output; # weight files in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the; # option string; # - note that we disable any pre-transformation of the input variables and we avoid computing correlations between; # input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:771,Modifiability,variab,variables,771,"## Create TMVA Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; # - The first argument is the base of the name of all the output; # weight files in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the; # option string; # - note that we disable any pre-transformation of the input variables and we avoid computing correlations between; # input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:834,Modifiability,variab,variables,834,"## Create TMVA Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; # - The first argument is the base of the name of all the output; # weight files in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the; # option string; # - note that we disable any pre-transformation of the input variables and we avoid computing correlations between; # input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:94,Performance,perform,performance,94,"## Create TMVA Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; # - The first argument is the base of the name of all the output; # weight files in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the; # option string; # - note that we disable any pre-transformation of the input variables and we avoid computing correlations between; # input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:788,Safety,avoid,avoid,788,"## Create TMVA Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; # - The first argument is the base of the name of all the output; # weight files in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the; # option string; # - note that we disable any pre-transformation of the input variables and we avoid computing correlations between; # input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:99,Modifiability,variab,variables,99,"## Declare DataLoader(s); # The next step is to declare the DataLoader class that deals with input variables; # Define the input variables that shall be used for the MVA training; # note that you may also use variable expressions, which can be parsed by TTree::Draw( ""expression"" )]; # In this case the input data consists of an image of 16x16 pixels. Each single pixel is a branch in a ROOT TTree",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:129,Modifiability,variab,variables,129,"## Declare DataLoader(s); # The next step is to declare the DataLoader class that deals with input variables; # Define the input variables that shall be used for the MVA training; # note that you may also use variable expressions, which can be parsed by TTree::Draw( ""expression"" )]; # In this case the input data consists of an image of 16x16 pixels. Each single pixel is a branch in a ROOT TTree",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:209,Modifiability,variab,variable,209,"## Declare DataLoader(s); # The next step is to declare the DataLoader class that deals with input variables; # Define the input variables that shall be used for the MVA training; # note that you may also use variable expressions, which can be parsed by TTree::Draw( ""expression"" )]; # In this case the input data consists of an image of 16x16 pixels. Each single pixel is a branch in a ROOT TTree",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:77,Testability,test,test,77,"# inputFileName = ""tmva_class_example.root""; # --- Register the training and test trees",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:13,Modifiability,variab,variables,13,"## add event variables (image); ## use new method (from ROOT 6.20 to add a variable array for all image data)",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:75,Modifiability,variab,variable,75,"## add event variables (image); ## use new method (from ROOT 6.20 to add a variable array for all image data)",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:36,Modifiability,variab,variables,36,"# Set individual event weights (the variables must exist in the original TTree); # for signal : factory->SetSignalWeightExpression (""weight1*weight2"");; # for background: factory->SetBackgroundWeightExpression(""weight1*weight2"");; # loader->SetBackgroundWeightExpression( ""weight"" );; # Apply additional cuts on the signal and background samples (can be different)",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:233,Performance,load,loader,233,"# Set individual event weights (the variables must exist in the original TTree); # for signal : factory->SetSignalWeightExpression (""weight1*weight2"");; # for background: factory->SetBackgroundWeightExpression(""weight1*weight2"");; # loader->SetBackgroundWeightExpression( ""weight"" );; # Apply additional cuts on the signal and background samples (can be different)",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:457,Modifiability,variab,variables,457,"# for example: TCut mycutb = ""abs(var1)<0.5"";; # Tell the factory how to use the training and testing events; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader.PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # It is possible also to specify the number of training and testing events,; # note we disable the computation of the correlation matrix of the input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:239,Performance,load,loader,239,"# for example: TCut mycutb = ""abs(var1)<0.5"";; # Tell the factory how to use the training and testing events; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader.PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # It is possible also to specify the number of training and testing events,; # note we disable the computation of the correlation matrix of the input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:94,Testability,test,testing,94,"# for example: TCut mycutb = ""abs(var1)<0.5"";; # Tell the factory how to use the training and testing events; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader.PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # It is possible also to specify the number of training and testing events,; # note we disable the computation of the correlation matrix of the input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:227,Testability,test,testing,227,"# for example: TCut mycutb = ""abs(var1)<0.5"";; # Tell the factory how to use the training and testing events; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader.PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # It is possible also to specify the number of training and testing events,; # note we disable the computation of the correlation matrix of the input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:367,Testability,test,testing,367,"# for example: TCut mycutb = ""abs(var1)<0.5"";; # Tell the factory how to use the training and testing events; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader.PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # It is possible also to specify the number of training and testing events,; # note we disable the computation of the correlation matrix of the input variables",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:99,Usability,learn,learning,99,"# Training strategies; # one can catenate several training strings with different parameters (e.g. learning rates or regularizations; # parameters) The training string must be concatenated with the `|` delimiter",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:13,Availability,avail,available,13,"# use GPU if available",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:287,Modifiability,layers,layers,287,"### Book Convolutional Neural Network in TMVA; # For building a CNN one needs to define; # - Input Layout : number of channels (in this case = 1) | image height | image width; # - Batch Layout : batch size | number of channels | image size = (height*width); # Then one add Convolutional layers and MaxPool layers.; # - For Convolutional layer the option string has to be:; # - CONV | number of units | filter height | filter width | stride height | stride width | padding height | paddig; # width | activation function; # - note in this case we are using a filer 3x3 and padding=1 and stride=1 so we get the output dimension of the; # conv layer equal to the input; # - note we use after the first convolutional layer a batch normalization layer. This seems to help significantly the; # convergence; # - For the MaxPool layer:; # - MAXPOOL | pool height | pool width | stride height | stride width; # The RESHAPE layer is needed to flatten the output before the Dense layer; # Note that to run the CNN is required to have CPU or GPU support",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:306,Modifiability,layers,layers,306,"### Book Convolutional Neural Network in TMVA; # For building a CNN one needs to define; # - Input Layout : number of channels (in this case = 1) | image height | image width; # - Batch Layout : batch size | number of channels | image size = (height*width); # Then one add Convolutional layers and MaxPool layers.; # - For Convolutional layer the option string has to be:; # - CONV | number of units | filter height | filter width | stride height | stride width | padding height | paddig; # width | activation function; # - note in this case we are using a filer 3x3 and padding=1 and stride=1 so we get the output dimension of the; # conv layer equal to the input; # - note we use after the first convolutional layer a batch normalization layer. This seems to help significantly the; # convergence; # - For the MaxPool layer:; # - MAXPOOL | pool height | pool width | stride height | stride width; # The RESHAPE layer is needed to flatten the output before the Dense layer; # Note that to run the CNN is required to have CPU or GPU support",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:13,Availability,avail,available,13,"# use GPU if available",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:30,Energy Efficiency,Reduce,ReduceLROnPlateau,30,"# from keras.callbacks import ReduceLROnPlateau",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:45,Energy Efficiency,allocate,allocates,45,"# needed for RTX NVidia card and to avoid TF allocates all GPU memory",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:36,Safety,avoid,avoid,36,"# needed for RTX NVidia card and to avoid TF allocates all GPU memory",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py:3,Testability,Test,Test,3,"## Test and Evaluate Methods",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_CNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_CNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1037,Deployability,configurat,configuration,1037,"## \file; ## \ingroup tutorial_tmva; ## \notebook; ## Classification example of TMVA based on public Higgs UCI dataset; ##; ## The UCI data set is a public HIGGS data set , see http://archive.ics.uci.edu/ml/datasets/HIGGS; ## used in this paper: Baldi, P., P. Sadowski, and D. Whiteson. “Searching for Exotic Particles in High-energy Physics; ## with Deep Learning.” Nature Communications 5 (July 2, 2014).; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Harshal Shende; ## Declare Factory; ## Create the Factory class. Later you can choose the methods; ## whose performance you'd like to investigate.; ## The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ## - The first argument is the base of the name of all the output; ## weightfiles in the directory weight/ that will be created with the; ## method parameters; ## - The second argument is the output file for the training results; ## - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:327,Energy Efficiency,energy,energy,327,"## \file; ## \ingroup tutorial_tmva; ## \notebook; ## Classification example of TMVA based on public Higgs UCI dataset; ##; ## The UCI data set is a public HIGGS data set , see http://archive.ics.uci.edu/ml/datasets/HIGGS; ## used in this paper: Baldi, P., P. Sadowski, and D. Whiteson. “Searching for Exotic Particles in High-energy Physics; ## with Deep Learning.” Nature Communications 5 (July 2, 2014).; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Harshal Shende; ## Declare Factory; ## Create the Factory class. Later you can choose the methods; ## whose performance you'd like to investigate.; ## The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ## - The first argument is the base of the name of all the output; ## weightfiles in the directory weight/ that will be created with the; ## method parameters; ## - The second argument is the output file for the training results; ## - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1037,Modifiability,config,configuration,1037,"## \file; ## \ingroup tutorial_tmva; ## \notebook; ## Classification example of TMVA based on public Higgs UCI dataset; ##; ## The UCI data set is a public HIGGS data set , see http://archive.ics.uci.edu/ml/datasets/HIGGS; ## used in this paper: Baldi, P., P. Sadowski, and D. Whiteson. “Searching for Exotic Particles in High-energy Physics; ## with Deep Learning.” Nature Communications 5 (July 2, 2014).; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Harshal Shende; ## Declare Factory; ## Create the Factory class. Later you can choose the methods; ## whose performance you'd like to investigate.; ## The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ## - The first argument is the base of the name of all the output; ## weightfiles in the directory weight/ that will be created with the; ## method parameters; ## - The second argument is the output file for the training results; ## - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:586,Performance,perform,performance,586,"## \file; ## \ingroup tutorial_tmva; ## \notebook; ## Classification example of TMVA based on public Higgs UCI dataset; ##; ## The UCI data set is a public HIGGS data set , see http://archive.ics.uci.edu/ml/datasets/HIGGS; ## used in this paper: Baldi, P., P. Sadowski, and D. Whiteson. “Searching for Exotic Particles in High-energy Physics; ## with Deep Learning.” Nature Communications 5 (July 2, 2014).; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Harshal Shende; ## Declare Factory; ## Create the Factory class. Later you can choose the methods; ## whose performance you'd like to investigate.; ## The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ## - The first argument is the base of the name of all the output; ## weightfiles in the directory weight/ that will be created with the; ## method parameters; ## - The second argument is the output file for the training results; ## - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:356,Usability,Learn,Learning,356,"## \file; ## \ingroup tutorial_tmva; ## \notebook; ## Classification example of TMVA based on public Higgs UCI dataset; ##; ## The UCI data set is a public HIGGS data set , see http://archive.ics.uci.edu/ml/datasets/HIGGS; ## used in this paper: Baldi, P., P. Sadowski, and D. Whiteson. “Searching for Exotic Particles in High-energy Physics; ## with Deep Learning.” Nature Communications 5 (July 2, 2014).; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Harshal Shende; ## Declare Factory; ## Create the Factory class. Later you can choose the methods; ## whose performance you'd like to investigate.; ## The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to pass; ## - The first argument is the base of the name of all the output; ## weightfiles in the directory weight/ that will be created with the; ## method parameters; ## - The second argument is the output file for the training results; ## - The third argument is a string option defining some general configuration for the TMVA session. For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in the option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:12,Usability,learn,learning,12,"# TMVA Deep learning ( CPU or GPU)",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:17,Usability,Learn,Learning,17,"# Use Keras Deep Learning via PyMVA",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:35,Availability,avail,available,35,"# cannot use Keras if PYMVA is not available",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:32,Testability,test,test,32,"# --- Register the training and test trees",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:99,Modifiability,variab,variables,99,"## Declare DataLoader(s); # The next step is to declare the DataLoader class that deals with input variables; # Define the input variables that shall be used for the MVA training; # note that you may also use variable expressions, which can be parsed by TTree::Draw( ""expression"" )]",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:129,Modifiability,variab,variables,129,"## Declare DataLoader(s); # The next step is to declare the DataLoader class that deals with input variables; # Define the input variables that shall be used for the MVA training; # note that you may also use variable expressions, which can be parsed by TTree::Draw( ""expression"" )]",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:209,Modifiability,variab,variable,209,"## Declare DataLoader(s); # The next step is to declare the DataLoader class that deals with input variables; # Define the input variables that shall be used for the MVA training; # note that you may also use variable expressions, which can be parsed by TTree::Draw( ""expression"" )]",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:36,Modifiability,variab,variables,36,"# Set individual event weights (the variables must exist in the original TTree); # for signal : factory->SetSignalWeightExpression (""weight1*weight2"");; # for background: factory->SetBackgroundWeightExpression(""weight1*weight2"");; # loader->SetBackgroundWeightExpression( ""weight"" );; # Apply additional cuts on the signal and background samples (can be different)",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:233,Performance,load,loader,233,"# Set individual event weights (the variables must exist in the original TTree); # for signal : factory->SetSignalWeightExpression (""weight1*weight2"");; # for background: factory->SetBackgroundWeightExpression(""weight1*weight2"");; # loader->SetBackgroundWeightExpression( ""weight"" );; # Apply additional cuts on the signal and background samples (can be different)",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:242,Performance,load,loader,242,"# for example: TCut mycutb = ""abs(var1)<0.5"";; # Tell the factory how to use the training and testing events; #; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader->PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # To also specify the number of testing events, use:",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:94,Testability,test,testing,94,"# for example: TCut mycutb = ""abs(var1)<0.5"";; # Tell the factory how to use the training and testing events; #; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader->PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # To also specify the number of testing events, use:",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:230,Testability,test,testing,230,"# for example: TCut mycutb = ""abs(var1)<0.5"";; # Tell the factory how to use the training and testing events; #; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader->PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # To also specify the number of testing events, use:",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:343,Testability,test,testing,343,"# for example: TCut mycutb = ""abs(var1)<0.5"";; # Tell the factory how to use the training and testing events; #; # If no numbers of events are given, half of the events in the tree are used; # for training, and the other half for testing:; # loader->PrepareTrainingAndTestTree( mycut, ""SplitMode=random:!V"" );; # To also specify the number of testing events, use:",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1812,Availability,error,error,1812,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:2002,Availability,error,error,2002,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:266,Deployability,configurat,configuration,266,"## Here we book the new DNN of TMVA if we have support in ROOT. We will use GPU version if ROOT is enabled with GPU; ## Booking Deep Neural Network; # Here we define the option string for building the Deep Neural network model.; #### 1. Define DNN layout; # The DNN configuration is defined using a string. Note that whitespaces between characters are not allowed.; # We define first the DNN layout:; # - **input layout** : this defines the input data format for the DNN as ``input depth | height | width``.; # In case of a dense layer as first layer the input layout should be ``1 | 1 | number of input variables`` (features); # - **batch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:266,Modifiability,config,configuration,266,"## Here we book the new DNN of TMVA if we have support in ROOT. We will use GPU version if ROOT is enabled with GPU; ## Booking Deep Neural Network; # Here we define the option string for building the Deep Neural network model.; #### 1. Define DNN layout; # The DNN configuration is defined using a string. Note that whitespaces between characters are not allowed.; # We define first the DNN layout:; # - **input layout** : this defines the input data format for the DNN as ``input depth | height | width``.; # In case of a dense layer as first layer the input layout should be ``1 | 1 | number of input variables`` (features); # - **batch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:604,Modifiability,variab,variables,604,"## Here we book the new DNN of TMVA if we have support in ROOT. We will use GPU version if ROOT is enabled with GPU; ## Booking Deep Neural Network; # Here we define the option string for building the Deep Neural network model.; #### 1. Define DNN layout; # The DNN configuration is defined using a string. Note that whitespaces between characters are not allowed.; # We define first the DNN layout:; # - **input layout** : this defines the input data format for the DNN as ``input depth | height | width``.; # In case of a dense layer as first layer the input layout should be ``1 | 1 | number of input variables`` (features); # - **batch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:810,Modifiability,variab,variables,810,"## Here we book the new DNN of TMVA if we have support in ROOT. We will use GPU version if ROOT is enabled with GPU; ## Booking Deep Neural Network; # Here we define the option string for building the Deep Neural network model.; #### 1. Define DNN layout; # The DNN configuration is defined using a string. Note that whitespaces between characters are not allowed.; # We define first the DNN layout:; # - **input layout** : this defines the input data format for the DNN as ``input depth | height | width``.; # In case of a dense layer as first layer the input layout should be ``1 | 1 | number of input variables`` (features); # - **batch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1285,Modifiability,layers,layers,1285," string. Note that whitespaces between characters are not allowed.; # We define first the DNN layout:; # - **input layout** : this defines the input data format for the DNN as ``input depth | height | width``.; # In case of a dense layer as first layer the input layout should be ``1 | 1 | number of input variables`` (features); # - **batch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA method",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:2497,Modifiability,Variab,Variable,2497,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1629,Performance,Optimiz,Optimizer,1629,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1807,Testability,test,test,1807,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1957,Testability,Test,Test,1957,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1997,Testability,test,test,1997,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:1644,Usability,Learn,Learning,1644,"ch layout** : this defines how are the input batch. It is related to input layout but not the same.; # If the first layer is dense it should be ``1 | batch size ! number of variables`` (features); # *(note the use of the character `|` as separator of input parameters for DNN layout)*; # note that in case of only dense layer the input layout could be omitted but it is required when defining more; # complex architectures; # - **layer layout** string defining the layer architecture. The syntax is; # - layer type (e.g. DENSE, CONV, RNN); # - layer parameters (e.g. number of units); # - activation function (e.g TANH, RELU,...); # *the different layers are separated by the ``"",""`` *; #### 2. Define Training Strategy; # We define here the training strategy parameters for the DNN. The parameters are separated by the ``"",""`` separator.; # One can then concatenate different training strategy with different parameters. The training strategy are separated by; # the ``""|""`` separator.; # - Optimizer; # - Learning rate; # - Momentum (valid for SGD and RMSPROP); # - Regularization and Weight Decay; # - Dropout; # - Max number of epochs; # - Convergence steps. if the test error will not decrease after that value the training will stop; # - Batch size (This value must be the same specified in the input layout); # - Test Repetitions (the interval when the test error will be computed); #### 3. Define general DNN options; # We define the general DNN options concatenating in the final string the previously defined layout and training strategy.; # Note we use the ``"":""`` separator to separate the different higher level options, as in the other TMVA methods.; # In addition to input layout, batch layout and training strategy we add now:; # - Type of Loss function (e.g. CROSSENTROPY); # - Weight Initizalization (e.g XAVIER, XAVIERUNIFORM, NORMAL ); # - Variable Transformation; # - Type of Architecture (e.g. CPU, GPU, Standard); # We can then book the DL method using the built option string",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:178,Performance,Optimiz,Optimizer,178,"# training2 = ROOT.TString(""LearningRate=1e-3,Momentum=0.9""; # ""ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,""; # ""MaxEpochs=20,WeightDecay=1e-4,Regularization=None,""; # ""Optimizer=SGD,DropConfig=0.0+0.0+0.0+0.""); # General Options.",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:98,Testability,Test,TestRepetitions,98,"# training2 = ROOT.TString(""LearningRate=1e-3,Momentum=0.9""; # ""ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,""; # ""MaxEpochs=20,WeightDecay=1e-4,Regularization=None,""; # ""Optimizer=SGD,DropConfig=0.0+0.0+0.0+0.""); # General Options.",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:28,Usability,Learn,LearningRate,28,"# training2 = ROOT.TString(""LearningRate=1e-3,Momentum=0.9""; # ""ConvergenceSteps=10,BatchSize=128,TestRepetitions=1,""; # ""MaxEpochs=20,WeightDecay=1e-4,Regularization=None,""; # ""Optimizer=SGD,DropConfig=0.0+0.0+0.0+0.""); # General Options.",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:28,Modifiability,layers,layers,28,"# create Keras model with 4 layers of 64 units and relu activations",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:84,Energy Efficiency,allocate,allocates,84,"# GpuOptions=""allow_growth=True"",; # ) # needed for RTX NVidia card and to avoid TF allocates all GPU memory; ## Train Methods; # Here we train all the previously booked methods.",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:75,Safety,avoid,avoid,75,"# GpuOptions=""allow_growth=True"",; # ) # needed for RTX NVidia card and to avoid TF allocates all GPU memory; ## Train Methods; # Here we train all the previously booked methods.",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:3,Testability,Test,Test,3,"## Test all methods; # Now we test and evaluate all methods using the test data set",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:30,Testability,test,test,30,"## Test all methods; # Now we test and evaluate all methods using the test data set",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py:70,Testability,test,test,70,"## Test all methods; # Now we test and evaluate all methods using the test data set",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_Higgs_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_Higgs_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:204,Integrability,depend,dependent,204,"## \file; ## \ingroup tutorial_tmva; ## \notebook; ## TMVA Classification Example Using a Recurrent Neural Network; ##; ## This is an example of using a RNN in TMVA. We do classification using a toy time dependent data set; ## that is generated when running this example macro; ##; ## \macro_image; ## \macro_output; ## \macro_code; ##; ## \author Harshal Shende; # TMVA Classification Example Using a Recurrent Neural Network; # This is an example of using a RNN in TMVA.; # We do the classification using a toy data set containing a time series of data sample ntimes; # and with dimension ndim that is generated when running the provided function `MakeTimeData (nevents, ntime, ndim)`",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:31,Safety,avoid,avoid,31,"# switch off MT in OpenBLAS to avoid conflict with tbb",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:13,Performance,perform,performing,13,"## macro for performing a classification using a Recurrent Neural Network; ## @param use_type; ## use_type = 0 use Simple RNN network; ## use_type = 1 use LSTM network; ## use_type = 2 use GRU; ## use_type = 3 build 3 different networks with RNN, LSTM and GRU",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:115,Usability,Simpl,Simple,115,"## macro for performing a classification using a Recurrent Neural Network; ## @param use_type; ## use_type = 0 use Simple RNN network; ## use_type = 1 use LSTM network; ## use_type = 2 use GRU; ## use_type = 3 build 3 different networks with RNN, LSTM and GRU",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:22,Availability,avail,available,22,"# use GPU for TMVA if available",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:541,Deployability,configurat,configuration,541,"## Declare Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to; # pass; # - The first argument is the base of the name of all the output; # weightfiles in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; #; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in; # the option string; # // Creating the factory object",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:541,Modifiability,config,configuration,541,"## Declare Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to; # pass; # - The first argument is the base of the name of all the output; # weightfiles in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; #; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in; # the option string; # // Creating the factory object",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:90,Performance,perform,performance,90,"## Declare Factory; # Create the Factory class. Later you can choose the methods; # whose performance you'd like to investigate.; # The factory is the major TMVA object you have to interact with. Here is the list of parameters you need to; # pass; # - The first argument is the base of the name of all the output; # weightfiles in the directory weight/ that will be created with the; # method parameters; # - The second argument is the output file for the training results; #; # - The third argument is a string option defining some general configuration for the TMVA session.; # For example all TMVA output can be suppressed by removing the ""!"" (not) in front of the ""Silent"" argument in; # the option string; # // Creating the factory object",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:7,Modifiability,variab,variables,7,"## add variables - use new AddVariablesArray function",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:87,Usability,Simpl,SimpleRNN,87,"## Book TMVA recurrent models; # Book the different types of recurrent models in TMVA (SimpleRNN, LSTM or GRU)",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:89,Usability,Simpl,SimpleRNN,89,"## Book Keras recurrent models; # Book the different types of recurrent models in Keras (SimpleRNN, LSTM or GRU)",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:31,Integrability,depend,depending,31,"# add recurrent neural network depending on type / Use option to return the full output",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:42,Testability,test,test,42,"# ---- Evaluate all MVAs using the set of test events",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:48,Modifiability,config,configured,48,"# ----- Evaluate and compare performance of all configured MVAs",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py:29,Performance,perform,performance,29,"# ----- Evaluate and compare performance of all configured MVAs",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_RNN_Classification.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_RNN_Classification.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_GNN.py:7,Safety,predict,prediction,7,"# Make prediction of GNN",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_SOFIE_GNN.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_GNN.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_GNN.py:17,Performance,optimiz,optimize,17,"'''#pragma cling optimize(2); #include ""gnn_encoder.hxx""; #include ""gnn_core.hxx""; #include ""gnn_decoder.hxx""; #include ""gnn_output_transform.hxx""'''",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_SOFIE_GNN.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_GNN.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_GNN.py:2,Testability,Test,Test,2,"# Test both GNN on some simulated events",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_SOFIE_GNN.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_GNN.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_GNN_Parser.py:7,Safety,predict,prediction,7,"# Make prediction of GNN. This will initialize the GNN with weights",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_SOFIE_GNN_Parser.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_GNN_Parser.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_Models.py:28,Testability,test,test,28,"#split data in training and test data",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_SOFIE_Models.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_Models.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_Models.py:26,Testability,test,test,26,"#run the inference on the test data",MatchSource.CODE_COMMENT,tutorials/tmva/TMVA_SOFIE_Models.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/TMVA_SOFIE_Models.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/ApplicationClassificationKeras.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/keras/ApplicationClassificationKeras.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/ApplicationClassificationKeras.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/ApplicationRegressionKeras.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/keras/ApplicationRegressionKeras.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/ApplicationRegressionKeras.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/ClassificationKeras.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/keras/ClassificationKeras.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/ClassificationKeras.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/ClassificationKeras.py:15,Performance,optimiz,optimizer,15,"# Set loss and optimizer",MatchSource.CODE_COMMENT,tutorials/tmva/keras/ClassificationKeras.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/ClassificationKeras.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/ClassificationKeras.py:16,Testability,test,test,16,"# Run training, test and evaluation",MatchSource.CODE_COMMENT,tutorials/tmva/keras/ClassificationKeras.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/ClassificationKeras.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/MulticlassKeras.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/keras/MulticlassKeras.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/MulticlassKeras.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/MulticlassKeras.py:15,Performance,optimiz,optimizer,15,"# Set loss and optimizer",MatchSource.CODE_COMMENT,tutorials/tmva/keras/MulticlassKeras.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/MulticlassKeras.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/RegressionKeras.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/keras/RegressionKeras.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/RegressionKeras.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/RegressionKeras.py:15,Performance,optimiz,optimizer,15,"# Set loss and optimizer",MatchSource.CODE_COMMENT,tutorials/tmva/keras/RegressionKeras.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/keras/RegressionKeras.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationClassificationPyTorch.py:306,Safety,avoid,avoid,306,"#!/usr/bin/env python; ## \file; ## \ingroup tutorial_tmva_pytorch; ## \notebook -nodraw; ## This tutorial shows how to apply a trained model to new data.; ##; ## \macro_code; ##; ## \date 2020; ## \author Anirudh Dagar <anirudhdagar6@gmail.com> - IIT, Roorkee; # PyTorch has to be imported before ROOT to avoid crashes because of clashing; # std::regexp symbols that are exported by cppyy.; # See also: https://github.com/wlav/cppyy/issues/227",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ApplicationClassificationPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationClassificationPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationClassificationPyTorch.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ApplicationClassificationPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationClassificationPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationClassificationPyTorch.py:9,Safety,predict,predict,9,"# Define predict function",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ApplicationClassificationPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationClassificationPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationRegressionPyTorch.py:319,Safety,avoid,avoid,319,"#!/usr/bin/env python; ## \file; ## \ingroup tutorial_tmva_pytorch; ## \notebook -nodraw; ## This tutorial shows how to apply a trained model to new data (regression).; ##; ## \macro_code; ##; ## \date 2020; ## \author Anirudh Dagar <anirudhdagar6@gmail.com> - IIT, Roorkee; # PyTorch has to be imported before ROOT to avoid crashes because of clashing; # std::regexp symbols that are exported by cppyy.; # See also: https://github.com/wlav/cppyy/issues/227",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ApplicationRegressionPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationRegressionPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationRegressionPyTorch.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ApplicationRegressionPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationRegressionPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationRegressionPyTorch.py:9,Safety,predict,predict,9,"# Define predict function",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ApplicationRegressionPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ApplicationRegressionPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py:344,Safety,avoid,avoid,344,"#!/usr/bin/env python; ## \file; ## \ingroup tutorial_tmva_pytorch; ## \notebook -nodraw; ## This tutorial shows how to do classification in TMVA with neural networks; ## trained with PyTorch.; ##; ## \macro_code; ##; ## \date 2020; ## \author Anirudh Dagar <anirudhdagar6@gmail.com> - IIT, Roorkee; # PyTorch has to be imported before ROOT to avoid crashes because of clashing; # std::regexp symbols that are exported by cppyy.; # See also: https://github.com/wlav/cppyy/issues/227",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ClassificationPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ClassificationPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py:30,Performance,Optimiz,Optimizer,30,"# Construct loss function and Optimizer.",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ClassificationPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py:2,Security,Validat,Validation,2,"# Validation Loop; # Set to eval mode",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ClassificationPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py:9,Safety,predict,predict,9,"# Define predict function",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ClassificationPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py:16,Testability,test,test,16,"# Run training, test and evaluation",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/ClassificationPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/ClassificationPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/MulticlassPyTorch.py:355,Safety,avoid,avoid,355,"#!/usr/bin/env python; ## \file; ## \ingroup tutorial_tmva_pytorch; ## \notebook -nodraw; ## This tutorial shows how to do multiclass classification in TMVA with neural; ## networks trained with PyTorch.; ##; ## \macro_code; ##; ## \date 2020; ## \author Anirudh Dagar <anirudhdagar6@gmail.com> - IIT, Roorkee; # PyTorch has to be imported before ROOT to avoid crashes because of clashing; # std::regexp symbols that are exported by cppyy.; # See also: https://github.com/wlav/cppyy/issues/227",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/MulticlassPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/MulticlassPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/MulticlassPyTorch.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/MulticlassPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/MulticlassPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/MulticlassPyTorch.py:15,Performance,optimiz,optimizer,15,"# Set loss and optimizer",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/MulticlassPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/MulticlassPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/MulticlassPyTorch.py:2,Security,Validat,Validation,2,"# Validation Loop; # Set to eval mode",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/MulticlassPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/MulticlassPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/MulticlassPyTorch.py:9,Safety,predict,predict,9,"# Define predict function",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/MulticlassPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/MulticlassPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/RegressionPyTorch.py:340,Safety,avoid,avoid,340,"#!/usr/bin/env python; ## \file; ## \ingroup tutorial_tmva_pytorch; ## \notebook -nodraw; ## This tutorial shows how to do regression in TMVA with neural networks; ## trained with PyTorch.; ##; ## \macro_code; ##; ## \date 2020; ## \author Anirudh Dagar <anirudhdagar6@gmail.com> - IIT, Roorkee; # PyTorch has to be imported before ROOT to avoid crashes because of clashing; # std::regexp symbols that are exported by cppyy.; # See also: https://github.com/wlav/cppyy/issues/227",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/RegressionPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/RegressionPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/RegressionPyTorch.py:2,Performance,Load,Load,2,"# Load data",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/RegressionPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/RegressionPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/RegressionPyTorch.py:30,Performance,Optimiz,Optimizer,30,"# Construct loss function and Optimizer.",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/RegressionPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/RegressionPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/RegressionPyTorch.py:2,Security,Validat,Validation,2,"# Validation Loop; # Set to eval mode",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/RegressionPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/RegressionPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/RegressionPyTorch.py:9,Safety,predict,predict,9,"# Define predict function",MatchSource.CODE_COMMENT,tutorials/tmva/pytorch/RegressionPyTorch.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tmva/pytorch/RegressionPyTorch.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/h1analysis.h:15,Performance,load,loading,15,"// called when loading a new file; // get branch pointers",MatchSource.CODE_COMMENT,tutorials/tree/h1analysis.h,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/h1analysis.h
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx:25,Safety,detect,detectors,25,"// A JetEvent emulates 2 detectors A and B producing each; // a TClonesArray of Hit objects.; // A TClonesArray of Track objects is built with Hits objects; // of detectors A and B. Eack Track object has a TRefArray of hits.; // A TClonesArray of Jets is made with a subset of the Track objects; // also stored in a TRefArray.; // see $ROOTSYS/tutorials/jets.C for an example creating a Tree; // with JetEvents.",MatchSource.CODE_COMMENT,tutorials/tree/JetEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx:163,Safety,detect,detectors,163,"// A JetEvent emulates 2 detectors A and B producing each; // a TClonesArray of Hit objects.; // A TClonesArray of Track objects is built with Hits objects; // of detectors A and B. Eack Track object has a TRefArray of hits.; // A TClonesArray of Jets is made with a subset of the Track objects; // also stored in a TRefArray.; // see $ROOTSYS/tutorials/jets.C for an example creating a Tree; // with JetEvents.",MatchSource.CODE_COMMENT,tutorials/tree/JetEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx:191,Modifiability,variab,variables,191,"////////////////////////////////////////////////////////////////////////////////; /// Create a JetEvent object.; /// When the constructor is invoked for the first time, the class static; /// variables fgxxx are 0 and the TClonesArray fgxxx are created.",MatchSource.CODE_COMMENT,tutorials/tree/JetEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx:123,Safety,detect,detector,123,"////////////////////////////////////////////////////////////////////////////////; /// Add a new hit to the list of hits in detector A",MatchSource.CODE_COMMENT,tutorials/tree/JetEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx:123,Safety,detect,detector,123,"////////////////////////////////////////////////////////////////////////////////; /// Add a new hit to the list of hits in detector B",MatchSource.CODE_COMMENT,tutorials/tree/JetEvent.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/JetEvent.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/readTreeDF.cxx:516,Integrability,interface,interface,516,"// Author: Alvaro Tolosa-Delgado CERN 07/2023; // Author: Jorge Agramunt Ros IFIC(Valencia,Spain) 07/2023; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; /* Example of reading a TTree using the RDataFrame interface; * Documentation of RDataFrame: https://root.cern/doc/master/classROOT_1_1RDataFrame.html; */",MatchSource.CODE_COMMENT,tutorials/tree/dictionary/readTreeDF.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/tree/dictionary/readTreeDF.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/browser.cxx:198,Usability,Feedback,Feedback,198,"/// \file; /// \ingroup tutorial_v7; ///; /// \macro_code; ///; /// \date 2019-05-29; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \authors Bertrand Bellenot <Bertrand.Bellenot@cern.ch>, Sergey Linev <S.Linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // macro must be here to let macro work on Windows",MatchSource.CODE_COMMENT,tutorials/v7/browser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/browser.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/browser.cxx:3,Usability,clear,clear,3,"// clear when connection to client closed",MatchSource.CODE_COMMENT,tutorials/v7/browser.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/browser.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/concurrentfill.cxx:198,Usability,Feedback,Feedback,198,"/// \file; /// \ingroup tutorial_v7; ///; /// \macro_code; ///; /// \date 2015-07-09; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Axel Naumann <axel@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/v7/concurrentfill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/concurrentfill.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/concurrentfill.cxx:35,Performance,concurren,concurrently,35,"/// This example fills a histogram concurrently, from several threads.",MatchSource.CODE_COMMENT,tutorials/v7/concurrentfill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/concurrentfill.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/concurrentfill.cxx:80,Performance,concurren,concurrently,80,"// RHistConcurrentFillManager allows multiple threads to fill the histogram; // concurrently.; //; // Details: each thread's Fill() calls are buffered. once the buffer is full,; // the RHistConcurrentFillManager locks and flushes the buffer into the; // histogram.",MatchSource.CODE_COMMENT,tutorials/v7/concurrentfill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/concurrentfill.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/concurrentfill.cxx:38,Performance,concurren,concurrently,38,"// Let the threads fill the histogram concurrently.",MatchSource.CODE_COMMENT,tutorials/v7/concurrentfill.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/concurrentfill.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/filedialog.cxx:198,Usability,Feedback,Feedback,198,"/// \file; /// \ingroup tutorial_v7; ///; /// \macro_code; ///; /// \date 2019-11-01; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Sergey Linev <S.Linev@gsi.de>; /*************************************************************************; * Copyright (C) 1995-2023, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/; // Show how RFileDialog can be used in sync and async modes; // Normally file dialogs will be used inside other widgets as ui5 dialogs; // By default, dialog starts in async mode - means macro immediately returns to command line; // To start OpenFile dialog in sync mode, call `root ""filedialog.cxx(1)"" -q`.; // Once file is selected, root execution will be stopped; // macro must be here to let macro work on Windows",MatchSource.CODE_COMMENT,tutorials/v7/filedialog.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/filedialog.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/fitpanel.cxx:198,Usability,Feedback,Feedback,198,"/// \file; /// \ingroup tutorial_v7; ///; /// \macro_code; ///; /// \date 2015-03-22; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \author Axel Naumann <axel@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/v7/fitpanel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/fitpanel.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/fitpanel.cxx:18,Availability,alive,alive,18,"// preserve panel alive until connection is closed",MatchSource.CODE_COMMENT,tutorials/v7/fitpanel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/fitpanel.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/fitpanel6.cxx:198,Usability,Feedback,Feedback,198,"/// \file; /// \ingroup tutorial_v7; ///; /// \macro_code; ///; /// \date 2019-04-11; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback is welcome!; /// \authors Sergey Linev <S.Linev@gsi.de>, Iliana Betsou <Iliana.Betsou@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2019, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/v7/fitpanel6.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/fitpanel6.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/histops.cxx:198,Usability,Feedback,Feedback,198,"/// \file; /// \ingroup tutorial_v7; ///; /// \macro_code; ///; /// \date 2015-08-08; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Axel Naumann <axel@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/v7/histops.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/histops.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/perf.cxx:198,Usability,Feedback,Feedback,198,"/// \file; /// \ingroup tutorial_v7; ///; /// \macro_code; ///; /// \date 2015-07-08; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Axel Naumann <axel@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/v7/perf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/perf.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/perfcomp.cxx:198,Usability,Feedback,Feedback,198,"/// \file; /// \ingroup tutorial_v7; ///; /// \macro_code; ///; /// \date 2015-07-08; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Axel Naumann <axel@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/v7/perfcomp.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/perfcomp.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/simple.cxx:198,Usability,Feedback,Feedback,198,"/// \file; /// \ingroup tutorial_v7; ///; /// \macro_code; ///; /// \date 2015-03-22; /// \warning This is part of the ROOT 7 prototype! It will change without notice. It might trigger earthquakes. Feedback; /// is welcome!; /// \author Axel Naumann <axel@cern.ch>; /*************************************************************************; * Copyright (C) 1995-2015, Rene Brun and Fons Rademakers. *; * All rights reserved. *; * *; * For the licensing terms see $ROOTSYS/LICENSE. *; * For the list of contributors see $ROOTSYS/README/CREDITS. *; *************************************************************************/",MatchSource.CODE_COMMENT,tutorials/v7/simple.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/v7/simple.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo001_AdoptOrOwnMemory.py:153,Energy Efficiency,allocate,allocate,153,"## \file; ## \ingroup tutorial_vecops; ## \notebook -nodraw; ## In this tutorial we learn how the RVec class can be used to; ## adopt existing memory or allocate some.; ##; ## \macro_code; ## \macro_output; ##; ## \date May 2018; ## \author Danilo Piparo",MatchSource.CODE_COMMENT,tutorials/vecops/vo001_AdoptOrOwnMemory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo001_AdoptOrOwnMemory.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo001_AdoptOrOwnMemory.py:84,Usability,learn,learn,84,"## \file; ## \ingroup tutorial_vecops; ## \notebook -nodraw; ## In this tutorial we learn how the RVec class can be used to; ## adopt existing memory or allocate some.; ##; ## \macro_code; ## \macro_output; ##; ## \date May 2018; ## \author Danilo Piparo",MatchSource.CODE_COMMENT,tutorials/vecops/vo001_AdoptOrOwnMemory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo001_AdoptOrOwnMemory.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo001_AdoptOrOwnMemory.py:194,Integrability,interface,interface,194,"# Now, upon reallocation, the RVec stops adopting the memory and starts owning it. And yes,; # a copy is triggered. Indeed internally the storage of the RVec is an std::vector. Moreover,; # the interface of the RVec is very, very similar to the one of std::vector: you have already; # noticed it when the `data()` method was invoked, right?",MatchSource.CODE_COMMENT,tutorials/vecops/vo001_AdoptOrOwnMemory.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo001_AdoptOrOwnMemory.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo004_SortAndSelect.py:84,Usability,learn,learn,84,"## \file; ## \ingroup tutorial_vecops; ## \notebook -nodraw; ## In this tutorial we learn how elements of an RVec can be easily sorted and; ## selected.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2018; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,tutorials/vecops/vo004_SortAndSelect.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo004_SortAndSelect.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo005_Combinations.py:84,Usability,learn,learn,84,"## \file; ## \ingroup tutorial_vecops; ## \notebook -nodraw; ## In this tutorial we learn how combinations of RVecs can be built.; ##; ## \macro_code; ## \macro_output; ##; ## \date August 2018; ## \author Stefan Wunsch",MatchSource.CODE_COMMENT,tutorials/vecops/vo005_Combinations.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo005_Combinations.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo005_Combinations.py:19,Performance,perform,perform,19,"# Finally, you can perform any set of operations conveniently.",MatchSource.CODE_COMMENT,tutorials/vecops/vo005_Combinations.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo005_Combinations.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo005_Combinations.py:97,Performance,perform,perform,97,"# However, if you want to compute operations on unique combinations of a; # single RVec, you can perform this as follows.; # Get the indices of unique triples for the given vector.",MatchSource.CODE_COMMENT,tutorials/vecops/vo005_Combinations.py,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/vecops/vo005_Combinations.py
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/fonts_ttf.cxx:257,Availability,avail,available,257,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Usage of TTF fonts in web canvas.; ///; /// One can load TTF font file and specify it for usage in the web canvas; /// Produced drawing also can be saved in PDF files.; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/fonts_ttf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/fonts_ttf.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/fonts_ttf.cxx:117,Performance,load,load,117,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Usage of TTF fonts in web canvas.; ///; /// One can load TTF font file and specify it for usage in the web canvas; /// Produced drawing also can be saved in PDF files.; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/fonts_ttf.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/fonts_ttf.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/haxis.cxx:538,Availability,avail,available,538,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Swap X/Y axes drawing and use to draw TH1 as bar and as markers.; ///; /// Option ""haxisg;y+"" draw histogram axis as for ""hbar"" plus allow to draw grids plus draw Y labels on other side; /// Option ""bar,base0,same"" draws histogram as bars with 0 as reference value; /// Option ""P,same"" draws histogram as markers; /// Macro also shows how frame margins can be configured and poly-line drawing like filled arrow can be; /// placed relative to frame.; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/haxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/haxis.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/haxis.cxx:425,Modifiability,config,configured,425,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Swap X/Y axes drawing and use to draw TH1 as bar and as markers.; ///; /// Option ""haxisg;y+"" draw histogram axis as for ""hbar"" plus allow to draw grids plus draw Y labels on other side; /// Option ""bar,base0,same"" draws histogram as bars with 0 as reference value; /// Option ""P,same"" draws histogram as markers; /// Macro also shows how frame margins can be configured and poly-line drawing like filled arrow can be; /// placed relative to frame.; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/haxis.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/haxis.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/inframe.cxx:580,Availability,avail,available,580,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Drawing primitives inside and outside of the frame.; ///; /// In normal ROOT graphics all objects drawn on the pad and therefore; /// requires special treatment to be able drawn only inside frame borders.; /// In web-based graphics objects automatically clipped by frame border - if drawn inside frame.; /// Macro demonstrates usage of ""frame"" draw option for TLine, TBox, TMarker and TLatex classes.; /// If user interactively change zooming range ""in-frame"" objects automatically clipped.; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/inframe.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/inframe.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/latex_url.cxx:391,Availability,avail,available,391,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Use of interactive URL links inside TLatex.; ///; /// JSROOT now supports '#url[link]{label}' syntax; /// It can be combined with any other latex commands like color ot font.; /// While TLatex used in many places, one can add external links to histogram title,; /// axis title, legend entry and so on.; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/latex_url.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/latex_url.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx:251,Availability,avail,available,251,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Logarithmic scales support in web canvas.; ///; /// Shows support of log2, ln, log8 and log25 scales; /// Any integer base for logarithm can be specified as well; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/logN.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx:65,Testability,Log,Logarithmic,65,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Logarithmic scales support in web canvas.; ///; /// Shows support of log2, ln, log8 and log25 scales; /// Any integer base for logarithm can be specified as well; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/logN.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx:192,Testability,log,logarithm,192,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Logarithmic scales support in web canvas.; ///; /// Shows support of log2, ln, log8 and log25 scales; /// Any integer base for logarithm can be specified as well; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/logN.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx:3,Modifiability,config,configure,3,"// configure log2",MatchSource.CODE_COMMENT,tutorials/webcanv/logN.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx:3,Modifiability,config,configure,3,"// configure ln - 3 is special case",MatchSource.CODE_COMMENT,tutorials/webcanv/logN.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx:3,Modifiability,config,configure,3,"// configure log8",MatchSource.CODE_COMMENT,tutorials/webcanv/logN.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx:3,Modifiability,config,configure,3,"// configure log25",MatchSource.CODE_COMMENT,tutorials/webcanv/logN.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx:21,Availability,error,errors,21,"// draw histogram as errors",MatchSource.CODE_COMMENT,tutorials/webcanv/logN.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/logN.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.cxx:336,Performance,load,loading,336,"/// \file; /// \ingroup tutorial_webcanv; /// User class with custom JavaScript painter in the web canvas.; ///; /// Custom class is just triangle which drawn on the frame with NDC coordinates; /// `triangle.mjs` provides JavaScript code for object painting and interactivity; /// It is also possible to use such ""simple"" class without loading of custom JS code,; /// but then it requires appropriate Paint() method and will miss interactivity in browser; ///; /// This macro must be executed with ACLiC like 'root --web triangle.cxx+'; ///; /// \macro_image (tcanvas_jsp); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/triangle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.cxx:314,Usability,simpl,simple,314,"/// \file; /// \ingroup tutorial_webcanv; /// User class with custom JavaScript painter in the web canvas.; ///; /// Custom class is just triangle which drawn on the frame with NDC coordinates; /// `triangle.mjs` provides JavaScript code for object painting and interactivity; /// It is also possible to use such ""simple"" class without loading of custom JS code,; /// but then it requires appropriate Paint() method and will miss interactivity in browser; ///; /// This macro must be executed with ACLiC like 'root --web triangle.cxx+'; ///; /// \macro_image (tcanvas_jsp); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/triangle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.cxx:24,Performance,load,load,24,"// location required to load files; // also it is name of modules path used in importmap",MatchSource.CODE_COMMENT,tutorials/webcanv/triangle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.cxx:40,Performance,load,loaded,40,"// specify which extra module should be loaded,; // ""tutorials_webcanv/"" is registered path from server locations",MatchSource.CODE_COMMENT,tutorials/webcanv/triangle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.cxx:3,Testability,test,test,3,"// test image saving with web browser, chrome or firefox are required; // c1->SaveAs(""triangle.png"");; // c1->SaveAs(""triangle.pdf"");",MatchSource.CODE_COMMENT,tutorials/webcanv/triangle.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.mjs:113,Usability,simpl,simple,113,// $$jsroot_batch_conform$$; // specially mark script that it can be converted into the batch mode; // only for 'simple' scripts it is possible - without any extra include beside main jsroot module; // it is workaround until proper use of ES6 modules in headless browser will be possible,MatchSource.CODE_COMMENT,tutorials/webcanv/triangle.mjs,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/triangle.mjs
https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/twoscales.cxx:500,Availability,avail,available,500,"/// \file; /// \ingroup tutorial_webcanv; /// \notebook -js; /// Two fully interactive scales in web canvas.; ///; /// Shows two scales drawing for X or Y axis; /// Several objects can be drawn on the frame and one can select which axis is used for drawing; /// Y+ means that Y drawn on right frame side, X+ - X will be drawn on top frame side; /// Several objects can be add to the frame and associated with normal or opposite axis drawing -; /// like using ""same,Y+"" option; ///; /// Functionality available only in web-based graphics; ///; /// \macro_image (tcanvas_js); /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webcanv/twoscales.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webcanv/twoscales.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/geom/geom_threejs.cxx:509,Usability,simpl,simple,509,"/// \file; /// \ingroup tutorial_webgui; /// \ingroup webwidgets; /// The tutorial demonstrates how three.js model for geometry can be created and displayed.; ///; /// In geom_threejs.cxx one uses RGeomDescription class from geometry viewer, which produces; /// JSON data with all necessary information. Then RWebWindow is started and this information provided.; /// In client.html one uses **build** function to create Object3D with geometry; /// Then such object placed in three.js scene and rendered. Also simple animation is implemented; ///; /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webgui/geom/geom_threejs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/geom/geom_threejs.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/geom/geom_threejs.cxx:23,Integrability,message,message,23,"// send arbitrary text message",MatchSource.CODE_COMMENT,tutorials/webgui/geom/geom_threejs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/geom/geom_threejs.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/geom/geom_threejs.cxx:3,Modifiability,config,configure,3,"// configure default html page; // either HTML code can be specified or just name of file after 'file:' prefix",MatchSource.CODE_COMMENT,tutorials/webgui/geom/geom_threejs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/geom/geom_threejs.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/geom/geom_threejs.cxx:35,Integrability,message,message,35,"// this is call-back, invoked when message received from client",MatchSource.CODE_COMMENT,tutorials/webgui/geom/geom_threejs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/geom/geom_threejs.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/geom/geom_threejs.cxx:3,Modifiability,config,configure,3,"// configure predefined geometry",MatchSource.CODE_COMMENT,tutorials/webgui/geom/geom_threejs.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/geom/geom_threejs.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx:94,Usability,simpl,simple,94,"/// \file; /// \ingroup tutorial_webgui; /// \ingroup webwidgets; /// This macro demonstrates simple openui5 panel, shown with RWebWindow; ///; /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webgui/panel/webpanel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx:4,Usability,Simpl,Simple,4,/** Simple structure for ComboBox item */,MatchSource.CODE_COMMENT,tutorials/webgui/panel/webpanel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx:23,Modifiability,config,configure,23,/** Full model used to configure openui5 widget */,MatchSource.CODE_COMMENT,tutorials/webgui/panel/webpanel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx:201,Performance,load,loaded,201,"// Important - defines name of openui5 widget; // ""localapp"" prefix will be point on current directory, where script executed; // ""localapp.view.TestPanel"" means file ./view/TestPanel.view.xml will be loaded",MatchSource.CODE_COMMENT,tutorials/webgui/panel/webpanel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx:145,Testability,Test,TestPanel,145,"// Important - defines name of openui5 widget; // ""localapp"" prefix will be point on current directory, where script executed; // ""localapp.view.TestPanel"" means file ./view/TestPanel.view.xml will be loaded",MatchSource.CODE_COMMENT,tutorials/webgui/panel/webpanel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx:174,Testability,Test,TestPanel,174,"// Important - defines name of openui5 widget; // ""localapp"" prefix will be point on current directory, where script executed; // ""localapp.view.TestPanel"" means file ./view/TestPanel.view.xml will be loaded",MatchSource.CODE_COMMENT,tutorials/webgui/panel/webpanel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx:52,Performance,cache,cache,52,"// Provide window client version to control browser cache; // When value changed, URL for JSROOT, UI5 and local files will differ; // Therefore web browser automatically reload all these files; // window->SetClientVersion(""1.2"");; // these are different callbacks",MatchSource.CODE_COMMENT,tutorials/webgui/panel/webpanel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx:3,Modifiability,config,configure,3,"// configure window geometry",MatchSource.CODE_COMMENT,tutorials/webgui/panel/webpanel.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/panel/webpanel.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:174,Availability,ping,ping-pong,174,"/// \file; /// \ingroup tutorial_webgui; /// \ingroup webwidgets; /// Test suite for RWebWindow communication performance; ///; /// On the first place latency of round-trip (ping-pong) packet is measured; /// File ping.cxx implements server-side code of RWebWindow; /// In ping.html client code plus visualization is provided.; ///; /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:214,Availability,ping,ping,214,"/// \file; /// \ingroup tutorial_webgui; /// \ingroup webwidgets; /// Test suite for RWebWindow communication performance; ///; /// On the first place latency of round-trip (ping-pong) packet is measured; /// File ping.cxx implements server-side code of RWebWindow; /// In ping.html client code plus visualization is provided.; ///; /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:273,Availability,ping,ping,273,"/// \file; /// \ingroup tutorial_webgui; /// \ingroup webwidgets; /// Test suite for RWebWindow communication performance; ///; /// On the first place latency of round-trip (ping-pong) packet is measured; /// File ping.cxx implements server-side code of RWebWindow; /// In ping.html client code plus visualization is provided.; ///; /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:110,Performance,perform,performance,110,"/// \file; /// \ingroup tutorial_webgui; /// \ingroup webwidgets; /// Test suite for RWebWindow communication performance; ///; /// On the first place latency of round-trip (ping-pong) packet is measured; /// File ping.cxx implements server-side code of RWebWindow; /// In ping.html client code plus visualization is provided.; ///; /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:151,Performance,latency,latency,151,"/// \file; /// \ingroup tutorial_webgui; /// \ingroup webwidgets; /// Test suite for RWebWindow communication performance; ///; /// On the first place latency of round-trip (ping-pong) packet is measured; /// File ping.cxx implements server-side code of RWebWindow; /// In ping.html client code plus visualization is provided.; ///; /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:70,Testability,Test,Test,70,"/// \file; /// \ingroup tutorial_webgui; /// \ingroup webwidgets; /// Test suite for RWebWindow communication performance; ///; /// On the first place latency of round-trip (ping-pong) packet is measured; /// File ping.cxx implements server-side code of RWebWindow; /// In ping.html client code plus visualization is provided.; ///; /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:9,Integrability,message,message,9,"// first message to provide config",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:28,Modifiability,config,config,28,"// first message to provide config",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:173,Energy Efficiency,reduce,reduce,173,"////////////////////////////////////////////////////////; /// @param nclients - number of clients; /// @param test_mode; /// 0 - default config, no special threads; /// 1 - reduce http server timer; /// 2 - create special thread in THttpServer and use it; /// 3 - also create special thread for RWebWindow; /// 4 - directly use civetweb threads (only for experts); /// 10 - force longpoll socket with default config",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:137,Modifiability,config,config,137,"////////////////////////////////////////////////////////; /// @param nclients - number of clients; /// @param test_mode; /// 0 - default config, no special threads; /// 1 - reduce http server timer; /// 2 - create special thread in THttpServer and use it; /// 3 - also create special thread for RWebWindow; /// 4 - directly use civetweb threads (only for experts); /// 10 - force longpoll socket with default config",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:409,Modifiability,config,config,409,"////////////////////////////////////////////////////////; /// @param nclients - number of clients; /// @param test_mode; /// 0 - default config, no special threads; /// 1 - reduce http server timer; /// 2 - create special thread in THttpServer and use it; /// 3 - also create special thread for RWebWindow; /// 4 - directly use civetweb threads (only for experts); /// 10 - force longpoll socket with default config",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:11,Deployability,configurat,configuration,11,"// default configuration",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:11,Modifiability,config,configuration,11,"// default configuration",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:3,Energy Efficiency,reduce,reduce,3,"// reduce THttpServer timer",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:11,Testability,test,test,11,"// default test suite, using websockets",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:3,Energy Efficiency,allocate,allocate,3,"// allocate special thread for THttpServer, it will be automatically used by web window",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:7,Energy Efficiency,reduce,reduce,7,"// let reduce reaction time of THttpServer",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:7,Energy Efficiency,allocate,allocate,7,"// let allocate special thread which will be used to perform data sending via websocket; // should reduce consumption of webwindow thread when big data are send; // gEnv->SetValue(""WebGui.SenderThrds"", ""yes"");; // create window",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:99,Energy Efficiency,reduce,reduce,99,"// let allocate special thread which will be used to perform data sending via websocket; // should reduce consumption of webwindow thread when big data are send; // gEnv->SetValue(""WebGui.SenderThrds"", ""yes"");; // create window",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:106,Energy Efficiency,consumption,consumption,106,"// let allocate special thread which will be used to perform data sending via websocket; // should reduce consumption of webwindow thread when big data are send; // gEnv->SetValue(""WebGui.SenderThrds"", ""yes"");; // create window",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:53,Performance,perform,perform,53,"// let allocate special thread which will be used to perform data sending via websocket; // should reduce consumption of webwindow thread when big data are send; // gEnv->SetValue(""WebGui.SenderThrds"", ""yes"");; // create window",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:3,Modifiability,config,configure,3,"// configure maximal number of clients which allowed to connect",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:3,Modifiability,config,configure,3,"// configure default html page; // either HTML code can be specified or just name of file after 'file:' prefix; // Detect file location to specify full path to the HTML file",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:115,Safety,Detect,Detect,115,"// configure default html page; // either HTML code can be specified or just name of file after 'file:' prefix; // Detect file location to specify full path to the HTML file",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:3,Modifiability,config,configure,3,"// configure window geometry",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:36,Integrability,message,message,36,"// this set call-back, invoked when message received from client; // also at this moment thread id is configured which supposed to be used to handle requests",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx:102,Modifiability,config,configured,102,"// this set call-back, invoked when message received from client; // also at this moment thread id is configured which supposed to be used to handle requests",MatchSource.CODE_COMMENT,tutorials/webgui/ping/ping.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/ping/ping.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/webwindow/webwindow.cxx:229,Usability,simpl,simple,229,"/// \file; /// \ingroup tutorial_webgui; /// \ingroup webwidgets; /// Minimal server/client code for working with RWebWindow class.; ///; /// File webwindow.cxx shows how RWebWindow can be created and used; /// In webwindow.html simple client code is provided.; ///; /// \macro_code; ///; /// \author Sergey Linev",MatchSource.CODE_COMMENT,tutorials/webgui/webwindow/webwindow.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/webwindow/webwindow.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/webwindow/webwindow.cxx:23,Integrability,message,message,23,"// send arbitrary text message",MatchSource.CODE_COMMENT,tutorials/webgui/webwindow/webwindow.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/webwindow/webwindow.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/webwindow/webwindow.cxx:3,Modifiability,config,configure,3,"// configure default html page; // either HTML code can be specified or just name of file after 'file:' prefix",MatchSource.CODE_COMMENT,tutorials/webgui/webwindow/webwindow.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/webwindow/webwindow.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/webwindow/webwindow.cxx:35,Integrability,message,message,35,"// this is call-back, invoked when message received from client",MatchSource.CODE_COMMENT,tutorials/webgui/webwindow/webwindow.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/webwindow/webwindow.cxx
https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/webwindow/webwindow.cxx:3,Modifiability,config,configure,3,"// configure predefined geometry",MatchSource.CODE_COMMENT,tutorials/webgui/webwindow/webwindow.cxx,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/tutorials/webgui/webwindow/webwindow.cxx
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:84,Performance,load,loaded,84,/** @summary Central ROOT RBrowser controller; * @desc All Browser functionality is loaded after main ui5 rendering is performed */,MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:119,Performance,perform,performed,119,/** @summary Central ROOT RBrowser controller; * @desc All Browser functionality is loaded after main ui5 rendering is performed */,MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:32,Performance,perform,performed,32,"// if true, most operations are performed locally without involving server",MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:20,Integrability,message,message,20,/** @summary Return message need to be send to server to change options */,MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:11,Testability,log,log,11,"// console.log('MSG', msg.substr(0,20));",MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:7,Integrability,message,message,7,// any message from server clear all warnings,MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:27,Usability,clear,clear,27,// any message from server clear all warnings,MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:3,Deployability,update,update,3,// update code editor,MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:3,Deployability,update,update,3,// update image viewer,MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:26,Integrability,message,message,26,/** @summary Show special message instead of nodes hierarchy */,MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:14,Deployability,update,update,14,// force also update of items on server,MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:46,Safety,timeout,timeout,46,"// do not submit immediately, but after short timeout; // if user types very fast - only last selection will be shown",MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js:29,Integrability,message,message,29,"/** @summary process initial message, now it is list of existing canvases */",MatchSource.CODE_COMMENT,ui5/browser/controller/Browser.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/Browser.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:33,Integrability,message,message,33,/** @summary Process init dialog message; * @private */,MatchSource.CODE_COMMENT,ui5/browser/controller/FileDialog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:32,Deployability,update,update,32,"// when not an embedded dialog, update configuration from server",MatchSource.CODE_COMMENT,ui5/browser/controller/FileDialog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:39,Deployability,configurat,configuration,39,"// when not an embedded dialog, update configuration from server",MatchSource.CODE_COMMENT,ui5/browser/controller/FileDialog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:39,Modifiability,config,configuration,39,"// when not an embedded dialog, update configuration from server",MatchSource.CODE_COMMENT,ui5/browser/controller/FileDialog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:12,Testability,log,logic,12,// add more logic when FileDialog embed into main window,MatchSource.CODE_COMMENT,ui5/browser/controller/FileDialog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:26,Integrability,message,message,26,/** @summary Show warning message about overwritten file should appear */,MatchSource.CODE_COMMENT,ui5/browser/controller/FileDialog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:143,Availability,avail,available,143,"/** @summary Function to initiate SaveAs dialog from client side; * @desc Following arguments has to be specified:; * args.websocket - current available connection, used to send 'FILEDIALOG:' request; * args.filename - initial file name in the dialog; * args.title - title used for the dialog; * args.can_change_path - if it is allowed to change path; * args.working_path - initial working path in dialog like '/Home/storage'; * args.filters - array of supported extensions like ['C++ files (*.cxx *.cpp *.c)', 'Text files (*.txt)', 'Any files (*)' ]; * args.filter - selected extension like 'Any files'; * args.onOk - handler when file is selected and 'Ok' button is pressed; * args.onCancel - handler when 'Cancel' button is pressed; * args.onFailure - handler when any failure appears, dialog will be closed afterwards */",MatchSource.CODE_COMMENT,ui5/browser/controller/FileDialog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js:772,Availability,failure,failure,772,"/** @summary Function to initiate SaveAs dialog from client side; * @desc Following arguments has to be specified:; * args.websocket - current available connection, used to send 'FILEDIALOG:' request; * args.filename - initial file name in the dialog; * args.title - title used for the dialog; * args.can_change_path - if it is allowed to change path; * args.working_path - initial working path in dialog like '/Home/storage'; * args.filters - array of supported extensions like ['C++ files (*.cxx *.cpp *.c)', 'Text files (*.txt)', 'Any files (*)' ]; * args.filter - selected extension like 'Any files'; * args.onOk - handler when file is selected and 'Ok' button is pressed; * args.onCancel - handler when 'Cancel' button is pressed; * args.onFailure - handler when any failure appears, dialog will be closed afterwards */",MatchSource.CODE_COMMENT,ui5/browser/controller/FileDialog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/controller/FileDialog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:13,Usability,Clear,Clear,13,/** @summary Clear full model */,MatchSource.CODE_COMMENT,ui5/browser/model/BrowserModel.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:16,Safety,avoid,avoid,16,// make copy to avoid changes in argument,MatchSource.CODE_COMMENT,ui5/browser/model/BrowserModel.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:80,Usability,simpl,simply,80,"// request childs for current element; // TODO: we do not know child index, but simply can supply search child as argument",MatchSource.CODE_COMMENT,ui5/browser/model/BrowserModel.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:24,Safety,safe,safety,24,// create elements with safety margin,MatchSource.CODE_COMMENT,ui5/browser/model/BrowserModel.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:46,Performance,load,loaded,46,"// when not all childs from very beginning is loaded, but may be required",MatchSource.CODE_COMMENT,ui5/browser/model/BrowserModel.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:35,Performance,load,load,35,// check if requests are needed to load part in the begin of the list,MatchSource.CODE_COMMENT,ui5/browser/model/BrowserModel.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:16,Safety,avoid,avoid,16,// make copy to avoid changes in argument,MatchSource.CODE_COMMENT,ui5/browser/model/BrowserModel.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:3,Deployability,update,update,3,// update length property,MatchSource.CODE_COMMENT,ui5/browser/model/BrowserModel.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js
https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js:13,Deployability,toggle,toggle,13,/** @summary toggle expand state of specified node */,MatchSource.CODE_COMMENT,ui5/browser/model/BrowserModel.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/browser/model/BrowserModel.js
https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/Canvas.controller.js:71,Security,access,access,71,"// this.getView().getModel().setProperty('/Method', method);; //to get access to the global model; // this.getView().addDependent(this.methodDialog);",MatchSource.CODE_COMMENT,ui5/canv/controller/Canvas.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/Canvas.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/Canvas.controller.js:13,Performance,Load,Load,13,/** @summary Load custom panel in canvas left area */,MatchSource.CODE_COMMENT,ui5/canv/controller/Canvas.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/Canvas.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/Canvas.controller.js:10,Security,access,access,10,// to get access to the controller's model,MatchSource.CODE_COMMENT,ui5/canv/controller/Canvas.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/Canvas.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/CanvasPanel.controller.js:247,Performance,perform,perform,247,// workaround for openui5 problem - called before actual dimension of HTML element is assigned; // issue longer resize timeout; // normall ui5 resize event with short timeout should follow very fast; // only then one can check size of element and perform rendering,MatchSource.CODE_COMMENT,ui5/canv/controller/CanvasPanel.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/CanvasPanel.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/CanvasPanel.controller.js:119,Safety,timeout,timeout,119,// workaround for openui5 problem - called before actual dimension of HTML element is assigned; // issue longer resize timeout; // normall ui5 resize event with short timeout should follow very fast; // only then one can check size of element and perform rendering,MatchSource.CODE_COMMENT,ui5/canv/controller/CanvasPanel.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/CanvasPanel.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/CanvasPanel.controller.js:167,Safety,timeout,timeout,167,// workaround for openui5 problem - called before actual dimension of HTML element is assigned; // issue longer resize timeout; // normall ui5 resize event with short timeout should follow very fast; // only then one can check size of element and perform rendering,MatchSource.CODE_COMMENT,ui5/canv/controller/CanvasPanel.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/CanvasPanel.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/CanvasPanel.controller.js:170,Safety,timeout,timeout,170,/** @summary Handle openui5 resize glitch; * @desc onAfterRendering method does not provide valid dimension of the HTML element; * One should wait either resize event or timeout and check if valid size is there; * Only then normal rendering can be started; * Method also used to check resize events */,MatchSource.CODE_COMMENT,ui5/canv/controller/CanvasPanel.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/CanvasPanel.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/ColorButton.js:25,Performance,load,loaded,25,// svg images are always loaded without @2,MatchSource.CODE_COMMENT,ui5/canv/controller/ColorButton.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/ColorButton.js
https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/Panel.controller.js:7,Safety,timeout,timeout,7,// use timeout,MatchSource.CODE_COMMENT,ui5/canv/controller/Panel.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/Panel.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/Panel.controller.js:11,Performance,latency,latency,11,// minimal latency,MatchSource.CODE_COMMENT,ui5/canv/controller/Panel.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/canv/controller/Panel.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/Component.js:3,Integrability,Rout,Router,3,/* Router is only needed for packaging */,MatchSource.CODE_COMMENT,ui5/eve7/Component.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/Component.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js:132,Availability,Error,Error,132,// Display the button type according to the message with the highest severity; // The priority of the message types are as follows: Error > Warning > Success > Info,MatchSource.CODE_COMMENT,ui5/eve7/controller/ClientLog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js:44,Integrability,message,message,44,// Display the button type according to the message with the highest severity; // The priority of the message types are as follows: Error > Warning > Success > Info,MatchSource.CODE_COMMENT,ui5/eve7/controller/ClientLog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js:102,Integrability,message,message,102,// Display the button type according to the message with the highest severity; // The priority of the message types are as follows: Error > Warning > Success > Info,MatchSource.CODE_COMMENT,ui5/eve7/controller/ClientLog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js:25,Integrability,message,messages,25,// Display the number of messages with the highest severity,MatchSource.CODE_COMMENT,ui5/eve7/controller/ClientLog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js:40,Integrability,message,message,40,// Set the button icon according to the message with the highest severity,MatchSource.CODE_COMMENT,ui5/eve7/controller/ClientLog.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/ClientLog.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js:27,Integrability,depend,dependency,27,// loop over scene and add dependency,MatchSource.CODE_COMMENT,ui5/eve7/controller/EveTable.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js:11,Testability,log,log,11,"// console.log(""idx ="", idx, ""path idx = "", ui);",MatchSource.CODE_COMMENT,ui5/eve7/controller/EveTable.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js:11,Testability,log,log,11,"// console.log(""attachRowSelectionChange no path "", oData);",MatchSource.CODE_COMMENT,ui5/eve7/controller/EveTable.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js:3,Deployability,update,update,3,// update sorted/unsorted idx map,MatchSource.CODE_COMMENT,ui5/eve7/controller/EveTable.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js:11,Testability,log,log,11,"// console.log("">>>table scene"", scene);",MatchSource.CODE_COMMENT,ui5/eve7/controller/EveTable.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js:11,Testability,log,log,11,"// console.log(""table found "",product.childs[0] );",MatchSource.CODE_COMMENT,ui5/eve7/controller/EveTable.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js:11,Testability,log,log,11,"// console.log(""collectionChanged "", oEvent.getSource());",MatchSource.CODE_COMMENT,ui5/eve7/controller/EveTable.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/EveTable.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:54,Performance,load,load,54,// when default value not specified - openui tries to load custom,MatchSource.CODE_COMMENT,ui5/eve7/controller/Ged.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:54,Performance,load,load,54,// when default value not specified - openui tries to load custom,MatchSource.CODE_COMMENT,ui5/eve7/controller/Ged.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:323,Safety,timeout,timeout,323,"// CAUTION! This state is only valid for the last click event.; // If the next itemPress is triggered by a keyboard or touch event, it will still; // read this outdated ctrlKeyPressed information!!; // So ALL events causing itemPress must clear/set ctrlKeyPressed; // or ctrlKeyPressed must be reset to false after a short timeout.; //; // Also, it is not tested whether for all types of events, the direct browser; // event is coming BEFORE the itemPress event handler invocation!",MatchSource.CODE_COMMENT,ui5/eve7/controller/Ged.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:356,Testability,test,tested,356,"// CAUTION! This state is only valid for the last click event.; // If the next itemPress is triggered by a keyboard or touch event, it will still; // read this outdated ctrlKeyPressed information!!; // So ALL events causing itemPress must clear/set ctrlKeyPressed; // or ctrlKeyPressed must be reset to false after a short timeout.; //; // Also, it is not tested whether for all types of events, the direct browser; // event is coming BEFORE the itemPress event handler invocation!",MatchSource.CODE_COMMENT,ui5/eve7/controller/Ged.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:239,Usability,clear,clear,239,"// CAUTION! This state is only valid for the last click event.; // If the next itemPress is triggered by a keyboard or touch event, it will still; // read this outdated ctrlKeyPressed information!!; // So ALL events causing itemPress must clear/set ctrlKeyPressed; // or ctrlKeyPressed must be reset to false after a short timeout.; //; // Also, it is not tested whether for all types of events, the direct browser; // event is coming BEFORE the itemPress event handler invocation!",MatchSource.CODE_COMMENT,ui5/eve7/controller/Ged.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:11,Testability,log,log,11,"// console.log(""color mir - .... "", mir);",MatchSource.CODE_COMMENT,ui5/eve7/controller/Ged.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:47,Performance,queue,queue,47,// change range; // AMT tmp workaround / event queue not enabled,MatchSource.CODE_COMMENT,ui5/eve7/controller/Ged.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:62,Performance,queue,queue,62,// change only min or max side; // AMT tmp workaround / event queue not enabled,MatchSource.CODE_COMMENT,ui5/eve7/controller/Ged.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js:21,Deployability,toggle,toggle,21,/** Return method to toggle rendering self */,MatchSource.CODE_COMMENT,ui5/eve7/controller/Ged.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Ged.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js:11,Testability,log,log,11,"// console.log('ON MATCHED', args.viewName);; // console.log('MORE DATA', EVE.$eve7tmp);; // console.log('COMPONENT DATA', Component.getOwnerComponentFor(this.getView()).getComponentData());",MatchSource.CODE_COMMENT,ui5/eve7/controller/GL.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js:57,Testability,log,log,57,"// console.log('ON MATCHED', args.viewName);; // console.log('MORE DATA', EVE.$eve7tmp);; // console.log('COMPONENT DATA', Component.getOwnerComponentFor(this.getView()).getComponentData());",MatchSource.CODE_COMMENT,ui5/eve7/controller/GL.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js:101,Testability,log,log,101,"// console.log('ON MATCHED', args.viewName);; // console.log('MORE DATA', EVE.$eve7tmp);; // console.log('COMPONENT DATA', Component.getOwnerComponentFor(this.getView()).getComponentData());",MatchSource.CODE_COMMENT,ui5/eve7/controller/GL.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js:11,Testability,log,log,11,"// console.log(""VIEW DATA"", data);",MatchSource.CODE_COMMENT,ui5/eve7/controller/GL.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js:27,Deployability,update,updated,27,"// called when manager was updated, need only in standalone modes to detect own element id",MatchSource.CODE_COMMENT,ui5/eve7/controller/GL.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js:69,Safety,detect,detect,69,"// called when manager was updated, need only in standalone modes to detect own element id",MatchSource.CODE_COMMENT,ui5/eve7/controller/GL.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js:292,Performance,perform,performed,292,"/*; // Function called from GuiPanelController.; onExit: function(); {; // QQQQ EveManager does not have Unregister ... nor UnregisterController; if (this.mgr) this.mgr.Unregister(this);; // QQQQ plus, we should unregister this as gl-controller, too; },*/; // Checks if all initialization is performed and startup renderer.",MatchSource.CODE_COMMENT,ui5/eve7/controller/GL.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js:27,Integrability,depend,dependency,27,// loop over scene and add dependency,MatchSource.CODE_COMMENT,ui5/eve7/controller/GL.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/GL.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js:7,Safety,timeout,timeout,7,// use timeout,MatchSource.CODE_COMMENT,ui5/eve7/controller/Lego.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js:11,Performance,latency,latency,11,// minimal latency,MatchSource.CODE_COMMENT,ui5/eve7/controller/Lego.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js:11,Testability,log,log,11,"// console.log(""LEGO onSceneCreate"", id);",MatchSource.CODE_COMMENT,ui5/eve7/controller/Lego.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js:10,Testability,log,log,10,"//console.log(""LEGO element changed"");",MatchSource.CODE_COMMENT,ui5/eve7/controller/Lego.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js:11,Testability,log,log,11,"// console.log(""LEGO element selected"", element_id);",MatchSource.CODE_COMMENT,ui5/eve7/controller/Lego.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Lego.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js:11,Testability,log,log,11,"// console.log('item pressed', item.getText(), elem);",MatchSource.CODE_COMMENT,ui5/eve7/controller/Main.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js:11,Testability,log,log,11,"// console.log('item pressed', item.getText(), elem);",MatchSource.CODE_COMMENT,ui5/eve7/controller/Main.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js:24,Deployability,update,updated,24,"// console.log(""manager updated"");",MatchSource.CODE_COMMENT,ui5/eve7/controller/Main.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js:11,Testability,log,log,11,"// console.log(""manager updated"");",MatchSource.CODE_COMMENT,ui5/eve7/controller/Main.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js:11,Testability,log,log,11,"// console.log(""set splitter height >>> "" , height);",MatchSource.CODE_COMMENT,ui5/eve7/controller/Main.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js:32,Deployability,toggle,toggleShowStatus,32,"// case ""Event statusbar"": this.toggleShowStatus(); break;; // case ""Toolbar"": this.toggleToolBar(); break;; // case ""Tooltip info"": this.toggleToolTip(); break;",MatchSource.CODE_COMMENT,ui5/eve7/controller/Main.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js:84,Deployability,toggle,toggleToolBar,84,"// case ""Event statusbar"": this.toggleShowStatus(); break;; // case ""Toolbar"": this.toggleToolBar(); break;; // case ""Tooltip info"": this.toggleToolTip(); break;",MatchSource.CODE_COMMENT,ui5/eve7/controller/Main.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js:138,Deployability,toggle,toggleToolTip,138,"// case ""Event statusbar"": this.toggleShowStatus(); break;; // case ""Toolbar"": this.toggleToolBar(); break;; // case ""Tooltip info"": this.toggleToolTip(); break;",MatchSource.CODE_COMMENT,ui5/eve7/controller/Main.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Main.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Summary.controller.js:43,Security,access,access,43,"// object with all elements, used for fast access to elements by id",MatchSource.CODE_COMMENT,ui5/eve7/controller/Summary.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Summary.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Summary.controller.js:25,Safety,detect,detect,25,"// console.log('SUMMURY: detect changed', elem.id, elem.path);",MatchSource.CODE_COMMENT,ui5/eve7/controller/Summary.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Summary.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Summary.controller.js:11,Testability,log,log,11,"// console.log('SUMMURY: detect changed', elem.id, elem.path);",MatchSource.CODE_COMMENT,ui5/eve7/controller/Summary.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/controller/Summary.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:77,Integrability,depend,dependency,77,/** @file EveElements.js; * used only together with OpenUI5 */; // TODO: add dependency from JSROOT components,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:14,Usability,simpl,simple,14,"// default is simple selection, we ignore the indx",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:14,Usability,simpl,simple,14,"// default is simple selection, we ignore the indx",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:3,Safety,avoid,avoid,3,// avoid promise in return value,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:4,Testability,Test,Test,4,/** Test if render data has vertex buffer. Make logging if not. Only for debug purposes */,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:48,Testability,log,logging,48,/** Test if render data has vertex buffer. Make logging if not. Only for debug purposes */,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:3,Safety,avoid,avoid,3,// avoid promise in return value,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:11,Testability,log,log,11,"// console.log(""make jet "", jet);; // let jet_ro = new THREE.Object3D();",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:158,Testability,log,log,158,"// JetProjected has 3 or 4 points. 0-th is apex, others are rim.; // Fourth point is only present in RhoZ when jet hits barrel/endcap transition.; // console.log(""makeJetProjected "", jet);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:40,Testability,log,log,40,"// Process transparency !!!; // console.log(""cols"", fcol, lcol);; // double-side material required for correct tracing of colors - otherwise points sequence should be changed",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:11,Testability,log,log,11,"// console.log(""EveElements.prototype.makeFlatBox triangulate"", idxBegin, idxEnd);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:11,Testability,log,log,11,"// console.log(""set index "", nt,"":"", idxBuff[nt*3], idxBuff[nt*3+1],idxBuff[nt*3+2]);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:118,Testability,log,logic,118,// this does not work correctly - draw range ignored when calculating normals; // even worse - shift 2 makes complete logic wrong while wrong triangle are extracted; // Let see if it will be fixed https://github.com/mrdoob/three.js/issues/15560,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:116,Safety,detect,detect,116,"// XXXX Fix this. It seems we could have flat shading with usage of simple shaders.; // XXXX Also, we could do edge detect on the server for outlines.; // XXXX a) 3d objects - angle between triangles >= 85 degrees (or something);; // XXXX b) 2d objects - segment only has one triangle.; // XXXX Somewhat orthogonal - when we do tesselation, conversion from quads to; // XXXX triangles is trivial, we could do it before invoking the big guns (if they are even needed).; // XXXX Oh, and once triangulated, we really don't need to store 3 as number of verts in a poly each time.; // XXXX Or do we? We might need it for projection stuff.",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:68,Usability,simpl,simple,68,"// XXXX Fix this. It seems we could have flat shading with usage of simple shaders.; // XXXX Also, we could do edge detect on the server for outlines.; // XXXX a) 3d objects - angle between triangles >= 85 degrees (or something);; // XXXX b) 2d objects - segment only has one triangle.; // XXXX Somewhat orthogonal - when we do tesselation, conversion from quads to; // XXXX triangles is trivial, we could do it before invoking the big guns (if they are even needed).; // XXXX Oh, and once triangulated, we really don't need to store 3 as number of verts in a poly each time.; // XXXX Or do we? We might need it for projection stuff.",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js:3,Safety,avoid,avoid,3,// avoid promise in return value,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElements.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElements.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:14,Usability,simpl,simple,14,"// default is simple selection, we ignore the indx",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:14,Usability,simpl,simple,14,"// default is simple selection, we ignore the indx",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:393,Integrability,inject,injected,393,"//------------------------------------------------------------------------------; // Builder functions of this class are called by EveScene to create RCore; // objects representing an EveElement. They can have children if multiple RCore; // objects are required (e.g., mesh + lines + points).; //; // The top-level object returned by these builder functions will get additional; // properties injected by EveScene:; // - eve_el; // - scene.; //; // Object picking functions in GlViewerRCore will navigate up the parent hierarchy; // until an object with eve_el property is set.; // If secondary selection is enabled on the eve_el, instance picking will be called; // as well and the returned ID will be used as the index for secondary selection.; // This can be overriden by setting get_ctrl property of any RCore object to a function; // that takes a reference to the said argument and returns an instance of class; // EveElemControl.; // get_ctrl property needs to be set at least at the top-level object.",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:393,Security,inject,injected,393,"//------------------------------------------------------------------------------; // Builder functions of this class are called by EveScene to create RCore; // objects representing an EveElement. They can have children if multiple RCore; // objects are required (e.g., mesh + lines + points).; //; // The top-level object returned by these builder functions will get additional; // properties injected by EveScene:; // - eve_el; // - scene.; //; // Object picking functions in GlViewerRCore will navigate up the parent hierarchy; // until an object with eve_el property is set.; // If secondary selection is enabled on the eve_el, instance picking will be called; // as well and the returned ID will be used as the index for secondary selection.; // This can be overriden by setting get_ctrl property of any RCore object to a function; // that takes a reference to the said argument and returns an instance of class; // EveElemControl.; // get_ctrl property needs to be set at least at the top-level object.",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:12,Availability,down,down,12,// to scale down points / lines for picking and outlines,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:32,Availability,down,down,32,"// Setup width for SSAA, scaled down for picking and outline materials.",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:12,Testability,Test,TestRnr,12,"// if (this.TestRnr(""jet"", el, rnr_data)) return null;",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:11,Testability,log,log,11,"// console.log(""make jet "", jet);; // let jet_ro = new RC.Object3D();",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:158,Testability,log,log,158,"// JetProjected has 3 or 4 points. 0-th is apex, others are rim.; // Fourth point is only present in RhoZ when jet hits barrel/endcap transition.; // console.log(""makeJetProjected "", jet);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:11,Testability,log,log,11,"// console.log(""EveElements.prototype.makeFlatBox triangulate"", idxBegin, idxEnd);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:11,Testability,log,log,11,"// console.log(""set index "", nt,"":"", idxBuff[nt*3], idxBuff[nt*3+1],idxBuff[nt*3+2]);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:11,Testability,log,log,11,"// console.log(""SN"", SN, ""texture dim ="", boxset.texX, boxset.texY);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:116,Safety,detect,detect,116,"// XXXX Fix this. It seems we could have flat shading with usage of simple shaders.; // XXXX Also, we could do edge detect on the server for outlines.; // XXXX a) 3d objects - angle between triangles >= 85 degrees (or something);; // XXXX b) 2d objects - segment only has one triangle.; // XXXX Somewhat orthogonal - when we do tesselation, conversion from quads to; // XXXX triangles is trivial, we could do it before invoking the big guns (if they are even needed).; // XXXX Oh, and once triangulated, we really don't need to store 3 as number of verts in a poly each time.; // XXXX Or do we? We might need it for projection stuff.",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:68,Usability,simpl,simple,68,"// XXXX Fix this. It seems we could have flat shading with usage of simple shaders.; // XXXX Also, we could do edge detect on the server for outlines.; // XXXX a) 3d objects - angle between triangles >= 85 degrees (or something);; // XXXX b) 2d objects - segment only has one triangle.; // XXXX Somewhat orthogonal - when we do tesselation, conversion from quads to; // XXXX triangles is trivial, we could do it before invoking the big guns (if they are even needed).; // XXXX Oh, and once triangulated, we really don't need to store 3 as number of verts in a poly each time.; // XXXX Or do we? We might need it for projection stuff.",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js:11,Testability,log,log,11,"// console.log(""makeStraightLineSet ..."");",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveElementsRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveElementsRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:75,Integrability,depend,dependency,75,/// @file EveManager.js; /// used only together with OpenUI5; // TODO: add dependency from JSROOT components,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:35,Integrability,message,messages,35,// array of receivers of highlight messages,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:41,Deployability,Update,Update,41,// list of scene objects; // Set through Update Trigger UT_Refresh_Selection_State and name match; // upon arrival of EveWorld. See also comments there.,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:279,Availability,error,error,279,"// console.log(""EveManager web socket opened."");; // Presumably not needed at this point - known places where issues; // can cause server-client protocol breach are handled.; // window.onerror = this.globExceptionHandler.bind(this);; // console.log(""EveManager registered global error handler in window.onerror"");",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:145,Integrability,protocol,protocol,145,"// console.log(""EveManager web socket opened."");; // Presumably not needed at this point - known places where issues; // can cause server-client protocol breach are handled.; // window.onerror = this.globExceptionHandler.bind(this);; // console.log(""EveManager registered global error handler in window.onerror"");",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:11,Testability,log,log,11,"// console.log(""EveManager web socket opened."");; // Presumably not needed at this point - known places where issues; // can cause server-client protocol breach are handled.; // window.onerror = this.globExceptionHandler.bind(this);; // console.log(""EveManager registered global error handler in window.onerror"");",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:245,Testability,log,log,245,"// console.log(""EveManager web socket opened."");; // Presumably not needed at this point - known places where issues; // can cause server-client protocol breach are handled.; // window.onerror = this.globExceptionHandler.bind(this);; // console.log(""EveManager registered global error handler in window.onerror"");",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:11,Testability,log,log,11,"// console.log('ArrayBuffer size ',; // msg.byteLength, 'offset', offset);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:15,Availability,error,error,15,// use console error above warning serverity,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:4,Modifiability,Config,Configure,4,/** Configure receiver for scene-respective events. Following event used:; * onSceneChanged */,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:30,Deployability,update,updates,30,/** Disconnect scene from the updates */,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:20,Availability,error,error,20,// YYYY isn't it an error if obj exists?,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:11,Testability,log,log,11,"// console.log(""ImportSceneChange"", scene.fName, msg);; // notify scenes for beginning of changes and; // notify for element removal",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:211,Modifiability,extend,extended,211,"// AMT note ... the REveSelection changes fall here; // I think this should be a separate change bit; // Yes, or maybe Color should be be json only, ObjProps for RnrData.; // Although some classes might have an extended json part --; // and this case could be separated out.",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:23,Deployability,update,update,23,// in the scene change update check change bits are kCBElementAdded or kCBObjProps; // see REveScene::StreamRepresentationChanges binary stream,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:95,Deployability,Update,UpdateTrigger,95,//------------------------------------------------------------------------------; // XXXX UT = UpdateTrigger functions. XXXX Can /should we place them; // somewhere else?; // ------------------------------------------------------------------------------,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:11,Testability,log,log,11,"// console.log(""EveManager.ParseUpdateTriggersAndProcessPostStream"", el.UT_PostStream, this[el.UT_PostStream]);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:57,Deployability,Update,UpdateTrigger,57,"// sel - rep of a REveSelection object.; // console.log(""UpdateTrigger UT_Selection_Refresh_State called for "", sel.fName);; // XXXX Hack to assign global selection / highlight ids.; // This would be more properly done by having REveWorld : public REveScene and store; // ids there. These will also be needed for viewers, scenes, cameras etc.; // I somewhat dislike setting this through name match (and class::WriteCoreJson() as; // it defines the UT function so we sort of know what kind of objects this function; // will be called for.; // We shall see -- but it would better be soon as things are getting messy :); //",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:52,Testability,log,log,52,"// sel - rep of a REveSelection object.; // console.log(""UpdateTrigger UT_Selection_Refresh_State called for "", sel.fName);; // XXXX Hack to assign global selection / highlight ids.; // This would be more properly done by having REveWorld : public REveScene and store; // ids there. These will also be needed for viewers, scenes, cameras etc.; // I somewhat dislike setting this through name match (and class::WriteCoreJson() as; // it defines the UT function so we sort of know what kind of objects this function; // will be called for.; // We shall see -- but it would better be soon as things are getting messy :); //",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:11,Testability,log,log,11,"// console.log(""EveManager.UT_Selection_Refresh_State identical sets for primary"", id);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:11,Testability,log,log,11,"// console.log(""EveManager.SelectElement"", element, scene.$receivers[0].viewer.outline_pass.id2obj_map);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:11,Testability,log,log,11,"// console.log(""EveManager.UnselectElement"", element, scene.$receivers[0].viewer.outline_pass.id2obj_map);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:11,Testability,log,log,11,"// console.log(""ServerEndRedrawCallback "", this.listScenesToRedraw);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:40,Integrability,message,message,40,"// XXXX We might want to send e.name, e.message, e.stack back to the server.",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:31,Integrability,message,message,31,/** Method invoked from server message to browse to element elid */,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js:54,Deployability,update,update,54,"// function can be called from import scene, or scene update",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveManager.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveManager.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js:36,Integrability,depend,dependency,36,/// @file EveScene.js; // TODO: add dependency from JSROOT components,MatchSource.CODE_COMMENT,ui5/eve7/lib/EveScene.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js:11,Testability,log,log,11,"// console.log(""EveScene.processElementSelected"", obj3d, col, index, evnt);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveScene.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js:13,Performance,queue,queue,13,"// when send queue below threshold, ignore highlight",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveScene.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js:180,Performance,queue,queue,180,"// QQQQ This will have to change for multi client support.; // Highlight will always be multi and we will have to track; // which highlight is due to our connection.; // when send queue below threshold, ignre highlight",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveScene.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js:11,Testability,log,log,11,"// console.log(""CHECK select IMPLIED"", pthis);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveScene.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js:11,Testability,log,log,11,"// console.log(""EveScene.SelectElement "", selection_obj.fName, element_id, selection_obj.fElementId, outline_map);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveScene.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js:11,Testability,log,log,11,"// console.log(""EveScene.UnselectElement "", selection_obj.fName, element_id, selection_obj.fElementId, outline_map);",MatchSource.CODE_COMMENT,ui5/eve7/lib/EveScene.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/EveScene.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/FXAAShader.js:58,Availability,down,download,58,/**; * NVIDIA FXAA by Timothy Lottes; * https://developer.download.nvidia.com/assets/gamedev/files/sdk/11/FXAA_WhitePaper.pdf; * - WebGL port by @supereggbert; * http://www.glge.org/demos/fxaa/; * Further improved by Daniel Sturk; */,MatchSource.CODE_COMMENT,ui5/eve7/lib/FXAAShader.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/FXAAShader.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewer.js:11,Testability,log,log,11,"// console.log(this.get_name() + "" - constructor"");",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewer.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewer.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewer.js:11,Testability,log,log,11,"// console.log(this.get_name() + "".init()"");",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewer.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewer.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewer.js:11,Testability,log,log,11,"// console.log(this.get_name() + "".cleanup()"");",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewer.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewer.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:7,Availability,error,error,7,"// 0 - error, 1 - warning, 2 - info, 3 - debug",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:148,Performance,Load,Loading,148,"// For offline mode, one needs a a full URL or the request; // gets forwarded to openi5.hana.ondemand.com.; // This has to be understood and fixed. Loading of shaders; // afterwards fails, too.; // // console.log(window.location.pathname); // where are we loading from?; // import(""https://desire.physics.ucsd.edu/matevz/alja.github.io/rootui5/eve7/rnr_core/RenderCore.js"").then((module) => {",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:256,Performance,load,loading,256,"// For offline mode, one needs a a full URL or the request; // gets forwarded to openi5.hana.ondemand.com.; // This has to be understood and fixed. Loading of shaders; // afterwards fails, too.; // // console.log(window.location.pathname); // where are we loading from?; // import(""https://desire.physics.ucsd.edu/matevz/alja.github.io/rootui5/eve7/rnr_core/RenderCore.js"").then((module) => {",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:209,Testability,log,log,209,"// For offline mode, one needs a a full URL or the request; // gets forwarded to openi5.hana.ondemand.com.; // This has to be understood and fixed. Loading of shaders; // afterwards fails, too.; // // console.log(window.location.pathname); // where are we loading from?; // import(""https://desire.physics.ucsd.edu/matevz/alja.github.io/rootui5/eve7/rnr_core/RenderCore.js"").then((module) => {",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:123,Testability,log,log,123,"// It seems SSAA of 2 is still beneficial on retina.; // if (this.canvas.pixelRatio > 1 && this.RQ_SSAA > 1) {; // console.log(""Correcting RQ_SSAA for pixelRatio"", this.canvas.pixelRatio,; // ""from"", this.RQ_SSAA, ""to"", this.RQ_SSAA / this.canvas.pixelRatio);; // this.RQ_SSAA /= this.canvas.pixelRatio;; // }",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:20,Usability,clear,clear,20,// always use black clear color except in tone map,MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:3,Usability,guid,guides,3,// guides,MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:21,Deployability,update,update,21,"// AMT, disable auto update in camera in order prevent reading quaternions in update of; // model view matrix in Obejct3D function updateMatrixWorld",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:78,Deployability,update,update,78,"// AMT, disable auto update in camera in order prevent reading quaternions in update of; // model view matrix in Obejct3D function updateMatrixWorld",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:131,Deployability,update,updateMatrixWorld,131,"// AMT, disable auto update in camera in order prevent reading quaternions in update of; // model view matrix in Obejct3D function updateMatrixWorld",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:3,Testability,Test,Test,3,// Test objects,MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:7,Usability,clear,clearHighlight,7,// glc.clearHighlight();,MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:11,Testability,log,log,11,"// console.log(""GLC::mousedown"", this, glc, event, event.offsetX, event.offsetY);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:11,Testability,log,log,11,"// console.log(""GLC::keydown"", event.key, event.code, event);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:11,Testability,log,log,11,"// console.log(""resetRenderer 3D scene bbox "", sbbox, "", look_at "", this.rot_center);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:49,Testability,log,log,49,"// lc[2].position.set( 0, 0, -extR);; // console.log(""resetRenderer 2D scene bbox ex ey"", sbbox, ex, ey, "", camera_pos "", posC, "", look_at "", this.rot_center);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:11,Testability,log,log,11,"// console.log(""REQUEST RENDER"");",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:11,Testability,log,log,11,"// console.log(""RENDER"", this.scene, this.camera, this.canvas, this.renderer);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:97,Deployability,update,update,97,"// take all geometry objects, then we have to treat them differently, depending on type.; // and update world-matrix / check visibility; // or setup secondary indices for sub-instance drawing",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:70,Integrability,depend,depending,70,"// take all geometry objects, then we have to treat them differently, depending on type.; // and update world-matrix / check visibility; // or setup secondary indices for sub-instance drawing",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:220,Availability,alive,alive,220,"// YYYY Or, it might be better to render overlay after the tone-mapping.; // Eventually, if only overlay changes, we don't need to render the base-scene but; // only overlay and re-merge them. Need to keep base textures alive in RendeQuTor.; // Note that rgt.render_end() releases all std textures.",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:272,Deployability,release,releases,272,"// YYYY Or, it might be better to render overlay after the tone-mapping.; // Eventually, if only overlay changes, we don't need to render the base-scene but; // only overlay and re-merge them. Need to keep base textures alive in RendeQuTor.; // Note that rgt.render_end() releases all std textures.",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:11,Testability,log,log,11,"// console.log(""RENDER FOR PICKING"", this.scene, this.camera, this.canvas, this.renderer);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:11,Testability,log,log,11,"// console.log(""RENDER FOR PICKING"", this.scene, this.camera, this.canvas, this.renderer);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:10,Testability,log,log,10,"//console.log(""GlViewerRCore onResizeTimeout"", w, h, ""canvas="", this.canvas, this.canvas.width, this.canvas.height);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:311,Safety,timeout,timeout,311,//==============================================================================; // RCore renderer event handlers etc.; //==============================================================================; //------------------------------------------------------------------------------; // Highlight & Mouse move timeout handling; //------------------------------------------------------------------------------,MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:11,Testability,log,log,11,"// console.log(""GLC::showContextMenu"", this, menu); // See js/modules/menu/menu.mjs createMenu(), menu.add()",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:11,Testability,log,log,11,"// console.log(""picked point >>> "", x, y, data.p.depth);; // console.log(""picked camera vector "", e);; // pthis.camera.testMtx.dump();",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:69,Testability,log,log,69,"// console.log(""picked point >>> "", x, y, data.p.depth);; // console.log(""picked camera vector "", e);; // pthis.camera.testMtx.dump();",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:119,Testability,test,testMtx,119,"// console.log(""picked point >>> "", x, y, data.p.depth);; // console.log(""picked camera vector "", e);; // pthis.camera.testMtx.dump();",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:11,Testability,log,log,11,"// console.log(""picked word view coordinates "", e);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js:10,Testability,log,log,10,"//console.log(""handleOverlayMouseMove"");",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerRCore.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerRCore.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js:11,Testability,log,log,11,"// console.log(""createThreejsRenderer"", this.controller.kind, ""w="", w, ""h="", h);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerThree.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js:160,Performance,load,load,160,"// This does not work ... seems it is not standard pass?; // this.outline_pass.renderToScreen = true;; // Tried hacking with this, but would apparently need to load it somehow, sigh.; // let copyPass = new ShaderPass( CopyShader );; // this.composer.addPass( new THREE.ShaderPass(CopyShader) );",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerThree.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js:11,Testability,log,log,11,"// console.log(""resetThreejsRenderer 3D scene bbox "", sbbox, "", camera_pos "", posC, "", look_at "", this.rot_center);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerThree.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js:11,Testability,log,log,11,"// console.log(""resetThreejsRenderer 2D scene bbox ex ey"", sbbox, ex, ey, "", camera_pos "", posC, "", look_at "", this.rot_center);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerThree.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js:311,Safety,timeout,timeout,311,//==============================================================================; // THREE renderer event handlers etc.; //==============================================================================; //------------------------------------------------------------------------------; // Highlight & Mouse move timeout handling; //------------------------------------------------------------------------------,MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerThree.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js:11,Testability,log,log,11,"// console.log(""GLC::onMouseMoveTimeout"", this, event, x, y);",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerThree.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js:11,Testability,log,log,11,"// console.log(""GLC::showContextMenu"", this, menu); // See js/modules/gui/menu.mjs createMenu(), menu.add()",MatchSource.CODE_COMMENT,ui5/eve7/lib/GlViewerThree.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/GlViewerThree.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:3,Safety,Avoid,Avoid,3,// Avoid getting clipped,MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:1231,Availability,error,error,1231,"// for (let i = 0; i < this.selectedObjects.length; ++i){; // 	const object = this.selectedObjects[i];; // 	// treat Mesh and LineSegments as the same; // 	if(object.type === ""Mesh"" || object.type === ""LineSegments"" ); // 	{; // 		groups[0] = groups[0] || [];; // 		groups[0].push(object);; // 	}; // 	else if(object.type === ""Points""); // 	{; // 		let found = false;; // 		// loop over groups; // 		for (let z = 1; z < groups.length; ++z){; // 			// loop over all the elements of a group; // 			for (let w = 0; w < z.length; ++w){; // 				// if the objects have the same attributes; // 				if(; // 					this.selectedObjects[z][w].type			 === object.type			&&; // 					this.selectedObjects[z][w].material.size === object.material.size	&&; // 					this.selectedObjects[z][w][""vertShader""] === object[""vertShader""]	&&; // 					this.selectedObjects[z][w][""fragShader""] === object[""fragShader""]; // 				){; // 					groups[z].push(object);; // 					found = true;; // 					break;; // 				}; // 			}; // 			if(found); // 				break;; // 		}; // 		if(!found){; // 			groups.push([object]);; // 		}; // 	}; // 	else if(object.type === ""Group""); // 	{; // 		for (const child of object.children){; // 		}; // 	}; // 	else; // 	{; // 		console.error(""unknown type of geometry! fallback to 0"");; // 		groups[0] = groups[0] || [];; // 		groups[0].push(object);; // 	}; // }; // this._groups = groups.filter(Array);",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:11,Testability,log,log,11,// console.log(this.selectedObjects);; // debugger;,MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:79,Testability,log,log,79,"// for(const obj of this._selectedObjects); // 	if(obj.sel_type === 0) console.log(""$"", obj.geom[0].fRnrSelf);; // fetch objects that were created after secondary selection",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:3,Deployability,Update,Update,3,// Update Texture Matrix for Depth compare,MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:10,Testability,log,log,10,"//console.log(this._groups);; //console.log(""$"", this._groups[0]);",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:40,Testability,log,log,40,"//console.log(this._groups);; //console.log(""$"", this._groups[0]);",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:225,Availability,mask,maskActive,225,"// if(this.atts.total > 0){; // 	let group = [];; // 	for(let i = 0; i < this.selectedObjects.length; ++i){; // 		let p = this.atts[""index""].indexOf(i);; // 		if(p !== -1){; // 			this.draw(renderer, writeBuffer, readBuffer, maskActive, this.selectedObjects[i], p);; // 		} else {; // 			group.push(this.selectedObjects[i]);; // 		}; // 	}; // 	if(group.length > 0){; // 	}; // } else {; // 	this.draw(renderer, writeBuffer, readBuffer, maskActive, this.selectedObjects, -1);; // }",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:437,Availability,mask,maskActive,437,"// if(this.atts.total > 0){; // 	let group = [];; // 	for(let i = 0; i < this.selectedObjects.length; ++i){; // 		let p = this.atts[""index""].indexOf(i);; // 		if(p !== -1){; // 			this.draw(renderer, writeBuffer, readBuffer, maskActive, this.selectedObjects[i], p);; // 		} else {; // 			group.push(this.selectedObjects[i]);; // 		}; // 	}; // 	if(group.length > 0){; // 	}; // } else {; // 	this.draw(renderer, writeBuffer, readBuffer, maskActive, this.selectedObjects, -1);; // }",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:6,Availability,Down,Downsample,6,"// 2. Downsample to ""downSampleRatio"" res; // clear stuff",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:21,Availability,down,downSampleRatio,21,"// 2. Downsample to ""downSampleRatio"" res; // clear stuff",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:46,Usability,clear,clear,46,"// 2. Downsample to ""downSampleRatio"" res; // clear stuff",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:17,Safety,Detect,Detection,17,// 3. Apply Edge Detection Pass,MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:222,Safety,Detect,Detection,222,"//>-----------------; // for(let i = 0; i < OutlinePassEve.selection_enum.total; ++i){; // 	const sel = this.sel[i];; // 	if(sel.length > 0){; // 		this.changeVisibilityOfSelectedObjects(true, sel);; // 		// 3. Apply Edge Detection Pass; // 		const att = OutlinePassEve.selection_atts[i];; // 		this.edgeDetectionMaterial.uniforms[ ""visibleEdgeColor"" ].value = att.visibleEdgeColor;; // 		this.edgeDetectionMaterial.uniforms[ ""hiddenEdgeColor"" ].value = att.hiddenEdgeColor;; // 		renderer.render( this.scene, this.camera );; // 		this.changeVisibilityOfSelectedObjects(false, sel);; // 	}; // }; // this.changeVisibilityOfSelectedObjects(true);; // 4. Apply Blur on ""glowDownSampleRatio"" res",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js:18,Availability,down,downSampleRatio,18,"// Apply Blur on ""downSampleRatio*glowDownSampleRatio"" res",MatchSource.CODE_COMMENT,ui5/eve7/lib/OutlinePassEve.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/eve7/lib/OutlinePassEve.js
https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js:121,Deployability,update,update,121,// this is protection against infinite loop; // may happen if by refresh of model any callbacks are activated and trying update server side; // this should be prevented,MatchSource.CODE_COMMENT,ui5/fitpanel/controller/FitPanel.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js:3,Deployability,Update,Update,3,// Update Button,MatchSource.CODE_COMMENT,ui5/fitpanel/controller/FitPanel.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js:42,Deployability,update,update,42,// when selected data is changing - cause update of complete model,MatchSource.CODE_COMMENT,ui5/fitpanel/controller/FitPanel.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js:54,Integrability,depend,depending,54,//change the combo box in Minimization Tab --- Method depending on Radio Buttons values,MatchSource.CODE_COMMENT,ui5/fitpanel/controller/FitPanel.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/fitpanel/controller/FitPanel.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:83,Performance,load,loaded,83,"/** @summary Central geometry viewer controller; * @desc All TGeo functionality is loaded after main ui5 rendering is performed,; * To start drawing, following stages should be completed:; * - ui5 element is rendered (onAfterRendering is called); * - TGeo-related JSROOT functionality is loaded; * - RGeomDrawing object delivered from the server; * Only after all this stages are completed, one could start to analyze */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:118,Performance,perform,performed,118,"/** @summary Central geometry viewer controller; * @desc All TGeo functionality is loaded after main ui5 rendering is performed,; * To start drawing, following stages should be completed:; * - ui5 element is rendered (onAfterRendering is called); * - TGeo-related JSROOT functionality is loaded; * - RGeomDrawing object delivered from the server; * Only after all this stages are completed, one could start to analyze */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:288,Performance,load,loaded,288,"/** @summary Central geometry viewer controller; * @desc All TGeo functionality is loaded after main ui5 rendering is performed,; * To start drawing, following stages should be completed:; * - ui5 element is rendered (onAfterRendering is called); * - TGeo-related JSROOT functionality is loaded; * - RGeomDrawing object delivered from the server; * Only after all this stages are completed, one could start to analyze */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:16,Availability,error,error,16,"// it is not an error - sometime TableTree does not have displayed items; // console.error('Fail to extract node id for path ' + path.substr(0,lastpos) + ' full path ' + ctxt.getPath());",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:85,Availability,error,error,85,"// it is not an error - sometime TableTree does not have displayed items; // console.error('Fail to extract node id for path ' + path.substr(0,lastpos) + ' full path ' + ctxt.getPath());",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:52,Integrability,message,message,52,// binary data can be send only as addition to draw message; // here data can be placed in the queue and processed when all other prerequisites are done,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:95,Performance,queue,queue,95,// binary data can be send only as addition to draw message; // here data can be placed in the queue and processed when all other prerequisites are done,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:11,Testability,log,log,11,"// console.log(`RECV ${mhdr} len: ${msg.length} ${msg.slice(0,70)} ...`);",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:8,Integrability,message,message,8,// text message for found query,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:26,Integrability,message,message,26,/** @summary Show special message instead of nodes hierarchy */,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:51,Safety,timeout,timeout,51,"// do not submit immediately, but after very short timeout; // if user types very fast - only last selection will be shown",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js:12,Testability,log,logical,12,"// reassign logical nodes, used together with full model",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomHierarchy.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomHierarchy.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:83,Performance,load,loaded,83,"/** @summary Central geometry viewer controller; * @desc All TGeo functionality is loaded after main ui5 rendering is performed,; * To start drawing, following stages should be completed:; * - ui5 element is rendered (onAfterRendering is called); * - TGeo-related JSROOT functionality is loaded; * - RGeomDrawing object delivered from the server; * Only after all this stages are completed, one could start to analyze */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:118,Performance,perform,performed,118,"/** @summary Central geometry viewer controller; * @desc All TGeo functionality is loaded after main ui5 rendering is performed,; * To start drawing, following stages should be completed:; * - ui5 element is rendered (onAfterRendering is called); * - TGeo-related JSROOT functionality is loaded; * - RGeomDrawing object delivered from the server; * Only after all this stages are completed, one could start to analyze */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:288,Performance,load,loaded,288,"/** @summary Central geometry viewer controller; * @desc All TGeo functionality is loaded after main ui5 rendering is performed,; * To start drawing, following stages should be completed:; * - ui5 element is rendered (onAfterRendering is called); * - TGeo-related JSROOT functionality is loaded; * - RGeomDrawing object delivered from the server; * Only after all this stages are completed, one could start to analyze */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:17,Integrability,message,messages,17,"// received draw messages; // if true, most operations are performed locally without involving server",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:59,Performance,perform,performed,59,"// received draw messages; // if true, most operations are performed locally without involving server",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:80,Deployability,update,update,80,/** @summary Callback from geo painter when mesh object is highlighted. Use for update of TreeTable */,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:18,Integrability,message,message,18,// send only last message from many during 200 ms,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:9,Modifiability,config,config,9,// dummy config until real config is received,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:27,Modifiability,config,config,27,// dummy config until real config is received,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:68,Integrability,message,message,68,"/** @summary Extract shapes from binary data using appropriate draw message; * @desc Draw message is vector of REveGeomVisible objects, including info where shape is in raw data */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:90,Integrability,message,message,90,"/** @summary Extract shapes from binary data using appropriate draw message; * @desc Draw message is vector of REveGeomVisible objects, including info where shape is in raw data */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:61,Integrability,message,messages,61,"/** @summary function to accumulate and process all drawings messages; * @desc if not all scripts are loaded, messages are queued and processed later */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:110,Integrability,message,messages,110,"/** @summary function to accumulate and process all drawings messages; * @desc if not all scripts are loaded, messages are queued and processed later */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:102,Performance,load,loaded,102,"/** @summary function to accumulate and process all drawings messages; * @desc if not all scripts are loaded, messages are queued and processed later */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:123,Performance,queue,queued,123,"/** @summary function to accumulate and process all drawings messages; * @desc if not all scripts are loaded, messages are queued and processed later */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:41,Performance,load,loaded,41,// complete JSROOT TGeo functionality is loaded,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:11,Integrability,message,messages,11,// drawing messages are created,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:73,Integrability,message,messages,73,"// UI5 rendering is performed; // only from here we can start to analyze messages and create TGeo painter, clones objects and so on",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:20,Performance,perform,performed,20,"// UI5 rendering is performed; // only from here we can start to analyze messages and create TGeo painter, clones objects and so on",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:10,Deployability,configurat,configuration,10,// assign configuration to the control,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:10,Modifiability,config,configuration,10,// assign configuration to the control,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:8,Modifiability,extend,extend,8,// only extend nodes and decode shapes,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:52,Integrability,message,message,52,// binary data can be send only as addition to draw message; // here data can be placed in the queue and processed when all other prerequisites are done,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:95,Performance,queue,queue,95,// binary data can be send only as addition to draw message; // here data can be placed in the queue and processed when all other prerequisites are done,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:11,Testability,log,log,11,"// console.log(`RECV ${mhdr} len: ${msg.length} ${msg.slice(0,70)} ...`);",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:212,Availability,error,error,212,/*; let can_refresh = true;. for (let k=0;k<arr.length;++k) {; let moditem = arr[k];. this.geo.ClonedNodes.formatServerElement(moditem);. let item = this.geo_clones.nodes[moditem.id];. if (!item); return console.error('Fail to find item ' + moditem.id);. item.vis = moditem.vis;; item.matrix = moditem.matrix;. let dnode = this.originalCache ? this.originalCache[moditem.id] : null;. if (dnode) {; // here we can modify only node which was changed; dnode.title = moditem.name;; dnode.node_visible = moditem.vis != 0;; } else {; can_refresh = false;; }. if (!moditem.vis && this.geo_painter); this.geo_painter.removeDrawnNode(moditem.id);; }. if (can_refresh) {; this.model.refresh();; } else {; // rebuild complete tree for TreeBrowser; }; */,MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:25,Deployability,configurat,configuration,25,"/** @summary handler for configuration changes,; * @desc after short timeout send updated config to the server */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:82,Deployability,update,updated,82,"/** @summary handler for configuration changes,; * @desc after short timeout send updated config to the server */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:25,Modifiability,config,configuration,25,"/** @summary handler for configuration changes,; * @desc after short timeout send updated config to the server */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:90,Modifiability,config,config,90,"/** @summary handler for configuration changes,; * @desc after short timeout send updated config to the server */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js:69,Safety,timeout,timeout,69,"/** @summary handler for configuration changes,; * @desc after short timeout send updated config to the server */",MatchSource.CODE_COMMENT,ui5/geom/controller/GeomViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/controller/GeomViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/ColorBox.js:54,Modifiability,inherit,inherit,54,"// call the new Control type ""my.ColorBox"" and let it inherit from sap.ui.core.Control; // the control API:",MatchSource.CODE_COMMENT,ui5/geom/lib/ColorBox.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/ColorBox.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/ColorBox.js:80,Security,validat,validation,80,"// setter and getter are created behind the scenes, incl. data binding and type validation",MatchSource.CODE_COMMENT,ui5/geom/lib/ColorBox.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/ColorBox.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/ColorBox.js:37,Security,validat,validated,37,// write the color property; UI5 has validated it to be a valid CSS color,MatchSource.CODE_COMMENT,ui5/geom/lib/ColorBox.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/ColorBox.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/ColorBox.js:746,Deployability,update,updated,746,"/*; // an event handler:; onclick(evt) { // is called when the Control's area is clicked - no further event registration required; sap.ui.require([; 'sap/ui/unified/ColorPickerPopover'; ], function (ColorPickerPopover) {; if (!this.oColorPickerPopover) {; this.oColorPickerPopover = new ColorPickerPopover({; change: this.handleChange.bind(this); });; }; this.oColorPickerPopover.setColorString(this.getColor());; this.oColorPickerPopover.openBy(this);; }.bind(this));; },. handleChange(oEvent) {; let newColor = oEvent.getParameter(""colorString"");; this.setColor(newColor);; // TODO: fire a ""change"" event, in case the application needs to react explicitly when the color has changed; // but when the color is bound via data binding, it will be updated also without this event; }; */",MatchSource.CODE_COMMENT,ui5/geom/lib/ColorBox.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/ColorBox.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/GeomDrawing.js:80,Security,validat,validation,80,"// setter and getter are created behind the scenes, incl. data binding and type validation",MatchSource.CODE_COMMENT,ui5/geom/lib/GeomDrawing.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/GeomDrawing.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/GeomDrawing.js:161,Security,validat,validated,161,"// writes the Control ID and enables event handling - important!; // oRm.addStyle(""background-color"", oControl.getColor()); // write the color property; UI5 has validated it to be a valid CSS color",MatchSource.CODE_COMMENT,ui5/geom/lib/GeomDrawing.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/GeomDrawing.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/GeomDrawing.js:41,Safety,avoid,avoid,41,"// workaround, done for nodes drawing to avoid deletion of 3D objects",MatchSource.CODE_COMMENT,ui5/geom/lib/GeomDrawing.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/GeomDrawing.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/GeomDrawing.js:11,Performance,latency,latency,11,// minimal latency,MatchSource.CODE_COMMENT,ui5/geom/lib/GeomDrawing.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/lib/GeomDrawing.js
https://github.com/root-project/root/tree/v6-32-06/ui5/geom/model/GeomBrowserModel.js:21,Testability,log,logical,21,/** @summary Provide logical node for the id.; * @desc Either use existing one from the full model or create one based on specified item description */,MatchSource.CODE_COMMENT,ui5/geom/model/GeomBrowserModel.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/geom/model/GeomBrowserModel.js
https://github.com/root-project/root/tree/v6-32-06/ui5/panel/Controller.js:44,Integrability,Depend,Depending,44,/** Method should be used to close panel; * Depending from used window manager different functionality can be used here */,MatchSource.CODE_COMMENT,ui5/panel/Controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/panel/Controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:56,Performance,load,loaded,56,/** Tree viewer contoller; * All TTree functionality is loaded after main ui5 rendering is performed */,MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:91,Performance,perform,performed,91,/** Tree viewer contoller; * All TTree functionality is loaded after main ui5 rendering is performed */,MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:17,Integrability,message,messages,17,"// received draw messages; // if true, most operations are performed locally without involving server",MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:59,Performance,perform,performed,59,"// received draw messages; // if true, most operations are performed locally without involving server",MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:52,Integrability,message,message,52,// binary data can be send only as addition to draw message; // here data can be placed in the queue and processed when all other prerequicities are done,MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:95,Performance,queue,queue,95,// binary data can be send only as addition to draw message; // here data can be placed in the queue and processed when all other prerequicities are done,MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:11,Testability,log,log,11,"// console.log(mhdr, msg.length, msg.substr(0,70), '...');",MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:18,Deployability,configurat,configuration,18,// generic viewer configuration,MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:18,Modifiability,config,configuration,18,// generic viewer configuration,MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:31,Deployability,configurat,configuration,31,/** @summary processing viewer configuration */,MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:31,Modifiability,config,configuration,31,/** @summary processing viewer configuration */,MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:20,Deployability,configurat,configuration,20,/** @summary Reload configuration */,MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js:20,Modifiability,config,configuration,20,/** @summary Reload configuration */,MatchSource.CODE_COMMENT,ui5/tree/controller/TreeViewer.controller.js,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/tree/v6-32-06/ui5/tree/controller/TreeViewer.controller.js
