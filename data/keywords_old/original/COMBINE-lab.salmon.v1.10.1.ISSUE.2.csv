id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/COMBINE-lab/salmon/issues/541:3008,Testability,log,log,3008," cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in yellow. Yellow on white is nearly impossible to read. The rest of the text is black (as it should be). If the final command is instead:. ```; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant >/tmp/sq.log 2>&1. ```. There are no embedded control codes in the sq.log file. Changing the terminal to white text on black background also results in that line being colored yellow. Yellow on black is easy enough to read. I understand that normally this is run in a script and not interactively, but some highlight color other than yellow should be used on light backgrounds. Yellow may result in some way from default settings on CentOS 8, but I have no recollection of having seen another application do this in the several months I have been using this machine. Honestly, I do not see any real advantage in coloring the text at all since the lines are already marked with [info] or [warning] tags, so turning off whatever this coloring is would be fine, I think, for most people.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/541:2046,Usability,ux,uxterm,2046,"ions); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in yellow. Yellow on white is nearly impossible to read. The rest of the text is black (as it should be). If the final command is instead:. ```; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant >/tmp/sq.log 2>&1. ```. There are no embedded control codes in the sq.log file. Changing the terminal to white text on bl",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541
https://github.com/COMBINE-lab/salmon/issues/542:655,Availability,down,downloaded,655,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542
https://github.com/COMBINE-lab/salmon/issues/542:197,Deployability,update,updated,197,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542
https://github.com/COMBINE-lab/salmon/issues/542:242,Deployability,update,updated,242,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542
https://github.com/COMBINE-lab/salmon/issues/542:634,Deployability,install,installed,634,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542
https://github.com/COMBINE-lab/salmon/issues/542:292,Energy Efficiency,reduce,reduced,292,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542
https://github.com/COMBINE-lab/salmon/issues/542:352,Testability,test,test,352,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542
https://github.com/COMBINE-lab/salmon/issues/542:459,Testability,test,test,459,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542
https://github.com/COMBINE-lab/salmon/issues/542:480,Testability,test,test,480,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542
https://github.com/COMBINE-lab/salmon/issues/542:487,Testability,test,test,487,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542
https://github.com/COMBINE-lab/salmon/issues/543:27,Availability,error,errors,27,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:90,Availability,error,error,90,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:186,Availability,error,error,186,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:226,Availability,error,error,226,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:273,Availability,fault,fault,273,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:665,Availability,error,error,665,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:16019,Availability,error,error,16019," but 193 were matched by sequences in the reference file provided.; [2020-07-04 15:10:17.047] [puff::index::jointLog] [info] Replaced 151,122,983 non-ATCG nucleotides; [2020-07-04 15:10:17.047] [puff::index::jointLog] [info] Clipped poly-A tails from 1,825 transcripts; wrote 344371 cleaned references; seqHash 256 : a4437735d0f94862f3c5321f8541b52b3e063d99afd1c4adaacc6b23ad10cc00; seqHash 512 : 29ef1f67a252009538c30d22ab52f1aae09605f9cd6eb731cb5866275eeb4f50917c409fdac10c5da1a6396687c8d3da64ab33dc7cb426dba961639385ce7040; nameHash 256 : 120179531963e6930022681ba9f4226ad0871ca0f6ae01f6c16be496fee9e03f; nameHash 512 : 3ba5b8d011fe981bf67b581cb6d3d83ae1b8d7885c868b7ab634bbf86448889fcc246b9e65374b79270f6d11d5a71ac6335910fcda2b1b9e86bcafe1ae3ae89f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [inf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:16055,Availability,error,error,16055," but 193 were matched by sequences in the reference file provided.; [2020-07-04 15:10:17.047] [puff::index::jointLog] [info] Replaced 151,122,983 non-ATCG nucleotides; [2020-07-04 15:10:17.047] [puff::index::jointLog] [info] Clipped poly-A tails from 1,825 transcripts; wrote 344371 cleaned references; seqHash 256 : a4437735d0f94862f3c5321f8541b52b3e063d99afd1c4adaacc6b23ad10cc00; seqHash 512 : 29ef1f67a252009538c30d22ab52f1aae09605f9cd6eb731cb5866275eeb4f50917c409fdac10c5da1a6396687c8d3da64ab33dc7cb426dba961639385ce7040; nameHash 256 : 120179531963e6930022681ba9f4226ad0871ca0f6ae01f6c16be496fee9e03f; nameHash 512 : 3ba5b8d011fe981bf67b581cb6d3d83ae1b8d7885c868b7ab634bbf86448889fcc246b9e65374b79270f6d11d5a71ac6335910fcda2b1b9e86bcafe1ae3ae89f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [inf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:17546,Availability,fault,fault,17546,item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:19013,Availability,Error,Error,19013,"20-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15:51:46.138] [jointLog] [info] parsing read library format; [2020-07-04 15:51:46.138] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/jl2e19/salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /home/jl2e19/.conda/envs/SALMON/bin/salmon quant was invoked improperly.; For usage information, try /home/jl2e19/.conda/envs/SALMON/bin/salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:714,Deployability,upgrade,upgrade,714,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:766,Deployability,upgrade,upgrades,766,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:17809,Deployability,upgrade,upgrade,17809,"og] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:17861,Deployability,upgrade,upgrades,17861,"4 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:16642,Integrability,wrap,wrapping,16642,"1bf67b581cb6d3d83ae1b8d7885c868b7ab634bbf86448889fcc246b9e65374b79270f6d11d5a71ac6335910fcda2b1b9e86bcafe1ae3ae89f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:16269,Performance,Load,Loading,16269," [puff::index::jointLog] [info] Clipped poly-A tails from 1,825 transcripts; wrote 344371 cleaned references; seqHash 256 : a4437735d0f94862f3c5321f8541b52b3e063d99afd1c4adaacc6b23ad10cc00; seqHash 512 : 29ef1f67a252009538c30d22ab52f1aae09605f9cd6eb731cb5866275eeb4f50917c409fdac10c5da1a6396687c8d3da64ab33dc7cb426dba961639385ce7040; nameHash 256 : 120179531963e6930022681ba9f4226ad0871ca0f6ae01f6c16be496fee9e03f; nameHash 512 : 3ba5b8d011fe981bf67b581cb6d3d83ae1b8d7885c868b7ab634bbf86448889fcc246b9e65374b79270f6d11d5a71ac6335910fcda2b1b9e86bcafe1ae3ae89f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:16403,Performance,Load,Loading,16403,"d1c4adaacc6b23ad10cc00; seqHash 512 : 29ef1f67a252009538c30d22ab52f1aae09605f9cd6eb731cb5866275eeb4f50917c409fdac10c5da1a6396687c8d3da64ab33dc7cb426dba961639385ce7040; nameHash 256 : 120179531963e6930022681ba9f4226ad0871ca0f6ae01f6c16be496fee9e03f; nameHash 512 : 3ba5b8d011fe981bf67b581cb6d3d83ae1b8d7885c868b7ab634bbf86448889fcc246b9e65374b79270f6d11d5a71ac6335910fcda2b1b9e86bcafe1ae3ae89f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:16769,Security,validat,validation,16769,"f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:18231,Security,validat,validateMappings,18231,"20-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15:51:46.138] [jointLog] [info] parsing read library format; [2020-07-04 15:51:46.138] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/jl2e19/salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /home/jl2e19/.conda/envs/SALMON/bin/salmon quant was invoked improperly.; For usage information, try /home/jl2e19/.conda/envs/SALMON/bin/salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:18608,Security,validat,validateMappings,18608,"20-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15:51:46.138] [jointLog] [info] parsing read library format; [2020-07-04 15:51:46.138] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/jl2e19/salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /home/jl2e19/.conda/envs/SALMON/bin/salmon quant was invoked improperly.; For usage information, try /home/jl2e19/.conda/envs/SALMON/bin/salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:18770,Security,validat,validateMappings,18770,"20-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15:51:46.138] [jointLog] [info] parsing read library format; [2020-07-04 15:51:46.138] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/jl2e19/salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /home/jl2e19/.conda/envs/SALMON/bin/salmon quant was invoked improperly.; For usage information, try /home/jl2e19/.conda/envs/SALMON/bin/salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:18336,Testability,Log,Logs,18336,"20-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15:51:46.138] [jointLog] [info] parsing read library format; [2020-07-04 15:51:46.138] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/jl2e19/salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /home/jl2e19/.conda/envs/SALMON/bin/salmon quant was invoked improperly.; For usage information, try /home/jl2e19/.conda/envs/SALMON/bin/salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/543:18414,Testability,log,logs,18414,"20-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15:51:46.138] [jointLog] [info] parsing read library format; [2020-07-04 15:51:46.138] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/jl2e19/salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /home/jl2e19/.conda/envs/SALMON/bin/salmon quant was invoked improperly.; For usage information, try /home/jl2e19/.conda/envs/SALMON/bin/salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543
https://github.com/COMBINE-lab/salmon/issues/544:910,Deployability,patch,patches,910,"Hello!. I am very new to using Salmon and apologise if this issue has arisen elsewhere! I'm just looking to ensure I'm not doing anything sketchy before progressing with some RNASeq analysis following transcript quantification... Salmon version: v1.2.1; Index: Hg38 salmon_sa_index sourced from https://refgenomes.databio.org/#hg38. I have run Salmon on whole transcriptome RNASeq data as follows:; `salmon quant -i ${index} -l ISR -1 ${sampleR1} -2 ${sampleR2} \; --gcBias \; --validateMappings \; --writeMappings \; --writeUnmappedNames \; -o ${quants}/${rundate}_Salmon/${rundate}_${runid}_${indexpair}_quant`. Upon importing `quant.sf`files into R with `tximeta` and executing the function `summarizeToGene()` for` DESeq2` analysis I've been checking the validity of my top hits and have run into some confusion surrounding how to best handle counts assigned to an excessive number of alternate haplotypes/patches for some genes. These features have differing Ensembl gene IDs (but identical gene names) and are evidently not duplicate sequences as they have not been collapsed by salmon and differ in length. Gene counts are dispersed across different combinations of these haplotypes across samples, which isn't very amenable to gene level differential expression analysis. The KIR locus (which is notoriously confusing and full of differing gene content haplotypes) is of particular interest to us and influenced precisely by this issue. As shown below, there are 34 versions of _KIR3DL2_ assigned gene counts across our samples:. `> rowRanges(gse)[grep(""KIR3DL2"", rowRanges(gse)$gene_name)]`; [KIR3DL2.txt](https://github.com/COMBINE-lab/salmon/files/4883051/KIR3DL2.txt). The salmon counts look like this:; `assays(gse)$counts[grep(""KIR3DL2"", rowRanges(gse)$symbol),][,1:5]`; [counts.txt](https://github.com/COMBINE-lab/salmon/files/4883045/counts.txt). There are around 500 other genes in which this occurs also (including all KIRs and HLAs), with no clear ""dominant"" haplotype to which the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/544
https://github.com/COMBINE-lab/salmon/issues/544:479,Security,validat,validateMappings,479,"Hello!. I am very new to using Salmon and apologise if this issue has arisen elsewhere! I'm just looking to ensure I'm not doing anything sketchy before progressing with some RNASeq analysis following transcript quantification... Salmon version: v1.2.1; Index: Hg38 salmon_sa_index sourced from https://refgenomes.databio.org/#hg38. I have run Salmon on whole transcriptome RNASeq data as follows:; `salmon quant -i ${index} -l ISR -1 ${sampleR1} -2 ${sampleR2} \; --gcBias \; --validateMappings \; --writeMappings \; --writeUnmappedNames \; -o ${quants}/${rundate}_Salmon/${rundate}_${runid}_${indexpair}_quant`. Upon importing `quant.sf`files into R with `tximeta` and executing the function `summarizeToGene()` for` DESeq2` analysis I've been checking the validity of my top hits and have run into some confusion surrounding how to best handle counts assigned to an excessive number of alternate haplotypes/patches for some genes. These features have differing Ensembl gene IDs (but identical gene names) and are evidently not duplicate sequences as they have not been collapsed by salmon and differ in length. Gene counts are dispersed across different combinations of these haplotypes across samples, which isn't very amenable to gene level differential expression analysis. The KIR locus (which is notoriously confusing and full of differing gene content haplotypes) is of particular interest to us and influenced precisely by this issue. As shown below, there are 34 versions of _KIR3DL2_ assigned gene counts across our samples:. `> rowRanges(gse)[grep(""KIR3DL2"", rowRanges(gse)$gene_name)]`; [KIR3DL2.txt](https://github.com/COMBINE-lab/salmon/files/4883051/KIR3DL2.txt). The salmon counts look like this:; `assays(gse)$counts[grep(""KIR3DL2"", rowRanges(gse)$symbol),][,1:5]`; [counts.txt](https://github.com/COMBINE-lab/salmon/files/4883045/counts.txt). There are around 500 other genes in which this occurs also (including all KIRs and HLAs), with no clear ""dominant"" haplotype to which the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/544
https://github.com/COMBINE-lab/salmon/issues/544:1961,Usability,clear,clear,1961,"undate}_${runid}_${indexpair}_quant`. Upon importing `quant.sf`files into R with `tximeta` and executing the function `summarizeToGene()` for` DESeq2` analysis I've been checking the validity of my top hits and have run into some confusion surrounding how to best handle counts assigned to an excessive number of alternate haplotypes/patches for some genes. These features have differing Ensembl gene IDs (but identical gene names) and are evidently not duplicate sequences as they have not been collapsed by salmon and differ in length. Gene counts are dispersed across different combinations of these haplotypes across samples, which isn't very amenable to gene level differential expression analysis. The KIR locus (which is notoriously confusing and full of differing gene content haplotypes) is of particular interest to us and influenced precisely by this issue. As shown below, there are 34 versions of _KIR3DL2_ assigned gene counts across our samples:. `> rowRanges(gse)[grep(""KIR3DL2"", rowRanges(gse)$gene_name)]`; [KIR3DL2.txt](https://github.com/COMBINE-lab/salmon/files/4883051/KIR3DL2.txt). The salmon counts look like this:; `assays(gse)$counts[grep(""KIR3DL2"", rowRanges(gse)$symbol),][,1:5]`; [counts.txt](https://github.com/COMBINE-lab/salmon/files/4883045/counts.txt). There are around 500 other genes in which this occurs also (including all KIRs and HLAs), with no clear ""dominant"" haplotype to which the majority of reads are assigned for a given sample. Are there any suggestions as to how to progress here? Is it completely unreasonable for me to sum the counts across all haplotypes for a given gene prior to carrying on with `DESeq2`? I'm wary there could be issues with concatenating features with differing lengths, GC content etc. and subsequent normalisation. Is there an upstream step with salmon that could be used to provided summed gene level counts across all haplotypes? Should I use a different reference?. Any help would be much appreciated!. Kind regards,; Aimee",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/544
https://github.com/COMBINE-lab/salmon/issues/546:448,Availability,error,error,448,"Hi. :); I don't know if I should make this request here, but, if not, ou (adm) can delete it, but please, read first, it is important. In the Tutorial (Getting start) of the Salmon's page, in the Step 4 when we must to run the Script to Quantify the samples, the link to the script (**quant_tut_samples.sh** -- Link below to help) sends us to a page with a script different (and wrong) tha the script on the Tutorial's page. More specifically, the error is in the line 8 with this comand **(-2 ${samp}_2.fastq.gz \)**. Notice that the comand **(${fn}/)** is missing, which causes an error in the script run, which don't create the files in the respective folders, because it does not find de file DRR0161xx_2.fastq.gz.; I soffered to perceive this, because I went straight to the link and didn't read the script on page itself kkkkk, I think you need to fix this for other people be more to be happier with this tutorial, which is very good by the way. As I said, I don't know if this is where I should send this request, but, if you fix this error it's what matters now. **-- Script Link --** ; https://raw.githubusercontent.com/COMBINE-lab/salmon/gh-pages/assets/quant_tut_samples.sh. thank you very much. **C.B.; @charbavito**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/546
https://github.com/COMBINE-lab/salmon/issues/546:583,Availability,error,error,583,"Hi. :); I don't know if I should make this request here, but, if not, ou (adm) can delete it, but please, read first, it is important. In the Tutorial (Getting start) of the Salmon's page, in the Step 4 when we must to run the Script to Quantify the samples, the link to the script (**quant_tut_samples.sh** -- Link below to help) sends us to a page with a script different (and wrong) tha the script on the Tutorial's page. More specifically, the error is in the line 8 with this comand **(-2 ${samp}_2.fastq.gz \)**. Notice that the comand **(${fn}/)** is missing, which causes an error in the script run, which don't create the files in the respective folders, because it does not find de file DRR0161xx_2.fastq.gz.; I soffered to perceive this, because I went straight to the link and didn't read the script on page itself kkkkk, I think you need to fix this for other people be more to be happier with this tutorial, which is very good by the way. As I said, I don't know if this is where I should send this request, but, if you fix this error it's what matters now. **-- Script Link --** ; https://raw.githubusercontent.com/COMBINE-lab/salmon/gh-pages/assets/quant_tut_samples.sh. thank you very much. **C.B.; @charbavito**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/546
https://github.com/COMBINE-lab/salmon/issues/546:1043,Availability,error,error,1043,"Hi. :); I don't know if I should make this request here, but, if not, ou (adm) can delete it, but please, read first, it is important. In the Tutorial (Getting start) of the Salmon's page, in the Step 4 when we must to run the Script to Quantify the samples, the link to the script (**quant_tut_samples.sh** -- Link below to help) sends us to a page with a script different (and wrong) tha the script on the Tutorial's page. More specifically, the error is in the line 8 with this comand **(-2 ${samp}_2.fastq.gz \)**. Notice that the comand **(${fn}/)** is missing, which causes an error in the script run, which don't create the files in the respective folders, because it does not find de file DRR0161xx_2.fastq.gz.; I soffered to perceive this, because I went straight to the link and didn't read the script on page itself kkkkk, I think you need to fix this for other people be more to be happier with this tutorial, which is very good by the way. As I said, I don't know if this is where I should send this request, but, if you fix this error it's what matters now. **-- Script Link --** ; https://raw.githubusercontent.com/COMBINE-lab/salmon/gh-pages/assets/quant_tut_samples.sh. thank you very much. **C.B.; @charbavito**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/546
https://github.com/COMBINE-lab/salmon/issues/549:137,Availability,error,error,137,"Hello,. I recently updated to 1.3.1 and I have been trying to set minScoreFraction to 0.7. However when i try to set this value I get an error stating it is an unknown option. Anyone else have this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/549
https://github.com/COMBINE-lab/salmon/issues/549:19,Deployability,update,updated,19,"Hello,. I recently updated to 1.3.1 and I have been trying to set minScoreFraction to 0.7. However when i try to set this value I get an error stating it is an unknown option. Anyone else have this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/549
https://github.com/COMBINE-lab/salmon/issues/550:142,Deployability,update,update,142,"Hi, this is following on from our discussion in Bioconductor Slack (channel `#singlecell-queries`) from a few weeks ago. Thanks again for the update to propagate cellular barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550
https://github.com/COMBINE-lab/salmon/issues/550:1302,Deployability,pipeline,pipeline,1302,"r barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if it were somehow possible to update this to use `alevin` in the future we would be very interested in this.). Thanks again for your help and previous responses on Slack.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550
https://github.com/COMBINE-lab/salmon/issues/550:1919,Deployability,release,release,1919,"r barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if it were somehow possible to update this to use `alevin` in the future we would be very interested in this.). Thanks again for your help and previous responses on Slack.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550
https://github.com/COMBINE-lab/salmon/issues/550:1967,Deployability,pipeline,pipeline,1967,"r barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if it were somehow possible to update this to use `alevin` in the future we would be very interested in this.). Thanks again for your help and previous responses on Slack.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550
https://github.com/COMBINE-lab/salmon/issues/550:2029,Deployability,update,update,2029,"r barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if it were somehow possible to update this to use `alevin` in the future we would be very interested in this.). Thanks again for your help and previous responses on Slack.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550
https://github.com/COMBINE-lab/salmon/issues/550:1847,Performance,perform,performance,1847,"r barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if it were somehow possible to update this to use `alevin` in the future we would be very interested in this.). Thanks again for your help and previous responses on Slack.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550
https://github.com/COMBINE-lab/salmon/issues/550:312,Security,access,access,312,"Hi, this is following on from our discussion in Bioconductor Slack (channel `#singlecell-queries`) from a few weeks ago. Thanks again for the update to propagate cellular barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550
https://github.com/COMBINE-lab/salmon/issues/550:272,Testability,test,testing,272,"Hi, this is following on from our discussion in Bioconductor Slack (channel `#singlecell-queries`) from a few weeks ago. Thanks again for the update to propagate cellular barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550
https://github.com/COMBINE-lab/salmon/issues/551:29,Availability,error,error,29,"Hi ,. I am getting following error while installing salmon:. [ 86%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x355e): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x35fc): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::option_dependency(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x3911): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:2101,Availability,error,error,2101,")':; SalmonUtils.cpp:(.text+0x3911): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:2164,Availability,Error,Error,2164,")':; SalmonUtils.cpp:(.text+0x3911): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:2221,Availability,Error,Error,2221,"ocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:2246,Availability,Error,Error,2246,"ocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:2617,Availability,down,downloaded,2617,"nst&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:41,Deployability,install,installing,41,"Hi ,. I am getting following error while installing salmon:. [ 86%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x355e): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x35fc): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::option_dependency(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x3911): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:117,Deployability,install,install,117,"Hi ,. I am getting following error while installing salmon:. [ 86%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x355e): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x35fc): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::option_dependency(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x3911): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:2596,Deployability,install,installed,2596,"nst&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:2365,Usability,clear,clear,2365,"nst&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/551:2808,Usability,clear,clear,2808,"nst&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551
https://github.com/COMBINE-lab/salmon/issues/553:62,Deployability,install,install,62,"Hello,. I am doing my best to get the pigx-rnaseq workflow to install locally. Sadly, pigx' test routines bail out with a complaint on a missing sa.bin file as part of the files that are created by `salmon index`. I had tried salmon 1.2 and salmon 1.3 - no sa.bin, also not in your source tree. I placed this as an issue [here](https://github.com/BIMSBbioinfo/pigx_rnaseq/issues/78) and besides grepping through your source tree did some reading also on https://salmon.readthedocs.io . Still, I have no indiation about a missing option or so or if that file was only created in an earlier version. Did I miss this somewhere? Otherwise please kindly consider to explain as part of your documentation what files are to be expected in the index folder. Many thanks and regards,; Steffen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/553
https://github.com/COMBINE-lab/salmon/issues/553:97,Integrability,rout,routines,97,"Hello,. I am doing my best to get the pigx-rnaseq workflow to install locally. Sadly, pigx' test routines bail out with a complaint on a missing sa.bin file as part of the files that are created by `salmon index`. I had tried salmon 1.2 and salmon 1.3 - no sa.bin, also not in your source tree. I placed this as an issue [here](https://github.com/BIMSBbioinfo/pigx_rnaseq/issues/78) and besides grepping through your source tree did some reading also on https://salmon.readthedocs.io . Still, I have no indiation about a missing option or so or if that file was only created in an earlier version. Did I miss this somewhere? Otherwise please kindly consider to explain as part of your documentation what files are to be expected in the index folder. Many thanks and regards,; Steffen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/553
https://github.com/COMBINE-lab/salmon/issues/553:92,Testability,test,test,92,"Hello,. I am doing my best to get the pigx-rnaseq workflow to install locally. Sadly, pigx' test routines bail out with a complaint on a missing sa.bin file as part of the files that are created by `salmon index`. I had tried salmon 1.2 and salmon 1.3 - no sa.bin, also not in your source tree. I placed this as an issue [here](https://github.com/BIMSBbioinfo/pigx_rnaseq/issues/78) and besides grepping through your source tree did some reading also on https://salmon.readthedocs.io . Still, I have no indiation about a missing option or so or if that file was only created in an earlier version. Did I miss this somewhere? Otherwise please kindly consider to explain as part of your documentation what files are to be expected in the index folder. Many thanks and regards,; Steffen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/553
https://github.com/COMBINE-lab/salmon/issues/556:43,Availability,avail,available,43,"Hi @rob-p . A question: Can salmon be made available for ARM based arch?. Context: [AWS has recently launched instances with ARM based processors](https://aws.amazon.com/ec2/instance-types/r6/#:~:text=Amazon%20EC2%20R6g%20instances%20are,real%20time%20big%20data%20analytics.) which claim to have better performance. I would like to test/use salmon workflows with ARM based instances. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556
https://github.com/COMBINE-lab/salmon/issues/556:304,Performance,perform,performance,304,"Hi @rob-p . A question: Can salmon be made available for ARM based arch?. Context: [AWS has recently launched instances with ARM based processors](https://aws.amazon.com/ec2/instance-types/r6/#:~:text=Amazon%20EC2%20R6g%20instances%20are,real%20time%20big%20data%20analytics.) which claim to have better performance. I would like to test/use salmon workflows with ARM based instances. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556
https://github.com/COMBINE-lab/salmon/issues/556:333,Testability,test,test,333,"Hi @rob-p . A question: Can salmon be made available for ARM based arch?. Context: [AWS has recently launched instances with ARM based processors](https://aws.amazon.com/ec2/instance-types/r6/#:~:text=Amazon%20EC2%20R6g%20instances%20are,real%20time%20big%20data%20analytics.) which claim to have better performance. I would like to test/use salmon workflows with ARM based instances. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556
https://github.com/COMBINE-lab/salmon/issues/557:888,Usability,clear,clear,888,"HI, ; Maybe this is not the best place to ask this, I am aware. But as the minds behind Salmon I guess is going to be the best possible answer. ; I realised the quantification using salmon with genecode transcriptome on 94 paired-end fastq patient samples. ; I get the gene-sumarised TPM using Tximeta. ; I used then EdgeR to normalice these TPM (stored as gse) with . ```; y <- makeDGEList(gse); y <- calcNormFactors(y); norm.counts.TMM <- cpm(y); ```. My question is, is TPM already ""ready-to-use"" for comparison between samples (gene1 across the 94 samples) ? or the TPM values are only comparables between the same sample (i.e. gene 1 vs gen 10 in sample 1). is the way `(makeDGElist, calcNormFactors, cpm)` the way to normalise salmon output? . I try for several weeks to found it in different forums, (even I read some of the Rob answers to this kind of questions...) but still not clear about the right procedure. Kindest regards!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/557
https://github.com/COMBINE-lab/salmon/issues/558:174,Testability,test,test,174,I've been trying to understand this readout as mine seems abnormally low.; I want to understand it well enough to be sure that the low readout is indicative of and how I can test hypotheses.; Currently my hits per frag is 0.0170477 using mapping-based mode against the human transcripts from https://www.gencodegenes.org/human/. The sample was expected to have a high amount of human RNA and if I'm interpereting this correctly this means that a small minority of reads were mappable to that transcriptome. I'm sorry to open a thread about this but I didn't see it explained in the Docs or any other discussions.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/558
https://github.com/COMBINE-lab/salmon/issues/559:331,Availability,error,error,331,"Issue with salmon for bulk RNA-seq. The following code was run to invoke salmon:; ```; docker run --rm -v /labs/Resources/mmulatta/MMUL_10:/mnt/indexdir/ resources/salmon salmon index -t /mnt/indexdir/gentrome.fa -d /mnt/indexdir/decoys.txt -p 8 -i /mnt/indexdir/index.salmon; ```; however, everytime I run it, I get the following error: ; Exception : [Error: The index version file /labs/khatrilab/Resources/mmulatta/MMUL_10/index.salmon/versionInfo.json doesn’t seem to exist. Please try re-building the salmon index.] . when in fact, the file exists. the gentrome.fa and decoys.txt files were created by following this tutorial (clearly changing the genome to mmulatta); https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ . Why is salmon not finding the index file that's clearly present in the given folder path?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559
https://github.com/COMBINE-lab/salmon/issues/559:353,Availability,Error,Error,353,"Issue with salmon for bulk RNA-seq. The following code was run to invoke salmon:; ```; docker run --rm -v /labs/Resources/mmulatta/MMUL_10:/mnt/indexdir/ resources/salmon salmon index -t /mnt/indexdir/gentrome.fa -d /mnt/indexdir/decoys.txt -p 8 -i /mnt/indexdir/index.salmon; ```; however, everytime I run it, I get the following error: ; Exception : [Error: The index version file /labs/khatrilab/Resources/mmulatta/MMUL_10/index.salmon/versionInfo.json doesn’t seem to exist. Please try re-building the salmon index.] . when in fact, the file exists. the gentrome.fa and decoys.txt files were created by following this tutorial (clearly changing the genome to mmulatta); https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ . Why is salmon not finding the index file that's clearly present in the given folder path?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559
https://github.com/COMBINE-lab/salmon/issues/559:632,Usability,clear,clearly,632,"Issue with salmon for bulk RNA-seq. The following code was run to invoke salmon:; ```; docker run --rm -v /labs/Resources/mmulatta/MMUL_10:/mnt/indexdir/ resources/salmon salmon index -t /mnt/indexdir/gentrome.fa -d /mnt/indexdir/decoys.txt -p 8 -i /mnt/indexdir/index.salmon; ```; however, everytime I run it, I get the following error: ; Exception : [Error: The index version file /labs/khatrilab/Resources/mmulatta/MMUL_10/index.salmon/versionInfo.json doesn’t seem to exist. Please try re-building the salmon index.] . when in fact, the file exists. the gentrome.fa and decoys.txt files were created by following this tutorial (clearly changing the genome to mmulatta); https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ . Why is salmon not finding the index file that's clearly present in the given folder path?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559
https://github.com/COMBINE-lab/salmon/issues/559:796,Usability,clear,clearly,796,"Issue with salmon for bulk RNA-seq. The following code was run to invoke salmon:; ```; docker run --rm -v /labs/Resources/mmulatta/MMUL_10:/mnt/indexdir/ resources/salmon salmon index -t /mnt/indexdir/gentrome.fa -d /mnt/indexdir/decoys.txt -p 8 -i /mnt/indexdir/index.salmon; ```; however, everytime I run it, I get the following error: ; Exception : [Error: The index version file /labs/khatrilab/Resources/mmulatta/MMUL_10/index.salmon/versionInfo.json doesn’t seem to exist. Please try re-building the salmon index.] . when in fact, the file exists. the gentrome.fa and decoys.txt files were created by following this tutorial (clearly changing the genome to mmulatta); https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ . Why is salmon not finding the index file that's clearly present in the given folder path?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559
https://github.com/COMBINE-lab/salmon/issues/560:330,Availability,error,error,330,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:62,Integrability,message,message,62,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:336,Integrability,message,message,336,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:1500,Performance,Load,Loading,1500," ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:1570,Performance,Load,Loading,1570," }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:1648,Performance,Load,Loading,1648,"fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:1793,Performance,Load,Loading,1793,"_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading refere",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:1924,Performance,Load,Loading,1924,"8.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference ac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:2058,Performance,Load,Loading,2058,"35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 9.0843 ms; -----------------------------------------. [2020-08-13 09:36:14.700] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:2302,Performance,Load,Loading,2302,"] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 9.0843 ms; -----------------------------------------. [2020-08-13 09:36:14.700] [jointLog] [info] done; [2020-08-13 09:36:14.700] [jointLog] [info] Index contained 177,651 targets; [2020-08-13 09:36:14.782] [jointLog] [info] Number of decoys : 195; processed 500,000 fragmentsjointLog] [info",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:2454,Performance,Load,Loading,2454,"implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 9.0843 ms; -----------------------------------------. [2020-08-13 09:36:14.700] [jointLog] [info] done; [2020-08-13 09:36:14.700] [jointLog] [info] Index contained 177,651 targets; [2020-08-13 09:36:14.782] [jointLog] [info] Number of decoys : 195; processed 500,000 fragmentsjointLog] [info] First decoy index : 177,412",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:2597,Performance,Load,Loading,2597,"implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 9.0843 ms; -----------------------------------------. [2020-08-13 09:36:14.700] [jointLog] [info] done; [2020-08-13 09:36:14.700] [jointLog] [info] Index contained 177,651 targets; [2020-08-13 09:36:14.782] [jointLog] [info] Number of decoys : 195; processed 500,000 fragmentsjointLog] [info] First decoy index : 177,412",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:2741,Performance,Load,Loading,2741,"implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 9.0843 ms; -----------------------------------------. [2020-08-13 09:36:14.700] [jointLog] [info] done; [2020-08-13 09:36:14.700] [jointLog] [info] Index contained 177,651 targets; [2020-08-13 09:36:14.782] [jointLog] [info] Number of decoys : 195; processed 500,000 fragmentsjointLog] [info] First decoy index : 177,412",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:2875,Performance,Load,Loading,2875,"implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 9.0843 ms; -----------------------------------------. [2020-08-13 09:36:14.700] [jointLog] [info] done; [2020-08-13 09:36:14.700] [jointLog] [info] Index contained 177,651 targets; [2020-08-13 09:36:14.782] [jointLog] [info] Number of decoys : 195; processed 500,000 fragmentsjointLog] [info] First decoy index : 177,412",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:304,Security,validat,validateMappings,304,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:354,Security,validat,validateMappings,354,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:706,Security,validat,validateMappings,706,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:1064,Security,validat,validateMappings,1064,"Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:1226,Security,validat,validateMappings,1226,"dex -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory ent",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:251,Testability,test,testData,251,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:278,Testability,test,testData,278,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:626,Testability,test,testData,626,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:673,Testability,test,testData,673,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:761,Testability,Log,Logs,761,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/560:790,Testability,log,logs,790,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560
https://github.com/COMBINE-lab/salmon/issues/561:230,Availability,error,error,230,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is relevant to salmon.; **Describe the bug**; I have been trying to run the salmon quant commando and have kept running into the following error:; Exception : [Error: The index version file salmon_index_gencode_vM25/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; bad ; After going through some of the previous complaints, I figured that there was a bad memory allocation while creating the index. I increased the memory allocation which seems to have solved the indexing problem (please see attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/rel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:251,Availability,Error,Error,251,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is relevant to salmon.; **Describe the bug**; I have been trying to run the salmon quant commando and have kept running into the following error:; Exception : [Error: The index version file salmon_index_gencode_vM25/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; bad ; After going through some of the previous complaints, I figured that there was a bad memory allocation while creating the index. I increased the memory allocation which seems to have solved the indexing problem (please see attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/rel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:968,Availability,error,error,968,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is relevant to salmon.; **Describe the bug**; I have been trying to run the salmon quant commando and have kept running into the following error:; Exception : [Error: The index version file salmon_index_gencode_vM25/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; bad ; After going through some of the previous complaints, I figured that there was a bad memory allocation while creating the index. I increased the memory allocation which seems to have solved the indexing problem (please see attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/rel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:1643,Availability,down,downloaded,1643," attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:1738,Availability,down,download,1738," below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:1079,Deployability,release,release,1079," salmon (bulk mode) or alevin (single-cell mode)?**; This is relevant to salmon.; **Describe the bug**; I have been trying to run the salmon quant commando and have kept running into the following error:; Exception : [Error: The index version file salmon_index_gencode_vM25/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; bad ; After going through some of the previous complaints, I figured that there was a bad memory allocation while creating the index. I increased the memory allocation which seems to have solved the indexing problem (please see attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcript",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:1622,Deployability,install,installed,1622," attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:1729,Deployability,release,releases,1729," below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:3202,Deployability,release,release,3202,"table, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the contents in the folder containing the indexed file. The versionInfo.json file is present in that folder. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux 3.10.0-957.el7.x86_64 x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux compute-106.cm.cluster 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. lsb-release:. LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.6.1810 (Core); Release: 7.6.1810; Codename: Core. **Additional context**; Add any other context about the problem here.; [Files.zip](https://github.com/COMBINE-lab/salmon/files/5079070/Files.zip)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:3454,Deployability,release,release,3454,"table, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the contents in the folder containing the indexed file. The versionInfo.json file is present in that folder. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux 3.10.0-957.el7.x86_64 x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux compute-106.cm.cluster 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. lsb-release:. LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.6.1810 (Core); Release: 7.6.1810; Codename: Core. **Additional context**; Add any other context about the problem here.; [Files.zip](https://github.com/COMBINE-lab/salmon/files/5079070/Files.zip)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:3479,Deployability,Release,Release,3479,"table, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the contents in the folder containing the indexed file. The versionInfo.json file is present in that folder. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux 3.10.0-957.el7.x86_64 x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux compute-106.cm.cluster 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. lsb-release:. LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.6.1810 (Core); Release: 7.6.1810; Codename: Core. **Additional context**; Add any other context about the problem here.; [Files.zip](https://github.com/COMBINE-lab/salmon/files/5079070/Files.zip)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/561:2420,Usability,clear,clear,2420," not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the contents in the folder containing the indexed file. The versionInfo.json file is present in that folder. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux 3.10.0-957.el7.x86_64 x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux compute-106.cm.cluster 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. lsb-release:. LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Descriptio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561
https://github.com/COMBINE-lab/salmon/issues/562:702,Availability,down,downsampled,702,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/562:888,Availability,error,error,888,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/562:1026,Availability,error,error,1026,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/562:1073,Availability,error,error,1073,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/562:1166,Availability,down,downsampled,1166,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/562:94,Deployability,pipeline,pipeline,94,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/562:117,Deployability,upgrade,upgrade,117,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/562:1260,Modifiability,config,configured,1260,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/562:1042,Performance,perform,performed,1042,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/562:1347,Safety,detect,detected,1347,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/562:739,Testability,test,tested,739,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562
https://github.com/COMBINE-lab/salmon/issues/563:302,Availability,error,error,302,"Dear salmon team. I'm using salmon v1.3.0 and I've tried to ran the quantification using the command as is in the web page. ` salmon quant -i mus_musculus_index -l A -1 ../../output_paired_PVI18_1.fastq.gz -2 ../../output_paired_PVI18_2.fastq.gz -p 4 --validateMappings -o quants/`. but it give me the error . Exception : [unrecognised option '--validateMappings']. Exiting. at first look my line doesn't seems to be bad-formatted, so can you help me with the error please. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/563
https://github.com/COMBINE-lab/salmon/issues/563:460,Availability,error,error,460,"Dear salmon team. I'm using salmon v1.3.0 and I've tried to ran the quantification using the command as is in the web page. ` salmon quant -i mus_musculus_index -l A -1 ../../output_paired_PVI18_1.fastq.gz -2 ../../output_paired_PVI18_2.fastq.gz -p 4 --validateMappings -o quants/`. but it give me the error . Exception : [unrecognised option '--validateMappings']. Exiting. at first look my line doesn't seems to be bad-formatted, so can you help me with the error please. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/563
https://github.com/COMBINE-lab/salmon/issues/563:253,Security,validat,validateMappings,253,"Dear salmon team. I'm using salmon v1.3.0 and I've tried to ran the quantification using the command as is in the web page. ` salmon quant -i mus_musculus_index -l A -1 ../../output_paired_PVI18_1.fastq.gz -2 ../../output_paired_PVI18_2.fastq.gz -p 4 --validateMappings -o quants/`. but it give me the error . Exception : [unrecognised option '--validateMappings']. Exiting. at first look my line doesn't seems to be bad-formatted, so can you help me with the error please. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/563
https://github.com/COMBINE-lab/salmon/issues/563:346,Security,validat,validateMappings,346,"Dear salmon team. I'm using salmon v1.3.0 and I've tried to ran the quantification using the command as is in the web page. ` salmon quant -i mus_musculus_index -l A -1 ../../output_paired_PVI18_1.fastq.gz -2 ../../output_paired_PVI18_2.fastq.gz -p 4 --validateMappings -o quants/`. but it give me the error . Exception : [unrecognised option '--validateMappings']. Exiting. at first look my line doesn't seems to be bad-formatted, so can you help me with the error please. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/563
https://github.com/COMBINE-lab/salmon/issues/565:74,Availability,error,error,74,"I installed salmon from conda environment using python3 and got the below error:. ```; $ salmon. salmon: error while loading shared libraries: libboost_thread.so.1.60.0: cannot open shared object file: No such file or directory; ```. I am using Ubuntu 16.04 Xenial for which the latest Boost version is [1.58](https://launchpad.net/ubuntu/xenial/+package/libboost-dev). Since it was originally compiled under a later version of Boost (1.60), it gives the above error. I found this post to fix the issue temporarily:; https://www.biostars.org/p/389360/. It would be nice to fix it to search for the latest version of boost available though. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565
https://github.com/COMBINE-lab/salmon/issues/565:105,Availability,error,error,105,"I installed salmon from conda environment using python3 and got the below error:. ```; $ salmon. salmon: error while loading shared libraries: libboost_thread.so.1.60.0: cannot open shared object file: No such file or directory; ```. I am using Ubuntu 16.04 Xenial for which the latest Boost version is [1.58](https://launchpad.net/ubuntu/xenial/+package/libboost-dev). Since it was originally compiled under a later version of Boost (1.60), it gives the above error. I found this post to fix the issue temporarily:; https://www.biostars.org/p/389360/. It would be nice to fix it to search for the latest version of boost available though. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565
https://github.com/COMBINE-lab/salmon/issues/565:461,Availability,error,error,461,"I installed salmon from conda environment using python3 and got the below error:. ```; $ salmon. salmon: error while loading shared libraries: libboost_thread.so.1.60.0: cannot open shared object file: No such file or directory; ```. I am using Ubuntu 16.04 Xenial for which the latest Boost version is [1.58](https://launchpad.net/ubuntu/xenial/+package/libboost-dev). Since it was originally compiled under a later version of Boost (1.60), it gives the above error. I found this post to fix the issue temporarily:; https://www.biostars.org/p/389360/. It would be nice to fix it to search for the latest version of boost available though. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565
https://github.com/COMBINE-lab/salmon/issues/565:622,Availability,avail,available,622,"I installed salmon from conda environment using python3 and got the below error:. ```; $ salmon. salmon: error while loading shared libraries: libboost_thread.so.1.60.0: cannot open shared object file: No such file or directory; ```. I am using Ubuntu 16.04 Xenial for which the latest Boost version is [1.58](https://launchpad.net/ubuntu/xenial/+package/libboost-dev). Since it was originally compiled under a later version of Boost (1.60), it gives the above error. I found this post to fix the issue temporarily:; https://www.biostars.org/p/389360/. It would be nice to fix it to search for the latest version of boost available though. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565
https://github.com/COMBINE-lab/salmon/issues/565:2,Deployability,install,installed,2,"I installed salmon from conda environment using python3 and got the below error:. ```; $ salmon. salmon: error while loading shared libraries: libboost_thread.so.1.60.0: cannot open shared object file: No such file or directory; ```. I am using Ubuntu 16.04 Xenial for which the latest Boost version is [1.58](https://launchpad.net/ubuntu/xenial/+package/libboost-dev). Since it was originally compiled under a later version of Boost (1.60), it gives the above error. I found this post to fix the issue temporarily:; https://www.biostars.org/p/389360/. It would be nice to fix it to search for the latest version of boost available though. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565
https://github.com/COMBINE-lab/salmon/issues/565:117,Performance,load,loading,117,"I installed salmon from conda environment using python3 and got the below error:. ```; $ salmon. salmon: error while loading shared libraries: libboost_thread.so.1.60.0: cannot open shared object file: No such file or directory; ```. I am using Ubuntu 16.04 Xenial for which the latest Boost version is [1.58](https://launchpad.net/ubuntu/xenial/+package/libboost-dev). Since it was originally compiled under a later version of Boost (1.60), it gives the above error. I found this post to fix the issue temporarily:; https://www.biostars.org/p/389360/. It would be nice to fix it to search for the latest version of boost available though. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565
https://github.com/COMBINE-lab/salmon/issues/566:527,Deployability,install,install,527,"**Question: How to generate a Salmon output with both FPKM and TPM?**. Hello guys! I really enjoy using Salmon, but I recently encounter a problem regarding the output unit. . I'm currently using Salmon version 1.2.0 for processing metagenomic data but I can only generate .sf file with 5 columns (Name, Length, EffectiveLength, TPM & NumReads). From the information of the following website, Salmon seems to be capable to write the output as FPKM and TPM.; https://sailfish.readthedocs.io/en/master/salmon.html. I've tried to install the latest version of Salmon (1.3.0), but the output is still the same. So, does anyone know how to make such output?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/566
https://github.com/COMBINE-lab/salmon/issues/570:2454,Availability,error,error,2454,"*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x24e): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger,; std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; collect2: error: ld returned 1 exit status; make[2]: *** [src/salmon] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. Do you have any leads?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570
https://github.com/COMBINE-lab/salmon/issues/570:2514,Availability,Error,Error,2514,"*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x24e): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger,; std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; collect2: error: ld returned 1 exit status; make[2]: *** [src/salmon] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. Do you have any leads?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570
https://github.com/COMBINE-lab/salmon/issues/570:2568,Availability,Error,Error,2568,"*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x24e): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger,; std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; collect2: error: ld returned 1 exit status; make[2]: *** [src/salmon] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. Do you have any leads?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570
https://github.com/COMBINE-lab/salmon/issues/570:2593,Availability,Error,Error,2593,"*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x24e): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger,; std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; collect2: error: ld returned 1 exit status; make[2]: *** [src/salmon] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. Do you have any leads?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570
https://github.com/COMBINE-lab/salmon/issues/570:208,Deployability,install,install,208,"Greetings. Under Centos 6.9, using cmake-3.13.2, gcc 7.3 and 1.68.0, the salmon-1.30 build fails at the make step.; The command make -j8 fails with:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd32): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../external/pufferfish/src/libpuffer.a(PufferfishIndexer.cpp.o): In function `std::shared_ptr<spdlog::logger> spdlog::details::registry_t<std::mutex>::create<__gnu_cxx::__normal_iterat; or<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEER",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570
https://github.com/COMBINE-lab/salmon/issues/570:506,Testability,log,logger,506,"Greetings. Under Centos 6.9, using cmake-3.13.2, gcc 7.3 and 1.68.0, the salmon-1.30 build fails at the make step.; The command make -j8 fails with:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd32): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../external/pufferfish/src/libpuffer.a(PufferfishIndexer.cpp.o): In function `std::shared_ptr<spdlog::logger> spdlog::details::registry_t<std::mutex>::create<__gnu_cxx::__normal_iterat; or<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEER",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570
https://github.com/COMBINE-lab/salmon/issues/570:1747,Testability,log,logger,1747,"try_t<std::mutex>::create<__gnu_cxx::__normal_iterat; or<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x24e): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger,; std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; collect2: error: ld returned 1 exit status; make[2]: *** [src/salmon] Error 1; make[1]: *** ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570
https://github.com/COMBINE-lab/salmon/issues/570:1780,Testability,log,logger,1780,"try_t<std::mutex>::create<__gnu_cxx::__normal_iterat; or<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x24e): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger,; std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; collect2: error: ld returned 1 exit status; make[2]: *** [src/salmon] Error 1; make[1]: *** ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570
https://github.com/COMBINE-lab/salmon/issues/571:2062,Performance,Load,Loading,2062," Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020-09-05 13:51:50.523] [jointLog] [info] Number of decoys : 0; [2020-09-05 13:52:00.312] [jointLog] [info] Automatically detected most likely library type as SR; [2020-09-05 17:53:49.009] [jointLog] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,342 rich equivalence classes for further processing; [2020-09-05 17:53:51.128] [jointLog] [info] Counted 20,897,706 total reads in the equivalence classes ; [2020-09-05 17:53:51.133] [jointLog] [info] Number of mappings discarded because of alignment score : 116,214,502; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,428,490; [2020-09-05 17:53:51.133] [jointLog] [info] Num",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:2132,Performance,Load,Loading,2132,"%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020-09-05 13:51:50.523] [jointLog] [info] Number of decoys : 0; [2020-09-05 13:52:00.312] [jointLog] [info] Automatically detected most likely library type as SR; [2020-09-05 17:53:49.009] [jointLog] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,342 rich equivalence classes for further processing; [2020-09-05 17:53:51.128] [jointLog] [info] Counted 20,897,706 total reads in the equivalence classes ; [2020-09-05 17:53:51.133] [jointLog] [info] Number of mappings discarded because of alignment score : 116,214,502; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,428,490; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments discarded because they are best-mapped to dec",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:3489,Performance,optimiz,optimizer,3489,"Log] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,342 rich equivalence classes for further processing; [2020-09-05 17:53:51.128] [jointLog] [info] Counted 20,897,706 total reads in the equivalence classes ; [2020-09-05 17:53:51.133] [jointLog] [info] Number of mappings discarded because of alignment score : 116,214,502; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,428,490; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0; [2020-09-05 17:53:51.133] [jointLog] [info] Mapping rate = 40.8004%. [2020-09-05 17:53:51.133] [jointLog] [info] finished quantifyLibrary(); [2020-09-05 17:53:51.242] [jointLog] [info] Starting optimizer; [2020-09-05 17:53:51.129] [fileLog] [info] ; At end of round 0. Observed 51219317 total fragments (51219317 in most recent round). [2020-09-05 17:53:52.959] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2020-09-05 17:53:53.484] [jointLog] [info] iteration = 0 | max rel diff. = 5315.17; [2020-09-05 17:54:33.041] [jointLog] [info] iteration = 100 | max rel diff. = 19.0781; [2020-09-05 17:55:12.013] [jointLog] [info] iteration = 200 | max rel diff. = 14.788; [2020-09-05 17:55:49.642] [jointLog] [info] iteration = 300 | max rel diff. = 1.29965; [2020-09-05 17:56:27.111] [jointLog] [info] iteration = 400 | max rel diff. = 12.8157; [2020-09-05 17:57:04.974] [jointLog] [info] iteration = 500 | max rel diff. = 5.26288; [2020-09-05 17:57:42.449] [jointLog] [info] iteration = 600 | max rel diff. = 3.19907; [2020-09-05 17:58:19.892] [jointLog] [info] iteration = 700 | max rel diff. = 1.79807; [2020-09-05 17:58:57.376] [jointLog] [info] iteration = 800 | max re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:5645,Performance,optimiz,optimizer,5645,"= 5315.17; [2020-09-05 17:54:33.041] [jointLog] [info] iteration = 100 | max rel diff. = 19.0781; [2020-09-05 17:55:12.013] [jointLog] [info] iteration = 200 | max rel diff. = 14.788; [2020-09-05 17:55:49.642] [jointLog] [info] iteration = 300 | max rel diff. = 1.29965; [2020-09-05 17:56:27.111] [jointLog] [info] iteration = 400 | max rel diff. = 12.8157; [2020-09-05 17:57:04.974] [jointLog] [info] iteration = 500 | max rel diff. = 5.26288; [2020-09-05 17:57:42.449] [jointLog] [info] iteration = 600 | max rel diff. = 3.19907; [2020-09-05 17:58:19.892] [jointLog] [info] iteration = 700 | max rel diff. = 1.79807; [2020-09-05 17:58:57.376] [jointLog] [info] iteration = 800 | max rel diff. = 3.00673; [2020-09-05 17:59:35.303] [jointLog] [info] iteration = 900 | max rel diff. = 0.498694; [2020-09-05 18:00:12.798] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.426497; [2020-09-05 18:00:51.071] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0656976; [2020-09-05 18:01:28.449] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.066711; [2020-09-05 18:02:05.812] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0878689; [2020-09-05 18:02:43.251] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.136252; [2020-09-05 18:03:20.628] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.086622; [2020-09-05 18:03:58.141] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.294687; [2020-09-05 18:04:36.652] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.0428479; [2020-09-05 18:05:14.956] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.207862; [2020-09-05 18:05:53.140] [jointLog] [info] iteration = 1,900 | max rel diff. = 0.0591381; [2020-09-05 18:06:05.915] [jointLog] [info] iteration = 1,935 | max rel diff. = 0.00844302; [2020-09-05 18:06:05.977] [jointLog] [info] Finished optimizer; [2020-09-05 18:06:05.977] [jointLog] [info] writing output ; ```. Any suggestions or ideas to increase my mapping rate would be much appreciated!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:782,Safety,detect,detect,782,"Hello everyone! This is my first time analyzing RNAseq data and I am very much learning as I go while following a YouTube series (https://www.youtube.com/watch?v=butxOf_fxTY&t=217s&ab_channel=SimonCockell). Please excuse if I use wrong terminology in this post, I am very new to all of this and sometimes don't know what the right words are to describe what I am doing or trying to do (lol)!. With the fastq files of reads generated from my RNAseq experiment, I first ran FastQC. The quality of my data seemed to be fine as the per base sequence quality scores were 32+ and most of the other tests passed as well. Next, I built my index for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] Ther",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:2416,Safety,detect,detected,2416,"ads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020-09-05 13:51:50.523] [jointLog] [info] Number of decoys : 0; [2020-09-05 13:52:00.312] [jointLog] [info] Automatically detected most likely library type as SR; [2020-09-05 17:53:49.009] [jointLog] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,342 rich equivalence classes for further processing; [2020-09-05 17:53:51.128] [jointLog] [info] Counted 20,897,706 total reads in the equivalence classes ; [2020-09-05 17:53:51.133] [jointLog] [info] Number of mappings discarded because of alignment score : 116,214,502; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,428,490; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0; [2020-09-05 17:53:51.133] [jointLog] [info] Mapping rate = 40.8004%. [2020-09-05 17:53:51.133] [jointLog] [info] finished quantifyLibr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:1626,Security,validat,validateMappings,1626,"dex for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020-09-05 13:51:50.523] [jointLog] [info] Number of decoys : 0; [2020-09-05 13:52:00.312] [jointLog] [info] Automatically detected most likely library type as SR; [2020-09-05 17:53:49.009] [jointLog] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,34",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:1788,Security,validat,validateMappings,1788,"y type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020-09-05 13:51:50.523] [jointLog] [info] Number of decoys : 0; [2020-09-05 13:52:00.312] [jointLog] [info] Automatically detected most likely library type as SR; [2020-09-05 17:53:49.009] [jointLog] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,342 rich equivalence classes for further processing; [2020-09-05 17:53:51.128] [jointLog] [info] Counted 20,897,706 total reads in the equivalence classes ; [2020-09-0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:592,Testability,test,tests,592,"Hello everyone! This is my first time analyzing RNAseq data and I am very much learning as I go while following a YouTube series (https://www.youtube.com/watch?v=butxOf_fxTY&t=217s&ab_channel=SimonCockell). Please excuse if I use wrong terminology in this post, I am very new to all of this and sometimes don't know what the right words are to describe what I am doing or trying to do (lol)!. With the fastq files of reads generated from my RNAseq experiment, I first ran FastQC. The quality of my data seemed to be fine as the per base sequence quality scores were 32+ and most of the other tests passed as well. Next, I built my index for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] Ther",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:1325,Testability,log,logs,1325,"metimes don't know what the right words are to describe what I am doing or trying to do (lol)!. With the fastq files of reads generated from my RNAseq experiment, I first ran FastQC. The quality of my data seemed to be fine as the per base sequence quality scores were 32+ and most of the other tests passed as well. Next, I built my index for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:79,Usability,learn,learning,79,"Hello everyone! This is my first time analyzing RNAseq data and I am very much learning as I go while following a YouTube series (https://www.youtube.com/watch?v=butxOf_fxTY&t=217s&ab_channel=SimonCockell). Please excuse if I use wrong terminology in this post, I am very new to all of this and sometimes don't know what the right words are to describe what I am doing or trying to do (lol)!. With the fastq files of reads generated from my RNAseq experiment, I first ran FastQC. The quality of my data seemed to be fine as the per base sequence quality scores were 32+ and most of the other tests passed as well. Next, I built my index for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] Ther",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/571:1058,Usability,learn,learning,1058," is my first time analyzing RNAseq data and I am very much learning as I go while following a YouTube series (https://www.youtube.com/watch?v=butxOf_fxTY&t=217s&ab_channel=SimonCockell). Please excuse if I use wrong terminology in this post, I am very new to all of this and sometimes don't know what the right words are to describe what I am doing or trying to do (lol)!. With the fastq files of reads generated from my RNAseq experiment, I first ran FastQC. The quality of my data seemed to be fine as the per base sequence quality scores were 32+ and most of the other tests passed as well. Next, I built my index for Salmon using the fasta file from Gencode for the human transcriptome. Afterwards, I ran Salmon with the built index and had it automatically detect the library type. When the program was done aligning to the index, I saw that the file had a mapping rate of 40%. I guess what I'm asking is, is this an acceptable mapping rate or should I be concerned?? The reason I ask is because in the data I was working with while learning via the Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571
https://github.com/COMBINE-lab/salmon/issues/572:102,Deployability,upgrade,upgraded,102,"Hello,; I come back to Salmon after a few months, and meet an issue I did not before. First of all, I upgraded from version 1.2 to 1.3; Salmon refuse to index, and I am not quite sure why. I followed the ""selective alignment tutorial"", which worked before (although with different genomes). Here are the commands (I checked the md5sum of both assembly and transcripts and they are fine). grep ""^>"" <(gunzip -c ../../../Genomes/GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat ../../../Genomes/gencode.v35.transcripts.fa.gz ../../../Genomes/GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 4 -i salmon_index --gencode. All I get is a long list of warning:. Version Info: This is the most recent version of salmon.; [2020-10-14 18:04:19.244] [jLog] [info] building index; out : salmon_index; [2020-10-14 18:04:19.244] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-10-14 18:04:21.116] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping) ; [2020-10-14 18:04:21.247] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping) . and also (this is normal for long ncRNA I guess). [2020-10-14 18:19:30.936] [puff::index::jointLog] [warning] Entry with header [ENST00000674361.1|ENSG00000241743.4|OTTHUMG00000022220.5|OTTHUMT00000530527.1|XACT-203|XACT|347561|lncRNA|] was longer than 200000 nucleotides. This is probably a chromosome instead of a transcript. And then it all breaks. [2020-10-14 18:20:34.751] [puff::index::joi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/572
https://github.com/COMBINE-lab/salmon/issues/573:887,Availability,recover,recoverOrphans,887,"Hi, ; just a quick check if it is normal for SALMON 1.3 to send > 100 Gb of output to the stdout, despite using the -quiet flag. The quant mode appears to be running smoothly.; A sample of the output at the end of file:; <img width=""960"" alt=""Screenshot 2020-10-15 14 23 42"" src=""https://user-images.githubusercontent.com/1333150/96084759-380a3680-0ef2-11eb-82ab-b5ea839c9113.png"">. My command is as follow:; /gpfsdata/apps/salmon-latest_linux_x86_64/bin/salmon quant \; -i /gpfshome/hockchuan/SALMON/GCF_900626175.2_cs10_index \; -l ISR \; -1 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_1.fastq.gz \; -2 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_2.fastq.gz \; --seqBias \; --gcBias \; --posBias \; --incompatPrior 0.0 \; --geneMap /gpfsdata/JangiLab/hockchuan/cs10_reference_genome/GCF_900626175.2_cs10_genomic.gtf \; --recoverOrphans \; --allowDovetail \; --threads $NSLOTS \; --dumpEq \; --minScoreFraction 0.65 \; --writeMappings /gpfshome/hockchuan/SALMON/MAP/HEADBANDSTEM \; --fldMean 250 \; --fldSD 25 \; --writeOrphanLinks \; --writeUnmappedNames \; --quiet \; -o /gpfshome/hockchuan/SALMON/HEADBANDSTEM_quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/573
https://github.com/COMBINE-lab/salmon/issues/573:887,Safety,recover,recoverOrphans,887,"Hi, ; just a quick check if it is normal for SALMON 1.3 to send > 100 Gb of output to the stdout, despite using the -quiet flag. The quant mode appears to be running smoothly.; A sample of the output at the end of file:; <img width=""960"" alt=""Screenshot 2020-10-15 14 23 42"" src=""https://user-images.githubusercontent.com/1333150/96084759-380a3680-0ef2-11eb-82ab-b5ea839c9113.png"">. My command is as follow:; /gpfsdata/apps/salmon-latest_linux_x86_64/bin/salmon quant \; -i /gpfshome/hockchuan/SALMON/GCF_900626175.2_cs10_index \; -l ISR \; -1 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_1.fastq.gz \; -2 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_2.fastq.gz \; --seqBias \; --gcBias \; --posBias \; --incompatPrior 0.0 \; --geneMap /gpfsdata/JangiLab/hockchuan/cs10_reference_genome/GCF_900626175.2_cs10_genomic.gtf \; --recoverOrphans \; --allowDovetail \; --threads $NSLOTS \; --dumpEq \; --minScoreFraction 0.65 \; --writeMappings /gpfshome/hockchuan/SALMON/MAP/HEADBANDSTEM \; --fldMean 250 \; --fldSD 25 \; --writeOrphanLinks \; --writeUnmappedNames \; --quiet \; -o /gpfshome/hockchuan/SALMON/HEADBANDSTEM_quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/573
https://github.com/COMBINE-lab/salmon/issues/579:144,Performance,perform,perform,144,"Hello,. We are using Salmon to quantify gene counts for samples in RNA-Seq experiment. We will be using the weights of the equivalence class to perform a calculation for which we require the effective length of the equivalence classes. I checked in the eq_class.txt file under the aux_info directory but I was unable to find it. We are using alignment-based method where we supply a bamfile to salmon. Could you please help us to obtain the effective length of the equivalence classes?. I have another question. Salmon operates in both lightweight alignment mode and in alignment mode. For the lightweight mode, one needs to first create an index (which is the colored De Bruijn graph). I understand that this index (along with all the equivalence class) remains the same even when gene counts of different RNA-Seq samples are estimated. But I am a bit confused about the alignment-based method. In this case, salmon does not require an index since it has the actual alignments. If we have multiple samples, which are mapped to the same transcriptome will Salmon return the same set of equivalence classes? Since the samples are different the weights will change and so will the reads mapped to each equivalence class but will the set of eq. classes change?. Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/579
https://github.com/COMBINE-lab/salmon/issues/580:84,Availability,error,error,84,"Good evening,; I have been trying to do some alignments using salmon but I get this error after a few; hours. error: commlib error: got read error (closing ""compute-0-19.local/shepherd_ijs/1""). Your ""qlogin"" request could not be scheduled, try again later. Here is one example of the codes I used that didn't work, some others worked fine. for this I built a decoy-aware transcriptome file. salmon quant --libType A -1 L395_gfp_plus_Track_3446_3455_R1.fastq -2; L395_gfp_plus_Track-3446-3455_R2.fastq -i desalttama_salmon_index31 -p 12; --writeUnmappedNames --writeMappings -o desalttama_salmon_index31_quant_L395. I used This qlogin; qlogin -q all.q -l h_rt=48:00:00 -l mem_free=10G -R yes -now n -pe smp 1. How can I solve this issue?; Thank you; Beatriz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580
https://github.com/COMBINE-lab/salmon/issues/580:110,Availability,error,error,110,"Good evening,; I have been trying to do some alignments using salmon but I get this error after a few; hours. error: commlib error: got read error (closing ""compute-0-19.local/shepherd_ijs/1""). Your ""qlogin"" request could not be scheduled, try again later. Here is one example of the codes I used that didn't work, some others worked fine. for this I built a decoy-aware transcriptome file. salmon quant --libType A -1 L395_gfp_plus_Track_3446_3455_R1.fastq -2; L395_gfp_plus_Track-3446-3455_R2.fastq -i desalttama_salmon_index31 -p 12; --writeUnmappedNames --writeMappings -o desalttama_salmon_index31_quant_L395. I used This qlogin; qlogin -q all.q -l h_rt=48:00:00 -l mem_free=10G -R yes -now n -pe smp 1. How can I solve this issue?; Thank you; Beatriz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580
https://github.com/COMBINE-lab/salmon/issues/580:125,Availability,error,error,125,"Good evening,; I have been trying to do some alignments using salmon but I get this error after a few; hours. error: commlib error: got read error (closing ""compute-0-19.local/shepherd_ijs/1""). Your ""qlogin"" request could not be scheduled, try again later. Here is one example of the codes I used that didn't work, some others worked fine. for this I built a decoy-aware transcriptome file. salmon quant --libType A -1 L395_gfp_plus_Track_3446_3455_R1.fastq -2; L395_gfp_plus_Track-3446-3455_R2.fastq -i desalttama_salmon_index31 -p 12; --writeUnmappedNames --writeMappings -o desalttama_salmon_index31_quant_L395. I used This qlogin; qlogin -q all.q -l h_rt=48:00:00 -l mem_free=10G -R yes -now n -pe smp 1. How can I solve this issue?; Thank you; Beatriz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580
https://github.com/COMBINE-lab/salmon/issues/580:141,Availability,error,error,141,"Good evening,; I have been trying to do some alignments using salmon but I get this error after a few; hours. error: commlib error: got read error (closing ""compute-0-19.local/shepherd_ijs/1""). Your ""qlogin"" request could not be scheduled, try again later. Here is one example of the codes I used that didn't work, some others worked fine. for this I built a decoy-aware transcriptome file. salmon quant --libType A -1 L395_gfp_plus_Track_3446_3455_R1.fastq -2; L395_gfp_plus_Track-3446-3455_R2.fastq -i desalttama_salmon_index31 -p 12; --writeUnmappedNames --writeMappings -o desalttama_salmon_index31_quant_L395. I used This qlogin; qlogin -q all.q -l h_rt=48:00:00 -l mem_free=10G -R yes -now n -pe smp 1. How can I solve this issue?; Thank you; Beatriz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580
https://github.com/COMBINE-lab/salmon/issues/580:229,Energy Efficiency,schedul,scheduled,229,"Good evening,; I have been trying to do some alignments using salmon but I get this error after a few; hours. error: commlib error: got read error (closing ""compute-0-19.local/shepherd_ijs/1""). Your ""qlogin"" request could not be scheduled, try again later. Here is one example of the codes I used that didn't work, some others worked fine. for this I built a decoy-aware transcriptome file. salmon quant --libType A -1 L395_gfp_plus_Track_3446_3455_R1.fastq -2; L395_gfp_plus_Track-3446-3455_R2.fastq -i desalttama_salmon_index31 -p 12; --writeUnmappedNames --writeMappings -o desalttama_salmon_index31_quant_L395. I used This qlogin; qlogin -q all.q -l h_rt=48:00:00 -l mem_free=10G -R yes -now n -pe smp 1. How can I solve this issue?; Thank you; Beatriz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580
https://github.com/COMBINE-lab/salmon/issues/581:356,Availability,down,downstream,356,"Hi @rob-p . I have a question on the ""right"" way of tximport/DESeq2 after salmon quant. . Why I ask ""right way"" - is because I am a bit confused with the tximport vignette. 1 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor. ```; Do not manually pass the original gene-level counts to downstream methods without an offset. ; The only case where this would make sense is if there is no length bias to the counts, as happens in 3’ tagged RNA-seq data (see section below). ; The original gene-level counts are in txi$counts when tximport was run with countsFromAbundance=""no"". ; This is simply passing the summed estimated transcript counts, and does not correct for potential differential isoform usage (the offset), which is the point of the tximport methods (Soneson, Love, and Robinson 2015) for gene-level analysis. ; Passing uncorrected gene-level counts without an offset is not recommended by the tximport package authors. ; The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. ; Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression.; ```. 2 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Salmon. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581
https://github.com/COMBINE-lab/salmon/issues/581:1240,Performance,perform,perform,1240,".org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor. ```; Do not manually pass the original gene-level counts to downstream methods without an offset. ; The only case where this would make sense is if there is no length bias to the counts, as happens in 3’ tagged RNA-seq data (see section below). ; The original gene-level counts are in txi$counts when tximport was run with countsFromAbundance=""no"". ; This is simply passing the summed estimated transcript counts, and does not correct for potential differential isoform usage (the offset), which is the point of the tximport methods (Soneson, Love, and Robinson 2015) for gene-level analysis. ; Passing uncorrected gene-level counts without an offset is not recommended by the tximport package authors. ; The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. ; Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression.; ```. 2 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Salmon. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression; - The second method is to use the tximport argument countsFromAbundance=""lengthScaledTPM"" or ""scaledTPM"", and then to use the gene-level count matrix txi$counts directly as ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581
https://github.com/COMBINE-lab/salmon/issues/581:1981,Performance,perform,perform,1981,"s and offset” or “bias corrected counts without an offset”. ; Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression.; ```. 2 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Salmon. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression; - The second method is to use the tximport argument countsFromAbundance=""lengthScaledTPM"" or ""scaledTPM"", and then to use the gene-level count matrix txi$counts directly as you would a regular count matrix with these software. Let’s call this method “bias corrected counts without an offset”. Now, if I were to use the 2nd bullet as guide, shouldn't txi be generated this way for use with DESeq -- see the addition of `countsFromAbundance = ""lengthScaledTPM""` to tximport line. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene, countsFromAbundance = ""lengthScaledTPM""); head(txi.salmon$counts); write.csv(as.data.frame(txi.salmon$counts), file = ""tx2gene_NumReads.csv""); ```. And then use the tx2gene_NumReads.csv with DESeqDataSetFromMatrix, where the countData comes after reading in tx2gene_NumReads.csv upstream in the code. **Note**: I am using DESeqDataSetFromMatrix here and not DESeqDataSetFromTxi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581
https://github.com/COMBINE-lab/salmon/issues/581:3655,Performance,perform,performing,3655,"on creates the appropriate offset for you to perform gene-level differential expression; - The second method is to use the tximport argument countsFromAbundance=""lengthScaledTPM"" or ""scaledTPM"", and then to use the gene-level count matrix txi$counts directly as you would a regular count matrix with these software. Let’s call this method “bias corrected counts without an offset”. Now, if I were to use the 2nd bullet as guide, shouldn't txi be generated this way for use with DESeq -- see the addition of `countsFromAbundance = ""lengthScaledTPM""` to tximport line. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene, countsFromAbundance = ""lengthScaledTPM""); head(txi.salmon$counts); write.csv(as.data.frame(txi.salmon$counts), file = ""tx2gene_NumReads.csv""); ```. And then use the tx2gene_NumReads.csv with DESeqDataSetFromMatrix, where the countData comes after reading in tx2gene_NumReads.csv upstream in the code. **Note**: I am using DESeqDataSetFromMatrix here and not DESeqDataSetFromTximport as I have used tximport with countsFromAbundance=lengthScaledTPM. ```; library(""DESeq2""); dds <- DESeqDataSetFromMatrix(countData = cts,; colData = coldata,; design = ~ condition); dds; ```. I also saw these 2 links - https://hbctraining.github.io/DGE_workshop_salmon/lessons/07_DGE_summarizing_workflow.html and https://hbctraining.github.io/DGE_workshop_salmon/lessons/01_DGE_setup_and_overview.html. - pseudocounts generated by Salmon are represented as normalized TPM (transcripts per million) counts and map to transcripts. These need to be converted into non-normalized count estimates for performing DESeq2 analysis. To use DESeq2 we also need to collapse our abundance estimates from the transcript level to the gene-level.; - note - the 1st link uses DESeqDataSetFromTximport after using tximport to get txi with countsFromAbundance=lengthScaledTPM. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581
https://github.com/COMBINE-lab/salmon/issues/581:655,Usability,simpl,simply,655,"Hi @rob-p . I have a question on the ""right"" way of tximport/DESeq2 after salmon quant. . Why I ask ""right way"" - is because I am a bit confused with the tximport vignette. 1 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor. ```; Do not manually pass the original gene-level counts to downstream methods without an offset. ; The only case where this would make sense is if there is no length bias to the counts, as happens in 3’ tagged RNA-seq data (see section below). ; The original gene-level counts are in txi$counts when tximport was run with countsFromAbundance=""no"". ; This is simply passing the summed estimated transcript counts, and does not correct for potential differential isoform usage (the offset), which is the point of the tximport methods (Soneson, Love, and Robinson 2015) for gene-level analysis. ; Passing uncorrected gene-level counts without an offset is not recommended by the tximport package authors. ; The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. ; Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression.; ```. 2 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Salmon. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581
https://github.com/COMBINE-lab/salmon/issues/581:2358,Usability,guid,guide,2358,"ath(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression; - The second method is to use the tximport argument countsFromAbundance=""lengthScaledTPM"" or ""scaledTPM"", and then to use the gene-level count matrix txi$counts directly as you would a regular count matrix with these software. Let’s call this method “bias corrected counts without an offset”. Now, if I were to use the 2nd bullet as guide, shouldn't txi be generated this way for use with DESeq -- see the addition of `countsFromAbundance = ""lengthScaledTPM""` to tximport line. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene, countsFromAbundance = ""lengthScaledTPM""); head(txi.salmon$counts); write.csv(as.data.frame(txi.salmon$counts), file = ""tx2gene_NumReads.csv""); ```. And then use the tx2gene_NumReads.csv with DESeqDataSetFromMatrix, where the countData comes after reading in tx2gene_NumReads.csv upstream in the code. **Note**: I am using DESeqDataSetFromMatrix here and not DESeqDataSetFromTximport as I have used tximport with countsFromAbundance=lengthScaledTPM. ```; library(""DESeq2""); dds <- DESeqDataSetFromMatrix(countData = cts,; colData = coldata,; design = ~ condition); dds; ```. I also saw these 2 links - https://hbctraining.github.io/DGE_workshop_salmon/lessons/07_DGE_summarizing_workflow.html and https://hbctraining.github.io/DGE_work",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581
https://github.com/COMBINE-lab/salmon/issues/582:146,Availability,error,error,146,Hello ; We are currently trying to use Salmon quant mode with BAM files that were generated from another lab's work. We have continued to get the error below and are unsure what the problem is. Our original command used the libtype A parameter which gave us a similar warning to the one below. We then sorted the BAM files by name using samtools sort -n and tried to run the command again and got the same error. We have used a myriad of different libtypes and continue to get the same error. We have a reference transcriptome generated from a de novo transcriptome assembly that the previous lab produced. WARNING: Detected suspicious pair --- ; The names are different:; read1 : D61655M1:276:D10YJACXX:3:1114:17825:17511; read2 : D61655M1:276:D10YJACXX:3:1114:17825:18115; The proper-pair statuses are inconsistent:; read1 [D61655M1:276:D10YJACXX:3:1114:17825:17511] : proper-pair; mapped; matemapped. read2 : [D61655M1:276:D10YJACXX:3:1114:17825:17511] : no proper-pair; mapped; matenot mapped. We have seen that others have had similar issue but haven't found a thread that mentions what the user did to remedy the problem. Any suggestions would be appreciated! We are using salmon V0.14.1.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582
https://github.com/COMBINE-lab/salmon/issues/582:406,Availability,error,error,406,Hello ; We are currently trying to use Salmon quant mode with BAM files that were generated from another lab's work. We have continued to get the error below and are unsure what the problem is. Our original command used the libtype A parameter which gave us a similar warning to the one below. We then sorted the BAM files by name using samtools sort -n and tried to run the command again and got the same error. We have used a myriad of different libtypes and continue to get the same error. We have a reference transcriptome generated from a de novo transcriptome assembly that the previous lab produced. WARNING: Detected suspicious pair --- ; The names are different:; read1 : D61655M1:276:D10YJACXX:3:1114:17825:17511; read2 : D61655M1:276:D10YJACXX:3:1114:17825:18115; The proper-pair statuses are inconsistent:; read1 [D61655M1:276:D10YJACXX:3:1114:17825:17511] : proper-pair; mapped; matemapped. read2 : [D61655M1:276:D10YJACXX:3:1114:17825:17511] : no proper-pair; mapped; matenot mapped. We have seen that others have had similar issue but haven't found a thread that mentions what the user did to remedy the problem. Any suggestions would be appreciated! We are using salmon V0.14.1.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582
https://github.com/COMBINE-lab/salmon/issues/582:486,Availability,error,error,486,Hello ; We are currently trying to use Salmon quant mode with BAM files that were generated from another lab's work. We have continued to get the error below and are unsure what the problem is. Our original command used the libtype A parameter which gave us a similar warning to the one below. We then sorted the BAM files by name using samtools sort -n and tried to run the command again and got the same error. We have used a myriad of different libtypes and continue to get the same error. We have a reference transcriptome generated from a de novo transcriptome assembly that the previous lab produced. WARNING: Detected suspicious pair --- ; The names are different:; read1 : D61655M1:276:D10YJACXX:3:1114:17825:17511; read2 : D61655M1:276:D10YJACXX:3:1114:17825:18115; The proper-pair statuses are inconsistent:; read1 [D61655M1:276:D10YJACXX:3:1114:17825:17511] : proper-pair; mapped; matemapped. read2 : [D61655M1:276:D10YJACXX:3:1114:17825:17511] : no proper-pair; mapped; matenot mapped. We have seen that others have had similar issue but haven't found a thread that mentions what the user did to remedy the problem. Any suggestions would be appreciated! We are using salmon V0.14.1.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582
https://github.com/COMBINE-lab/salmon/issues/582:616,Safety,Detect,Detected,616,Hello ; We are currently trying to use Salmon quant mode with BAM files that were generated from another lab's work. We have continued to get the error below and are unsure what the problem is. Our original command used the libtype A parameter which gave us a similar warning to the one below. We then sorted the BAM files by name using samtools sort -n and tried to run the command again and got the same error. We have used a myriad of different libtypes and continue to get the same error. We have a reference transcriptome generated from a de novo transcriptome assembly that the previous lab produced. WARNING: Detected suspicious pair --- ; The names are different:; read1 : D61655M1:276:D10YJACXX:3:1114:17825:17511; read2 : D61655M1:276:D10YJACXX:3:1114:17825:18115; The proper-pair statuses are inconsistent:; read1 [D61655M1:276:D10YJACXX:3:1114:17825:17511] : proper-pair; mapped; matemapped. read2 : [D61655M1:276:D10YJACXX:3:1114:17825:17511] : no proper-pair; mapped; matenot mapped. We have seen that others have had similar issue but haven't found a thread that mentions what the user did to remedy the problem. Any suggestions would be appreciated! We are using salmon V0.14.1.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582
https://github.com/COMBINE-lab/salmon/issues/584:894,Deployability,update,update,894,"Hello, . while setting ressources for alevin test using: https://combine-lab.github.io/alevin-tutorial/2018/setting-up-resources/. generation of mapping file txp2gene.tsv using given instruction is broken:. ```; c6builder:salmon/1.3.0 > wget -q ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_31/gencode.v31.primary_assembly.annotation.gtf.gz; c6builder:salmon/1.3.0 > bioawk -c gff '$feature==""transcript"" {print $group}' <(gunzip -c gencode.v31.primary_assembly.annotation.gtf.gz) | awk -F ' ' '{print substr($4,2,length($4)-3) ""\t"" substr($2,2,length($2)-3)}' - > txp2gene.tsv; /mount/gensoft2/exe/bioawk/1.0/bin/bioawk: illegal field $(), name ""group""; input record number 7, file /proc/self/fd/14; source line number 1; ```. https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496251814 point to bioawk modification that allows to generate `txp2gene.tsv`. please update docs !. regards. Eric",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/584
https://github.com/COMBINE-lab/salmon/issues/584:45,Testability,test,test,45,"Hello, . while setting ressources for alevin test using: https://combine-lab.github.io/alevin-tutorial/2018/setting-up-resources/. generation of mapping file txp2gene.tsv using given instruction is broken:. ```; c6builder:salmon/1.3.0 > wget -q ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_31/gencode.v31.primary_assembly.annotation.gtf.gz; c6builder:salmon/1.3.0 > bioawk -c gff '$feature==""transcript"" {print $group}' <(gunzip -c gencode.v31.primary_assembly.annotation.gtf.gz) | awk -F ' ' '{print substr($4,2,length($4)-3) ""\t"" substr($2,2,length($2)-3)}' - > txp2gene.tsv; /mount/gensoft2/exe/bioawk/1.0/bin/bioawk: illegal field $(), name ""group""; input record number 7, file /proc/self/fd/14; source line number 1; ```. https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496251814 point to bioawk modification that allows to generate `txp2gene.tsv`. please update docs !. regards. Eric",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/584
https://github.com/COMBINE-lab/salmon/issues/585:552,Security,validat,validateMappings,552,"I used Salmon to map 150x2 bp untrimmed reads to a custom TRC index that I created for an shRNA library. The results appear to be accurate for the most part, although there are minor discrepancies, but I'm wondering if using Salmon for this is appropriate. Should I be changing any particular settings or should I be using an aligner like BWA or Bowtie2?. Thank you for your aligner as I've used it successfully numerous times with RNA-Seq data!. Here is some example code:; `salmon quant -i trc2_index -l A -1 fastq_r1.fastq.gz -2 fastq_r2.fastq.gz --validateMappings --gcBias -p 24 -o salmon_output`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/585
https://github.com/COMBINE-lab/salmon/issues/586:560,Availability,down,down,560,"I am interested in using Alevin to quantify some single nucleus RNA-seq data but am wondering what the best approach would be to get Alevin to appropriately handle the significant number of intronic reads. Issue #450 raised a similar question in the context of RNA velocity estimation, but it failed to address the appropriate approach if you are only interested in gene counts rather than distinguishing between intronic vs exonic counts. So, I am wondering if there are any recommendations on the best way to approach this issue. I imagine this mostly comes down to index generation, but am not sure what approach is best. After reading the [preprint on RNA velocity](https://www.biorxiv.org/content/10.1101/2020.03.13.990069v1.full#T1) the approach that immediately comes to mind would be to make an index including both fully-spliced and fully-unprocessed copies of each transcript. . I am somewhat concerned, however, how this might affect the UMI handling algorithm, especially since everything purely exonic would now multi-map while intronic reads would tend to be considered unique. I could see some cases where you end up getting over-counting due to inappropriately splitting UMIs, especially with transcripts that have a mix of splicing and intron retention (eg two short spliced exons + intron 2).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/586
https://github.com/COMBINE-lab/salmon/issues/587:754,Availability,down,downloaded,754,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587
https://github.com/COMBINE-lab/salmon/issues/587:733,Deployability,install,installed,733,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587
https://github.com/COMBINE-lab/salmon/issues/587:1100,Safety,detect,detected,1100,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587
https://github.com/COMBINE-lab/salmon/issues/587:202,Security,validat,validateMappings,202,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587
https://github.com/COMBINE-lab/salmon/issues/587:313,Security,validat,validateMappings,313,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587
https://github.com/COMBINE-lab/salmon/issues/587:554,Security,validat,validateMappigngs,554,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587
https://github.com/COMBINE-lab/salmon/issues/587:1019,Security,validat,validateMappings,1019,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587
https://github.com/COMBINE-lab/salmon/issues/587:131,Usability,clear,clear,131,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587
https://github.com/COMBINE-lab/salmon/issues/587:1232,Usability,clear,clear,1232,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587
https://github.com/COMBINE-lab/salmon/issues/588:638,Availability,fault,fault,638,Is there a way to produce the transcript level matrix output?. ```; salmon alevin -l ISR -1 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R1_001.fastq.gz -2 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R2_001.fastq.gz --chromium -i /share/biocore/keith/2020-A/scripts/reference_sources/salmon/GRCm38.salmon_decoys -p 4 -o /share/biocore/projects/Zhang_J_UCD/mouse_sc_2020/salmon/salmon_output --dumpMtx; Version Info: This is the most recent version of salmon. Transcript to Gene Map File not provided; Exiting Now./salmon.counts.sh: line 39: 8882 Segmentation fault salmon alevin -l ISR -1 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R1_001.fastq.gz -2 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R2_001.fastq.gz --chromium -i /share/biocore/keith/2020-A/scripts/reference_sources/salmon/GRCm38.salmon_decoys -p 4 -o /share/biocore/projects/Zhang_J_UCD/mouse_sc_2020/salmon/salmon_output --dumpMtx; 0; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/588
https://github.com/COMBINE-lab/salmon/issues/589:359,Energy Efficiency,schedul,schedule,359,"I've got some SMART-seq2 data that's been demultiplexed, so hundreds of small Fastq files. So, I was wondering: . - Does Salmon have a way to take multiple samples / libraries on a single run and perform quantification in an optimised serial way? ; - Does Salmon have a way to keep the index in memory similar to STAR? . I guess the obvious alternative is to schedule lots of runs, but just wondered if there were alternative options. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/589
https://github.com/COMBINE-lab/salmon/issues/589:196,Performance,perform,perform,196,"I've got some SMART-seq2 data that's been demultiplexed, so hundreds of small Fastq files. So, I was wondering: . - Does Salmon have a way to take multiple samples / libraries on a single run and perform quantification in an optimised serial way? ; - Does Salmon have a way to keep the index in memory similar to STAR? . I guess the obvious alternative is to schedule lots of runs, but just wondered if there were alternative options. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/589
https://github.com/COMBINE-lab/salmon/issues/591:74,Deployability,release,release,74,"Hi,; When generating an index for the latest human gencode transcriptome (release 35) I noticed this message:; `[2020-11-25 09:42:04.534] [puff::index::jointLog] [warning] Entry with header [ENST00000674361.1|ENSG00000241743.4|OTTHUMG00000022220.5|OTTHUMT00000530527.1|XACT-203|XACT|347561|lncRNA|] was longer than 200000 nucleotides. This is probably a chromosome instead of a transcript.`. Since I don't recall that I have seen this notification before when doing previous analyses, I had a look at this particular transcript. It turns out it indeed has been annotated as a (very long!), but apparently true transcript (a lncRNA):; `Transcript: XACT-203 ENST00000674361.1, Exons: 2, Coding exons: 0, Transcript length: 347,561 bps. Manual annotation (determined on a case-by-case basis) from the Havana project.`; See [here](http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;g=ENSG00000241743;r=X:113616300-114059289;t=ENST00000674361).; ; I realize that this is not really a bug (you have to set such cutoff at some (likely arbitrary??) value), and it applies to only a single human transcript, but considering this case, would it also be OK to set the cutoff to e.g. 400k (instead of 200k)?. Thanks for addressing my curiosity!; Guido. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - salmon 1.3.0; **To Reproduce**; - I followed [this workflow](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) but using the latest human gencode files.; **Desktop (please complete the following information):**; - OS: Linux Fedora",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/591
https://github.com/COMBINE-lab/salmon/issues/591:101,Integrability,message,message,101,"Hi,; When generating an index for the latest human gencode transcriptome (release 35) I noticed this message:; `[2020-11-25 09:42:04.534] [puff::index::jointLog] [warning] Entry with header [ENST00000674361.1|ENSG00000241743.4|OTTHUMG00000022220.5|OTTHUMT00000530527.1|XACT-203|XACT|347561|lncRNA|] was longer than 200000 nucleotides. This is probably a chromosome instead of a transcript.`. Since I don't recall that I have seen this notification before when doing previous analyses, I had a look at this particular transcript. It turns out it indeed has been annotated as a (very long!), but apparently true transcript (a lncRNA):; `Transcript: XACT-203 ENST00000674361.1, Exons: 2, Coding exons: 0, Transcript length: 347,561 bps. Manual annotation (determined on a case-by-case basis) from the Havana project.`; See [here](http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;g=ENSG00000241743;r=X:113616300-114059289;t=ENST00000674361).; ; I realize that this is not really a bug (you have to set such cutoff at some (likely arbitrary??) value), and it applies to only a single human transcript, but considering this case, would it also be OK to set the cutoff to e.g. 400k (instead of 200k)?. Thanks for addressing my curiosity!; Guido. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - salmon 1.3.0; **To Reproduce**; - I followed [this workflow](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) but using the latest human gencode files.; **Desktop (please complete the following information):**; - OS: Linux Fedora",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/591
https://github.com/COMBINE-lab/salmon/issues/591:1246,Usability,Guid,Guido,1246,"Hi,; When generating an index for the latest human gencode transcriptome (release 35) I noticed this message:; `[2020-11-25 09:42:04.534] [puff::index::jointLog] [warning] Entry with header [ENST00000674361.1|ENSG00000241743.4|OTTHUMG00000022220.5|OTTHUMT00000530527.1|XACT-203|XACT|347561|lncRNA|] was longer than 200000 nucleotides. This is probably a chromosome instead of a transcript.`. Since I don't recall that I have seen this notification before when doing previous analyses, I had a look at this particular transcript. It turns out it indeed has been annotated as a (very long!), but apparently true transcript (a lncRNA):; `Transcript: XACT-203 ENST00000674361.1, Exons: 2, Coding exons: 0, Transcript length: 347,561 bps. Manual annotation (determined on a case-by-case basis) from the Havana project.`; See [here](http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;g=ENSG00000241743;r=X:113616300-114059289;t=ENST00000674361).; ; I realize that this is not really a bug (you have to set such cutoff at some (likely arbitrary??) value), and it applies to only a single human transcript, but considering this case, would it also be OK to set the cutoff to e.g. 400k (instead of 200k)?. Thanks for addressing my curiosity!; Guido. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - salmon 1.3.0; **To Reproduce**; - I followed [this workflow](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) but using the latest human gencode files.; **Desktop (please complete the following information):**; - OS: Linux Fedora",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/591
https://github.com/COMBINE-lab/salmon/issues/592:11,Deployability,install,install,11,I tried to install salmon via conda:; conda install -c bioconda/label/main salmon . but it seems not the latest version:; The following packages will be UPDATED:; salmon bioconda::salmon-0.14.1-heb0d2e1_1 --> bioconda/label/main::salmon-0.14.2-ha956f45_0. https://anaconda.org/bioconda/salmon/labels. Thanks,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/592
https://github.com/COMBINE-lab/salmon/issues/592:44,Deployability,install,install,44,I tried to install salmon via conda:; conda install -c bioconda/label/main salmon . but it seems not the latest version:; The following packages will be UPDATED:; salmon bioconda::salmon-0.14.1-heb0d2e1_1 --> bioconda/label/main::salmon-0.14.2-ha956f45_0. https://anaconda.org/bioconda/salmon/labels. Thanks,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/592
https://github.com/COMBINE-lab/salmon/issues/592:153,Deployability,UPDATE,UPDATED,153,I tried to install salmon via conda:; conda install -c bioconda/label/main salmon . but it seems not the latest version:; The following packages will be UPDATED:; salmon bioconda::salmon-0.14.1-heb0d2e1_1 --> bioconda/label/main::salmon-0.14.2-ha956f45_0. https://anaconda.org/bioconda/salmon/labels. Thanks,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/592
https://github.com/COMBINE-lab/salmon/issues/593:251,Integrability,protocol,protocols,251,"Hi, . I am working on 6 samples (Biological replicates for treatment A = 3, Biological replicate for treatment B = 3) and am attempting to quantify these reads. Some of the samples have both PE and SE read files despite undergoing the same sequencing protocols (due to the sequencing processes that yield orphan read). Plus, as I trimmed the reads using Trimmomatic, more orphan reads are generated. I wonder how can I quantify (mapping-based, transcript-level) both PE and SE reads which should belong to the same library and end up with only one quant.sf file? I want to have the final count of 6 quant.sf file for the 6 samples to proceed with edgeR. . As of now, I am planning to concatenate both PE and SE reads according to their strand-specificity and run salmon in paired-end mode. Should I just input both SE and PE reads separately by using both -1/2 and -r? ; Any input would help! Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/593
https://github.com/COMBINE-lab/salmon/issues/594:214,Availability,down,downstream,214,"This isn't strictly speaking a bug with salmon per-se, but when installing salmon from conda, its impossible to have both R 4.0.3 and Salmon 1.3.0 installed in the same environment (which is frustrating due to the downstream analysis of Salmon data with wasabi/sleuth then requiring a separate environment). The core incompatibility seems to be with the International Components for Unicode package. Salmon requires; ""icu >=64.2,<65.0a0"",; Whereas in one of the R dependencies when installing 4.0.3 in the environment solve the following is specified; ""icu >=67.1,<68.0a0"",. This seems to be the only conflict I could identify.; This seems to be a new incompatibility introduced with R 4.0.3 and Salmon can coexist alongside R 4.0.2 without issue, so this isn't a huge problem but something I thought should probably be on your radar if it isn't already. Output from the conda dry-run as follows: ; [salmon_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619618/salmon_solve.txt); [r-base_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619619/r-base_solve.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594
https://github.com/COMBINE-lab/salmon/issues/594:64,Deployability,install,installing,64,"This isn't strictly speaking a bug with salmon per-se, but when installing salmon from conda, its impossible to have both R 4.0.3 and Salmon 1.3.0 installed in the same environment (which is frustrating due to the downstream analysis of Salmon data with wasabi/sleuth then requiring a separate environment). The core incompatibility seems to be with the International Components for Unicode package. Salmon requires; ""icu >=64.2,<65.0a0"",; Whereas in one of the R dependencies when installing 4.0.3 in the environment solve the following is specified; ""icu >=67.1,<68.0a0"",. This seems to be the only conflict I could identify.; This seems to be a new incompatibility introduced with R 4.0.3 and Salmon can coexist alongside R 4.0.2 without issue, so this isn't a huge problem but something I thought should probably be on your radar if it isn't already. Output from the conda dry-run as follows: ; [salmon_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619618/salmon_solve.txt); [r-base_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619619/r-base_solve.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594
https://github.com/COMBINE-lab/salmon/issues/594:147,Deployability,install,installed,147,"This isn't strictly speaking a bug with salmon per-se, but when installing salmon from conda, its impossible to have both R 4.0.3 and Salmon 1.3.0 installed in the same environment (which is frustrating due to the downstream analysis of Salmon data with wasabi/sleuth then requiring a separate environment). The core incompatibility seems to be with the International Components for Unicode package. Salmon requires; ""icu >=64.2,<65.0a0"",; Whereas in one of the R dependencies when installing 4.0.3 in the environment solve the following is specified; ""icu >=67.1,<68.0a0"",. This seems to be the only conflict I could identify.; This seems to be a new incompatibility introduced with R 4.0.3 and Salmon can coexist alongside R 4.0.2 without issue, so this isn't a huge problem but something I thought should probably be on your radar if it isn't already. Output from the conda dry-run as follows: ; [salmon_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619618/salmon_solve.txt); [r-base_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619619/r-base_solve.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594
https://github.com/COMBINE-lab/salmon/issues/594:482,Deployability,install,installing,482,"This isn't strictly speaking a bug with salmon per-se, but when installing salmon from conda, its impossible to have both R 4.0.3 and Salmon 1.3.0 installed in the same environment (which is frustrating due to the downstream analysis of Salmon data with wasabi/sleuth then requiring a separate environment). The core incompatibility seems to be with the International Components for Unicode package. Salmon requires; ""icu >=64.2,<65.0a0"",; Whereas in one of the R dependencies when installing 4.0.3 in the environment solve the following is specified; ""icu >=67.1,<68.0a0"",. This seems to be the only conflict I could identify.; This seems to be a new incompatibility introduced with R 4.0.3 and Salmon can coexist alongside R 4.0.2 without issue, so this isn't a huge problem but something I thought should probably be on your radar if it isn't already. Output from the conda dry-run as follows: ; [salmon_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619618/salmon_solve.txt); [r-base_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619619/r-base_solve.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594
https://github.com/COMBINE-lab/salmon/issues/594:464,Integrability,depend,dependencies,464,"This isn't strictly speaking a bug with salmon per-se, but when installing salmon from conda, its impossible to have both R 4.0.3 and Salmon 1.3.0 installed in the same environment (which is frustrating due to the downstream analysis of Salmon data with wasabi/sleuth then requiring a separate environment). The core incompatibility seems to be with the International Components for Unicode package. Salmon requires; ""icu >=64.2,<65.0a0"",; Whereas in one of the R dependencies when installing 4.0.3 in the environment solve the following is specified; ""icu >=67.1,<68.0a0"",. This seems to be the only conflict I could identify.; This seems to be a new incompatibility introduced with R 4.0.3 and Salmon can coexist alongside R 4.0.2 without issue, so this isn't a huge problem but something I thought should probably be on your radar if it isn't already. Output from the conda dry-run as follows: ; [salmon_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619618/salmon_solve.txt); [r-base_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619619/r-base_solve.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594
https://github.com/COMBINE-lab/salmon/issues/595:166,Availability,down,downstream,166,"Currently alevin requires a transcript to gene mapping file to be provided with the --tgMap flag. A similar file is required when computing gene level quantification downstream of Salmon. This file needs to exactly match the transcript IDs used when building the initial salmon index, furthermore, when building the initial index, a gtf file containing the transcript to gene mappings is typically provided. In order to ensure ideal mappings of transcripts to genes, it would be ideal if, when constructing the salmon index when a GTF file is provided, an additional tgMap file was automatically produced from the GTF and written to the index output directory that could then be automatically detected by alevin, and/or then manually passed to other downstream tools. Automatically generating this file, and thus allowing the --tgmap flag to become optional would ensure that the subsequent transcript to gene mappings were perfectly matched to the original quantification. This could additionally allow a future option for salmon to automatically produce gene level quantifications.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/595
https://github.com/COMBINE-lab/salmon/issues/595:750,Availability,down,downstream,750,"Currently alevin requires a transcript to gene mapping file to be provided with the --tgMap flag. A similar file is required when computing gene level quantification downstream of Salmon. This file needs to exactly match the transcript IDs used when building the initial salmon index, furthermore, when building the initial index, a gtf file containing the transcript to gene mappings is typically provided. In order to ensure ideal mappings of transcripts to genes, it would be ideal if, when constructing the salmon index when a GTF file is provided, an additional tgMap file was automatically produced from the GTF and written to the index output directory that could then be automatically detected by alevin, and/or then manually passed to other downstream tools. Automatically generating this file, and thus allowing the --tgmap flag to become optional would ensure that the subsequent transcript to gene mappings were perfectly matched to the original quantification. This could additionally allow a future option for salmon to automatically produce gene level quantifications.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/595
https://github.com/COMBINE-lab/salmon/issues/595:693,Safety,detect,detected,693,"Currently alevin requires a transcript to gene mapping file to be provided with the --tgMap flag. A similar file is required when computing gene level quantification downstream of Salmon. This file needs to exactly match the transcript IDs used when building the initial salmon index, furthermore, when building the initial index, a gtf file containing the transcript to gene mappings is typically provided. In order to ensure ideal mappings of transcripts to genes, it would be ideal if, when constructing the salmon index when a GTF file is provided, an additional tgMap file was automatically produced from the GTF and written to the index output directory that could then be automatically detected by alevin, and/or then manually passed to other downstream tools. Automatically generating this file, and thus allowing the --tgmap flag to become optional would ensure that the subsequent transcript to gene mappings were perfectly matched to the original quantification. This could additionally allow a future option for salmon to automatically produce gene level quantifications.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/595
https://github.com/COMBINE-lab/salmon/issues/596:371,Availability,error,error,371,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596
https://github.com/COMBINE-lab/salmon/issues/596:919,Availability,Error,Error,919,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596
https://github.com/COMBINE-lab/salmon/issues/596:640,Deployability,install,installed,640,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596
https://github.com/COMBINE-lab/salmon/issues/596:668,Deployability,install,install,668,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596
https://github.com/COMBINE-lab/salmon/issues/596:904,Integrability,message,message,904,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596
https://github.com/COMBINE-lab/salmon/issues/596:700,Testability,test,tested,700,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596
https://github.com/COMBINE-lab/salmon/issues/598:1417,Availability,Down,Downloads,1417,I noticed that for some reason salmon does not convert transcript ids to gene ids.; Here is the command that I run:; ```; salmon --no-version-check quant -i /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/446511232/GRCh38.p13_ensembl_101 --geneMap /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-2062771642/Homo_sapiens.GRCh38.101.gtf --numBootstraps 128 --threads 3 -l A --seqBias --gcBias --validateMappings --writeUnmappedNames -o quant_GSE113798_GSE113801_GSM3119577_SRR7075087 \; -1 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_1.fastq_cleaned.fastq.gz -2 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_2.fastq_cleaned.fastq.gz; ```; I also enclose the results. Even though I use Ensembl Human GTF ( i.e. ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.gtf.gz ) it gives me transcript ids in quant.genes.sf output; [quant.zip](https://github.com/COMBINE-lab/salmon/files/5632824/quant.zip); [Downloads.tar.gz](https://github.com/COMBINE-lab/salmon/files/5632828/Downloads.tar.gz),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/598
https://github.com/COMBINE-lab/salmon/issues/598:1487,Availability,Down,Downloads,1487,I noticed that for some reason salmon does not convert transcript ids to gene ids.; Here is the command that I run:; ```; salmon --no-version-check quant -i /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/446511232/GRCh38.p13_ensembl_101 --geneMap /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-2062771642/Homo_sapiens.GRCh38.101.gtf --numBootstraps 128 --threads 3 -l A --seqBias --gcBias --validateMappings --writeUnmappedNames -o quant_GSE113798_GSE113801_GSM3119577_SRR7075087 \; -1 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_1.fastq_cleaned.fastq.gz -2 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_2.fastq_cleaned.fastq.gz; ```; I also enclose the results. Even though I use Ensembl Human GTF ( i.e. ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.gtf.gz ) it gives me transcript ids in quant.genes.sf output; [quant.zip](https://github.com/COMBINE-lab/salmon/files/5632824/quant.zip); [Downloads.tar.gz](https://github.com/COMBINE-lab/salmon/files/5632828/Downloads.tar.gz),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/598
https://github.com/COMBINE-lab/salmon/issues/598:1225,Deployability,release,release-,1225,I noticed that for some reason salmon does not convert transcript ids to gene ids.; Here is the command that I run:; ```; salmon --no-version-check quant -i /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/446511232/GRCh38.p13_ensembl_101 --geneMap /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-2062771642/Homo_sapiens.GRCh38.101.gtf --numBootstraps 128 --threads 3 -l A --seqBias --gcBias --validateMappings --writeUnmappedNames -o quant_GSE113798_GSE113801_GSM3119577_SRR7075087 \; -1 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_1.fastq_cleaned.fastq.gz -2 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_2.fastq_cleaned.fastq.gz; ```; I also enclose the results. Even though I use Ensembl Human GTF ( i.e. ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.gtf.gz ) it gives me transcript ids in quant.genes.sf output; [quant.zip](https://github.com/COMBINE-lab/salmon/files/5632824/quant.zip); [Downloads.tar.gz](https://github.com/COMBINE-lab/salmon/files/5632828/Downloads.tar.gz),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/598
https://github.com/COMBINE-lab/salmon/issues/598:618,Security,validat,validateMappings,618,I noticed that for some reason salmon does not convert transcript ids to gene ids.; Here is the command that I run:; ```; salmon --no-version-check quant -i /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/446511232/GRCh38.p13_ensembl_101 --geneMap /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-2062771642/Homo_sapiens.GRCh38.101.gtf --numBootstraps 128 --threads 3 -l A --seqBias --gcBias --validateMappings --writeUnmappedNames -o quant_GSE113798_GSE113801_GSM3119577_SRR7075087 \; -1 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_1.fastq_cleaned.fastq.gz -2 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_2.fastq_cleaned.fastq.gz; ```; I also enclose the results. Even though I use Ensembl Human GTF ( i.e. ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.gtf.gz ) it gives me transcript ids in quant.genes.sf output; [quant.zip](https://github.com/COMBINE-lab/salmon/files/5632824/quant.zip); [Downloads.tar.gz](https://github.com/COMBINE-lab/salmon/files/5632828/Downloads.tar.gz),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/598
https://github.com/COMBINE-lab/salmon/issues/599:237,Availability,error,error,237,"![image](https://user-images.githubusercontent.com/33716378/100950925-6bf3f680-3548-11eb-9c5b-bdc1a5d6ce7f.png); i get this information when i use the command : salmon index ; can anybody have the same problem,how should i do with these error; thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/599
https://github.com/COMBINE-lab/salmon/issues/600:1047,Availability,down,downstream,1047,"llocate multimapped reads in dual RNA-seq data. What this means is we combine a host and pathogen genome (bacterial genome + host transcriptome) and also use a combined annotation file as well.; Basically, we can then find out which reads uniquely map to each gene/transcript from both organisms. . The issue we are having is when using Salmon in alignment-based mode (using STAR), we are observing quite substantial variations in how ambiguous (multimapping) reads are being assigned. We use the same quant command/params and the same input files - and we run the same data twice in different output locations.; The correlations between quant files are generally really good ~ 99.9x (spearman). . However, the number of allocated reads to a small proportion of transcripts varies quite a lot. For example:; ```; ENST00000383869.1 goes from 7699.89 reads to 4871.19 between runs; ENST00000374675.7 goes from 1326.02 reads to 0 between runs; ```. We initially noticed this when examining differentially expressed genes downstream, which were a bit unusual. These two transcripts in particular have a high number of ambiguous counts (generally >1000) when examining the `ambig_info.tsv` file (the number of ambig reads does remain the same though). I tried additional params and runs including:; Accounting for biases: `--seqBias --gcBias --posBias`; Including bootstrap information: `--numBootstraps 100 --bootstrapReproject`. Both params reduced the variation between runs slightly, but not enough to reduce the disparity. We don't see this difference when running in selective alignment mode. We are using `v.1.3.0` and `single end` reads. ```; STAR --runThreadN 30 --runMode genomeGenerate --genomeDir index/ --genomeFastaFiles $fasta --sjdbGTFfile $gff --sjdbGTFfeatureExon exon --sjdbGTFtagExonParentTranscript Parent --sjdbOverhang $sjdbOverhang. STAR --runThreadN 30 --genomeDir . --sjdbGTFfile $gff $readFilesCommand --readFilesIn $reads --outSAMtype BAM Unsorted --outSAMunmapped ""Within"" --o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600
https://github.com/COMBINE-lab/salmon/issues/600:28,Energy Efficiency,allocate,allocate,28,"We are using Salmon to help allocate multimapped reads in dual RNA-seq data. What this means is we combine a host and pathogen genome (bacterial genome + host transcriptome) and also use a combined annotation file as well.; Basically, we can then find out which reads uniquely map to each gene/transcript from both organisms. . The issue we are having is when using Salmon in alignment-based mode (using STAR), we are observing quite substantial variations in how ambiguous (multimapping) reads are being assigned. We use the same quant command/params and the same input files - and we run the same data twice in different output locations.; The correlations between quant files are generally really good ~ 99.9x (spearman). . However, the number of allocated reads to a small proportion of transcripts varies quite a lot. For example:; ```; ENST00000383869.1 goes from 7699.89 reads to 4871.19 between runs; ENST00000374675.7 goes from 1326.02 reads to 0 between runs; ```. We initially noticed this when examining differentially expressed genes downstream, which were a bit unusual. These two transcripts in particular have a high number of ambiguous counts (generally >1000) when examining the `ambig_info.tsv` file (the number of ambig reads does remain the same though). I tried additional params and runs including:; Accounting for biases: `--seqBias --gcBias --posBias`; Including bootstrap information: `--numBootstraps 100 --bootstrapReproject`. Both params reduced the variation between runs slightly, but not enough to reduce the disparity. We don't see this difference when running in selective alignment mode. We are using `v.1.3.0` and `single end` reads. ```; STAR --runThreadN 30 --runMode genomeGenerate --genomeDir index/ --genomeFastaFiles $fasta --sjdbGTFfile $gff --sjdbGTFfeatureExon exon --sjdbGTFtagExonParentTranscript Parent --sjdbOverhang $sjdbOverhang. STAR --runThreadN 30 --genomeDir . --sjdbGTFfile $gff $readFilesCommand --readFilesIn $reads --outSAMtype BAM Unsorted -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600
https://github.com/COMBINE-lab/salmon/issues/600:750,Energy Efficiency,allocate,allocated,750,"We are using Salmon to help allocate multimapped reads in dual RNA-seq data. What this means is we combine a host and pathogen genome (bacterial genome + host transcriptome) and also use a combined annotation file as well.; Basically, we can then find out which reads uniquely map to each gene/transcript from both organisms. . The issue we are having is when using Salmon in alignment-based mode (using STAR), we are observing quite substantial variations in how ambiguous (multimapping) reads are being assigned. We use the same quant command/params and the same input files - and we run the same data twice in different output locations.; The correlations between quant files are generally really good ~ 99.9x (spearman). . However, the number of allocated reads to a small proportion of transcripts varies quite a lot. For example:; ```; ENST00000383869.1 goes from 7699.89 reads to 4871.19 between runs; ENST00000374675.7 goes from 1326.02 reads to 0 between runs; ```. We initially noticed this when examining differentially expressed genes downstream, which were a bit unusual. These two transcripts in particular have a high number of ambiguous counts (generally >1000) when examining the `ambig_info.tsv` file (the number of ambig reads does remain the same though). I tried additional params and runs including:; Accounting for biases: `--seqBias --gcBias --posBias`; Including bootstrap information: `--numBootstraps 100 --bootstrapReproject`. Both params reduced the variation between runs slightly, but not enough to reduce the disparity. We don't see this difference when running in selective alignment mode. We are using `v.1.3.0` and `single end` reads. ```; STAR --runThreadN 30 --runMode genomeGenerate --genomeDir index/ --genomeFastaFiles $fasta --sjdbGTFfile $gff --sjdbGTFfeatureExon exon --sjdbGTFtagExonParentTranscript Parent --sjdbOverhang $sjdbOverhang. STAR --runThreadN 30 --genomeDir . --sjdbGTFfile $gff $readFilesCommand --readFilesIn $reads --outSAMtype BAM Unsorted -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600
https://github.com/COMBINE-lab/salmon/issues/600:1467,Energy Efficiency,reduce,reduced,1467,"ng assigned. We use the same quant command/params and the same input files - and we run the same data twice in different output locations.; The correlations between quant files are generally really good ~ 99.9x (spearman). . However, the number of allocated reads to a small proportion of transcripts varies quite a lot. For example:; ```; ENST00000383869.1 goes from 7699.89 reads to 4871.19 between runs; ENST00000374675.7 goes from 1326.02 reads to 0 between runs; ```. We initially noticed this when examining differentially expressed genes downstream, which were a bit unusual. These two transcripts in particular have a high number of ambiguous counts (generally >1000) when examining the `ambig_info.tsv` file (the number of ambig reads does remain the same though). I tried additional params and runs including:; Accounting for biases: `--seqBias --gcBias --posBias`; Including bootstrap information: `--numBootstraps 100 --bootstrapReproject`. Both params reduced the variation between runs slightly, but not enough to reduce the disparity. We don't see this difference when running in selective alignment mode. We are using `v.1.3.0` and `single end` reads. ```; STAR --runThreadN 30 --runMode genomeGenerate --genomeDir index/ --genomeFastaFiles $fasta --sjdbGTFfile $gff --sjdbGTFfeatureExon exon --sjdbGTFtagExonParentTranscript Parent --sjdbOverhang $sjdbOverhang. STAR --runThreadN 30 --genomeDir . --sjdbGTFfile $gff $readFilesCommand --readFilesIn $reads --outSAMtype BAM Unsorted --outSAMunmapped ""Within"" --outSAMattributes ""Standard"" --outFileNamePrefix $sample_name/$sample_name --sjdbGTFfeatureExon quant --sjdbGTFtagExonParentTranscript parent --quantMode TranscriptomeSAM --quantTranscriptomeBan ""Singleend"" --outFilterMultimapNmax 999 --outFilterType ""BySJout"" --alignSJoverhangMin 8 --alignSJDBoverhangMin 1 --outFilterMismatchNmax 999 --outFilterMismatchNoverReadLmax 1 --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000 --winAnchorMultimapNmax 999; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600
https://github.com/COMBINE-lab/salmon/issues/600:1530,Energy Efficiency,reduce,reduce,1530,"ng assigned. We use the same quant command/params and the same input files - and we run the same data twice in different output locations.; The correlations between quant files are generally really good ~ 99.9x (spearman). . However, the number of allocated reads to a small proportion of transcripts varies quite a lot. For example:; ```; ENST00000383869.1 goes from 7699.89 reads to 4871.19 between runs; ENST00000374675.7 goes from 1326.02 reads to 0 between runs; ```. We initially noticed this when examining differentially expressed genes downstream, which were a bit unusual. These two transcripts in particular have a high number of ambiguous counts (generally >1000) when examining the `ambig_info.tsv` file (the number of ambig reads does remain the same though). I tried additional params and runs including:; Accounting for biases: `--seqBias --gcBias --posBias`; Including bootstrap information: `--numBootstraps 100 --bootstrapReproject`. Both params reduced the variation between runs slightly, but not enough to reduce the disparity. We don't see this difference when running in selective alignment mode. We are using `v.1.3.0` and `single end` reads. ```; STAR --runThreadN 30 --runMode genomeGenerate --genomeDir index/ --genomeFastaFiles $fasta --sjdbGTFfile $gff --sjdbGTFfeatureExon exon --sjdbGTFtagExonParentTranscript Parent --sjdbOverhang $sjdbOverhang. STAR --runThreadN 30 --genomeDir . --sjdbGTFfile $gff $readFilesCommand --readFilesIn $reads --outSAMtype BAM Unsorted --outSAMunmapped ""Within"" --outSAMattributes ""Standard"" --outFileNamePrefix $sample_name/$sample_name --sjdbGTFfeatureExon quant --sjdbGTFtagExonParentTranscript parent --quantMode TranscriptomeSAM --quantTranscriptomeBan ""Singleend"" --outFilterMultimapNmax 999 --outFilterType ""BySJout"" --alignSJoverhangMin 8 --alignSJDBoverhangMin 1 --outFilterMismatchNmax 999 --outFilterMismatchNoverReadLmax 1 --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000 --winAnchorMultimapNmax 999; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600
https://github.com/COMBINE-lab/salmon/issues/603:1499,Availability,Error,Error,1499,"mates2 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ output ] => { quants/SRR2557119_quant }; ### [ gcBias ] => { }; Logs will be written to quants/SRR2557119_quant/logs; [2020-12-13 19:07:51.508] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/GRCh38.primary_assembly.genome.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/gencode.v36.transcripts.fa.gz; ```; 2. unzip:; ```; gunzip gencode.v36.transcripts.fa.gz; gunzip GRCh38.primary_assembly.genome.fa.gz; ```; 3. following the instruction for building a SAF salmon index (https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:1902,Availability,Down,Download,1902,"0-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/GRCh38.primary_assembly.genome.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/gencode.v36.transcripts.fa.gz; ```; 2. unzip:; ```; gunzip gencode.v36.transcripts.fa.gz; gunzip GRCh38.primary_assembly.genome.fa.gz; ```; 3. following the instruction for building a SAF salmon index (https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:3099,Availability,echo,echo,3099,"k/pub/databases/gencode/Gencode_human/release_36/gencode.v36.transcripts.fa.gz; ```; 2. unzip:; ```; gunzip gencode.v36.transcripts.fa.gz; gunzip GRCh38.primary_assembly.genome.fa.gz; ```; 3. following the instruction for building a SAF salmon index (https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index wit",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:3425,Availability,down,downloaded,3425,"-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:3404,Deployability,install,installed,3404,"-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:3485,Deployability,install,installed,3485,"his-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I found an old post with the similar issue, which the conclusion was that t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:3514,Deployability,update,updated,3514,"his-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I found an old post with the similar issue, which the conclusion was that t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:715,Security,validat,validateMappings,715,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/ }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_1.fastq.gz }; ### [ mates2 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ output ] => { quants/SRR2557119_quant }; ### [ gcBias ] => { }; Logs will be written to quants/SRR2557119_quant/logs; [2020-12-13 19:07:51.508] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:1133,Security,validat,validateMappings,1133,"is is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/ }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_1.fastq.gz }; ### [ mates2 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ output ] => { quants/SRR2557119_quant }; ### [ gcBias ] => { }; Logs will be written to quants/SRR2557119_quant/logs; [2020-12-13 19:07:51.508] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/GRCh38.primary_assembly.genome.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/G",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:3209,Security,validat,validateMappings,3209,"transcripts.fa.gz; gunzip GRCh38.primary_assembly.genome.fa.gz; ```; 3. following the instruction for building a SAF salmon index (https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:812,Testability,Log,Logs,812,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/ }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_1.fastq.gz }; ### [ mates2 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ output ] => { quants/SRR2557119_quant }; ### [ gcBias ] => { }; Logs will be written to quants/SRR2557119_quant/logs; [2020-12-13 19:07:51.508] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:860,Testability,log,logs,860,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/ }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_1.fastq.gz }; ### [ mates2 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ output ] => { quants/SRR2557119_quant }; ### [ gcBias ] => { }; Logs will be written to quants/SRR2557119_quant/logs; [2020-12-13 19:07:51.508] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:3789,Usability,clear,clear,3789,"coys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I found an old post with the similar issue, which the conclusion was that the index building was not completed due to memory allocation on the cluster. I was wondering if this is the same with my case, what memory allocation should i ask the admin for to do this index building job? Any guidance on this would be greatly appreciated, and thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/603:4712,Usability,guid,guidance,4712,"coys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I found an old post with the similar issue, which the conclusion was that the index building was not completed due to memory allocation on the cluster. I was wondering if this is the same with my case, what memory allocation should i ask the admin for to do this index building job? Any guidance on this would be greatly appreciated, and thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603
https://github.com/COMBINE-lab/salmon/issues/604:15,Deployability,update,update,15,"Hi! I tried to update **_salmon_** by conda, but after update, **_salmon_** version was still 1.3.0. ```; (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; (R40) [ymwang @ ~]$ conda install -c bioconda salmon; Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.8.4; latest version: 4.9.2. Please update conda by running. $ conda update -n base conda. # All requested packages already installed. (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; ```; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/604
https://github.com/COMBINE-lab/salmon/issues/604:55,Deployability,update,update,55,"Hi! I tried to update **_salmon_** by conda, but after update, **_salmon_** version was still 1.3.0. ```; (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; (R40) [ymwang @ ~]$ conda install -c bioconda salmon; Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.8.4; latest version: 4.9.2. Please update conda by running. $ conda update -n base conda. # All requested packages already installed. (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; ```; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/604
https://github.com/COMBINE-lab/salmon/issues/604:177,Deployability,install,install,177,"Hi! I tried to update **_salmon_** by conda, but after update, **_salmon_** version was still 1.3.0. ```; (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; (R40) [ymwang @ ~]$ conda install -c bioconda salmon; Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.8.4; latest version: 4.9.2. Please update conda by running. $ conda update -n base conda. # All requested packages already installed. (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; ```; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/604
https://github.com/COMBINE-lab/salmon/issues/604:396,Deployability,update,update,396,"Hi! I tried to update **_salmon_** by conda, but after update, **_salmon_** version was still 1.3.0. ```; (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; (R40) [ymwang @ ~]$ conda install -c bioconda salmon; Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.8.4; latest version: 4.9.2. Please update conda by running. $ conda update -n base conda. # All requested packages already installed. (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; ```; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/604
https://github.com/COMBINE-lab/salmon/issues/604:429,Deployability,update,update,429,"Hi! I tried to update **_salmon_** by conda, but after update, **_salmon_** version was still 1.3.0. ```; (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; (R40) [ymwang @ ~]$ conda install -c bioconda salmon; Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.8.4; latest version: 4.9.2. Please update conda by running. $ conda update -n base conda. # All requested packages already installed. (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; ```; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/604
https://github.com/COMBINE-lab/salmon/issues/604:484,Deployability,install,installed,484,"Hi! I tried to update **_salmon_** by conda, but after update, **_salmon_** version was still 1.3.0. ```; (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; (R40) [ymwang @ ~]$ conda install -c bioconda salmon; Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.8.4; latest version: 4.9.2. Please update conda by running. $ conda update -n base conda. # All requested packages already installed. (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; ```; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/604
https://github.com/COMBINE-lab/salmon/issues/605:1208,Availability,down,downloaded,1208,"y related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; The alignments to two partially overlapping transcripts suggest that only one of the transcripts is expressed, but salmon is assigning the majority of these reads to the other transcript. Even ignoring coverage differences that suggest that transcript ENST00000364953.1 is the source of these reads, this transcript is the only one of the two with unambiguous alignments, and so I would expect salmon to count the rest of the reads for this transcript. I tried quantifying this same bam with eXpress, and it produces the expected result of counting all the reads for transcript ENST00000364953.1. The alignments were generated with STAR, aligning to the GRCh38 genome and using STAR's transcriptome bam output (using gencode v35 main annotations). I'm happy to provide the small bam containing these alignments in transcriptome space, but I don't seem to be able to upload this here. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? GRCh38/gencode v35; * Which read files were used?; * Which which program options were used? -l 'U'. **Expected behavior**; salmon counting all the reads for transcript ENST00000364953.1. **Screenshots**; <img width=""998"" alt=""salmon_unexpected_counts"" src=""https://user-images.githubusercontent.com/17803131/102898647-cf7e8f00-4437-11eb-90bb-37b8498ba333.png"">. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version ; Linux 4.15.0-88-generic #88-Ubuntu SMP Tue Feb 11 20:11:34 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/605
https://github.com/COMBINE-lab/salmon/issues/605:1187,Deployability,install,installed,1187,"y related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; The alignments to two partially overlapping transcripts suggest that only one of the transcripts is expressed, but salmon is assigning the majority of these reads to the other transcript. Even ignoring coverage differences that suggest that transcript ENST00000364953.1 is the source of these reads, this transcript is the only one of the two with unambiguous alignments, and so I would expect salmon to count the rest of the reads for this transcript. I tried quantifying this same bam with eXpress, and it produces the expected result of counting all the reads for transcript ENST00000364953.1. The alignments were generated with STAR, aligning to the GRCh38 genome and using STAR's transcriptome bam output (using gencode v35 main annotations). I'm happy to provide the small bam containing these alignments in transcriptome space, but I don't seem to be able to upload this here. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? GRCh38/gencode v35; * Which read files were used?; * Which which program options were used? -l 'U'. **Expected behavior**; salmon counting all the reads for transcript ENST00000364953.1. **Screenshots**; <img width=""998"" alt=""salmon_unexpected_counts"" src=""https://user-images.githubusercontent.com/17803131/102898647-cf7e8f00-4437-11eb-90bb-37b8498ba333.png"">. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version ; Linux 4.15.0-88-generic #88-Ubuntu SMP Tue Feb 11 20:11:34 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/605
https://github.com/COMBINE-lab/salmon/issues/605:1918,Deployability,Release,Release,1918,"y related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; The alignments to two partially overlapping transcripts suggest that only one of the transcripts is expressed, but salmon is assigning the majority of these reads to the other transcript. Even ignoring coverage differences that suggest that transcript ENST00000364953.1 is the source of these reads, this transcript is the only one of the two with unambiguous alignments, and so I would expect salmon to count the rest of the reads for this transcript. I tried quantifying this same bam with eXpress, and it produces the expected result of counting all the reads for transcript ENST00000364953.1. The alignments were generated with STAR, aligning to the GRCh38 genome and using STAR's transcriptome bam output (using gencode v35 main annotations). I'm happy to provide the small bam containing these alignments in transcriptome space, but I don't seem to be able to upload this here. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? GRCh38/gencode v35; * Which read files were used?; * Which which program options were used? -l 'U'. **Expected behavior**; salmon counting all the reads for transcript ENST00000364953.1. **Screenshots**; <img width=""998"" alt=""salmon_unexpected_counts"" src=""https://user-images.githubusercontent.com/17803131/102898647-cf7e8f00-4437-11eb-90bb-37b8498ba333.png"">. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version ; Linux 4.15.0-88-generic #88-Ubuntu SMP Tue Feb 11 20:11:34 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/605
https://github.com/COMBINE-lab/salmon/pull/606:9,Availability,error,error,9,[compile error] basic_string::_M_construct null not valid,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/606
https://github.com/COMBINE-lab/salmon/issues/607:936,Availability,down,downloaded,936,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode) . **Describe the bug**; salmon fails to map gene to transcript id despite given GTF or tx2id file as properly required.; I also used `grep` on both tx2id file and quant.sf file and both contain the transcript IDs tested. **To Reproduce**; 1. Create index decoys; Followed the steps in [tutorial](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment) ; 2. Create index; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode -p 40`; 3. Run ; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon quant -l A -1 <(zcat S1_1.fastq) -2 <(zcat S1_2.fastq) -o output -i salmon_index -g transcript_to_id_mm10`. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary; * Which reference (e.g. transcriptome) was used? mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607
https://github.com/COMBINE-lab/salmon/issues/607:2509,Availability,down,downstream,2509," mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; `Linux 3.10.0-1160.6.1.el7.x86_64 #1 SMP Tue Nov 17 13:59:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`; LSB Version: :core-4.1-amd64:core-4.1-noarch ; Distributor ID: CentOS ; Description: CentOS Linux release 7.9.2009 (Core) ; Release: 7.9.2009 ; Codename: Core. **Additional context**; This is a wonderful feature, and makes the need for downstream analysis with `tximoprt` redundant. PLEASE HELP :); Attaching `head` of `quant.sf`, `quant.gene.sf`, `transcript_to_id_mm10` files. Identical transcript ID can be easily seen in both files.; THANK YOU; [transcript_to_id_mm10.head.txt](https://github.com/COMBINE-lab/salmon/files/5739701/transcript_to_id_mm10.head.txt); [quant.genes.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739703/quant.genes.head.sf.txt); [quant.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739704/quant.head.sf.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607
https://github.com/COMBINE-lab/salmon/issues/607:2545,Availability,redundant,redundant,2545," mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; `Linux 3.10.0-1160.6.1.el7.x86_64 #1 SMP Tue Nov 17 13:59:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`; LSB Version: :core-4.1-amd64:core-4.1-noarch ; Distributor ID: CentOS ; Description: CentOS Linux release 7.9.2009 (Core) ; Release: 7.9.2009 ; Codename: Core. **Additional context**; This is a wonderful feature, and makes the need for downstream analysis with `tximoprt` redundant. PLEASE HELP :); Attaching `head` of `quant.sf`, `quant.gene.sf`, `transcript_to_id_mm10` files. Identical transcript ID can be easily seen in both files.; THANK YOU; [transcript_to_id_mm10.head.txt](https://github.com/COMBINE-lab/salmon/files/5739701/transcript_to_id_mm10.head.txt); [quant.genes.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739703/quant.genes.head.sf.txt); [quant.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739704/quant.head.sf.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607
https://github.com/COMBINE-lab/salmon/issues/607:915,Deployability,install,installed,915,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode) . **Describe the bug**; salmon fails to map gene to transcript id despite given GTF or tx2id file as properly required.; I also used `grep` on both tx2id file and quant.sf file and both contain the transcript IDs tested. **To Reproduce**; 1. Create index decoys; Followed the steps in [tutorial](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment) ; 2. Create index; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode -p 40`; 3. Run ; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon quant -l A -1 <(zcat S1_1.fastq) -2 <(zcat S1_2.fastq) -o output -i salmon_index -g transcript_to_id_mm10`. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary; * Which reference (e.g. transcriptome) was used? mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607
https://github.com/COMBINE-lab/salmon/issues/607:2371,Deployability,release,release,2371," mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; `Linux 3.10.0-1160.6.1.el7.x86_64 #1 SMP Tue Nov 17 13:59:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`; LSB Version: :core-4.1-amd64:core-4.1-noarch ; Distributor ID: CentOS ; Description: CentOS Linux release 7.9.2009 (Core) ; Release: 7.9.2009 ; Codename: Core. **Additional context**; This is a wonderful feature, and makes the need for downstream analysis with `tximoprt` redundant. PLEASE HELP :); Attaching `head` of `quant.sf`, `quant.gene.sf`, `transcript_to_id_mm10` files. Identical transcript ID can be easily seen in both files.; THANK YOU; [transcript_to_id_mm10.head.txt](https://github.com/COMBINE-lab/salmon/files/5739701/transcript_to_id_mm10.head.txt); [quant.genes.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739703/quant.genes.head.sf.txt); [quant.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739704/quant.head.sf.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607
https://github.com/COMBINE-lab/salmon/issues/607:2397,Deployability,Release,Release,2397," mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; `Linux 3.10.0-1160.6.1.el7.x86_64 #1 SMP Tue Nov 17 13:59:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`; LSB Version: :core-4.1-amd64:core-4.1-noarch ; Distributor ID: CentOS ; Description: CentOS Linux release 7.9.2009 (Core) ; Release: 7.9.2009 ; Codename: Core. **Additional context**; This is a wonderful feature, and makes the need for downstream analysis with `tximoprt` redundant. PLEASE HELP :); Attaching `head` of `quant.sf`, `quant.gene.sf`, `transcript_to_id_mm10` files. Identical transcript ID can be easily seen in both files.; THANK YOU; [transcript_to_id_mm10.head.txt](https://github.com/COMBINE-lab/salmon/files/5739701/transcript_to_id_mm10.head.txt); [quant.genes.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739703/quant.genes.head.sf.txt); [quant.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739704/quant.head.sf.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607
https://github.com/COMBINE-lab/salmon/issues/607:2545,Safety,redund,redundant,2545," mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; `Linux 3.10.0-1160.6.1.el7.x86_64 #1 SMP Tue Nov 17 13:59:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`; LSB Version: :core-4.1-amd64:core-4.1-noarch ; Distributor ID: CentOS ; Description: CentOS Linux release 7.9.2009 (Core) ; Release: 7.9.2009 ; Codename: Core. **Additional context**; This is a wonderful feature, and makes the need for downstream analysis with `tximoprt` redundant. PLEASE HELP :); Attaching `head` of `quant.sf`, `quant.gene.sf`, `transcript_to_id_mm10` files. Identical transcript ID can be easily seen in both files.; THANK YOU; [transcript_to_id_mm10.head.txt](https://github.com/COMBINE-lab/salmon/files/5739701/transcript_to_id_mm10.head.txt); [quant.genes.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739703/quant.genes.head.sf.txt); [quant.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739704/quant.head.sf.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607
https://github.com/COMBINE-lab/salmon/issues/607:318,Testability,test,tested,318,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode) . **Describe the bug**; salmon fails to map gene to transcript id despite given GTF or tx2id file as properly required.; I also used `grep` on both tx2id file and quant.sf file and both contain the transcript IDs tested. **To Reproduce**; 1. Create index decoys; Followed the steps in [tutorial](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment) ; 2. Create index; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode -p 40`; 3. Run ; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon quant -l A -1 <(zcat S1_1.fastq) -2 <(zcat S1_2.fastq) -o output -i salmon_index -g transcript_to_id_mm10`. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary; * Which reference (e.g. transcriptome) was used? mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607
https://github.com/COMBINE-lab/salmon/issues/608:322,Availability,error,error,322,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:540,Availability,Error,Error,540,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:678,Availability,Error,Error,678,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:749,Availability,Error,Error,749,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:1242,Availability,down,download,1242,"nd failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:2008,Availability,error,error,2008,"ev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:2226,Availability,Error,Error,2226,"ke-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:2364,Availability,Error,Error,2364," 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_ver",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:2435,Availability,Error,Error,2435," 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_ver",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:2592,Availability,down,downloaded,2592,"TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB V",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:2713,Availability,error,error,2713,"ritten to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:print",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:3004,Availability,error,error,3004,"o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.7.1908 (Core); Release:	7.7.1908; Codename:	Core. **Additional context**; I want to trace the code while running ""salmon index ......"", ""salmon qu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:4050,Availability,down,downloaded,4050,"get 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.7.1908 (Core); Release:	7.7.1908; Codename:	Core. **Additional context**; I want to trace the code while running ""salmon index ......"", ""salmon quant ......"" with gdb, but it seems that both the downloaded executable and the compiled ""Release"" mode do not contain debug symbol, so I'd like to compile the code with debug mode (which maybe will enable ""-g"" flag in g++); Thanks for your help in advance.; Best, ; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:889,Deployability,install,installed,889,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:909,Deployability,install,install,909,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:1233,Deployability,release,releases,1233,"nd failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:2571,Deployability,install,installed,2571,"TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB V",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:3845,Deployability,release,release,3845,"get 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.7.1908 (Core); Release:	7.7.1908; Codename:	Core. **Additional context**; I want to trace the code while running ""salmon index ......"", ""salmon quant ......"" with gdb, but it seems that both the downloaded executable and the compiled ""Release"" mode do not contain debug symbol, so I'd like to compile the code with debug mode (which maybe will enable ""-g"" flag in g++); Thanks for your help in advance.; Best, ; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:3870,Deployability,Release,Release,3870,"get 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.7.1908 (Core); Release:	7.7.1908; Codename:	Core. **Additional context**; I want to trace the code while running ""salmon index ......"", ""salmon quant ......"" with gdb, but it seems that both the downloaded executable and the compiled ""Release"" mode do not contain debug symbol, so I'd like to compile the code with debug mode (which maybe will enable ""-g"" flag in g++); Thanks for your help in advance.; Best, ; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:4090,Deployability,Release,Release,4090,"get 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.7.1908 (Core); Release:	7.7.1908; Codename:	Core. **Additional context**; I want to trace the code while running ""salmon index ......"", ""salmon quant ......"" with gdb, but it seems that both the downloaded executable and the compiled ""Release"" mode do not contain debug symbol, so I'd like to compile the code with debug mode (which maybe will enable ""-g"" flag in g++); Thanks for your help in advance.; Best, ; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:1904,Integrability,depend,dependencies,1904," install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:1695,Modifiability,Config,Configuring,1695,"ll' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:129,Usability,clear,clear,129,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/608:2878,Usability,clear,clear,2878,"Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.7.1908 (Core); Release:	7.7.1908; Codenam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608
https://github.com/COMBINE-lab/salmon/issues/609:479,Availability,fault,fault,479,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:1011,Availability,down,download,1011,"s the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:2075,Availability,fault,fault,2075,"3.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:2550,Availability,down,downloaded,2550,"Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:3219,Availability,fault,fault,3219,"ode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; - ""lsb_release -a""; LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ; **Additional context**; Thanks for your help in advance.; Best,; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:660,Deployability,install,installed,660,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:680,Deployability,install,install,680,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:1002,Deployability,release,releases,1002,"s the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:1349,Deployability,Release,Release,1349,"xt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://use",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:1408,Deployability,install,install,1408,"ne-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Sp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:2529,Deployability,install,installed,2529,"Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:3900,Deployability,release,release,3900,"ode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; - ""lsb_release -a""; LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ; **Additional context**; Thanks for your help in advance.; Best,; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:3925,Deployability,Release,Release,3925,"ode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; - ""lsb_release -a""; LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ; **Additional context**; Thanks for your help in advance.; Best,; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:130,Usability,clear,clear,130,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/609:2942,Usability,clear,clear,2942," > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; - ""lsb_release -a""; LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609
https://github.com/COMBINE-lab/salmon/issues/610:353,Integrability,protocol,protocols,353,"Hi,. I know there has been some interest in quantifying transcripts from bulk RNA-Seq data using UMI-deduplicated reads, and I was wondering if this is a feature that is being worked on. I understand that Alevin contains a lot of the functionality necessary for UMI-deduplicated counting, but that it is not directly applicable to standard bulk RNA-Seq protocols https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193. I am interested in contributing to get this feature implemented, if this isn't already being developed. Is this functionality something that you would be open to adding to Salmon?. Thanks,; Gautam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/610
https://github.com/COMBINE-lab/salmon/issues/611:478,Availability,down,down,478,"Hello!; This might be an unusual request, but I have been attempting to use Salmon Alevin for mapping of **scATAC-seq data** (10X Genomics platform) and have a few questions on how to best do this (/whether it is possible at all!). _**A bit of background**_:; I have two sequenced libraries of the same cross-species hybrid: scRNA-seq 10X v3 and scATAC-seq 10X (alas, not from the same cells). My aim is to use Salmon Alevin on both, using a home-made diploid reference so that down the line I can do allele-specific analysis on both datasets and then compare allelic imbalance. _**What I have done**_:; I generated a diploid reference ""feature set"" for the scATAC-seq, to mimic in a way how the reference transcriptome is interpreted. I did this by using bulk ATAC data from both species, calling peaks with MACS2, and then using this peak set (BED format) to extract strain- and species-corrected sequences (fasta) to use as a reference. _**My questions/issues**_:; Considering the basic Alevin invocation:; `salmon alevin -l ISR -1 cb.fastq.gz -2 reads.fastq.gz --chromiumV3 -i salmon_index_directory [--whitelist barcodes.tsv] -p 10 -o alevin_output`; ; `-1 cb.fastq.gz` —> these should be CB+UMI reads, but in 10X ATAC there are no UMIs, so this would only be a 16bp CB. I'm afraid this would be a major issue considering how Alevin relies on UMI whitelisting. Would it help if I already provide a list of filtered whitelisted CB, as provided by Cell Ranger? I have this from a quality control alignment to only one parental species. `--chromiumV3 `—> If I understand correctly, this tells the program to search for the first X bases of cb.fastq.gz as CB, and the first Y bases of it as UMI (as per [this ](https://github.com/COMBINE-lab/salmon/issues/369) thread). So technically one could swap --chromiumV3 for --end 5 --barcodeLength X --umiLength Y and set this manually? But again, what if I only have CBs?. `-2 reads.fastq.gz` —> I understand this is meant for 10X scRNA-seq - which only ha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/611
https://github.com/COMBINE-lab/salmon/issues/611:2621,Usability,clear,clear,2621," in a way how the reference transcriptome is interpreted. I did this by using bulk ATAC data from both species, calling peaks with MACS2, and then using this peak set (BED format) to extract strain- and species-corrected sequences (fasta) to use as a reference. _**My questions/issues**_:; Considering the basic Alevin invocation:; `salmon alevin -l ISR -1 cb.fastq.gz -2 reads.fastq.gz --chromiumV3 -i salmon_index_directory [--whitelist barcodes.tsv] -p 10 -o alevin_output`; ; `-1 cb.fastq.gz` —> these should be CB+UMI reads, but in 10X ATAC there are no UMIs, so this would only be a 16bp CB. I'm afraid this would be a major issue considering how Alevin relies on UMI whitelisting. Would it help if I already provide a list of filtered whitelisted CB, as provided by Cell Ranger? I have this from a quality control alignment to only one parental species. `--chromiumV3 `—> If I understand correctly, this tells the program to search for the first X bases of cb.fastq.gz as CB, and the first Y bases of it as UMI (as per [this ](https://github.com/COMBINE-lab/salmon/issues/369) thread). So technically one could swap --chromiumV3 for --end 5 --barcodeLength X --umiLength Y and set this manually? But again, what if I only have CBs?. `-2 reads.fastq.gz` —> I understand this is meant for 10X scRNA-seq - which only has insert information on read2, but in 10X scATAC both insert read1 and read2 contain information on open chromatin. I reckon this is the major head scratcher for me, whether it is possible to use Alevin on scATAC at all. Should I merge the fastq read files into a single “reads.fastq.gz”? Or should I treat them as independent (but with the same CBs) and run something along the lines of: `salmon alevin -l ISR -1 cb.fastq.gz cb.fastq.gz -2 read1.fastq.gz read2.fastq.gz` (…etc)? Or maybe there is a way I am not aware of that Alevin can handle paired-end data?. Thank you in advance and I hope I have been detailed and clear enough. Please ask for more details where needed :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/611
https://github.com/COMBINE-lab/salmon/issues/612:1645,Deployability,release,release,1645,"I recently quantified a set of RNA-seq samples using both Salmon and RSEM to eventually do differential isoform analysis. When the overlap of significant isoforms was rather low -- even though the only difference was whether the TPM values were from Salmon or RSEM -- I started comparing the TPM values and saw something strange. After taking the log2 of the TPM values, I generated [these](https://drive.google.com/drive/folders/1eLDVPoNS_pRaOkFqQHY9l1DDDUovIho3?usp=sharing) plots. TPM values for salmon are from `quant.sf` files and for RSEM, `*.isoforms.results` files. . The there three very consistent commonalities between these plots:. 1. There seems to be a large number of transcripts with zero expression in one but not the other.; 2. There seems to be a set of isoforms that is more highly expressed in Salmon across all plots. ; 3. The bulk of reads that are close to the diagonal line are mostly concentrated on the RSEM side. And the details of the runs:. **RSEM v1.3.2 commands:**. indexing:. - rsem-prepare-reference --gtf gencode.vM25.annotation.gtf --star --star-path /appl/soft/bio/star/gcc_9.1.0/2.7.2a/bin -p 8 --star-sjdboverhang 83 GRCm38.primary_assembly.genome.fa rsem_indx_gencode/rsem_ref. quant:. - rsem-calculate-expression -p 8 --strandedness forward --star --star-path /appl/soft/bio/star/gcc_9.1.0/2.7.2a/bin --star-gzipped-read-file input_file.fq.gz rsem_indx_gencode/rsem_ref output/path. **salmon v1.4.0 commands:**. indexing:. - used entire genome as decoy sequence, decoy file made following instructions from: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ (except that latest M25 release was used). - salmon index -t gentrome.fa.gz -d decoys.txt -i salmon_index --keepDuplicates --gencode -p 12. quant:. - salmon quant -i salmon_index -l A -r /path/to/input.fq.gz -g gencode.vM25.annotation.gtf -p 4 --validateMappings -o path/to/output. Any idea what could be going on here?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/612
https://github.com/COMBINE-lab/salmon/issues/612:1867,Security,validat,validateMappings,1867,"I recently quantified a set of RNA-seq samples using both Salmon and RSEM to eventually do differential isoform analysis. When the overlap of significant isoforms was rather low -- even though the only difference was whether the TPM values were from Salmon or RSEM -- I started comparing the TPM values and saw something strange. After taking the log2 of the TPM values, I generated [these](https://drive.google.com/drive/folders/1eLDVPoNS_pRaOkFqQHY9l1DDDUovIho3?usp=sharing) plots. TPM values for salmon are from `quant.sf` files and for RSEM, `*.isoforms.results` files. . The there three very consistent commonalities between these plots:. 1. There seems to be a large number of transcripts with zero expression in one but not the other.; 2. There seems to be a set of isoforms that is more highly expressed in Salmon across all plots. ; 3. The bulk of reads that are close to the diagonal line are mostly concentrated on the RSEM side. And the details of the runs:. **RSEM v1.3.2 commands:**. indexing:. - rsem-prepare-reference --gtf gencode.vM25.annotation.gtf --star --star-path /appl/soft/bio/star/gcc_9.1.0/2.7.2a/bin -p 8 --star-sjdboverhang 83 GRCm38.primary_assembly.genome.fa rsem_indx_gencode/rsem_ref. quant:. - rsem-calculate-expression -p 8 --strandedness forward --star --star-path /appl/soft/bio/star/gcc_9.1.0/2.7.2a/bin --star-gzipped-read-file input_file.fq.gz rsem_indx_gencode/rsem_ref output/path. **salmon v1.4.0 commands:**. indexing:. - used entire genome as decoy sequence, decoy file made following instructions from: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ (except that latest M25 release was used). - salmon index -t gentrome.fa.gz -d decoys.txt -i salmon_index --keepDuplicates --gencode -p 12. quant:. - salmon quant -i salmon_index -l A -r /path/to/input.fq.gz -g gencode.vM25.annotation.gtf -p 4 --validateMappings -o path/to/output. Any idea what could be going on here?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/612
https://github.com/COMBINE-lab/salmon/issues/613:958,Security,validat,validateMappings,958,"We noticed recently that doing quantification multiple times (using exact same settings) on the same file using salmon v0.99.0 resulted in some transcripts having different read number values (NumReads column) across different runs. . What seems to happen is that for the transcripts that differ across runs, one value will be zero, and the other will be non-zero (I recall seeing ~30 and ~75). We only looked at one biological replicate, but didn't see any examples in which multiple runs would produce more than two values (it's either zero or another number, but never _another_ number). The total number of transcripts for which this was happening was fewer than 10. . We tried specifying that the quantification be done on one CPU core, thinking that perhaps the discrepancy was coming from multithreading somehow, but we observed the same phenomenon. . `salmon quant -i salmon_index_noThread_2 -l A -r input_file.fq.gz -g Mus_musculus.GRCm38.100.gtf --validateMappings -o out/fq_quant`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/613
https://github.com/COMBINE-lab/salmon/issues/616:439,Security,validat,validateMappings,439,"Hi,. I have been running salmon v1.4.0 on 324 samples. In 8 samples I did not get any quantification and the process ended with a warning like "".....salmon was only able to assign 0 fragments to transcripts in the index...."". The command line I used is as follow (I simplified the paths and file names):; salmon quant -p 20 -i Salmon_Index -l A --seqBias --gcBias --biasSpeedSamp -1 $FASTQ1.R1.fastq.gz -2 $FASTQ2.R2.fastq.gz -o $outDIR --validateMappings. These same 8 samples were processed with HISAT2 and the overall alignment rate was above 80%. I attached the log file for one of the 8 runs; [logFile.txt](https://github.com/COMBINE-lab/salmon/files/5846381/logFile.txt). Do you have any suggestions ? do you need more info ?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/616
https://github.com/COMBINE-lab/salmon/issues/616:566,Testability,log,log,566,"Hi,. I have been running salmon v1.4.0 on 324 samples. In 8 samples I did not get any quantification and the process ended with a warning like "".....salmon was only able to assign 0 fragments to transcripts in the index...."". The command line I used is as follow (I simplified the paths and file names):; salmon quant -p 20 -i Salmon_Index -l A --seqBias --gcBias --biasSpeedSamp -1 $FASTQ1.R1.fastq.gz -2 $FASTQ2.R2.fastq.gz -o $outDIR --validateMappings. These same 8 samples were processed with HISAT2 and the overall alignment rate was above 80%. I attached the log file for one of the 8 runs; [logFile.txt](https://github.com/COMBINE-lab/salmon/files/5846381/logFile.txt). Do you have any suggestions ? do you need more info ?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/616
https://github.com/COMBINE-lab/salmon/issues/616:599,Testability,log,logFile,599,"Hi,. I have been running salmon v1.4.0 on 324 samples. In 8 samples I did not get any quantification and the process ended with a warning like "".....salmon was only able to assign 0 fragments to transcripts in the index...."". The command line I used is as follow (I simplified the paths and file names):; salmon quant -p 20 -i Salmon_Index -l A --seqBias --gcBias --biasSpeedSamp -1 $FASTQ1.R1.fastq.gz -2 $FASTQ2.R2.fastq.gz -o $outDIR --validateMappings. These same 8 samples were processed with HISAT2 and the overall alignment rate was above 80%. I attached the log file for one of the 8 runs; [logFile.txt](https://github.com/COMBINE-lab/salmon/files/5846381/logFile.txt). Do you have any suggestions ? do you need more info ?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/616
https://github.com/COMBINE-lab/salmon/issues/616:664,Testability,log,logFile,664,"Hi,. I have been running salmon v1.4.0 on 324 samples. In 8 samples I did not get any quantification and the process ended with a warning like "".....salmon was only able to assign 0 fragments to transcripts in the index...."". The command line I used is as follow (I simplified the paths and file names):; salmon quant -p 20 -i Salmon_Index -l A --seqBias --gcBias --biasSpeedSamp -1 $FASTQ1.R1.fastq.gz -2 $FASTQ2.R2.fastq.gz -o $outDIR --validateMappings. These same 8 samples were processed with HISAT2 and the overall alignment rate was above 80%. I attached the log file for one of the 8 runs; [logFile.txt](https://github.com/COMBINE-lab/salmon/files/5846381/logFile.txt). Do you have any suggestions ? do you need more info ?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/616
https://github.com/COMBINE-lab/salmon/issues/616:266,Usability,simpl,simplified,266,"Hi,. I have been running salmon v1.4.0 on 324 samples. In 8 samples I did not get any quantification and the process ended with a warning like "".....salmon was only able to assign 0 fragments to transcripts in the index...."". The command line I used is as follow (I simplified the paths and file names):; salmon quant -p 20 -i Salmon_Index -l A --seqBias --gcBias --biasSpeedSamp -1 $FASTQ1.R1.fastq.gz -2 $FASTQ2.R2.fastq.gz -o $outDIR --validateMappings. These same 8 samples were processed with HISAT2 and the overall alignment rate was above 80%. I attached the log file for one of the 8 runs; [logFile.txt](https://github.com/COMBINE-lab/salmon/files/5846381/logFile.txt). Do you have any suggestions ? do you need more info ?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/616
https://github.com/COMBINE-lab/salmon/pull/617:7,Availability,error,error,7,Add an error model specific to Oxford Nanopore long sequencing reads. Added a switch `--ont` that triggers the use of this error model (this implies `--noLengthCorrection`). The error model assumes IID error rate along the reads and a geometric length distribution of clipping at both ends of the reads. (valid after trimming the reads with Oxford's own trimmer).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/617
https://github.com/COMBINE-lab/salmon/pull/617:123,Availability,error,error,123,Add an error model specific to Oxford Nanopore long sequencing reads. Added a switch `--ont` that triggers the use of this error model (this implies `--noLengthCorrection`). The error model assumes IID error rate along the reads and a geometric length distribution of clipping at both ends of the reads. (valid after trimming the reads with Oxford's own trimmer).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/617
https://github.com/COMBINE-lab/salmon/pull/617:178,Availability,error,error,178,Add an error model specific to Oxford Nanopore long sequencing reads. Added a switch `--ont` that triggers the use of this error model (this implies `--noLengthCorrection`). The error model assumes IID error rate along the reads and a geometric length distribution of clipping at both ends of the reads. (valid after trimming the reads with Oxford's own trimmer).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/617
https://github.com/COMBINE-lab/salmon/pull/617:202,Availability,error,error,202,Add an error model specific to Oxford Nanopore long sequencing reads. Added a switch `--ont` that triggers the use of this error model (this implies `--noLengthCorrection`). The error model assumes IID error rate along the reads and a geometric length distribution of clipping at both ends of the reads. (valid after trimming the reads with Oxford's own trimmer).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/617
https://github.com/COMBINE-lab/salmon/issues/618:560,Usability,simpl,simply,560,"Hello there,. first off thank you so much for this program: I've been using salmon for roughly a year now and surely won't go back to any other quantification method.; However, I have questions regarding one of my current analyses (sorry if this is the wrong place to ask!). . How well would salmon cope with quantification when using a _de novo_ transcriptome of a polyploid non-model species as reference?. The goal is to find candidate genes via differential gene expression analyses. Since our non-model species is closely related to a model species, we'd simply like to:. - use salmon for quantification; - annotate using the closely related model proteome; - aggregate counts using tximport ; - find DEGs with DESeq2. . So far, the results seem plausible. But I would love to hear an opinion on this: are there things to watch out for with this approach?. Best wishes and stay healthy,. Lukas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/618
https://github.com/COMBINE-lab/salmon/issues/620:674,Availability,down,downloaded,674,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is in alevin, single-cell mode. **Describe the bug**; The log shows that there are at least 50% percent reads has been thrown away, and the mapping rate was between 18.7%-19.1%. **To Reproduce**; Steps and data to reproduce the behavior:; Reference was indexed using transcripts without decoy, and command line parameters are described below; The genome was not published so I can't share with you that, and I'm sorry with that. Specifically, please provide at least the following information:; * Which version of salmon was used? ; salmon 1.4.0. * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Bioconda. * Which reference (e.g. transcriptome) was used? ; The reference genome is sequenced by ourselves, and it's a plant. Reference was indexed using transcripts without decoy. * Which read files were used?; my reads layout is paired end 150bp; Will the 150bp reads affect the pipeline, and if it will, how can I make it to 28bp R1 and 91bp R2, which is identical to cellranger makefastq output.; > R1: ; @A00582:424:HJYLGDSXY:3:1101:1090:1000 1:N:0:ACCGGCTC; TAACCAGGTCGAGTGAGTATTTAAGGCGCGCGGCGCACCAACGCACTCCCAACAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; > +; FFFFFFFFFFFFFFFFFFFFFFFFFFFF,,:,,FF:,,,::FF,,:F,,,,,,F:,,,:,::FF::::::,FFF:F:FF:FFFFFFF::FF::FF,F:F:FF:F,FFFF,:FF,FFFFF:,FF:::FF:FFF:FF:FF:FFFFFFFFFF:; > R2:; @A00582:424:HJYLGDSXY:3:1101:1090:1000 2:N:0:ACCGGCTC; NCCTAGAAGCAGCCACCCTTGAAAGAGTGCGTAATAGCTCACTGATCGAGCGCTCTTGCGCCGAAGATGAACGGGGCTAAGCGATCTGCCGAAGCTGTGGGATGTAAAAATACATCGGTAGGGGAGCGTTCCGCCTTAGAGAGAAGCCTC; > +; #FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF::FFFFFFFFFF:FFFFFFFFFFFFF:FFFFFF:FFFFFFF:. * Which which program options were used?; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:653,Deployability,install,installed,653,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is in alevin, single-cell mode. **Describe the bug**; The log shows that there are at least 50% percent reads has been thrown away, and the mapping rate was between 18.7%-19.1%. **To Reproduce**; Steps and data to reproduce the behavior:; Reference was indexed using transcripts without decoy, and command line parameters are described below; The genome was not published so I can't share with you that, and I'm sorry with that. Specifically, please provide at least the following information:; * Which version of salmon was used? ; salmon 1.4.0. * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Bioconda. * Which reference (e.g. transcriptome) was used? ; The reference genome is sequenced by ourselves, and it's a plant. Reference was indexed using transcripts without decoy. * Which read files were used?; my reads layout is paired end 150bp; Will the 150bp reads affect the pipeline, and if it will, how can I make it to 28bp R1 and 91bp R2, which is identical to cellranger makefastq output.; > R1: ; @A00582:424:HJYLGDSXY:3:1101:1090:1000 1:N:0:ACCGGCTC; TAACCAGGTCGAGTGAGTATTTAAGGCGCGCGGCGCACCAACGCACTCCCAACAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; > +; FFFFFFFFFFFFFFFFFFFFFFFFFFFF,,:,,FF:,,,::FF,,:F,,,,,,F:,,,:,::FF::::::,FFF:F:FF:FFFFFFF::FF::FF,F:F:FF:F,FFFF,:FF,FFFFF:,FF:::FF:FFF:FF:FF:FFFFFFFFFF:; > R2:; @A00582:424:HJYLGDSXY:3:1101:1090:1000 2:N:0:ACCGGCTC; NCCTAGAAGCAGCCACCCTTGAAAGAGTGCGTAATAGCTCACTGATCGAGCGCTCTTGCGCCGAAGATGAACGGGGCTAAGCGATCTGCCGAAGCTGTGGGATGTAAAAATACATCGGTAGGGGAGCGTTCCGCCTTAGAGAGAAGCCTC; > +; #FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF::FFFFFFFFFF:FFFFFFFFFFFFF:FFFFFF:FFFFFFF:. * Which which program options were used?; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:1000,Deployability,pipeline,pipeline,1000," bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is in alevin, single-cell mode. **Describe the bug**; The log shows that there are at least 50% percent reads has been thrown away, and the mapping rate was between 18.7%-19.1%. **To Reproduce**; Steps and data to reproduce the behavior:; Reference was indexed using transcripts without decoy, and command line parameters are described below; The genome was not published so I can't share with you that, and I'm sorry with that. Specifically, please provide at least the following information:; * Which version of salmon was used? ; salmon 1.4.0. * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Bioconda. * Which reference (e.g. transcriptome) was used? ; The reference genome is sequenced by ourselves, and it's a plant. Reference was indexed using transcripts without decoy. * Which read files were used?; my reads layout is paired end 150bp; Will the 150bp reads affect the pipeline, and if it will, how can I make it to 28bp R1 and 91bp R2, which is identical to cellranger makefastq output.; > R1: ; @A00582:424:HJYLGDSXY:3:1101:1090:1000 1:N:0:ACCGGCTC; TAACCAGGTCGAGTGAGTATTTAAGGCGCGCGGCGCACCAACGCACTCCCAACAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; > +; FFFFFFFFFFFFFFFFFFFFFFFFFFFF,,:,,FF:,,,::FF,,:F,,,,,,F:,,,:,::FF::::::,FFF:F:FF:FFFFFFF::FF::FF,F:F:FF:F,FFFF,:FF,FFFFF:,FF:::FF:FFF:FF:FF:FFFFFFFFFF:; > R2:; @A00582:424:HJYLGDSXY:3:1101:1090:1000 2:N:0:ACCGGCTC; NCCTAGAAGCAGCCACCCTTGAAAGAGTGCGTAATAGCTCACTGATCGAGCGCTCTTGCGCCGAAGATGAACGGGGCTAAGCGATCTGCCGAAGCTGTGGGATGTAAAAATACATCGGTAGGGGAGCGTTCCGCCTTAGAGAGAAGCCTC; > +; #FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF::FFFFFFFFFF:FFFFFFFFFFFFF:FFFFFF:FFFFFFF:. * Which which program options were used?; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.fastq --",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:10327,Deployability,release,release,10327,"1-23 11:07:56.200] [alevinLog] [info] Total **49.0191% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-23 11:07:57.144] [alevinLog] [info] Done populating Z matrix; [2021-01-23 11:07:57.172] [alevinLog] [info] Total 35787 CB got sequence corrected; [2021-01-23 11:07:57.177] [alevinLog] [info] Done indexing Barcodes; [2021-01-23 11:07:57.177] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-23 11:07:57.177] [alevinLog] [info] Used Barcodes except Whitelist: 35219; [2021-01-23 11:07:57.360] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; .... > {; ""total_reads"": 188934609,; ""reads_with_N"": 0,; ""noisy_cb_reads"": 92614076,; ""noisy_umi_reads"": 17028,; ""used_reads"": 96303505,; ""mapping_rate"": 19.451325087824434,; ""reads_in_eqclasses"": 36750285,; ""total_cbs"": 3896665,; ""used_cbs"": 47725,; ""initial_whitelist"": 11511,; ""low_conf_cbs"": 995,; ""num_features"": 5,; ""no_read_mapping_cbs"": 70,; ""final_num_cbs"": 8324,; ""deduplicated_umis"": 19613485,; ""mean_umis_per_cell"": 2356,; ""mean_genes_per_cell"": 1120; }. By the way, the cellranger result shows that reads map to Transcriptome is low, but reads mapped to Genome is 85%. ![image](https://user-images.githubusercontent.com/29651981/106248111-7df1cd00-624b-11eb-9cde-4c610047f193.png). ![image](https://user-images.githubusercontent.com/29651981/106248036-60246800-624b-11eb-9221-4d8a1f08d9a3.png). **Desktop (please complete the following information):**; - OS: CentOS 7; - Version; `uname -a`; Linux taxus 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux; `lsb_release -a`; LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.2.1511 (Core); Release: 7.2.1511; Codename: Core. Thanks for considering my questions. Best Regards,; Matthew Hawking",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:10352,Deployability,Release,Release,10352,"1-23 11:07:56.200] [alevinLog] [info] Total **49.0191% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-23 11:07:57.144] [alevinLog] [info] Done populating Z matrix; [2021-01-23 11:07:57.172] [alevinLog] [info] Total 35787 CB got sequence corrected; [2021-01-23 11:07:57.177] [alevinLog] [info] Done indexing Barcodes; [2021-01-23 11:07:57.177] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-23 11:07:57.177] [alevinLog] [info] Used Barcodes except Whitelist: 35219; [2021-01-23 11:07:57.360] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; .... > {; ""total_reads"": 188934609,; ""reads_with_N"": 0,; ""noisy_cb_reads"": 92614076,; ""noisy_umi_reads"": 17028,; ""used_reads"": 96303505,; ""mapping_rate"": 19.451325087824434,; ""reads_in_eqclasses"": 36750285,; ""total_cbs"": 3896665,; ""used_cbs"": 47725,; ""initial_whitelist"": 11511,; ""low_conf_cbs"": 995,; ""num_features"": 5,; ""no_read_mapping_cbs"": 70,; ""final_num_cbs"": 8324,; ""deduplicated_umis"": 19613485,; ""mean_umis_per_cell"": 2356,; ""mean_genes_per_cell"": 1120; }. By the way, the cellranger result shows that reads map to Transcriptome is low, but reads mapped to Genome is 85%. ![image](https://user-images.githubusercontent.com/29651981/106248111-7df1cd00-624b-11eb-9cde-4c610047f193.png). ![image](https://user-images.githubusercontent.com/29651981/106248036-60246800-624b-11eb-9221-4d8a1f08d9a3.png). **Desktop (please complete the following information):**; - OS: CentOS 7; - Version; `uname -a`; Linux taxus 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux; `lsb_release -a`; LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.2.1511 (Core); Release: 7.2.1511; Codename: Core. Thanks for considering my questions. Best Regards,; Matthew Hawking",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:4324,Performance,optimiz,optimizer,4324,"ng it; [2021-01-25 16:27:05.707] [alevinLog] [info] Learned InvCov: 556.394 normfactor: 9159.58; [2021-01-25 16:27:05.707] [alevinLog] [info] Total 222(has 201 low confidence) barcodes; [2021-01-25 16:27:06.573] [alevinLog] [info] Done True Barcode Sampling; [2021-01-25 16:27:07.383] [alevinLog] [warning] Total **96.7029% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-25 16:27:07.412] [alevinLog] [info] Done populating Z matrix; [2021-01-25 16:27:07.414] [alevinLog] [info] Total 3667 CB got sequence corrected; [2021-01-25 16:27:07.414] [alevinLog] [info] Done indexing Barcodes; [2021-01-25 16:27:07.414] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542] [alevinLog] [info] Starting optimizer; [2021-01-25 16:30:54.782] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:54.782] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 1350278.00 UMI after deduplicating.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 30909 BiDirected Edges.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 8817 UniDirected Edges.; [2021-01-25 16:30:55.969] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-25 16:30:56.294] [alevinLog] [warning] Num High confidence barcodes too less 20 < 90.Can't performing whitelisting; Skipping; [2021-01-25 16:30:56.297] [alevinLog] [info] Finished optimizer. ### with `--exceptCells 7000`; > [2021-01-21 09:24:45.891] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-21 09:24:45.942] [alevinLog] [info] Filled with 43030 txp to gene en",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:4987,Performance,perform,performing,4987,"6665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542] [alevinLog] [info] Starting optimizer; [2021-01-25 16:30:54.782] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:54.782] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 1350278.00 UMI after deduplicating.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 30909 BiDirected Edges.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 8817 UniDirected Edges.; [2021-01-25 16:30:55.969] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-25 16:30:56.294] [alevinLog] [warning] Num High confidence barcodes too less 20 < 90.Can't performing whitelisting; Skipping; [2021-01-25 16:30:56.297] [alevinLog] [info] Finished optimizer. ### with `--exceptCells 7000`; > [2021-01-21 09:24:45.891] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-21 09:24:45.942] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-21 09:24:45.947] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-21 09:24:45.967] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-21 09:33:35.885] [alevinLog] [info] Done barcode density calculation.; [2021-01-21 09:33:35.885] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-21 09:33:37.337] [alevinLog] [info] Total 10016(has 1000 low confidence) barcodes; [2021-01-21 09:33:38.202] [alevinLog] [info] Done True Barcode Sampling; [2021-01-21 09:33:39.137] [alevinLog] [warning] Total **52.0343% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-21 09:33:39.960] [alevinLog] [info] Done ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:5076,Performance,optimiz,optimizer,5076,"sed Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542] [alevinLog] [info] Starting optimizer; [2021-01-25 16:30:54.782] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:54.782] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 1350278.00 UMI after deduplicating.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 30909 BiDirected Edges.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 8817 UniDirected Edges.; [2021-01-25 16:30:55.969] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-25 16:30:56.294] [alevinLog] [warning] Num High confidence barcodes too less 20 < 90.Can't performing whitelisting; Skipping; [2021-01-25 16:30:56.297] [alevinLog] [info] Finished optimizer. ### with `--exceptCells 7000`; > [2021-01-21 09:24:45.891] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-21 09:24:45.942] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-21 09:24:45.947] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-21 09:24:45.967] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-21 09:33:35.885] [alevinLog] [info] Done barcode density calculation.; [2021-01-21 09:33:35.885] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-21 09:33:37.337] [alevinLog] [info] Total 10016(has 1000 low confidence) barcodes; [2021-01-21 09:33:38.202] [alevinLog] [info] Done True Barcode Sampling; [2021-01-21 09:33:39.137] [alevinLog] [warning] Total **52.0343% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-21 09:33:39.960] [alevinLog] [info] Done populating Z matrix; [2021-01-21 09:33:39.989] [alevi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:6576,Performance,optimiz,optimizer,6576,ion.; [2021-01-21 09:33:35.885] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-21 09:33:37.337] [alevinLog] [info] Total 10016(has 1000 low confidence) barcodes; [2021-01-21 09:33:38.202] [alevinLog] [info] Done True Barcode Sampling; [2021-01-21 09:33:39.137] [alevinLog] [warning] Total **52.0343% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-21 09:33:39.960] [alevinLog] [info] Done populating Z matrix; [2021-01-21 09:33:39.989] [alevinLog] [info] Total 34923 CB got sequence corrected; [2021-01-21 09:33:39.994] [alevinLog] [info] Done indexing Barcodes; [2021-01-21 09:33:39.994] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-21 09:33:39.994] [alevinLog] [info] Used Barcodes except Whitelist: 34503; [2021-01-21 09:33:40.718] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-21 09:33:40.718] [alevinLog] [info] parsing read library format; [2021-01-21 09:48:11.430] [alevinLog] [info] Starting optimizer; [2021-01-21 09:48:12.160] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:12.160] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 19031525.00 UMI after deduplicating.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 454402 BiDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 113688 UniDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [warning] Skipped 44 barcodes due to No mapped read; [2021-01-21 09:48:36.307] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting white listing of 9971 cells; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting to make feature Matrix; [2021-01-21 09:48:41.337] [alevinLog] [info] Done making feature Matrix; [2021-01-21 09:48:41.557] [alevinLog] [info] Finished white listing; [2021-01-21 09:48:41.580] [alevinLog] [,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:7591,Performance,optimiz,optimizer,7591,"imizer; [2021-01-21 09:48:12.160] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:12.160] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 19031525.00 UMI after deduplicating.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 454402 BiDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 113688 UniDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [warning] Skipped 44 barcodes due to No mapped read; [2021-01-21 09:48:36.307] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting white listing of 9971 cells; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting to make feature Matrix; [2021-01-21 09:48:41.337] [alevinLog] [info] Done making feature Matrix; [2021-01-21 09:48:41.557] [alevinLog] [info] Finished white listing; [2021-01-21 09:48:41.580] [alevinLog] [info] Finished optimizer. > {; ""total_reads"": 188934609,; ""reads_with_N"": 0,; ""noisy_cb_reads"": 98310747,; ""noisy_umi_reads"": 16600,; ""used_reads"": 90607262,; ""mapping_rate"": 18.89108045842464,; ""reads_in_eqclasses"": 35691789,; ""total_cbs"": 3896665,; ""used_cbs"": 44518,; ""initial_whitelist"": 9015,; ""low_conf_cbs"": 1000,; ""num_features"": 5,; ""no_read_mapping_cbs"": 44,; ""final_num_cbs"": 6765,; ""deduplicated_umis"": 19031525,; ""mean_umis_per_cell"": 2813,; ""mean_genes_per_cell"": 1315; }. ### My best result with `--exceptCells 30000`; > ...; [2021-01-23 11:07:52.910] [alevinLog] [info] Done barcode density calculation.; [2021-01-23 11:07:52.910] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-23 11:07:54.387] [alevinLog] [info] Total 12507(has 995 low confidence) barcodes; [2021-01-23 11:07:55.251] [alevinLog] [info] Done True Barcode Sampling; [2021-01-23 11:07:56.200] [alevinLog] [info] Total **49.0191% reads will be thrown away** because of noisy Cellular barcodes.; [2021-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:3272,Safety,Predict,Prediction,3272," **Screenshots** ; ### Default setting ; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.fastq --chromiumV3 -i ../../dna/00.ref_genome/sample/salmon_index_allmRNA -p 40 -o test_alevin_allmRNA --tgMap ../../dna/00.ref_genome/sample/alltxp2gene.tsv`. > [2021-01-25 16:22:09.565] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-25 16:22:09.615] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-25 16:22:09.620] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-25 16:22:09.631] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-25 16:26:35.067] [alevinLog] [info] Done barcode density calculation.; [2021-01-25 16:26:35.067] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-25 16:26:42.979] [alevinLog] [info] Knee found left boundary at 21; [2021-01-25 16:27:05.707] [alevinLog] [warning] Gauss Prediction 4969 Too far from knee prediction skipping it; [2021-01-25 16:27:05.707] [alevinLog] [info] Learned InvCov: 556.394 normfactor: 9159.58; [2021-01-25 16:27:05.707] [alevinLog] [info] Total 222(has 201 low confidence) barcodes; [2021-01-25 16:27:06.573] [alevinLog] [info] Done True Barcode Sampling; [2021-01-25 16:27:07.383] [alevinLog] [warning] Total **96.7029% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-25 16:27:07.412] [alevinLog] [info] Done populating Z matrix; [2021-01-25 16:27:07.414] [alevinLog] [info] Total 3667 CB got sequence corrected; [2021-01-25 16:27:07.414] [alevinLog] [info] Done indexing Barcodes; [2021-01-25 16:27:07.414] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:3306,Safety,predict,prediction,3306," **Screenshots** ; ### Default setting ; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.fastq --chromiumV3 -i ../../dna/00.ref_genome/sample/salmon_index_allmRNA -p 40 -o test_alevin_allmRNA --tgMap ../../dna/00.ref_genome/sample/alltxp2gene.tsv`. > [2021-01-25 16:22:09.565] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-25 16:22:09.615] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-25 16:22:09.620] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-25 16:22:09.631] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-25 16:26:35.067] [alevinLog] [info] Done barcode density calculation.; [2021-01-25 16:26:35.067] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-25 16:26:42.979] [alevinLog] [info] Knee found left boundary at 21; [2021-01-25 16:27:05.707] [alevinLog] [warning] Gauss Prediction 4969 Too far from knee prediction skipping it; [2021-01-25 16:27:05.707] [alevinLog] [info] Learned InvCov: 556.394 normfactor: 9159.58; [2021-01-25 16:27:05.707] [alevinLog] [info] Total 222(has 201 low confidence) barcodes; [2021-01-25 16:27:06.573] [alevinLog] [info] Done True Barcode Sampling; [2021-01-25 16:27:07.383] [alevinLog] [warning] Total **96.7029% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-25 16:27:07.412] [alevinLog] [info] Done populating Z matrix; [2021-01-25 16:27:07.414] [alevinLog] [info] Total 3667 CB got sequence corrected; [2021-01-25 16:27:07.414] [alevinLog] [info] Done indexing Barcodes; [2021-01-25 16:27:07.414] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:147,Testability,log,log,147,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is in alevin, single-cell mode. **Describe the bug**; The log shows that there are at least 50% percent reads has been thrown away, and the mapping rate was between 18.7%-19.1%. **To Reproduce**; Steps and data to reproduce the behavior:; Reference was indexed using transcripts without decoy, and command line parameters are described below; The genome was not published so I can't share with you that, and I'm sorry with that. Specifically, please provide at least the following information:; * Which version of salmon was used? ; salmon 1.4.0. * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Bioconda. * Which reference (e.g. transcriptome) was used? ; The reference genome is sequenced by ourselves, and it's a plant. Reference was indexed using transcripts without decoy. * Which read files were used?; my reads layout is paired end 150bp; Will the 150bp reads affect the pipeline, and if it will, how can I make it to 28bp R1 and 91bp R2, which is identical to cellranger makefastq output.; > R1: ; @A00582:424:HJYLGDSXY:3:1101:1090:1000 1:N:0:ACCGGCTC; TAACCAGGTCGAGTGAGTATTTAAGGCGCGCGGCGCACCAACGCACTCCCAACAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; > +; FFFFFFFFFFFFFFFFFFFFFFFFFFFF,,:,,FF:,,,::FF,,:F,,,,,,F:,,,:,::FF::::::,FFF:F:FF:FFFFFFF::FF::FF,F:F:FF:F,FFFF,:FF,FFFFF:,FF:::FF:FFF:FF:FF:FFFFFFFFFF:; > R2:; @A00582:424:HJYLGDSXY:3:1101:1090:1000 2:N:0:ACCGGCTC; NCCTAGAAGCAGCCACCCTTGAAAGAGTGCGTAATAGCTCACTGATCGAGCGCTCTTGCGCCGAAGATGAACGGGGCTAAGCGATCTGCCGAAGCTGTGGGATGTAAAAATACATCGGTAGGGGAGCGTTCCGCCTTAGAGAGAAGCCTC; > +; #FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF::FFFFFFFFFF:FFFFFFFFFFFFF:FFFFFF:FFFFFFF:. * Which which program options were used?; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:3375,Usability,Learn,Learned,3375,"ple_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.fastq --chromiumV3 -i ../../dna/00.ref_genome/sample/salmon_index_allmRNA -p 40 -o test_alevin_allmRNA --tgMap ../../dna/00.ref_genome/sample/alltxp2gene.tsv`. > [2021-01-25 16:22:09.565] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-25 16:22:09.615] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-25 16:22:09.620] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-25 16:22:09.631] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-25 16:26:35.067] [alevinLog] [info] Done barcode density calculation.; [2021-01-25 16:26:35.067] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-25 16:26:42.979] [alevinLog] [info] Knee found left boundary at 21; [2021-01-25 16:27:05.707] [alevinLog] [warning] Gauss Prediction 4969 Too far from knee prediction skipping it; [2021-01-25 16:27:05.707] [alevinLog] [info] Learned InvCov: 556.394 normfactor: 9159.58; [2021-01-25 16:27:05.707] [alevinLog] [info] Total 222(has 201 low confidence) barcodes; [2021-01-25 16:27:06.573] [alevinLog] [info] Done True Barcode Sampling; [2021-01-25 16:27:07.383] [alevinLog] [warning] Total **96.7029% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-25 16:27:07.412] [alevinLog] [info] Done populating Z matrix; [2021-01-25 16:27:07.414] [alevinLog] [info] Total 3667 CB got sequence corrected; [2021-01-25 16:27:07.414] [alevinLog] [info] Done indexing Barcodes; [2021-01-25 16:27:07.414] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542] [alevinLog] [info] Starting optimizer; [2021-01-25 16:30:54.782] [alevinLog] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:4848,Usability,Clear,Clearing,4848," corrected; [2021-01-25 16:27:07.414] [alevinLog] [info] Done indexing Barcodes; [2021-01-25 16:27:07.414] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542] [alevinLog] [info] Starting optimizer; [2021-01-25 16:30:54.782] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:54.782] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 1350278.00 UMI after deduplicating.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 30909 BiDirected Edges.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 8817 UniDirected Edges.; [2021-01-25 16:30:55.969] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-25 16:30:56.294] [alevinLog] [warning] Num High confidence barcodes too less 20 < 90.Can't performing whitelisting; Skipping; [2021-01-25 16:30:56.297] [alevinLog] [info] Finished optimizer. ### with `--exceptCells 7000`; > [2021-01-21 09:24:45.891] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-21 09:24:45.942] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-21 09:24:45.947] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-21 09:24:45.967] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-21 09:33:35.885] [alevinLog] [info] Done barcode density calculation.; [2021-01-21 09:33:35.885] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-21 09:33:37.337] [alevinLog] [info] Total 10016(has 1000 low confidence) barcodes; [2021-01-21 09:33:38.202] [alevinLog] [info] Done True Barcode Sampling; [2021-01-21 09:33:39.13",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/620:7195,Usability,Clear,Clearing,7195,"33:39.994] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-21 09:33:39.994] [alevinLog] [info] Used Barcodes except Whitelist: 34503; [2021-01-21 09:33:40.718] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-21 09:33:40.718] [alevinLog] [info] parsing read library format; [2021-01-21 09:48:11.430] [alevinLog] [info] Starting optimizer; [2021-01-21 09:48:12.160] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:12.160] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 19031525.00 UMI after deduplicating.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 454402 BiDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 113688 UniDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [warning] Skipped 44 barcodes due to No mapped read; [2021-01-21 09:48:36.307] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting white listing of 9971 cells; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting to make feature Matrix; [2021-01-21 09:48:41.337] [alevinLog] [info] Done making feature Matrix; [2021-01-21 09:48:41.557] [alevinLog] [info] Finished white listing; [2021-01-21 09:48:41.580] [alevinLog] [info] Finished optimizer. > {; ""total_reads"": 188934609,; ""reads_with_N"": 0,; ""noisy_cb_reads"": 98310747,; ""noisy_umi_reads"": 16600,; ""used_reads"": 90607262,; ""mapping_rate"": 18.89108045842464,; ""reads_in_eqclasses"": 35691789,; ""total_cbs"": 3896665,; ""used_cbs"": 44518,; ""initial_whitelist"": 9015,; ""low_conf_cbs"": 1000,; ""num_features"": 5,; ""no_read_mapping_cbs"": 44,; ""final_num_cbs"": 6765,; ""deduplicated_umis"": 19031525,; ""mean_umis_per_cell"": 2813,; ""mean_genes_per_cell"": 1315; }. ### My best result with `--exceptCells 30000`; > ...; [2021-01-23 11:07:52.910] [alevinLog] [info] Done barcode density calculation.; [2021",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620
https://github.com/COMBINE-lab/salmon/issues/624:87,Integrability,protocol,protocols,87,"Hello,. I was wondering if it would be possible to add support in Alevin for these two protocols:; https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq.html; https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html. The documents there describe the sequencing protocol and primer/barcode/UMI structures (which differ between the two technologies due to the addition of a hairpin sequence in the v3 protocol.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/624
https://github.com/COMBINE-lab/salmon/issues/624:292,Integrability,protocol,protocol,292,"Hello,. I was wondering if it would be possible to add support in Alevin for these two protocols:; https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq.html; https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html. The documents there describe the sequencing protocol and primer/barcode/UMI structures (which differ between the two technologies due to the addition of a hairpin sequence in the v3 protocol.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/624
https://github.com/COMBINE-lab/salmon/issues/624:430,Integrability,protocol,protocol,430,"Hello,. I was wondering if it would be possible to add support in Alevin for these two protocols:; https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq.html; https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html. The documents there describe the sequencing protocol and primer/barcode/UMI structures (which differ between the two technologies due to the addition of a hairpin sequence in the v3 protocol.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/624
https://github.com/COMBINE-lab/salmon/issues/625:1139,Availability,down,downloaded,1139,"vin (single-cell mode)?**; Alevin; **Describe the bug**; A clear and concise description of what the bug is.; Reanalyzing published Drop-Seq data the alevin analysis results in drastically fewer barcodes accepted than the published dataset. Published dataset contains 3000 CBs for the specific sample (authors report that 70% of [these] putative cells from WT mice met QC criteria), alevin result contains 459 CBs.; A similar highly abbreviated CB result was obtained with reanalysis of SRR8889412. **To Reproduce**; Steps and data to reproduce the behavior:. Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; Publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6925218/#; Specific Sample: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3720936. Alevin was run using no special parameters with the --dropseq flags. The only significant protocol deviation was in index construction (see below). Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Salmon was run in stock docker container; * Which reference (e.g. transcriptome) was used?; Full decoy Index generated on Gencode M25 per Alevin Velocity tutorial with a k=17 (dataset has 50bp R2 Reads); Introns were extracted with 49bp flanking sequence. ; ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz. * Which read files were used?; Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; * Which which program options were used?; --dropseq -l ISR. **Expected behavior**; A clear and concise description of what you expected to happen.; Cell calls should be ballpark similar to published result (3000 original vs. 459 alevin). **Tar of Alevin Output directory**; [WT01_P7_WT_Cerebellum_alevin.output.tar.gz](https://github.com/COMBINE-lab/salmon/files/5953855/WT01_P7_WT_Cerebellum_alevin.output.tar.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625
https://github.com/COMBINE-lab/salmon/issues/625:1118,Deployability,install,installed,1118,"vin (single-cell mode)?**; Alevin; **Describe the bug**; A clear and concise description of what the bug is.; Reanalyzing published Drop-Seq data the alevin analysis results in drastically fewer barcodes accepted than the published dataset. Published dataset contains 3000 CBs for the specific sample (authors report that 70% of [these] putative cells from WT mice met QC criteria), alevin result contains 459 CBs.; A similar highly abbreviated CB result was obtained with reanalysis of SRR8889412. **To Reproduce**; Steps and data to reproduce the behavior:. Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; Publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6925218/#; Specific Sample: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3720936. Alevin was run using no special parameters with the --dropseq flags. The only significant protocol deviation was in index construction (see below). Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Salmon was run in stock docker container; * Which reference (e.g. transcriptome) was used?; Full decoy Index generated on Gencode M25 per Alevin Velocity tutorial with a k=17 (dataset has 50bp R2 Reads); Introns were extracted with 49bp flanking sequence. ; ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz. * Which read files were used?; Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; * Which which program options were used?; --dropseq -l ISR. **Expected behavior**; A clear and concise description of what you expected to happen.; Cell calls should be ballpark similar to published result (3000 original vs. 459 alevin). **Tar of Alevin Output directory**; [WT01_P7_WT_Cerebellum_alevin.output.tar.gz](https://github.com/COMBINE-lab/salmon/files/5953855/WT01_P7_WT_Cerebellum_alevin.output.tar.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625
https://github.com/COMBINE-lab/salmon/issues/625:932,Integrability,protocol,protocol,932,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin; **Describe the bug**; A clear and concise description of what the bug is.; Reanalyzing published Drop-Seq data the alevin analysis results in drastically fewer barcodes accepted than the published dataset. Published dataset contains 3000 CBs for the specific sample (authors report that 70% of [these] putative cells from WT mice met QC criteria), alevin result contains 459 CBs.; A similar highly abbreviated CB result was obtained with reanalysis of SRR8889412. **To Reproduce**; Steps and data to reproduce the behavior:. Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; Publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6925218/#; Specific Sample: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3720936. Alevin was run using no special parameters with the --dropseq flags. The only significant protocol deviation was in index construction (see below). Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Salmon was run in stock docker container; * Which reference (e.g. transcriptome) was used?; Full decoy Index generated on Gencode M25 per Alevin Velocity tutorial with a k=17 (dataset has 50bp R2 Reads); Introns were extracted with 49bp flanking sequence. ; ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz. * Which read files were used?; Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; * Which which program options were used?; --dropseq -l ISR. **Expected behavior**; A clear and concise description of what you expected to happen.; Cell calls should be ballpark similar to published result (3000 original vs. 459 alevin). **Tar of Alevin Output directory**; [WT01_P7_WT_Cerebellum_alevin.output.tar.gz](https://github.com/COMBINE-lab/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625
https://github.com/COMBINE-lab/salmon/issues/625:118,Usability,clear,clear,118,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin; **Describe the bug**; A clear and concise description of what the bug is.; Reanalyzing published Drop-Seq data the alevin analysis results in drastically fewer barcodes accepted than the published dataset. Published dataset contains 3000 CBs for the specific sample (authors report that 70% of [these] putative cells from WT mice met QC criteria), alevin result contains 459 CBs.; A similar highly abbreviated CB result was obtained with reanalysis of SRR8889412. **To Reproduce**; Steps and data to reproduce the behavior:. Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; Publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6925218/#; Specific Sample: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3720936. Alevin was run using no special parameters with the --dropseq flags. The only significant protocol deviation was in index construction (see below). Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Salmon was run in stock docker container; * Which reference (e.g. transcriptome) was used?; Full decoy Index generated on Gencode M25 per Alevin Velocity tutorial with a k=17 (dataset has 50bp R2 Reads); Introns were extracted with 49bp flanking sequence. ; ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz. * Which read files were used?; Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; * Which which program options were used?; --dropseq -l ISR. **Expected behavior**; A clear and concise description of what you expected to happen.; Cell calls should be ballpark similar to published result (3000 original vs. 459 alevin). **Tar of Alevin Output directory**; [WT01_P7_WT_Cerebellum_alevin.output.tar.gz](https://github.com/COMBINE-lab/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625
https://github.com/COMBINE-lab/salmon/issues/625:1730,Usability,clear,clear,1730,"vin (single-cell mode)?**; Alevin; **Describe the bug**; A clear and concise description of what the bug is.; Reanalyzing published Drop-Seq data the alevin analysis results in drastically fewer barcodes accepted than the published dataset. Published dataset contains 3000 CBs for the specific sample (authors report that 70% of [these] putative cells from WT mice met QC criteria), alevin result contains 459 CBs.; A similar highly abbreviated CB result was obtained with reanalysis of SRR8889412. **To Reproduce**; Steps and data to reproduce the behavior:. Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; Publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6925218/#; Specific Sample: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3720936. Alevin was run using no special parameters with the --dropseq flags. The only significant protocol deviation was in index construction (see below). Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Salmon was run in stock docker container; * Which reference (e.g. transcriptome) was used?; Full decoy Index generated on Gencode M25 per Alevin Velocity tutorial with a k=17 (dataset has 50bp R2 Reads); Introns were extracted with 49bp flanking sequence. ; ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz. * Which read files were used?; Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; * Which which program options were used?; --dropseq -l ISR. **Expected behavior**; A clear and concise description of what you expected to happen.; Cell calls should be ballpark similar to published result (3000 original vs. 459 alevin). **Tar of Alevin Output directory**; [WT01_P7_WT_Cerebellum_alevin.output.tar.gz](https://github.com/COMBINE-lab/salmon/files/5953855/WT01_P7_WT_Cerebellum_alevin.output.tar.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625
https://github.com/COMBINE-lab/salmon/issues/628:1687,Availability,down,downstream,1687,"hree sections (CLS1, CLS2, CLS3) along each R1 read. Two common sequences (L1, L2) separate the three CLSs, and the presence of L1 and L2 relates to the way the capture oligonucleotide probes on the beads are constructed. By design, each CLS has one of 96 predefined sequences, which has a Hamming distance of at least four bases and an edit distance of at least two bases apart. A cell label is defined by the unique combination of predefined sequences in the three CLSs. Thus, the maximum possible number of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [j",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:3744,Availability,avail,available,3744,"LIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codename: sid. **Additional context**. This is my first run with BD Rhapsody data (and our own single cell data, for that matter). We're currently using SevenBridges for generating gene count tables, but I don't like the black-box nature of that service. I'm much more comfortable when I know what's going on under the hood, and can tweak things when I notice oddness.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:229,Deployability,integrat,integrated,229,"There has been a small amount of discussion about the BD Rhapsody barcode / sequence format (e.g. see [here](https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-551083490)), but it would be great if the option could be integrated into the code. BD has produced a [Single Cell Genomics Bioinformatics Handbook](https://www.bd.com/documents/guides/user-guides/GMX_BD-Rhapsody-genomics-informatics_UG_EN.pdf) which has the following information about the R1 read structure on pg 14:. 5' CLS1 - L1 - CLS2 - L2 - CLS3 - UMI - poly(T); 9 12 9 13 9 8 18; [1-9] [22-30] [44-52][53-60]. > **Cell Label** Information of the cell label is captured by bases in three sections (CLS1, CLS2, CLS3) along each R1 read. Two common sequences (L1, L2) separate the three CLSs, and the presence of L1 and L2 relates to the way the capture oligonucleotide probes on the beads are constructed. By design, each CLS has one of 96 predefined sequences, which has a Hamming distance of at least four bases and an edit distance of at least two bases apart. A cell label is defined by the unique combination of predefined sequences in the three CLSs. Thus, the maximum possible number of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:2151,Deployability,install,installed,2151,"ber of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:3824,Deployability,Release,Release,3824,"LIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codename: sid. **Additional context**. This is my first run with BD Rhapsody data (and our own single cell data, for that matter). We're currently using SevenBridges for generating gene count tables, but I don't like the black-box nature of that service. I'm much more comfortable when I know what's going on under the hood, and can tweak things when I notice oddness.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:229,Integrability,integrat,integrated,229,"There has been a small amount of discussion about the BD Rhapsody barcode / sequence format (e.g. see [here](https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-551083490)), but it would be great if the option could be integrated into the code. BD has produced a [Single Cell Genomics Bioinformatics Handbook](https://www.bd.com/documents/guides/user-guides/GMX_BD-Rhapsody-genomics-informatics_UG_EN.pdf) which has the following information about the R1 read structure on pg 14:. 5' CLS1 - L1 - CLS2 - L2 - CLS3 - UMI - poly(T); 9 12 9 13 9 8 18; [1-9] [22-30] [44-52][53-60]. > **Cell Label** Information of the cell label is captured by bases in three sections (CLS1, CLS2, CLS3) along each R1 read. Two common sequences (L1, L2) separate the three CLSs, and the presence of L1 and L2 relates to the way the capture oligonucleotide probes on the beads are constructed. By design, each CLS has one of 96 predefined sequences, which has a Hamming distance of at least four bases and an edit distance of at least two bases apart. A cell label is defined by the unique combination of predefined sequences in the three CLSs. Thus, the maximum possible number of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:2879,Security,validat,validation,2879,"the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codena",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:2893,Security,validat,validateMappings,2893,"the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codena",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:2929,Security,validat,validation,2929,"e identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codename: sid. **Additional context**. This is my first run with BD Rhapsody data (",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:2997,Security,validat,validateMappings,2997,"anscript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codename: sid. **Additional context**. This is my first run with BD Rhapsody data (and our own single cell data, for that matter). We're currently using SevenBrid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:2508,Testability,Log,Logs,2508,"-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:2546,Testability,log,logs,2546,"-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:349,Usability,guid,guides,349,"There has been a small amount of discussion about the BD Rhapsody barcode / sequence format (e.g. see [here](https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-551083490)), but it would be great if the option could be integrated into the code. BD has produced a [Single Cell Genomics Bioinformatics Handbook](https://www.bd.com/documents/guides/user-guides/GMX_BD-Rhapsody-genomics-informatics_UG_EN.pdf) which has the following information about the R1 read structure on pg 14:. 5' CLS1 - L1 - CLS2 - L2 - CLS3 - UMI - poly(T); 9 12 9 13 9 8 18; [1-9] [22-30] [44-52][53-60]. > **Cell Label** Information of the cell label is captured by bases in three sections (CLS1, CLS2, CLS3) along each R1 read. Two common sequences (L1, L2) separate the three CLSs, and the presence of L1 and L2 relates to the way the capture oligonucleotide probes on the beads are constructed. By design, each CLS has one of 96 predefined sequences, which has a Hamming distance of at least four bases and an edit distance of at least two bases apart. A cell label is defined by the unique combination of predefined sequences in the three CLSs. Thus, the maximum possible number of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/628:361,Usability,guid,guides,361,"There has been a small amount of discussion about the BD Rhapsody barcode / sequence format (e.g. see [here](https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-551083490)), but it would be great if the option could be integrated into the code. BD has produced a [Single Cell Genomics Bioinformatics Handbook](https://www.bd.com/documents/guides/user-guides/GMX_BD-Rhapsody-genomics-informatics_UG_EN.pdf) which has the following information about the R1 read structure on pg 14:. 5' CLS1 - L1 - CLS2 - L2 - CLS3 - UMI - poly(T); 9 12 9 13 9 8 18; [1-9] [22-30] [44-52][53-60]. > **Cell Label** Information of the cell label is captured by bases in three sections (CLS1, CLS2, CLS3) along each R1 read. Two common sequences (L1, L2) separate the three CLSs, and the presence of L1 and L2 relates to the way the capture oligonucleotide probes on the beads are constructed. By design, each CLS has one of 96 predefined sequences, which has a Hamming distance of at least four bases and an edit distance of at least two bases apart. A cell label is defined by the unique combination of predefined sequences in the three CLSs. Thus, the maximum possible number of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628
https://github.com/COMBINE-lab/salmon/issues/632:208,Testability,log,log,208,"Hi there, . I've being using salmon for a while but have started noticing this sometimes in my outputs, both during indexing and quantification. What does it mean? Is it an issue? It will really bulk out the log. . Thanks,. Dan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/632
https://github.com/COMBINE-lab/salmon/issues/633:1029,Security,validat,validateMappings,1029,"low. The Salmon version I used is `salmon 1.2.1`, and the species I am working on is a hexaploid plant. The transcriptome is highly duplicated from BUSCO result, and can be 100% mapped back to the genome. . I indexed the transcriptome using the full genome as the decoy sequence at the first place, and quantified one RNAseq sample. The code I used is in below; ```; # generate decoy sequence id; grep ""^>"" genome.fa | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. # combine transcriptome and genome; cat transcriptome.fa genome.fa > gen_trom.fa. # index the transcriptome using whole genome as decoy sequence; salmon index -t gen_trom.fa -d decoys.txt -p 12 -i salmon_index -k 31 --gencode --keepDuplicates. # quantification; salmon quant -i salmon_index -l A \; -r sample.fastq.gz -p 8 --validateMappings --fldMean 200 --fldSD 30 \; --seqBias -o quants; ```; And the mapping rate is about 70%, please see below; ```; ""num_bootstraps"": 0,; ""num_processed"": 22033243,; ""num_mapped"": 15597853,; ""num_decoy_fragments"": 918827,; ""num_dovetail_fragments"": 0,; ""num_fragments_filtered_vm"": 998490,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 8898919,; ""percent_mapped"": 70.7923613423589; ```; The mapping rate is lower than I expected, and then I used Hisat2 to align the sample to the genome. The code is below; ```; # build genome index; hisat2-build -p 8 -f genome.fa genome_index; # mapping; hisat2 -x genome_index -U sample.fastq.gz --rna-strandness R -p 8 -S sample.sam; ```; And the mapping rate is ~80%, please see below; ```; 22033243 reads; of these:; 22033243 (100.00%) were unpaired; of these:; 4263277 (19.35%) aligned 0 times; 11743820 (53.30%) aligned exactly 1 time; 6026146 (27.35%) aligned >1 times; 80.65% overall alignment rate; ```; This is expected because the the RNAseq data was generated from a variety that different from the one used for transcriptome and genome assembly. Then I indexed the transcriptome without the decoy sequence and quantifi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/633
https://github.com/COMBINE-lab/salmon/issues/633:2426,Security,validat,validateMappings,2426,"f genome.fa genome_index; # mapping; hisat2 -x genome_index -U sample.fastq.gz --rna-strandness R -p 8 -S sample.sam; ```; And the mapping rate is ~80%, please see below; ```; 22033243 reads; of these:; 22033243 (100.00%) were unpaired; of these:; 4263277 (19.35%) aligned 0 times; 11743820 (53.30%) aligned exactly 1 time; 6026146 (27.35%) aligned >1 times; 80.65% overall alignment rate; ```; This is expected because the the RNAseq data was generated from a variety that different from the one used for transcriptome and genome assembly. Then I indexed the transcriptome without the decoy sequence and quantified the same RNAseq sample using this index as below; ```; salmon index -t transcriptome.fa -p 8 -i salmon_index_v2 -k 31 --keepDuplicates; salmon quant -i salmon_index_v2 -l A \; -r sample.fastq.gz -p 8 --validateMappings --fldMean 200 --fldSD 30 \; --seqBias -o quants_v2; ```; And this time the mapping rate is ~89%, please see below; ```; ""num_processed"": 22033243,; ""num_mapped"": 19826611,; ""num_decoy_fragments"": 0,; ""num_dovetail_fragments"": 0,; ""num_fragments_filtered_vm"": 209109,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 53549316,; ""percent_mapped"": 89.98498768429141; ```; I found this is very confusing because I thought the mapping rate of Salmon should be lower than Hisat2 given the transcriptome can 100% map back to the genome. I thought it might has something to do with the highly duplicated transcriptome. I can see that there are `918827` reads were assigned to the decoy sequence in the first case, but it is only `918827 / 22033243 *100 = 4.1%` , but the mapping rate was `~20%` higher without the decoy sequence compare with using decoys. Could you please give some possible reasons, and should I use the index without decoy sequence?. Another thing that I don't understand is where I can find the number of unmapped reads. For example in the first case, the mapping rate is `15597853 / 22033243 *100 = 70.79%`, so I assume there should be `220332",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/633
https://github.com/COMBINE-lab/salmon/issues/634:332,Availability,down,down,332,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634
https://github.com/COMBINE-lab/salmon/issues/634:184,Energy Efficiency,adapt,adapters,184,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634
https://github.com/COMBINE-lab/salmon/issues/634:224,Energy Efficiency,adapt,adapters,224,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634
https://github.com/COMBINE-lab/salmon/issues/634:348,Energy Efficiency,adapt,adapter,348,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634
https://github.com/COMBINE-lab/salmon/issues/634:184,Integrability,adapter,adapters,184,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634
https://github.com/COMBINE-lab/salmon/issues/634:224,Integrability,adapter,adapters,224,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634
https://github.com/COMBINE-lab/salmon/issues/634:348,Integrability,adapter,adapter,348,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634
https://github.com/COMBINE-lab/salmon/issues/634:184,Modifiability,adapt,adapters,184,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634
https://github.com/COMBINE-lab/salmon/issues/634:224,Modifiability,adapt,adapters,224,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634
https://github.com/COMBINE-lab/salmon/issues/634:348,Modifiability,adapt,adapter,348,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634
https://github.com/COMBINE-lab/salmon/issues/636:176,Energy Efficiency,schedul,scheduler,176,"Hello,. I have a 10x scRNA-seq dataset I would like to run Alevin on, with bootstrapping. I am working on a cluster and submitting my script (I'll paste it below) with a Slurm scheduler. My issue is that the job runs for a couple of seconds, then gives me this massive “core” output - that is encrypted someway and I can’t read - and then an empty log and an empty alevin.log, so I don’t even have anything to use for troubleshooting. ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al; total 47106; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 4 amonaco_m hpc-ag-zinzen 4096 Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:1742,Modifiability,variab,variables,1742,"nzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:1771,Modifiability,variab,variables,1771,"aco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of salmon.; salmon v1.4.0. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:1876,Performance,queue,queue,1876,"aco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of salmon.; salmon v1.4.0. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:2981,Performance,perform,perform,2981," used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of salmon.; salmon v1.4.0. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index : create a salmon index; quant : quantify a sample; alevin : single cell analysis; swim : perform super-secret operation; quantmerge : merge multiple quantifications into a single file; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:293,Security,encrypt,encrypted,293,"Hello,. I have a 10x scRNA-seq dataset I would like to run Alevin on, with bootstrapping. I am working on a cluster and submitting my script (I'll paste it below) with a Slurm scheduler. My issue is that the job runs for a couple of seconds, then gives me this massive “core” output - that is encrypted someway and I can’t read - and then an empty log and an empty alevin.log, so I don’t even have anything to use for troubleshooting. ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al; total 47106; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 4 amonaco_m hpc-ag-zinzen 4096 Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:348,Testability,log,log,348,"Hello,. I have a 10x scRNA-seq dataset I would like to run Alevin on, with bootstrapping. I am working on a cluster and submitting my script (I'll paste it below) with a Slurm scheduler. My issue is that the job runs for a couple of seconds, then gives me this massive “core” output - that is encrypted someway and I can’t read - and then an empty log and an empty alevin.log, so I don’t even have anything to use for troubleshooting. ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al; total 47106; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 4 amonaco_m hpc-ag-zinzen 4096 Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:372,Testability,log,log,372,"Hello,. I have a 10x scRNA-seq dataset I would like to run Alevin on, with bootstrapping. I am working on a cluster and submitting my script (I'll paste it below) with a Slurm scheduler. My issue is that the job runs for a couple of seconds, then gives me this massive “core” output - that is encrypted someway and I can’t read - and then an empty log and an empty alevin.log, so I don’t even have anything to use for troubleshooting. ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al; total 47106; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 4 amonaco_m hpc-ag-zinzen 4096 Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:810,Testability,log,logs,810,"Hello,. I have a 10x scRNA-seq dataset I would like to run Alevin on, with bootstrapping. I am working on a cluster and submitting my script (I'll paste it below) with a Slurm scheduler. My issue is that the job runs for a couple of seconds, then gives me this massive “core” output - that is encrypted someway and I can’t read - and then an empty log and an empty alevin.log, so I don’t even have anything to use for troubleshooting. ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al; total 47106; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 4 amonaco_m hpc-ag-zinzen 4096 Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:1064,Testability,log,log,1064,", with bootstrapping. I am working on a cluster and submitting my script (I'll paste it below) with a Slurm scheduler. My issue is that the job runs for a couple of seconds, then gives me this massive “core” output - that is encrypted someway and I can’t read - and then an empty log and an empty alevin.log, so I don’t even have anything to use for troubleshooting. ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al; total 47106; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 4 amonaco_m hpc-ag-zinzen 4096 Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:1655,Testability,log,log,1655,"Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:1681,Testability,log,log,1681,"Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:1950,Testability,log,log,1950," 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of salmon.; salmon v1.4.0. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index : create a salmon index; quant : quantify a sa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/636:1977,Testability,log,logs,1977,"c-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of salmon.; salmon v1.4.0. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index : create a salmon index; quant : quantify a sample; alevin : single cell analysis;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636
https://github.com/COMBINE-lab/salmon/issues/637:489,Availability,error,error,489,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637
https://github.com/COMBINE-lab/salmon/issues/637:604,Availability,error,error,604,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637
https://github.com/COMBINE-lab/salmon/issues/637:780,Availability,down,down,780,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637
https://github.com/COMBINE-lab/salmon/issues/637:30,Deployability,install,install,30,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637
https://github.com/COMBINE-lab/salmon/issues/637:132,Deployability,install,install,132,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637
https://github.com/COMBINE-lab/salmon/issues/637:230,Deployability,upgrade,upgrade,230,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637
https://github.com/COMBINE-lab/salmon/issues/637:501,Performance,load,loading,501,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637
https://github.com/COMBINE-lab/salmon/issues/637:848,Usability,clear,clear,848,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637
https://github.com/COMBINE-lab/salmon/issues/638:540,Availability,error,error,540,"Hi,; this problem was considered in issue 104 and I have been following the instructions given there. I am running Salmon in alignment mode on bam files generated by STAR (unsorted and in transcriptome coordinates). I generated a transcriptome fasta file for Salmon (according to issue 104) with ; gffread -w all_transcripts.fa -g Homo_sapiens.GRCh38.dna.primary_assembly.fa Homo_sapiens.GRCh38.103.gtf; where the two genome files (fa and gtf) were used with STAR. ; When running Salmon with this fasta file, I get the following output and error message:. Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { all_transcripts.fa }; # [ libType ] => { A }; # [ threads ] => { 10 }; # [ alignments ] => { /groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Sal; mon/4010760_5_mono_S58_L002_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L003_R1_001.fastq_AT; _QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L004_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.b; am }; # [ output ] => { 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638
https://github.com/COMBINE-lab/salmon/issues/638:2995,Availability,fault,fault,2995,"_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool has been exhausted. 7187672 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated; processed 12000000 reads in current round; processed 21000000 reads in current round; processed 29000000 reads in current round; processed 38000000 reads in current round; processed 47000000 reads in current round; processed 56000000 reads in current round; processed 57000000 reads in current round/var/spool/slurmd/job599153/slurm_script: line 102: 17542 Segmentation fault singularity exec --bind $TMPDIR:/tmp,/groups:/groups,/work:/work /groups/arcsingularity/salmon_1.4.0.sif salmon quant -t all_transcripts.fa -l A -p 10 -a $in_FILES -o $outdir.salmon_quant. Salmon does not quantify transcript expression. I would appreciate any suggestions.; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638
https://github.com/COMBINE-lab/salmon/issues/638:2545,Energy Efficiency,allocate,allocated,2545,"_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool has been exhausted. 7187672 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated; processed 12000000 reads in current round; processed 21000000 reads in current round; processed 29000000 reads in current round; processed 38000000 reads in current round; processed 47000000 reads in current round; processed 56000000 reads in current round; processed 57000000 reads in current round/var/spool/slurmd/job599153/slurm_script: line 102: 17542 Segmentation fault singularity exec --bind $TMPDIR:/tmp,/groups:/groups,/work:/work /groups/arcsingularity/salmon_1.4.0.sif salmon quant -t all_transcripts.fa -l A -p 10 -a $in_FILES -o $outdir.salmon_quant. Salmon does not quantify transcript expression. I would appreciate any suggestions.; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638
https://github.com/COMBINE-lab/salmon/issues/638:2614,Energy Efficiency,allocate,allocated,2614,"_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool has been exhausted. 7187672 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated; processed 12000000 reads in current round; processed 21000000 reads in current round; processed 29000000 reads in current round; processed 38000000 reads in current round; processed 47000000 reads in current round; processed 56000000 reads in current round; processed 57000000 reads in current round/var/spool/slurmd/job599153/slurm_script: line 102: 17542 Segmentation fault singularity exec --bind $TMPDIR:/tmp,/groups:/groups,/work:/work /groups/arcsingularity/salmon_1.4.0.sif salmon quant -t all_transcripts.fa -l A -p 10 -a $in_FILES -o $outdir.salmon_quant. Salmon does not quantify transcript expression. I would appreciate any suggestions.; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638
https://github.com/COMBINE-lab/salmon/issues/638:546,Integrability,message,message,546,"Hi,; this problem was considered in issue 104 and I have been following the instructions given there. I am running Salmon in alignment mode on bam files generated by STAR (unsorted and in transcriptome coordinates). I generated a transcriptome fasta file for Salmon (according to issue 104) with ; gffread -w all_transcripts.fa -g Homo_sapiens.GRCh38.dna.primary_assembly.fa Homo_sapiens.GRCh38.103.gtf; where the two genome files (fa and gtf) were used with STAR. ; When running Salmon with this fasta file, I get the following output and error message:. Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { all_transcripts.fa }; # [ libType ] => { A }; # [ threads ] => { 10 }; # [ alignments ] => { /groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Sal; mon/4010760_5_mono_S58_L002_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L003_R1_001.fastq_AT; _QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L004_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.b; am }; # [ output ] => { 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638
https://github.com/COMBINE-lab/salmon/issues/638:2485,Performance,queue,queue,2485,"_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool has been exhausted. 7187672 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated; processed 12000000 reads in current round; processed 21000000 reads in current round; processed 29000000 reads in current round; processed 38000000 reads in current round; processed 47000000 reads in current round; processed 56000000 reads in current round; processed 57000000 reads in current round/var/spool/slurmd/job599153/slurm_script: line 102: 17542 Segmentation fault singularity exec --bind $TMPDIR:/tmp,/groups:/groups,/work:/work /groups/arcsingularity/salmon_1.4.0.sif salmon quant -t all_transcripts.fa -l A -p 10 -a $in_FILES -o $outdir.salmon_quant. Salmon does not quantify transcript expression. I would appreciate any suggestions.; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638
https://github.com/COMBINE-lab/salmon/issues/638:2338,Safety,detect,detected,2338,"_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool has been exhausted. 7187672 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated; processed 12000000 reads in current round; processed 21000000 reads in current round; processed 29000000 reads in current round; processed 38000000 reads in current round; processed 47000000 reads in current round; processed 56000000 reads in current round; processed 57000000 reads in current round/var/spool/slurmd/job599153/slurm_script: line 102: 17542 Segmentation fault singularity exec --bind $TMPDIR:/tmp,/groups:/groups,/work:/work /groups/arcsingularity/salmon_1.4.0.sif salmon quant -t all_transcripts.fa -l A -p 10 -a $in_FILES -o $outdir.salmon_quant. Salmon does not quantify transcript expression. I would appreciate any suggestions.; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638
https://github.com/COMBINE-lab/salmon/issues/638:1373,Testability,Log,Logs,1373,"Ch38.103.gtf; where the two genome files (fa and gtf) were used with STAR. ; When running Salmon with this fasta file, I get the following output and error message:. Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { all_transcripts.fa }; # [ libType ] => { A }; # [ threads ] => { 10 }; # [ alignments ] => { /groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Sal; mon/4010760_5_mono_S58_L002_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L003_R1_001.fastq_AT; _QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L004_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.b; am }; # [ output ] => { 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638
https://github.com/COMBINE-lab/salmon/issues/638:1490,Testability,log,logs,1490,"fasta file, I get the following output and error message:. Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { all_transcripts.fa }; # [ libType ] => { A }; # [ threads ] => { 10 }; # [ alignments ] => { /groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Sal; mon/4010760_5_mono_S58_L002_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L003_R1_001.fastq_AT; _QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L004_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.b; am }; # [ output ] => { 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638
https://github.com/COMBINE-lab/salmon/issues/639:113,Availability,down,downloaded,113,"I am using Ubuntu on my laptop.; I installed salmon by the command:-; conda install --channel bioconda salmon; I downloaded the SalmonTools scripts from; git clone https://github.com/COMBINE-lab/SalmonTools.git; But I am unable to run salmon or the salmon index.; I can even run :- salmon --version; it gives the above-said error.; I made the generateDecoyTranscritome.sh executable as well but still it did not work.; At first, it said that it needed libboost_filesystem.so.1.60.0 so I installed the entire boost 1.60.0. But it still shows this error.; Please help!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639
https://github.com/COMBINE-lab/salmon/issues/639:324,Availability,error,error,324,"I am using Ubuntu on my laptop.; I installed salmon by the command:-; conda install --channel bioconda salmon; I downloaded the SalmonTools scripts from; git clone https://github.com/COMBINE-lab/SalmonTools.git; But I am unable to run salmon or the salmon index.; I can even run :- salmon --version; it gives the above-said error.; I made the generateDecoyTranscritome.sh executable as well but still it did not work.; At first, it said that it needed libboost_filesystem.so.1.60.0 so I installed the entire boost 1.60.0. But it still shows this error.; Please help!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639
https://github.com/COMBINE-lab/salmon/issues/639:546,Availability,error,error,546,"I am using Ubuntu on my laptop.; I installed salmon by the command:-; conda install --channel bioconda salmon; I downloaded the SalmonTools scripts from; git clone https://github.com/COMBINE-lab/SalmonTools.git; But I am unable to run salmon or the salmon index.; I can even run :- salmon --version; it gives the above-said error.; I made the generateDecoyTranscritome.sh executable as well but still it did not work.; At first, it said that it needed libboost_filesystem.so.1.60.0 so I installed the entire boost 1.60.0. But it still shows this error.; Please help!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639
https://github.com/COMBINE-lab/salmon/issues/639:35,Deployability,install,installed,35,"I am using Ubuntu on my laptop.; I installed salmon by the command:-; conda install --channel bioconda salmon; I downloaded the SalmonTools scripts from; git clone https://github.com/COMBINE-lab/SalmonTools.git; But I am unable to run salmon or the salmon index.; I can even run :- salmon --version; it gives the above-said error.; I made the generateDecoyTranscritome.sh executable as well but still it did not work.; At first, it said that it needed libboost_filesystem.so.1.60.0 so I installed the entire boost 1.60.0. But it still shows this error.; Please help!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639
https://github.com/COMBINE-lab/salmon/issues/639:76,Deployability,install,install,76,"I am using Ubuntu on my laptop.; I installed salmon by the command:-; conda install --channel bioconda salmon; I downloaded the SalmonTools scripts from; git clone https://github.com/COMBINE-lab/SalmonTools.git; But I am unable to run salmon or the salmon index.; I can even run :- salmon --version; it gives the above-said error.; I made the generateDecoyTranscritome.sh executable as well but still it did not work.; At first, it said that it needed libboost_filesystem.so.1.60.0 so I installed the entire boost 1.60.0. But it still shows this error.; Please help!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639
https://github.com/COMBINE-lab/salmon/issues/639:487,Deployability,install,installed,487,"I am using Ubuntu on my laptop.; I installed salmon by the command:-; conda install --channel bioconda salmon; I downloaded the SalmonTools scripts from; git clone https://github.com/COMBINE-lab/SalmonTools.git; But I am unable to run salmon or the salmon index.; I can even run :- salmon --version; it gives the above-said error.; I made the generateDecoyTranscritome.sh executable as well but still it did not work.; At first, it said that it needed libboost_filesystem.so.1.60.0 so I installed the entire boost 1.60.0. But it still shows this error.; Please help!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639
https://github.com/COMBINE-lab/salmon/issues/640:466,Availability,down,downloaded,466,"Hello I'm a new in bioinformatics. when I upload my quant.sf files to R for using DESeq2, my file's indexes are weird. I thought my index should be formed like ENST00000456328.2 or ENSG00000223972.5; but my index name is; ""ENST00000456328.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000362751.1|DDX11L1-202|DDX11L1|1657|processed_transcript|"". So I think that's why I wasn't able to upload my quantificated files to R using tximport(). I used the index that I downloaded from gencode ""gencode.v37.annotation.gtf.gz""; and I used the gene reference ""gencode.v37.transcripts.fa"". ![image](https://user-images.githubusercontent.com/80821527/111452633-112c8680-8756-11eb-84c6-d654219f56bb.png); ![image](https://user-images.githubusercontent.com/80821527/111452674-1ab5ee80-8756-11eb-8648-fdffad002745.png). thank you for helping me",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/640
https://github.com/COMBINE-lab/salmon/issues/641:332,Availability,error,error,332,"We use Salmon a lot in my lab. It's a great tool. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I am running salmon quant using dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"", i.e. salmon (selective-alignment-based) v1.4.0. **Describe the bug**; When I run salmon I exits with an error code of 137. any idea what this means? I also noticed that the output directory is not created. **To Reproduce**; I am running the container on app.terra.bio, unfortunately, I can not share the workspace because the data is from identifiable human subjects. Bellow, I include the log file showing how I ran salmon. I think the bug may have something to do with the run time environment. Know what salmon exit codes mean would really help me figure out where my bug is. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:955,Availability,down,downloaded,955,"We use Salmon a lot in my lab. It's a great tool. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I am running salmon quant using dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"", i.e. salmon (selective-alignment-based) v1.4.0. **Describe the bug**; When I run salmon I exits with an error code of 137. any idea what this means? I also noticed that the output directory is not created. **To Reproduce**; I am running the container on app.terra.bio, unfortunately, I can not share the workspace because the data is from identifiable human subjects. Bellow, I include the log file showing how I ran salmon. I think the bug may have something to do with the run time environment. Know what salmon exit codes mean would really help me figure out where my bug is. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:2225,Availability,recover,recoverOrphans,2225,"ise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:3069,Availability,recover,recoverOrphans,3069,"f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:4971,Availability,recover,recoverOrphans,4971,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:5091,Availability,echo,echo,5091,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:5175,Availability,echo,echo,5175,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:5188,Availability,ERROR,ERROR,5188,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:5212,Availability,ERROR,ERROR,5212,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:934,Deployability,install,installed,934,"We use Salmon a lot in my lab. It's a great tool. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I am running salmon quant using dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"", i.e. salmon (selective-alignment-based) v1.4.0. **Describe the bug**; When I run salmon I exits with an error code of 137. any idea what this means? I also noticed that the output directory is not created. **To Reproduce**; I am running the container on app.terra.bio, unfortunately, I can not share the workspace because the data is from identifiable human subjects. Bellow, I include the log file showing how I ran salmon. I think the bug may have something to do with the run time environment. Know what salmon exit codes mean would really help me figure out where my bug is. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:3954,Performance,Load,Loading,3954,"5a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:4024,Performance,Load,Loading,4024,"tq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --ra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:4102,Performance,Load,Loading,4102,"## [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:4247,Performance,Load,Loading,4247," 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:4376,Performance,Load,Loading,4376,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:2225,Safety,recover,recoverOrphans,2225,"ise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:3069,Safety,recover,recoverOrphans,3069,"f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:4971,Safety,recover,recoverOrphans,4971,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:1827,Security,secur,secure-,1827,"mon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:2033,Security,secur,secure-,2033," we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:2242,Security,validat,validateMappings,2242,"ise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:2623,Security,secur,secure-,2623,"bout the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:2849,Security,secur,secure-,2849,"astqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [202",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:3100,Security,validat,validateMappings,3100,"f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:3557,Security,validat,validateMappings,3557," libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_roo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:4570,Security,secur,secure-,4570,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:4778,Security,secur,secure-,4778,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:4988,Security,validat,validateMappings,4988,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:618,Testability,log,log,618,"We use Salmon a lot in my lab. It's a great tool. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I am running salmon quant using dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"", i.e. salmon (selective-alignment-based) v1.4.0. **Describe the bug**; When I run salmon I exits with an error code of 137. any idea what this means? I also noticed that the output directory is not created. **To Reproduce**; I am running the container on app.terra.bio, unfortunately, I can not share the workspace because the data is from identifiable human subjects. Bellow, I include the log file showing how I ran salmon. I think the bug may have something to do with the run time environment. Know what salmon exit codes mean would really help me figure out where my bug is. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:3249,Testability,Log,Logs,3249,"gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:3284,Testability,log,logs,3284,"ionBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; --------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/641:1254,Usability,clear,clear,1254,"4.0. **Describe the bug**; When I run salmon I exits with an error code of 137. any idea what this means? I also noticed that the output directory is not created. **To Reproduce**; I am running the container on app.terra.bio, unfortunately, I can not share the workspace because the data is from identifiable human subjects. Bellow, I include the log file showing how I ran salmon. I think the bug may have something to do with the run time environment. Know what salmon exit codes mean would really help me figure out where my bug is. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --se",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641
https://github.com/COMBINE-lab/salmon/issues/642:166,Availability,error,error,166,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It occurs when I run Salmon. **Describe the bug**; When I try to index I get an error; ```; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```; I asked for advice, and it was suggested that two entries in the fasta file had the same name. I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642
https://github.com/COMBINE-lab/salmon/issues/642:229,Availability,error,error,229,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It occurs when I run Salmon. **Describe the bug**; When I try to index I get an error; ```; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```; I asked for advice, and it was suggested that two entries in the fasta file had the same name. I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642
https://github.com/COMBINE-lab/salmon/issues/642:1839,Availability,error,error,1839," I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:29:34.653] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```. **Desktop (please complete the following information):**; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642
https://github.com/COMBINE-lab/salmon/issues/642:2145,Availability,error,error,2145," I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:29:34.653] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```. **Desktop (please complete the following information):**; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642
https://github.com/COMBINE-lab/salmon/issues/642:2432,Availability,avail,available,2432," I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:29:34.653] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```. **Desktop (please complete the following information):**; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642
https://github.com/COMBINE-lab/salmon/issues/642:972,Deployability,install,install,972,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It occurs when I run Salmon. **Describe the bug**; When I try to index I get an error; ```; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```; I asked for advice, and it was suggested that two entries in the fasta file had the same name. I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642
https://github.com/COMBINE-lab/salmon/issues/642:2501,Deployability,Release,Release,2501," I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:29:34.653] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```. **Desktop (please complete the following information):**; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642
https://github.com/COMBINE-lab/salmon/issues/642:542,Performance,load,loading,542,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It occurs when I run Salmon. **Describe the bug**; When I try to index I get an error; ```; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```; I asked for advice, and it was suggested that two entries in the fasta file had the same name. I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642
https://github.com/COMBINE-lab/salmon/issues/643:1231,Availability,reboot,rebooted,1231,"ve didn't seem to work, and this tutorial was recommended in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html ) for preparing transcriptome indices (mapping-based mode) ). Since my samples are from humans, I replaced the mouse-files with the (still) current Gencode files for human (v37), and everything seemed to work well until the last step:. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. I left my machine alone for almost 8 h (no other programs, nothing to disturb it). When I finally had a look at it, the terminal was still in Round0, the system monitor still showed some action, and the system was still responsive (no freeze or anything). When I had a look at the index directory, there were no changes in any files after the sub-directory ""twopaco_tmp"" was created, and this directory only contains a file called bifurcations.bin, which was 0 byes (after 8h of computing time). Therefore, I rebooted my system (if there went anything wrong that I couldn't see) and tried changing the parameters. . 1. I changed the number of threads to -p 6 since my machine is rather old, and maybe -p 12 was too much. 2. Since someone seemed to have a similar problem and would have tried changing the filter size next, I tried to change the filter size by adding --filterSize 2^39 (at the same time, I also added --keepDuplicates because I want to use the data to find differentially expressed isoforms later on). salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --keepDuplicates --filterSize 2^39 -i salmon_index --gencode. However, this didn't work and got killed. . I thought it might be due to the --filterSize argument and changed it to 39 (because maybe the 2^ is assumed automatically and it needs only the number after ^ ). And this got killed, too:. salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --filterSize 39 -i salmon_index --gencode. [2021-04-02 08:34:22.664] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotide",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:4110,Availability,avail,available,4110,"le is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq data using Salmon (that might need less computational power)?. The last lines of the output are:. [2021-04-02 08:46:48.282] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:4263,Availability,avail,available,4263," a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq data using Salmon (that might need less computational power)?. The last lines of the output are:. [2021-04-02 08:46:48.282] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|AC073539.7-201|AC073539.7|28|unprocessed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2021-04-02",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:3460,Deployability,install,installation,3460,"Filter size = 549755813888; Capacity = 2; Files: ; salmon_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Killed. After that, I stopped experimenting and used the original code with only 6 threads. . salmon index -t gentrome.fa.gz -d decoys.txt -p 6 -i salmon_index --gencode. This seemed to be working fine and got to Round 0 without any problems.; It created the ""twopaco_tmp"" directory about 5 minutes after starting and created a ""bifurcations.bin"" inside this directory. However, 4 hours have passed, and neither the file nor the directory have any new modifications (and the file is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:3521,Deployability,install,installation,3521,"---------------------------------------------------------------; Killed. After that, I stopped experimenting and used the original code with only 6 threads. . salmon index -t gentrome.fa.gz -d decoys.txt -p 6 -i salmon_index --gencode. This seemed to be working fine and got to Round 0 without any problems.; It created the ""twopaco_tmp"" directory about 5 minutes after starting and created a ""bifurcations.bin"" inside this directory. However, 4 hours have passed, and neither the file nor the directory have any new modifications (and the file is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:883,Energy Efficiency,monitor,monitor,883,"Hello,. I'm trying to create an index file with salmon (version 1.4.0) according to this tutorial here: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ (because I would like to find isoforms using isoformSwitchAnalyseR and the salmon files I already have didn't seem to work, and this tutorial was recommended in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html ) for preparing transcriptome indices (mapping-based mode) ). Since my samples are from humans, I replaced the mouse-files with the (still) current Gencode files for human (v37), and everything seemed to work well until the last step:. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. I left my machine alone for almost 8 h (no other programs, nothing to disturb it). When I finally had a look at it, the terminal was still in Round0, the system monitor still showed some action, and the system was still responsive (no freeze or anything). When I had a look at the index directory, there were no changes in any files after the sub-directory ""twopaco_tmp"" was created, and this directory only contains a file called bifurcations.bin, which was 0 byes (after 8h of computing time). Therefore, I rebooted my system (if there went anything wrong that I couldn't see) and tried changing the parameters. . 1. I changed the number of threads to -p 6 since my machine is rather old, and maybe -p 12 was too much. 2. Since someone seemed to have a similar problem and would have tried changing the filter size next, I tried to change the filter size by adding --filterSize 2^39 (at the same time, I also added --keepDuplicates because I want to use the data to find differentially expressed isoforms later on). salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --keepDuplicates --filterSize 2^39 -i salmon_index --gencode. However, this didn't work and got killed. . I thought it might be due to the --filterSize argument and changed it to 39 (because maybe the 2^ is assu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:3772,Energy Efficiency,Monitor,Monitor,3772,"6 -i salmon_index --gencode. This seemed to be working fine and got to Round 0 without any problems.; It created the ""twopaco_tmp"" directory about 5 minutes after starting and created a ""bifurcations.bin"" inside this directory. However, 4 hours have passed, and neither the file nor the directory have any new modifications (and the file is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an ind",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:3845,Energy Efficiency,Monitor,Monitor,3845,"any problems.; It created the ""twopaco_tmp"" directory about 5 minutes after starting and created a ""bifurcations.bin"" inside this directory. However, 4 hours have passed, and neither the file nor the directory have any new modifications (and the file is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:4913,Energy Efficiency,power,power,4913,", and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq data using Salmon (that might need less computational power)?. The last lines of the output are:. [2021-04-02 08:46:48.282] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|AC073539.7-201|AC073539.7|28|unprocessed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2021-04-02 08:48:32.206] [puff::index::jointLog] [warning] Removed 833 transcripts that were sequence duplicates of indexed transcripts.; [2021-04-02 08:48:32.207] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-04-02 08:48:33.535] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2021-04-02 08:48:33.536] [puff::index::jointLog] [info] Clipped poly-A tails from 1,833 transcripts; wrote 233807 cleaned references; [2021-04-02 08:50:46.347] [puff::index::jointLog] [info",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:2447,Security,Hash,Hash,2447," -p 12 was too much. 2. Since someone seemed to have a similar problem and would have tried changing the filter size next, I tried to change the filter size by adding --filterSize 2^39 (at the same time, I also added --keepDuplicates because I want to use the data to find differentially expressed isoforms later on). salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --keepDuplicates --filterSize 2^39 -i salmon_index --gencode. However, this didn't work and got killed. . I thought it might be due to the --filterSize argument and changed it to 39 (because maybe the 2^ is assumed automatically and it needs only the number after ^ ). And this got killed, too:. salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --filterSize 39 -i salmon_index --gencode. [2021-04-02 08:34:22.664] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2021-04-02 08:34:22.670] [puff::index::jointLog] [info] Clipped poly-A tails from 1,833 transcripts; wrote 233807 cleaned references; Threads = 6; Vertex length = 31; Hash functions = 5; Filter size = 549755813888; Capacity = 2; Files: ; salmon_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Killed. After that, I stopped experimenting and used the original code with only 6 threads. . salmon index -t gentrome.fa.gz -d decoys.txt -p 6 -i salmon_index --gencode. This seemed to be working fine and got to Round 0 without any problems.; It created the ""twopaco_tmp"" directory about 5 minutes after starting and created a ""bifurcations.bin"" inside this directory. However, 4 hours have passed, and neither the file nor the directory have any new modifications (and the file is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:6063,Security,Hash,Hash,6063," the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq data using Salmon (that might need less computational power)?. The last lines of the output are:. [2021-04-02 08:46:48.282] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|AC073539.7-201|AC073539.7|28|unprocessed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2021-04-02 08:48:32.206] [puff::index::jointLog] [warning] Removed 833 transcripts that were sequence duplicates of indexed transcripts.; [2021-04-02 08:48:32.207] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-04-02 08:48:33.535] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2021-04-02 08:48:33.536] [puff::index::jointLog] [info] Clipped poly-A tails from 1,833 transcripts; wrote 233807 cleaned references; [2021-04-02 08:50:46.347] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2021-04-02 08:51:54.414] [puff::index::jointLog] [info] ntHll estimated 2628453213 distinct k-mers, setting filter size to 2^36; Threads = 6; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files: ; salmon_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass	Filling	Filtering. Thank you very much and happy Easter holidays :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/643:942,Usability,responsiv,responsive,942,"Hello,. I'm trying to create an index file with salmon (version 1.4.0) according to this tutorial here: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ (because I would like to find isoforms using isoformSwitchAnalyseR and the salmon files I already have didn't seem to work, and this tutorial was recommended in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html ) for preparing transcriptome indices (mapping-based mode) ). Since my samples are from humans, I replaced the mouse-files with the (still) current Gencode files for human (v37), and everything seemed to work well until the last step:. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. I left my machine alone for almost 8 h (no other programs, nothing to disturb it). When I finally had a look at it, the terminal was still in Round0, the system monitor still showed some action, and the system was still responsive (no freeze or anything). When I had a look at the index directory, there were no changes in any files after the sub-directory ""twopaco_tmp"" was created, and this directory only contains a file called bifurcations.bin, which was 0 byes (after 8h of computing time). Therefore, I rebooted my system (if there went anything wrong that I couldn't see) and tried changing the parameters. . 1. I changed the number of threads to -p 6 since my machine is rather old, and maybe -p 12 was too much. 2. Since someone seemed to have a similar problem and would have tried changing the filter size next, I tried to change the filter size by adding --filterSize 2^39 (at the same time, I also added --keepDuplicates because I want to use the data to find differentially expressed isoforms later on). salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --keepDuplicates --filterSize 2^39 -i salmon_index --gencode. However, this didn't work and got killed. . I thought it might be due to the --filterSize argument and changed it to 39 (because maybe the 2^ is assu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643
https://github.com/COMBINE-lab/salmon/issues/644:1145,Availability,error,error,1145,"Hey,. I'm pretty new to RNA-seq so hope this question is formatted okay! . I've carried out my RNA-seq analysis using STAR into feature counts but wanted to redo the analysis using Salmon as everything I'm reading says its the way forward! I've tried to create a genome index using the following files. ``; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/cdna/Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz; ``; Then I created the decoy file and the combined file them using the following. ; `; grep ""^>"" <(zcat Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz) | cut -d "" "" -f 1 > decoys.txt; cat Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz > gentrome.fa.gz; `; And finally ran the index using ; `./salmon index -t /data/fcr18ab/Refrence/New_Refrence_Files/gentrome.fa.gz -d /data/fcr18ab/Refrence/New_Refrence_Files/decoys.txt -p 1 -i /fastdata/fcr18ab/Adrian_salmon_index/salmon_index `. The error I get is shown below in the file. It says it can't find any of the decoy sequences in the combined file, but I have searched through them and they are there?. [Super_Low.txt](https://github.com/COMBINE-lab/salmon/files/6254711/Super_Low.txt). Sorry if this is a super simple issue. The cell line is a cancer cell which has not got defined chromosomes. I'm sure its me messing up somewhere but I can't figure out where!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/644
https://github.com/COMBINE-lab/salmon/issues/644:339,Deployability,release,release-,339,"Hey,. I'm pretty new to RNA-seq so hope this question is formatted okay! . I've carried out my RNA-seq analysis using STAR into feature counts but wanted to redo the analysis using Salmon as everything I'm reading says its the way forward! I've tried to create a genome index using the following files. ``; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/cdna/Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz; ``; Then I created the decoy file and the combined file them using the following. ; `; grep ""^>"" <(zcat Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz) | cut -d "" "" -f 1 > decoys.txt; cat Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz > gentrome.fa.gz; `; And finally ran the index using ; `./salmon index -t /data/fcr18ab/Refrence/New_Refrence_Files/gentrome.fa.gz -d /data/fcr18ab/Refrence/New_Refrence_Files/decoys.txt -p 1 -i /fastdata/fcr18ab/Adrian_salmon_index/salmon_index `. The error I get is shown below in the file. It says it can't find any of the decoy sequences in the combined file, but I have searched through them and they are there?. [Super_Low.txt](https://github.com/COMBINE-lab/salmon/files/6254711/Super_Low.txt). Sorry if this is a super simple issue. The cell line is a cancer cell which has not got defined chromosomes. I'm sure its me messing up somewhere but I can't figure out where!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/644
https://github.com/COMBINE-lab/salmon/issues/644:470,Deployability,release,release-,470,"Hey,. I'm pretty new to RNA-seq so hope this question is formatted okay! . I've carried out my RNA-seq analysis using STAR into feature counts but wanted to redo the analysis using Salmon as everything I'm reading says its the way forward! I've tried to create a genome index using the following files. ``; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/cdna/Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz; ``; Then I created the decoy file and the combined file them using the following. ; `; grep ""^>"" <(zcat Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz) | cut -d "" "" -f 1 > decoys.txt; cat Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz > gentrome.fa.gz; `; And finally ran the index using ; `./salmon index -t /data/fcr18ab/Refrence/New_Refrence_Files/gentrome.fa.gz -d /data/fcr18ab/Refrence/New_Refrence_Files/decoys.txt -p 1 -i /fastdata/fcr18ab/Adrian_salmon_index/salmon_index `. The error I get is shown below in the file. It says it can't find any of the decoy sequences in the combined file, but I have searched through them and they are there?. [Super_Low.txt](https://github.com/COMBINE-lab/salmon/files/6254711/Super_Low.txt). Sorry if this is a super simple issue. The cell line is a cancer cell which has not got defined chromosomes. I'm sure its me messing up somewhere but I can't figure out where!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/644
https://github.com/COMBINE-lab/salmon/issues/644:1419,Usability,simpl,simple,1419,"Hey,. I'm pretty new to RNA-seq so hope this question is formatted okay! . I've carried out my RNA-seq analysis using STAR into feature counts but wanted to redo the analysis using Salmon as everything I'm reading says its the way forward! I've tried to create a genome index using the following files. ``; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/cdna/Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz; ``; Then I created the decoy file and the combined file them using the following. ; `; grep ""^>"" <(zcat Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz) | cut -d "" "" -f 1 > decoys.txt; cat Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz > gentrome.fa.gz; `; And finally ran the index using ; `./salmon index -t /data/fcr18ab/Refrence/New_Refrence_Files/gentrome.fa.gz -d /data/fcr18ab/Refrence/New_Refrence_Files/decoys.txt -p 1 -i /fastdata/fcr18ab/Adrian_salmon_index/salmon_index `. The error I get is shown below in the file. It says it can't find any of the decoy sequences in the combined file, but I have searched through them and they are there?. [Super_Low.txt](https://github.com/COMBINE-lab/salmon/files/6254711/Super_Low.txt). Sorry if this is a super simple issue. The cell line is a cancer cell which has not got defined chromosomes. I'm sure its me messing up somewhere but I can't figure out where!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/644
https://github.com/COMBINE-lab/salmon/issues/647:7792,Availability,error,errors,7792,": 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installed? bioconda. **Expected behavior**. Alevin should run to completion, with no errors. **Desktop :**; - OS: OSX; - Version: ProductName=Mac OS X, ProductVersion=10.15.7, BuildVersion=19H524. **Additional context**. The files are from a small test dataset - the reads have been subsampled and the genome reference sequence and annotation was filtered for the X chromosome. The index file was generated using the method describe here: https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:7707,Deployability,install,installed,7707,": 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installed? bioconda. **Expected behavior**. Alevin should run to completion, with no errors. **Desktop :**; - OS: OSX; - Version: ProductName=Mac OS X, ProductVersion=10.15.7, BuildVersion=19H524. **Additional context**. The files are from a small test dataset - the reads have been subsampled and the genome reference sequence and annotation was filtered for the X chromosome. The index file was generated using the method describe here: https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:4097,Performance,Load,Loading,4097,fo] Learned InvCov: 419.096 normfactor: 100.648; [2021-04-09 12:16:37.862] [alevinLog] [info] Total 195(has 201 low confidence) barcodes; [2021-04-09 12:16:37.883] [alevinLog] [info] Done True Barcode Sampling; [2021-04-09 12:16:37.884] [alevinLog] [info] Total 15.7% reads will be thrown away because of noisy Cellular barcodes.; [2021-04-09 12:16:37.892] [alevinLog] [info] Done populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -------------------------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:4167,Performance,Load,Loading,4167,2:16:37.862] [alevinLog] [info] Total 195(has 201 low confidence) barcodes; [2021-04-09 12:16:37.883] [alevinLog] [info] Done True Barcode Sampling; [2021-04-09 12:16:37.884] [alevinLog] [info] Total 15.7% reads will be thrown away because of noisy Cellular barcodes.; [2021-04-09 12:16:37.892] [alevinLog] [info] Done populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; --------------------------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:4245,Performance,Load,Loading,4245,barcodes; [2021-04-09 12:16:37.883] [alevinLog] [info] Done True Barcode Sampling; [2021-04-09 12:16:37.884] [alevinLog] [info] Total 15.7% reads will be thrown away because of noisy Cellular barcodes.; [2021-04-09 12:16:37.892] [alevinLog] [info] Done populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:4388,Performance,Load,Loading,4388,evinLog] [info] Total 15.7% reads will be thrown away because of noisy Cellular barcodes.; [2021-04-09 12:16:37.892] [alevinLog] [info] Done populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:4519,Performance,Load,Loading,4519,populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accu,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:4653,Performance,Load,Loading,4653,vinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:4895,Performance,Load,Loading,4895,"elist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] Firs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:5047,Performance,Load,Loading,5047,":37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:5190,Performance,Load,Loading,5190," [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Numbe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:5333,Performance,Load,Loading,5333,"----------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 18",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:5468,Performance,Load,Loading,5468,"---------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:5888,Performance,optimiz,optimizer,5888,"---------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:623,Security,validat,validation,623,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Exception thrown by Alevin because it was invoked improperly:. ```; Version Info: This is the most recent version of salmon.; Logs will be written to results/salmon/alevin/S1/logs; [2021-04-09 12:16:37.619] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-04-09 12:16:37.619] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-09 12:16:37.619] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-04-09 12:16:37.619] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:637,Security,validat,validateMappings,637,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Exception thrown by Alevin because it was invoked improperly:. ```; Version Info: This is the most recent version of salmon.; Logs will be written to results/salmon/alevin/S1/logs; [2021-04-09 12:16:37.619] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-04-09 12:16:37.619] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-09 12:16:37.619] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-04-09 12:16:37.619] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:673,Security,validat,validation,673,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Exception thrown by Alevin because it was invoked improperly:. ```; Version Info: This is the most recent version of salmon.; Logs will be written to results/salmon/alevin/S1/logs; [2021-04-09 12:16:37.619] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-04-09 12:16:37.619] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-09 12:16:37.619] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-04-09 12:16:37.619] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:741,Security,validat,validateMappings,741,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Exception thrown by Alevin because it was invoked improperly:. ```; Version Info: This is the most recent version of salmon.; Logs will be written to results/salmon/alevin/S1/logs; [2021-04-09 12:16:37.619] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-04-09 12:16:37.619] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-09 12:16:37.619] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-04-09 12:16:37.619] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:242,Testability,Log,Logs,242,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Exception thrown by Alevin because it was invoked improperly:. ```; Version Info: This is the most recent version of salmon.; Logs will be written to results/salmon/alevin/S1/logs; [2021-04-09 12:16:37.619] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-04-09 12:16:37.619] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-09 12:16:37.619] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-04-09 12:16:37.619] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:291,Testability,log,logs,291,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Exception thrown by Alevin because it was invoked improperly:. ```; Version Info: This is the most recent version of salmon.; Logs will be written to results/salmon/alevin/S1/logs; [2021-04-09 12:16:37.619] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-04-09 12:16:37.619] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-09 12:16:37.619] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-04-09 12:16:37.619] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:1756,Testability,test,tests,1756," of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:1822,Testability,test,tests,1822,"set to 0.65; [2021-04-09 12:16:37.619] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:1888,Testability,test,tests,1888,"f range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 400",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:1954,Testability,test,tests,1954,"unction with --hardFilter. Disabling range-factorized equivalence classes.; [2021-04-09 12:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:2043,Testability,test,tests,2043,"2:16:37.619] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found left boundary at 102; [2021-04-09 12:16:37.862] [alevinLog] [info] Gauss Corrected Bound",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:2109,Testability,test,tests,2109,"-alignment default of 0.35.; [2021-04-09 12:16:37.619] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found left boundary at 102; [2021-04-09 12:16:37.862] [alevinLog] [info] Gauss Corrected Boundary at 52; [2021-04-09 12:16:37.862] [alevinLog] [info] Learned In",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:2175,Testability,test,tests,2175,"[info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found left boundary at 102; [2021-04-09 12:16:37.862] [alevinLog] [info] Gauss Corrected Boundary at 52; [2021-04-09 12:16:37.862] [alevinLog] [info] Learned InvCov: 419.096 normfactor: 100.648; [2021-04-09 12:16:37.862] [alev",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:2241,Testability,test,tests,2241," Using default value of 0.6 for consensusSlack in Alevin; [2021-04-09 12:16:37.649] [alevinLog] [info] Found 45374 transcripts(+1 decoys, +0 short and +0 duplicate names in the index); [2021-04-09 12:16:37.702] [alevinLog] [info] Filled with 45374 txp to gene entries; ### alevin (dscRNA-seq quantification) v1.4.0; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ index ] => { results/salmon/index/GRCh38.p13 }; ### [ mates1 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R1_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R1_001.fastq.gz }; ### [ mates2 ] => { /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L001_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found left boundary at 102; [2021-04-09 12:16:37.862] [alevinLog] [info] Gauss Corrected Boundary at 52; [2021-04-09 12:16:37.862] [alevinLog] [info] Learned InvCov: 419.096 normfactor: 100.648; [2021-04-09 12:16:37.862] [alevinLog] [info] Total 195(has 201 low confidence) barcodes; [2021-04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:6318,Testability,Log,Log,6318,"ce sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done makin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:7955,Testability,test,test,7955,": 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installed? bioconda. **Expected behavior**. Alevin should run to completion, with no errors. **Desktop :**; - OS: OSX; - Version: ProductName=Mac OS X, ProductVersion=10.15.7, BuildVersion=19H524. **Additional context**. The files are from a small test dataset - the reads have been subsampled and the genome reference sequence and annotation was filtered for the X chromosome. The index file was generated using the method describe here: https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:3113,Usability,Learn,Learned,3113,sts/fastq/S1_L002_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L003_R2_001.fastq.gz /Users/james/GitHub/scrnaseq/.tests/fastq/S1_L004_R2_001.fastq.gz }; ### [ output ] => { results/salmon/alevin/S1 }; ### [ threads ] => { 1 }; ### [ tgMap ] => { results/eisar/GRCh38.p13/GRCh38.p13.tx2gene.tsv }; ### [ chromiumV3 ] => { }; ### [ mrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.mrna.txt }; ### [ rrna ] => { results/gffread/GRCh38.p13/GRCh38.p13.rrna.txt }. [2021-04-09 12:16:37.708] [alevinLog] [info] Found all transcripts to gene mappings; [2021-04-09 12:16:37.722] [alevinLog] [info] Processing barcodes files (if Present). [2021-04-09 12:16:37.728] [alevinLog] [info] Done barcode density calculation.; [2021-04-09 12:16:37.728] [alevinLog] [info] # Barcodes Used: 4000 / 4000.; [2021-04-09 12:16:37.729] [alevinLog] [info] Knee found left boundary at 102; [2021-04-09 12:16:37.862] [alevinLog] [info] Gauss Corrected Boundary at 52; [2021-04-09 12:16:37.862] [alevinLog] [info] Learned InvCov: 419.096 normfactor: 100.648; [2021-04-09 12:16:37.862] [alevinLog] [info] Total 195(has 201 low confidence) barcodes; [2021-04-09 12:16:37.883] [alevinLog] [info] Done True Barcode Sampling; [2021-04-09 12:16:37.884] [alevinLog] [info] Total 15.7% reads will be thrown away because of noisy Cellular barcodes.; [2021-04-09 12:16:37.892] [alevinLog] [info] Done populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading puffer,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:6521,Usability,usab,usable,6521,"; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files use",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:6711,Usability,usab,usable,6711,"41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/647:7096,Usability,Clear,Clearing,7096,"021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installed? bioconda. **Expected behavior**. Alevin should run to completion, with no errors. **Desktop :**; - OS: OSX; - Version: ProductName=Mac OS X, ProductVersion=10.15.7, BuildVersion=19H524. **Additional context**. The files are from a small test dataset - the reads have been subsampled and the genome reference sequence and annotation was filtered for the X chromosome. The index file was",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647
https://github.com/COMBINE-lab/salmon/issues/650:457,Availability,error,errors,457,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin single-cell mode. **Describe the bug**; Hi, I bumped into a problem following this tutorial [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650
https://github.com/COMBINE-lab/salmon/issues/650:477,Availability,Error,Error,477,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin single-cell mode. **Describe the bug**; Hi, I bumped into a problem following this tutorial [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650
https://github.com/COMBINE-lab/salmon/issues/650:502,Availability,error,error,502,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin single-cell mode. **Describe the bug**; Hi, I bumped into a problem following this tutorial [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650
https://github.com/COMBINE-lab/salmon/issues/650:738,Availability,down,down,738,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin single-cell mode. **Describe the bug**; Hi, I bumped into a problem following this tutorial [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650
https://github.com/COMBINE-lab/salmon/issues/650:1178,Availability,down,downloaded,1178,"vin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_pbmc_v3_S1_L003_R2_001.fastq.gz --chromiumV3 -i index -p 10 -o alevin_output --tgMap txp2gene.tsv --dumpBfh --noDedup --dumpBarcodeEq; `. **Expected behavior**; The bfh.txt file should be parsed. In other words, the li",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650
https://github.com/COMBINE-lab/salmon/issues/650:2316,Availability,error,error,2316,"ore than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_pbmc_v3_S1_L003_R2_001.fastq.gz --chromiumV3 -i index -p 10 -o alevin_output --tgMap txp2gene.tsv --dumpBfh --noDedup --dumpBarcodeEq; `. **Expected behavior**; The bfh.txt file should be parsed. In other words, the line `parser.read_bfh(""<PATH to alevin output folder>"", ""<PATH to t2g file>"")` should work without error, according to the tutorial below:; [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Screenshot of error:; ![image](https://user-images.githubusercontent.com/65479405/115109114-7f0edc80-9fa6-11eb-93f5-d0d5524f7d56.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Ubuntu Linux; ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu 20.04.2 LTS (64 bit). **Additional context**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650
https://github.com/COMBINE-lab/salmon/issues/650:2543,Availability,error,error,2543,"ore than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_pbmc_v3_S1_L003_R2_001.fastq.gz --chromiumV3 -i index -p 10 -o alevin_output --tgMap txp2gene.tsv --dumpBfh --noDedup --dumpBarcodeEq; `. **Expected behavior**; The bfh.txt file should be parsed. In other words, the line `parser.read_bfh(""<PATH to alevin output folder>"", ""<PATH to t2g file>"")` should work without error, according to the tutorial below:; [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Screenshot of error:; ![image](https://user-images.githubusercontent.com/65479405/115109114-7f0edc80-9fa6-11eb-93f5-d0d5524f7d56.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Ubuntu Linux; ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu 20.04.2 LTS (64 bit). **Additional context**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650
https://github.com/COMBINE-lab/salmon/issues/650:1157,Deployability,install,installed,1157,"vin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_pbmc_v3_S1_L003_R2_001.fastq.gz --chromiumV3 -i index -p 10 -o alevin_output --tgMap txp2gene.tsv --dumpBfh --noDedup --dumpBarcodeEq; `. **Expected behavior**; The bfh.txt file should be parsed. In other words, the li",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650
https://github.com/COMBINE-lab/salmon/issues/650:305,Security,hash,hash,305,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin single-cell mode. **Describe the bug**; Hi, I bumped into a problem following this tutorial [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650
https://github.com/COMBINE-lab/salmon/issues/651:383,Availability,down,downstream,383,"https://github.com/COMBINE-lab/salmon/issues/602#issuecomment-748729130. Having read this and also wanting to use salmon to quantify transcript abundances from direct RNA data I have been using the pipeline here: https://github.com/nanoporetech/pipeline-transcriptome-de . In this case --noErrorModel is used but not --NoLengthCorrection. The pipeline uses NumReads as the counts in downstream analysis but I was wondering if this estimation of transcript counts also tries to normalize the length bias typical of short-read RNA seq workflows? If not, I think NumReads is OK but if it does this also seems not useable like the default TPM output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/651
https://github.com/COMBINE-lab/salmon/issues/651:198,Deployability,pipeline,pipeline,198,"https://github.com/COMBINE-lab/salmon/issues/602#issuecomment-748729130. Having read this and also wanting to use salmon to quantify transcript abundances from direct RNA data I have been using the pipeline here: https://github.com/nanoporetech/pipeline-transcriptome-de . In this case --noErrorModel is used but not --NoLengthCorrection. The pipeline uses NumReads as the counts in downstream analysis but I was wondering if this estimation of transcript counts also tries to normalize the length bias typical of short-read RNA seq workflows? If not, I think NumReads is OK but if it does this also seems not useable like the default TPM output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/651
https://github.com/COMBINE-lab/salmon/issues/651:245,Deployability,pipeline,pipeline-transcriptome-de,245,"https://github.com/COMBINE-lab/salmon/issues/602#issuecomment-748729130. Having read this and also wanting to use salmon to quantify transcript abundances from direct RNA data I have been using the pipeline here: https://github.com/nanoporetech/pipeline-transcriptome-de . In this case --noErrorModel is used but not --NoLengthCorrection. The pipeline uses NumReads as the counts in downstream analysis but I was wondering if this estimation of transcript counts also tries to normalize the length bias typical of short-read RNA seq workflows? If not, I think NumReads is OK but if it does this also seems not useable like the default TPM output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/651
https://github.com/COMBINE-lab/salmon/issues/651:343,Deployability,pipeline,pipeline,343,"https://github.com/COMBINE-lab/salmon/issues/602#issuecomment-748729130. Having read this and also wanting to use salmon to quantify transcript abundances from direct RNA data I have been using the pipeline here: https://github.com/nanoporetech/pipeline-transcriptome-de . In this case --noErrorModel is used but not --NoLengthCorrection. The pipeline uses NumReads as the counts in downstream analysis but I was wondering if this estimation of transcript counts also tries to normalize the length bias typical of short-read RNA seq workflows? If not, I think NumReads is OK but if it does this also seems not useable like the default TPM output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/651
https://github.com/COMBINE-lab/salmon/issues/652:3446,Deployability,release,release,3446,"gs. [2021-04-16 16:57:15.493] [jointLog] [info] Mapping rate = 0.0417748%. [2021-04-16 16:57:15.493] [jointLog] [info] finished quantifyLibrary(); [2021-04-16 16:57:15.535] [jointLog] [info] Starting optimizer; [2021-04-16 16:57:15.564] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-04-16 16:57:15.568] [jointLog] [info] iteration = 0 | max rel diff. = 6.66952; [2021-04-16 16:57:16.080] [jointLog] [info] iteration = 100 | max rel diff. = 0.0161125; [2021-04-16 16:57:16.555] [jointLog] [info] iteration = 194 | max rel diff. = 0.000157223; [2021-04-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:9147,Deployability,release,release,9147,"; [2021-04-20 10:11:46.842] [jointLog] [info] iteration = 1,000 | max rel diff. = 2.40606; [2021-04-20 10:11:47.548] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.715333; [2021-04-20 10:11:48.250] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.181266; [2021-04-20 10:11:48.938] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.152511; [2021-04-20 10:11:49.636] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.11611; [2021-04-20 10:11:50.315] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.482892; [2021-04-20 10:11:51.013] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0388567; [2021-04-20 10:11:51.673] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.518366; [2021-04-20 10:11:52.333] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.117083; [2021-04-20 10:11:53.007] [jointLog] [info] iteration = 1,900 | max rel diff. = 0.306961; [2021-04-20 10:11:53.694] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.078216; [2021-04-20 10:11:54.354] [jointLog] [info] iteration = 2,100 | max rel diff. = 1.17575; [2021-04-20 10:11:54.521] [jointLog] [info] iteration = 2,125 | max rel diff. = 0.00514978; [2021-04-20 10:11:54.541] [jointLog] [info] Finished optimizer; [2021-04-20 10:11:54.541] [jointLog] [info] writing output. [2021-04-20 10:11:54.750] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-20 10:11:54.845] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-20 10:11:54.846] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-20 10:11:55.040] [jointLog] [info] Aggregating expressions to gene level; [2021-04-20 10:11:55.126] [jointLog] [info] done; ````. So, are there some bugs in version 0.14.1 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:4025,Integrability,protocol,protocol,4025,"-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [joi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:962,Performance,Load,Loading,962,"Hi there, I'am using a old version (0.14.1) of salmon and often get a low mapping rate of my samples. This time I got the lowest ratio ever, 0.0417748%. . ```; [2021-04-16 16:40:11.804] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ig; nored.; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly; specified, it is being set to 0.65; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorizati; on. rangeFactorizationBins is being set to 4; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting cons; ensusSlack to 0.2.; [2021-04-16 16:40:11.804] [jointLog] [info] parsing read library format; [2021-04-16 16:40:11.804] [jointLog] [info] There is 1 library.; [2021-04-16 16:40:11.898] [jointLog] [info] Loading Quasi index; [2021-04-16 16:40:11.898] [jointLog] [info] Loading 32-bit quasi index; [2021-04-16 16:40:17.838] [jointLog] [info] done; [2021-04-16 16:40:17.838] [jointLog] [info] Index contained 77,654 targets; [2021-04-16 16:57:15.485] [fileLog] [info]; At end of round 0. Observed 25613538 total fragments (25613538 in most recent round). [2021-04-16 16:57:15.485] [jointLog] [info] Computed 1,663 rich equivalence classes for further processing; [2021-04-16 16:57:15.485] [jointLog] [info] Counted 10,700 total reads in the equivalence classes; [2021-04-16 16:57:15.488] [jointLog] [warning] 0.00162414% of fragments were shorter than the k used to build the index (21).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-16 16:57:15.488] [jointLog] [info] Number of mappings discarded because of alignment score : 86,602; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 124,571; [2021-04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:1027,Performance,Load,Loading,1027,".1) of salmon and often get a low mapping rate of my samples. This time I got the lowest ratio ever, 0.0417748%. . ```; [2021-04-16 16:40:11.804] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ig; nored.; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly; specified, it is being set to 0.65; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorizati; on. rangeFactorizationBins is being set to 4; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting cons; ensusSlack to 0.2.; [2021-04-16 16:40:11.804] [jointLog] [info] parsing read library format; [2021-04-16 16:40:11.804] [jointLog] [info] There is 1 library.; [2021-04-16 16:40:11.898] [jointLog] [info] Loading Quasi index; [2021-04-16 16:40:11.898] [jointLog] [info] Loading 32-bit quasi index; [2021-04-16 16:40:17.838] [jointLog] [info] done; [2021-04-16 16:40:17.838] [jointLog] [info] Index contained 77,654 targets; [2021-04-16 16:57:15.485] [fileLog] [info]; At end of round 0. Observed 25613538 total fragments (25613538 in most recent round). [2021-04-16 16:57:15.485] [jointLog] [info] Computed 1,663 rich equivalence classes for further processing; [2021-04-16 16:57:15.485] [jointLog] [info] Counted 10,700 total reads in the equivalence classes; [2021-04-16 16:57:15.488] [jointLog] [warning] 0.00162414% of fragments were shorter than the k used to build the index (21).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-16 16:57:15.488] [jointLog] [info] Number of mappings discarded because of alignment score : 86,602; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 124,571; [2021-04-16 16:57:15.488] [jointLog] [info] Num",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:2653,Performance,optimiz,optimizer,2653,"fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-16 16:57:15.488] [jointLog] [info] Number of mappings discarded because of alignment score : 86,602; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 124,571; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 32,784; [2021-04-16 16:57:15.493] [jointLog] [warning] Only 10700 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-04-16 16:57:15.493] [jointLog] [info] Mapping rate = 0.0417748%. [2021-04-16 16:57:15.493] [jointLog] [info] finished quantifyLibrary(); [2021-04-16 16:57:15.535] [jointLog] [info] Starting optimizer; [2021-04-16 16:57:15.564] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-04-16 16:57:15.568] [jointLog] [info] iteration = 0 | max rel diff. = 6.66952; [2021-04-16 16:57:16.080] [jointLog] [info] iteration = 100 | max rel diff. = 0.0161125; [2021-04-16 16:57:16.555] [jointLog] [info] iteration = 194 | max rel diff. = 0.000157223; [2021-04-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information du",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:3079,Performance,optimiz,optimizer,3079," are best-mapped to decoys : 0; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 32,784; [2021-04-16 16:57:15.493] [jointLog] [warning] Only 10700 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-04-16 16:57:15.493] [jointLog] [info] Mapping rate = 0.0417748%. [2021-04-16 16:57:15.493] [jointLog] [info] finished quantifyLibrary(); [2021-04-16 16:57:15.535] [jointLog] [info] Starting optimizer; [2021-04-16 16:57:15.564] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-04-16 16:57:15.568] [jointLog] [info] iteration = 0 | max rel diff. = 6.66952; [2021-04-16 16:57:16.080] [jointLog] [info] iteration = 100 | max rel diff. = 0.0161125; [2021-04-16 16:57:16.555] [jointLog] [info] iteration = 194 | max rel diff. = 0.000157223; [2021-04-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:4902,Performance,Load,Loading,4902,"z, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [jointLog] [info] done; [2021-04-20 10:09:05.198] [jointLog] [info] Index contained 77,653 targets; [2021-04-20 10:09:05.266] [jointLog] [info] Number of decoys : 0; [2021-04-20 10:09:05.902] [jointLog] [info] Automatically detected most likely library type as IU. [2021-04-20 10:11:39.181] [fileLog] [info]; At end of round 0. Observed 25525591 total fragments (25525591 in most recent round). [2021-04-20 10:11:39.181] [jointLog] [info] Computed 111,080 rich equivalence classes for further processing; [2021-04-20 10:11:39.181] [jointLog] [info] Counted 19,682,132 total reads in the equivalence classes; [2021-04-20 10:11:39.190] [jointLog] [warning] 0.00192356% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-20 10:11:39.190] [jointLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:4972,Performance,Load,Loading,4972," a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [jointLog] [info] done; [2021-04-20 10:09:05.198] [jointLog] [info] Index contained 77,653 targets; [2021-04-20 10:09:05.266] [jointLog] [info] Number of decoys : 0; [2021-04-20 10:09:05.902] [jointLog] [info] Automatically detected most likely library type as IU. [2021-04-20 10:11:39.181] [fileLog] [info]; At end of round 0. Observed 25525591 total fragments (25525591 in most recent round). [2021-04-20 10:11:39.181] [jointLog] [info] Computed 111,080 rich equivalence classes for further processing; [2021-04-20 10:11:39.181] [jointLog] [info] Counted 19,682,132 total reads in the equivalence classes; [2021-04-20 10:11:39.190] [jointLog] [warning] 0.00192356% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-20 10:11:39.190] [jointLog] [info] Number of mappings discarded because of alignment scor",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:6583,Performance,optimiz,optimizer,6583,"nted 19,682,132 total reads in the equivalence classes; [2021-04-20 10:11:39.190] [jointLog] [warning] 0.00192356% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-20 10:11:39.190] [jointLog] [info] Number of mappings discarded because of alignment score : 17,018,803; [2021-04-20 10:11:39.190] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,750,387; [2021-04-20 10:11:39.190] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-04-20 10:11:39.190] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 234,041; [2021-04-20 10:11:39.190] [jointLog] [info] Mapping rate = 77.1074%. [2021-04-20 10:11:39.190] [jointLog] [info] finished quantifyLibrary(); [2021-04-20 10:11:39.193] [jointLog] [info] Starting optimizer; [2021-04-20 10:11:39.263] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-04-20 10:11:39.273] [jointLog] [info] iteration = 0 | max rel diff. = 14720; [2021-04-20 10:11:40.059] [jointLog] [info] iteration = 100 | max rel diff. = 11.9398; [2021-04-20 10:11:40.838] [jointLog] [info] iteration = 200 | max rel diff. = 8.95043; [2021-04-20 10:11:41.616] [jointLog] [info] iteration = 300 | max rel diff. = 8.965; [2021-04-20 10:11:42.390] [jointLog] [info] iteration = 400 | max rel diff. = 2.77483; [2021-04-20 10:11:43.170] [jointLog] [info] iteration = 500 | max rel diff. = 18.7693; [2021-04-20 10:11:43.921] [jointLog] [info] iteration = 600 | max rel diff. = 2.07666; [2021-04-20 10:11:44.677] [jointLog] [info] iteration = 700 | max rel diff. = 0.395157; [2021-04-20 10:11:45.418] [jointLog] [info] iteration = 800 | max rel diff. = 0.905927; [2021-04-20 10:11:46.136] [jointLog] [info] iteration = 900 | max rel diff. = 1.75975; [2021-04-20 10:11:46.842] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:8780,Performance,optimiz,optimizer,8780,"; [2021-04-20 10:11:46.842] [jointLog] [info] iteration = 1,000 | max rel diff. = 2.40606; [2021-04-20 10:11:47.548] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.715333; [2021-04-20 10:11:48.250] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.181266; [2021-04-20 10:11:48.938] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.152511; [2021-04-20 10:11:49.636] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.11611; [2021-04-20 10:11:50.315] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.482892; [2021-04-20 10:11:51.013] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0388567; [2021-04-20 10:11:51.673] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.518366; [2021-04-20 10:11:52.333] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.117083; [2021-04-20 10:11:53.007] [jointLog] [info] iteration = 1,900 | max rel diff. = 0.306961; [2021-04-20 10:11:53.694] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.078216; [2021-04-20 10:11:54.354] [jointLog] [info] iteration = 2,100 | max rel diff. = 1.17575; [2021-04-20 10:11:54.521] [jointLog] [info] iteration = 2,125 | max rel diff. = 0.00514978; [2021-04-20 10:11:54.541] [jointLog] [info] Finished optimizer; [2021-04-20 10:11:54.541] [jointLog] [info] writing output. [2021-04-20 10:11:54.750] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-20 10:11:54.845] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-20 10:11:54.846] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-20 10:11:55.040] [jointLog] [info] Aggregating expressions to gene level; [2021-04-20 10:11:55.126] [jointLog] [info] done; ````. So, are there some bugs in version 0.14.1 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:3968,Safety,Detect,Detected,3968,"-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [joi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:5255,Safety,detect,detected,5255,"8.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [jointLog] [info] done; [2021-04-20 10:09:05.198] [jointLog] [info] Index contained 77,653 targets; [2021-04-20 10:09:05.266] [jointLog] [info] Number of decoys : 0; [2021-04-20 10:09:05.902] [jointLog] [info] Automatically detected most likely library type as IU. [2021-04-20 10:11:39.181] [fileLog] [info]; At end of round 0. Observed 25525591 total fragments (25525591 in most recent round). [2021-04-20 10:11:39.181] [jointLog] [info] Computed 111,080 rich equivalence classes for further processing; [2021-04-20 10:11:39.181] [jointLog] [info] Counted 19,682,132 total reads in the equivalence classes; [2021-04-20 10:11:39.190] [jointLog] [warning] 0.00192356% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-20 10:11:39.190] [jointLog] [info] Number of mappings discarded because of alignment score : 17,018,803; [2021-04-20 10:11:39.190] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,750,387; [2021-04-20 10:11:39.190] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-04-20 10:11:39.190",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:350,Security,validat,validateMappings,350,"Hi there, I'am using a old version (0.14.1) of salmon and often get a low mapping rate of my samples. This time I got the lowest ratio ever, 0.0417748%. . ```; [2021-04-16 16:40:11.804] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ig; nored.; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly; specified, it is being set to 0.65; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorizati; on. rangeFactorizationBins is being set to 4; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting cons; ensusSlack to 0.2.; [2021-04-16 16:40:11.804] [jointLog] [info] parsing read library format; [2021-04-16 16:40:11.804] [jointLog] [info] There is 1 library.; [2021-04-16 16:40:11.898] [jointLog] [info] Loading Quasi index; [2021-04-16 16:40:11.898] [jointLog] [info] Loading 32-bit quasi index; [2021-04-16 16:40:17.838] [jointLog] [info] done; [2021-04-16 16:40:17.838] [jointLog] [info] Index contained 77,654 targets; [2021-04-16 16:57:15.485] [fileLog] [info]; At end of round 0. Observed 25613538 total fragments (25613538 in most recent round). [2021-04-16 16:57:15.485] [jointLog] [info] Computed 1,663 rich equivalence classes for further processing; [2021-04-16 16:57:15.485] [jointLog] [info] Counted 10,700 total reads in the equivalence classes; [2021-04-16 16:57:15.488] [jointLog] [warning] 0.00162414% of fragments were shorter than the k used to build the index (21).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-16 16:57:15.488] [jointLog] [info] Number of mappings discarded because of alignment score : 86,602; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 124,571; [2021-04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:513,Security,validat,validateMappings,513,"Hi there, I'am using a old version (0.14.1) of salmon and often get a low mapping rate of my samples. This time I got the lowest ratio ever, 0.0417748%. . ```; [2021-04-16 16:40:11.804] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ig; nored.; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly; specified, it is being set to 0.65; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorizati; on. rangeFactorizationBins is being set to 4; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting cons; ensusSlack to 0.2.; [2021-04-16 16:40:11.804] [jointLog] [info] parsing read library format; [2021-04-16 16:40:11.804] [jointLog] [info] There is 1 library.; [2021-04-16 16:40:11.898] [jointLog] [info] Loading Quasi index; [2021-04-16 16:40:11.898] [jointLog] [info] Loading 32-bit quasi index; [2021-04-16 16:40:17.838] [jointLog] [info] done; [2021-04-16 16:40:17.838] [jointLog] [info] Index contained 77,654 targets; [2021-04-16 16:57:15.485] [fileLog] [info]; At end of round 0. Observed 25613538 total fragments (25613538 in most recent round). [2021-04-16 16:57:15.485] [jointLog] [info] Computed 1,663 rich equivalence classes for further processing; [2021-04-16 16:57:15.485] [jointLog] [info] Counted 10,700 total reads in the equivalence classes; [2021-04-16 16:57:15.488] [jointLog] [warning] 0.00162414% of fragments were shorter than the k used to build the index (21).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-16 16:57:15.488] [jointLog] [info] Number of mappings discarded because of alignment score : 86,602; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 124,571; [2021-04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:687,Security,validat,validateMappings,687,"Hi there, I'am using a old version (0.14.1) of salmon and often get a low mapping rate of my samples. This time I got the lowest ratio ever, 0.0417748%. . ```; [2021-04-16 16:40:11.804] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ig; nored.; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly; specified, it is being set to 0.65; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorizati; on. rangeFactorizationBins is being set to 4; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting cons; ensusSlack to 0.2.; [2021-04-16 16:40:11.804] [jointLog] [info] parsing read library format; [2021-04-16 16:40:11.804] [jointLog] [info] There is 1 library.; [2021-04-16 16:40:11.898] [jointLog] [info] Loading Quasi index; [2021-04-16 16:40:11.898] [jointLog] [info] Loading 32-bit quasi index; [2021-04-16 16:40:17.838] [jointLog] [info] done; [2021-04-16 16:40:17.838] [jointLog] [info] Index contained 77,654 targets; [2021-04-16 16:57:15.485] [fileLog] [info]; At end of round 0. Observed 25613538 total fragments (25613538 in most recent round). [2021-04-16 16:57:15.485] [jointLog] [info] Computed 1,663 rich equivalence classes for further processing; [2021-04-16 16:57:15.485] [jointLog] [info] Counted 10,700 total reads in the equivalence classes; [2021-04-16 16:57:15.488] [jointLog] [warning] 0.00162414% of fragments were shorter than the k used to build the index (21).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-16 16:57:15.488] [jointLog] [info] Number of mappings discarded because of alignment score : 86,602; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 124,571; [2021-04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:3580,Security,expose,exposes,3580,"6:57:15.535] [jointLog] [info] Starting optimizer; [2021-04-16 16:57:15.564] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-04-16 16:57:15.568] [jointLog] [info] iteration = 0 | max rel diff. = 6.66952; [2021-04-16 16:57:16.080] [jointLog] [info] iteration = 100 | max rel diff. = 0.0161125; [2021-04-16 16:57:16.555] [jointLog] [info] iteration = 194 | max rel diff. = 0.000157223; [2021-04-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:4505,Security,validat,validateMappings,4505,"salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [jointLog] [info] done; [2021-04-20 10:09:05.198] [jointLog] [info] Index contained 77,653 targets; [2021-04-20 10:09:05.266] [jointLog] [info] Number of decoys : 0; [2021-04-20 10:09:05.902] [jointLog] [info] Automatically detected most likely library type as IU. [2021-04-20 10:11:39.181] [fileLog] [info]; At end of round 0. Observed 25525591 total fragments (25525591 in most recent round). [2021-04-20 10:11:39.181] [jointLog] [info] Computed 111,080 rich equivalence classes f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/652:9281,Security,expose,exposes,9281,"; [2021-04-20 10:11:46.842] [jointLog] [info] iteration = 1,000 | max rel diff. = 2.40606; [2021-04-20 10:11:47.548] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.715333; [2021-04-20 10:11:48.250] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.181266; [2021-04-20 10:11:48.938] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.152511; [2021-04-20 10:11:49.636] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.11611; [2021-04-20 10:11:50.315] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.482892; [2021-04-20 10:11:51.013] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0388567; [2021-04-20 10:11:51.673] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.518366; [2021-04-20 10:11:52.333] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.117083; [2021-04-20 10:11:53.007] [jointLog] [info] iteration = 1,900 | max rel diff. = 0.306961; [2021-04-20 10:11:53.694] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.078216; [2021-04-20 10:11:54.354] [jointLog] [info] iteration = 2,100 | max rel diff. = 1.17575; [2021-04-20 10:11:54.521] [jointLog] [info] iteration = 2,125 | max rel diff. = 0.00514978; [2021-04-20 10:11:54.541] [jointLog] [info] Finished optimizer; [2021-04-20 10:11:54.541] [jointLog] [info] writing output. [2021-04-20 10:11:54.750] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-20 10:11:54.845] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-20 10:11:54.846] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-20 10:11:55.040] [jointLog] [info] Aggregating expressions to gene level; [2021-04-20 10:11:55.126] [jointLog] [info] done; ````. So, are there some bugs in version 0.14.1 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652
https://github.com/COMBINE-lab/salmon/issues/653:374,Availability,down,downloaded,374,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653
https://github.com/COMBINE-lab/salmon/issues/653:417,Availability,down,downloaded,417,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653
https://github.com/COMBINE-lab/salmon/issues/653:353,Deployability,install,installed,353,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653
https://github.com/COMBINE-lab/salmon/issues/653:498,Deployability,release,releases,498,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653
https://github.com/COMBINE-lab/salmon/issues/653:867,Deployability,release,release,867,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653
https://github.com/COMBINE-lab/salmon/issues/653:613,Security,validat,validateMappings,613,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653
https://github.com/COMBINE-lab/salmon/issues/653:110,Usability,clear,clear,110,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653
https://github.com/COMBINE-lab/salmon/issues/653:694,Usability,clear,clear,694,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653
https://github.com/COMBINE-lab/salmon/issues/654:516,Availability,down,downloaded,516,"Is it possible to use alevin with cell barcodes that have constant regions within them (see example below)?. bbbbbbccccccccccccbbbbbbcccccccccccc bbbbbb. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/654
https://github.com/COMBINE-lab/salmon/issues/654:495,Deployability,install,installed,495,"Is it possible to use alevin with cell barcodes that have constant regions within them (see example below)?. bbbbbbccccccccccccbbbbbbcccccccccccc bbbbbb. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/654
https://github.com/COMBINE-lab/salmon/issues/654:264,Usability,clear,clear,264,"Is it possible to use alevin with cell barcodes that have constant regions within them (see example below)?. bbbbbbccccccccccccbbbbbbcccccccccccc bbbbbb. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/654
https://github.com/COMBINE-lab/salmon/issues/654:707,Usability,clear,clear,707,"Is it possible to use alevin with cell barcodes that have constant regions within them (see example below)?. bbbbbbccccccccccccbbbbbbcccccccccccc bbbbbb. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/654
https://github.com/COMBINE-lab/salmon/issues/655:6680,Availability,fault,fault,6680,"0 0 22663523 427757 1037534 0 0 0 0; ```; The num_frags_with_concordant_consistent_mappings was high. The library format does indeed seem to be ISR. I was worried that including the premature RNA was causing a problem (e.g. if the reads emitted by these regions are caused by genomic DNA contamination). To rule out this possibility and experiment with an alternate tool to infer library format, I aligned the FASTQ files using HIAST2 and used RSeQC's infer_experiment.py python module using intronic and exonic features per gene in .bed format as input (http://rseqc.sourceforge.net/). In both cases, RSeQC was able to guess the correct library format (ISR):. ```; > rseqc.guess; SRR LibFormat Fraction of reads failed to determine Fraction of reads explained by 1++,1--,2+-,2-+ Fraction of reads explained by 1+-,1-+,2++,2-- features; 1: SRR9071838 This is PairEnd Data 0.0070 0.0096 0.9834 exonOnly; 2: SRR9071838 This is PairEnd Data 0.0012 0.0111 0.9877 intronOnly; 3: SRR9071839 This is PairEnd Data 0.0070 0.0095 0.9835 exonOnly; 4: SRR9071839 This is PairEnd Data 0.0012 0.0111 0.9877 intronOnly; 5: SRR9071840 This is PairEnd Data 0.0068 0.0128 0.9804 exonOnly; 6: SRR9071840 This is PairEnd Data 0.0009 0.0162 0.9829 intronOnly; 7: SRR9071841 This is PairEnd Data 0.0068 0.0133 0.9799 exonOnly; 8: SRR9071841 This is PairEnd Data 0.0011 0.0167 0.9823 intronOnly; 9: SRR9071842 This is PairEnd Data 0.0076 0.0115 0.9809 exonOnly; 10: SRR9071842 This is PairEnd Data 0.0011 0.0140 0.9849 intronOnly; 11: SRR9071843 This is PairEnd Data 0.0075 0.0097 0.9828 exonOnly; 12: SRR9071843 This is PairEnd Data 0.0012 0.0117 0.9871 intronOnly; 13: SRR9071844 This is PairEnd Data 0.0069 0.0127 0.9805 exonOnly; 14: SRR9071844 This is PairEnd Data 0.0011 0.0163 0.9827 intronOnly; 15: SRR9071845 This is PairEnd Data 0.0065 0.0125 0.9809 exonOnly; 16: SRR9071845 This is PairEnd Data 0.0010 0.0158 0.9832 intronOnly; ```. Any idea what could be happening here? Am I at fault? Your help is appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/655
https://github.com/COMBINE-lab/salmon/issues/655:272,Integrability,protocol,protocol,272,"The ability to guess RNAseq library format is very useful when quantifying numerous heterogeneous data sets. I tested Salmon's ability to guess library format using a public SRA dataset (PRJNA543304; PMID: 31216476). This dataset was generated using a paired-end stranded protocol (TruSeq Stranded Total RNA Library Prep Kit, Illumina, Cat. 20020597). Based on my understanding, the library format using Salmon's notation would be ISR. Briefly, with the help of several R packages (GenomicRanges, Biostrings, and rtracklayer) I generated my own FASTA file using the human genome sequence and exon annotations both from Ensembl. I extracted the sequences of both mature transcripts and their premature precursors. I was sure to get the reverse complement sequences of genes on the minus strand. I generated an index from this FASTA file without decoys (salmon index -k 31) and quantified the FASTQ files using the following sample code:. ```; # Shuffle FASTQ files; paste <(cat SRR9071838_1.fastq) <(cat SRR9071838_2.fastq) | paste - - - - | shuf --random-source=SRR9071838_1.fastq | \; awk -F '\t' -v std=""$SLURM_TMPDIR"" '{ OFS=""\n""; print $1,$3,$5,$7 > (std ""/SRR9071838_1.fastq""); print $2,$4,$6,$8 > (std ""/SRR9071838_2.fastq"") }'. # Quantify; ./software/salmon-1.4.0_linux_x86_64/bin/salmon quant -i ./shared_data/annotations/Salmon/noDecoys \; -o ./Salmon_out_final_shuf_a_noDecoys/SRR9071838 -l A -p 8 \; -1 $SLURM_TMPDIR/SRR9071838_1.fastq -2 $SLURM_TMPDIR/SRR9071838_2.fastq; ```; I then briefed over the resulting lib_format_counts.json files and noticed that in all but one case, Salmon inferred that the library format is IU, not the expected ISR. Here is a summary:. ```; > salmon.guess.auto; read_files expected_format compatible_fragment_ratio num_compatible_fragments num_assigned_fragments num_frags_with_concordant_consistent_mappings; 1: [SRR9071838_1.fastq, SRR9071838_2.fastq] IU 1.0 46378505 46378505 55523877; 2: [SRR9071839_1.fastq, SRR9071839_2.fastq] ISR 1.0 50070023 50070023",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/655
https://github.com/COMBINE-lab/salmon/issues/655:111,Testability,test,tested,111,"The ability to guess RNAseq library format is very useful when quantifying numerous heterogeneous data sets. I tested Salmon's ability to guess library format using a public SRA dataset (PRJNA543304; PMID: 31216476). This dataset was generated using a paired-end stranded protocol (TruSeq Stranded Total RNA Library Prep Kit, Illumina, Cat. 20020597). Based on my understanding, the library format using Salmon's notation would be ISR. Briefly, with the help of several R packages (GenomicRanges, Biostrings, and rtracklayer) I generated my own FASTA file using the human genome sequence and exon annotations both from Ensembl. I extracted the sequences of both mature transcripts and their premature precursors. I was sure to get the reverse complement sequences of genes on the minus strand. I generated an index from this FASTA file without decoys (salmon index -k 31) and quantified the FASTQ files using the following sample code:. ```; # Shuffle FASTQ files; paste <(cat SRR9071838_1.fastq) <(cat SRR9071838_2.fastq) | paste - - - - | shuf --random-source=SRR9071838_1.fastq | \; awk -F '\t' -v std=""$SLURM_TMPDIR"" '{ OFS=""\n""; print $1,$3,$5,$7 > (std ""/SRR9071838_1.fastq""); print $2,$4,$6,$8 > (std ""/SRR9071838_2.fastq"") }'. # Quantify; ./software/salmon-1.4.0_linux_x86_64/bin/salmon quant -i ./shared_data/annotations/Salmon/noDecoys \; -o ./Salmon_out_final_shuf_a_noDecoys/SRR9071838 -l A -p 8 \; -1 $SLURM_TMPDIR/SRR9071838_1.fastq -2 $SLURM_TMPDIR/SRR9071838_2.fastq; ```; I then briefed over the resulting lib_format_counts.json files and noticed that in all but one case, Salmon inferred that the library format is IU, not the expected ISR. Here is a summary:. ```; > salmon.guess.auto; read_files expected_format compatible_fragment_ratio num_compatible_fragments num_assigned_fragments num_frags_with_concordant_consistent_mappings; 1: [SRR9071838_1.fastq, SRR9071838_2.fastq] IU 1.0 46378505 46378505 55523877; 2: [SRR9071839_1.fastq, SRR9071839_2.fastq] ISR 1.0 50070023 50070023",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/655
https://github.com/COMBINE-lab/salmon/issues/658:54,Availability,down,downloaded,54,"Hi,; for a previous human deep mRNA-seq project I had downloaded the full decoy-aware hg38 salmon index from refgenie. I am now working on a new project and I see that the full index is no longer available on refgenie. Is this index available somewhere or do I need to construct it?; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/658
https://github.com/COMBINE-lab/salmon/issues/658:196,Availability,avail,available,196,"Hi,; for a previous human deep mRNA-seq project I had downloaded the full decoy-aware hg38 salmon index from refgenie. I am now working on a new project and I see that the full index is no longer available on refgenie. Is this index available somewhere or do I need to construct it?; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/658
https://github.com/COMBINE-lab/salmon/issues/658:233,Availability,avail,available,233,"Hi,; for a previous human deep mRNA-seq project I had downloaded the full decoy-aware hg38 salmon index from refgenie. I am now working on a new project and I see that the full index is no longer available on refgenie. Is this index available somewhere or do I need to construct it?; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/658
https://github.com/COMBINE-lab/salmon/issues/659:438,Integrability,protocol,protocol,438,"Hi, I've been using salmon v1.0.0 to quantify bulk transcripts from fastqs using the genocde v32 reference. Ive used it successfully on several cohorts but on my most recent I received the following warning in my log file (I also attached the entire file):. [2021-05-10 20:51:46.936] [jointLog] [warning] NOTE: Read Lib [[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /gcloud-shared/sample/lib_format_counts.json for details. Here is also the lib_formats_count.json:; {; ""read_files"": ""[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 43142675,; ""num_assigned_fragments"": 43142675,; ""num_frags_with_concordant_consistent_mappings"": 36380775,; ""num_frags_with_inconsistent_or_orphan_mappings"": 7777480,; ""strand_mapping_bias"": 0.5172763911708863,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 18818916,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17561859,; ""SF"": 2219340,; ""SR"": 5558140,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Here is the salmon command I've been using:. salmon --no-version-check quant -i /gcloud-shared/reference -l A -1 ${FASTQR1} -2 ${FASTQR2} \; --validateMappings --seqBias --gcBias --posBias --threads $(nproc) -o /gcloud-shared/sample. The whole process still produces quants files, but having never received this warning with other sample cohorts I want to be sure it's not affecting the results. Any idea why I might be getting this? Am I using the wrong lib type?. Thanks!. [ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6479118/ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659
https://github.com/COMBINE-lab/salmon/issues/659:381,Safety,Detect,Detected,381,"Hi, I've been using salmon v1.0.0 to quantify bulk transcripts from fastqs using the genocde v32 reference. Ive used it successfully on several cohorts but on my most recent I received the following warning in my log file (I also attached the entire file):. [2021-05-10 20:51:46.936] [jointLog] [warning] NOTE: Read Lib [[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /gcloud-shared/sample/lib_format_counts.json for details. Here is also the lib_formats_count.json:; {; ""read_files"": ""[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 43142675,; ""num_assigned_fragments"": 43142675,; ""num_frags_with_concordant_consistent_mappings"": 36380775,; ""num_frags_with_inconsistent_or_orphan_mappings"": 7777480,; ""strand_mapping_bias"": 0.5172763911708863,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 18818916,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17561859,; ""SF"": 2219340,; ""SR"": 5558140,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Here is the salmon command I've been using:. salmon --no-version-check quant -i /gcloud-shared/reference -l A -1 ${FASTQR1} -2 ${FASTQR2} \; --validateMappings --seqBias --gcBias --posBias --threads $(nproc) -o /gcloud-shared/sample. The whole process still produces quants files, but having never received this warning with other sample cohorts I want to be sure it's not affecting the results. Any idea why I might be getting this? Am I using the wrong lib type?. Thanks!. [ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6479118/ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659
https://github.com/COMBINE-lab/salmon/issues/659:1237,Security,validat,validateMappings,1237,"Hi, I've been using salmon v1.0.0 to quantify bulk transcripts from fastqs using the genocde v32 reference. Ive used it successfully on several cohorts but on my most recent I received the following warning in my log file (I also attached the entire file):. [2021-05-10 20:51:46.936] [jointLog] [warning] NOTE: Read Lib [[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /gcloud-shared/sample/lib_format_counts.json for details. Here is also the lib_formats_count.json:; {; ""read_files"": ""[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 43142675,; ""num_assigned_fragments"": 43142675,; ""num_frags_with_concordant_consistent_mappings"": 36380775,; ""num_frags_with_inconsistent_or_orphan_mappings"": 7777480,; ""strand_mapping_bias"": 0.5172763911708863,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 18818916,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17561859,; ""SF"": 2219340,; ""SR"": 5558140,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Here is the salmon command I've been using:. salmon --no-version-check quant -i /gcloud-shared/reference -l A -1 ${FASTQR1} -2 ${FASTQR2} \; --validateMappings --seqBias --gcBias --posBias --threads $(nproc) -o /gcloud-shared/sample. The whole process still produces quants files, but having never received this warning with other sample cohorts I want to be sure it's not affecting the results. Any idea why I might be getting this? Am I using the wrong lib type?. Thanks!. [ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6479118/ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659
https://github.com/COMBINE-lab/salmon/issues/659:213,Testability,log,log,213,"Hi, I've been using salmon v1.0.0 to quantify bulk transcripts from fastqs using the genocde v32 reference. Ive used it successfully on several cohorts but on my most recent I received the following warning in my log file (I also attached the entire file):. [2021-05-10 20:51:46.936] [jointLog] [warning] NOTE: Read Lib [[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /gcloud-shared/sample/lib_format_counts.json for details. Here is also the lib_formats_count.json:; {; ""read_files"": ""[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 43142675,; ""num_assigned_fragments"": 43142675,; ""num_frags_with_concordant_consistent_mappings"": 36380775,; ""num_frags_with_inconsistent_or_orphan_mappings"": 7777480,; ""strand_mapping_bias"": 0.5172763911708863,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 18818916,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17561859,; ""SF"": 2219340,; ""SR"": 5558140,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Here is the salmon command I've been using:. salmon --no-version-check quant -i /gcloud-shared/reference -l A -1 ${FASTQR1} -2 ${FASTQR2} \; --validateMappings --seqBias --gcBias --posBias --threads $(nproc) -o /gcloud-shared/sample. The whole process still produces quants files, but having never received this warning with other sample cohorts I want to be sure it's not affecting the results. Any idea why I might be getting this? Am I using the wrong lib type?. Thanks!. [ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6479118/ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659
https://github.com/COMBINE-lab/salmon/issues/659:1630,Testability,log,log,1630,"Hi, I've been using salmon v1.0.0 to quantify bulk transcripts from fastqs using the genocde v32 reference. Ive used it successfully on several cohorts but on my most recent I received the following warning in my log file (I also attached the entire file):. [2021-05-10 20:51:46.936] [jointLog] [warning] NOTE: Read Lib [[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /gcloud-shared/sample/lib_format_counts.json for details. Here is also the lib_formats_count.json:; {; ""read_files"": ""[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 43142675,; ""num_assigned_fragments"": 43142675,; ""num_frags_with_concordant_consistent_mappings"": 36380775,; ""num_frags_with_inconsistent_or_orphan_mappings"": 7777480,; ""strand_mapping_bias"": 0.5172763911708863,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 18818916,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17561859,; ""SF"": 2219340,; ""SR"": 5558140,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Here is the salmon command I've been using:. salmon --no-version-check quant -i /gcloud-shared/reference -l A -1 ${FASTQR1} -2 ${FASTQR2} \; --validateMappings --seqBias --gcBias --posBias --threads $(nproc) -o /gcloud-shared/sample. The whole process still produces quants files, but having never received this warning with other sample cohorts I want to be sure it's not affecting the results. Any idea why I might be getting this? Am I using the wrong lib type?. Thanks!. [ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6479118/ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659
https://github.com/COMBINE-lab/salmon/issues/659:1747,Testability,log,log,1747,"Hi, I've been using salmon v1.0.0 to quantify bulk transcripts from fastqs using the genocde v32 reference. Ive used it successfully on several cohorts but on my most recent I received the following warning in my log file (I also attached the entire file):. [2021-05-10 20:51:46.936] [jointLog] [warning] NOTE: Read Lib [[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /gcloud-shared/sample/lib_format_counts.json for details. Here is also the lib_formats_count.json:; {; ""read_files"": ""[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 43142675,; ""num_assigned_fragments"": 43142675,; ""num_frags_with_concordant_consistent_mappings"": 36380775,; ""num_frags_with_inconsistent_or_orphan_mappings"": 7777480,; ""strand_mapping_bias"": 0.5172763911708863,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 18818916,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17561859,; ""SF"": 2219340,; ""SR"": 5558140,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Here is the salmon command I've been using:. salmon --no-version-check quant -i /gcloud-shared/reference -l A -1 ${FASTQR1} -2 ${FASTQR2} \; --validateMappings --seqBias --gcBias --posBias --threads $(nproc) -o /gcloud-shared/sample. The whole process still produces quants files, but having never received this warning with other sample cohorts I want to be sure it's not affecting the results. Any idea why I might be getting this? Am I using the wrong lib type?. Thanks!. [ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6479118/ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659
https://github.com/COMBINE-lab/salmon/issues/660:646,Availability,echo,echo,646,"Hi!; I just used salmon(v1.4.0) to quant the paired-end fastq files from GSE66630(just some failed, not all), which were trimmed by [rabbitQC](https://github.com/ZekunYin/RabbitQC). I remembered I have analyzed it successfully by former version salmon, but now I couldn't make it work for this version. ```; salmon quant \; 		-i $indexdir \; 		-l A \; 		-1 $workdir/fastq/$line"".read1.fq"" \; 		-2 $workdir/fastq/$line"".read2.fq"" \; 		-p 44 \; 		-o $workdir/salmon_out/quant_out/$line \; 		-g $gtfpath \; 		--numGibbsSamples 50 \; 		--auxDir aux_info \; 		--seqBias --gcBias -d --posBias --hardFilter --discardOrphansQuasi --writeUnmappedNames && echo salmon $line Done!. [2021-05-19 18:46:25.303] [jointLog] [info] setting maxHashResizeThreads to 44; [2021-05-19 18:46:25.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2272,Availability,error,error,2272,"ies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filterin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2319,Availability,error,error,2319,"t to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2345,Availability,Error,Error,2345,"t to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2507,Energy Efficiency,adapt,adapter,2507,"isabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2610,Energy Efficiency,adapt,adapter,2610," selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:3443,Energy Efficiency,adapt,adapter,3443,"303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.23916%. Insert size peak (evaluated by paired-end reads): 1. JSON report: RabbitQC.json; HTML report: SRR1852518.html; ```; Best,; Ci",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:3489,Energy Efficiency,adapt,adapters,3489,"303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.23916%. Insert size peak (evaluated by paired-end reads): 1. JSON report: RabbitQC.json; HTML report: SRR1852518.html; ```; Best,; Ci",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2507,Integrability,adapter,adapter,2507,"isabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2610,Integrability,adapter,adapter,2610," selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:3443,Integrability,adapter,adapter,3443,"303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.23916%. Insert size peak (evaluated by paired-end reads): 1. JSON report: RabbitQC.json; HTML report: SRR1852518.html; ```; Best,; Ci",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:3489,Integrability,adapter,adapters,3489,"303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.23916%. Insert size peak (evaluated by paired-end reads): 1. JSON report: RabbitQC.json; HTML report: SRR1852518.html; ```; Best,; Ci",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2507,Modifiability,adapt,adapter,2507,"isabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2610,Modifiability,adapt,adapter,2610," selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:3443,Modifiability,adapt,adapter,3443,"303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.23916%. Insert size peak (evaluated by paired-end reads): 1. JSON report: RabbitQC.json; HTML report: SRR1852518.html; ```; Best,; Ci",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:3489,Modifiability,adapt,adapters,3489,"303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.23916%. Insert size peak (evaluated by paired-end reads): 1. JSON report: RabbitQC.json; HTML report: SRR1852518.html; ```; Best,; Ci",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:1839,Performance,Load,Loading,1839,"ible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 aft",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:1909,Performance,Load,Loading,1909,"intLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2193,Safety,detect,detected,2193,"21-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2497,Safety,Detect,Detecting,2497,"isabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2600,Safety,Detect,Detecting,2600," selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:1128,Security,validat,validation,1128,"d, not all), which were trimmed by [rabbitQC](https://github.com/ZekunYin/RabbitQC). I remembered I have analyzed it successfully by former version salmon, but now I couldn't make it work for this version. ```; salmon quant \; 		-i $indexdir \; 		-l A \; 		-1 $workdir/fastq/$line"".read1.fq"" \; 		-2 $workdir/fastq/$line"".read2.fq"" \; 		-p 44 \; 		-o $workdir/salmon_out/quant_out/$line \; 		-g $gtfpath \; 		--numGibbsSamples 50 \; 		--auxDir aux_info \; 		--seqBias --gcBias -d --posBias --hardFilter --discardOrphansQuasi --writeUnmappedNames && echo salmon $line Done!. [2021-05-19 18:46:25.303] [jointLog] [info] setting maxHashResizeThreads to 44; [2021-05-19 18:46:25.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:1142,Security,validat,validateMappings,1142,"d, not all), which were trimmed by [rabbitQC](https://github.com/ZekunYin/RabbitQC). I remembered I have analyzed it successfully by former version salmon, but now I couldn't make it work for this version. ```; salmon quant \; 		-i $indexdir \; 		-l A \; 		-1 $workdir/fastq/$line"".read1.fq"" \; 		-2 $workdir/fastq/$line"".read2.fq"" \; 		-p 44 \; 		-o $workdir/salmon_out/quant_out/$line \; 		-g $gtfpath \; 		--numGibbsSamples 50 \; 		--auxDir aux_info \; 		--seqBias --gcBias -d --posBias --hardFilter --discardOrphansQuasi --writeUnmappedNames && echo salmon $line Done!. [2021-05-19 18:46:25.303] [jointLog] [info] setting maxHashResizeThreads to 44; [2021-05-19 18:46:25.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:1178,Security,validat,validation,1178,"bitQC). I remembered I have analyzed it successfully by former version salmon, but now I couldn't make it work for this version. ```; salmon quant \; 		-i $indexdir \; 		-l A \; 		-1 $workdir/fastq/$line"".read1.fq"" \; 		-2 $workdir/fastq/$line"".read2.fq"" \; 		-p 44 \; 		-o $workdir/salmon_out/quant_out/$line \; 		-g $gtfpath \; 		--numGibbsSamples 50 \; 		--auxDir aux_info \; 		--seqBias --gcBias -d --posBias --hardFilter --discardOrphansQuasi --writeUnmappedNames && echo salmon $line Done!. [2021-05-19 18:46:25.303] [jointLog] [info] setting maxHashResizeThreads to 44; [2021-05-19 18:46:25.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:1246,Security,validat,validateMappings,1246,"but now I couldn't make it work for this version. ```; salmon quant \; 		-i $indexdir \; 		-l A \; 		-1 $workdir/fastq/$line"".read1.fq"" \; 		-2 $workdir/fastq/$line"".read2.fq"" \; 		-p 44 \; 		-o $workdir/salmon_out/quant_out/$line \; 		-g $gtfpath \; 		--numGibbsSamples 50 \; 		--auxDir aux_info \; 		--seqBias --gcBias -d --posBias --hardFilter --discardOrphansQuasi --writeUnmappedNames && echo salmon $line Done!. [2021-05-19 18:46:25.303] [jointLog] [info] setting maxHashResizeThreads to 44; [2021-05-19 18:46:25.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/660:2487,Testability,log,log,2487,"isabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660
https://github.com/COMBINE-lab/salmon/issues/661:7128,Integrability,protocol,protocol,7128,".806405; [2021-05-20 11:35:04.117] [jointLog] [info] iteration = 400 | max rel diff. = 0.143529; [2021-05-20 11:35:04.611] [jointLog] [info] iteration = 500 | max rel diff. = 0.131881; [2021-05-20 11:35:05.124] [jointLog] [info] iteration = 600 | max rel diff. = 1.67827; [2021-05-20 11:35:05.631] [jointLog] [info] iteration = 700 | max rel diff. = 0.0151842; [2021-05-20 11:35:06.145] [jointLog] [info] iteration = 800 | max rel diff. = 0.135721; [2021-05-20 11:35:06.657] [jointLog] [info] iteration = 900 | max rel diff. = 0.0942774; [2021-05-20 11:35:06.882] [jointLog] [info] iteration = 945 | max rel diff. = 0.00880347; [2021-05-20 11:35:06.894] [jointLog] [info] Finished optimizer; [2021-05-20 11:35:06.894] [jointLog] [info] writing output . [2021-05-20 11:35:06.972] [jointLog] [warning] NOTE: Read Lib [[ /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz, /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /results/RNA-Seq/Mice_A_batch2/salmon_out/lib_format_counts.json for details. ```. I also run `STAR` alignment and `htseq-count` on the same sample to quantify expression at the gene level, where the alignment rate is high and quantification is ok:. ```; RNA Alignment Statistics for Mice_A_batch2. Started job on |	May 20 06:25:05; Started mapping on |	May 20 06:25:42; Finished on |	May 20 10:46:09; Mapping speed, Million of reads per hour |	37.44. Number of input reads |	162499486; Average input read length |	300; UNIQUE READS:; Uniquely mapped reads number |	141917701; Uniquely mapped reads % |	87.33%; Average mapped length |	298.28; Number of splices: Total |	128444547; Number of splices: Annotated (sjdb) |	127401836; Number of splices: GT/AG |	127633760; Number of splices: GC/AG |	629527; Number of splices: AT/AC |	35900; Number of splices: Non-canonical |	145360; Mismatch rate per base, % |	0.28%; Deletion rate per base |	0.01%; Deletion average length |	2.29; Insertion ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:1622,Performance,Load,Loading,1622," ] => { }; ### [ gcBias ] => { }; ### [ mates1 ] => { /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz }; ### [ mates2 ] => { /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz }; ### [ output ] => { /results/RNA-Seq/Mice_A_batch2/salmon_out }; Logs will be written to /results/RNA-Seq/Mice_A_batch2/salmon_out/logs; [2021-05-20 10:53:54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:1903,Performance,Load,Loading,1903,"o /results/RNA-Seq/Mice_A_batch2/salmon_out/logs; [2021-05-20 10:53:54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; ---------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:1981,Performance,Load,Loading,1981,":54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:2125,Performance,Load,Loading,2125,"nt incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference se",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:2256,Performance,Load,Loading,2256,"alidateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:2390,Performance,Load,Loading,2390, [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:2632,Performance,Load,Loading,2632,"og] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automati",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:2784,Performance,Load,Loading,2784,"es` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:2925,Performance,Load,Loading,2925," [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [info] Counted 10,027,482 total reads in the equivalence classes ; [2021-05-20 11:34:48.050] [jointLog] [info] Number of mappings discarded becau",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:3068,Performance,Load,Loading,3068,"-------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [info] Counted 10,027,482 total reads in the equivalence classes ; [2021-05-20 11:34:48.050] [jointLog] [info] Number of mappings discarded because of alignment score : 208,344,973; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments entirely discarded because of alignment score ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:3203,Performance,Load,Loading,3203,"-------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [info] Counted 10,027,482 total reads in the equivalence classes ; [2021-05-20 11:34:48.050] [jointLog] [info] Number of mappings discarded because of alignment score : 208,344,973; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 11,448,458; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-05-20 11:34:48.050] [jointLog] [info] Number ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:4514,Performance,optimiz,optimizer,4514,".729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [info] Counted 10,027,482 total reads in the equivalence classes ; [2021-05-20 11:34:48.050] [jointLog] [info] Number of mappings discarded because of alignment score : 208,344,973; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 11,448,458; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 687,723; [2021-05-20 11:34:48.050] [jointLog] [info] Mapping rate = 6.17078%. [2021-05-20 11:34:48.050] [jointLog] [info] finished quantifyLibrary(); [2021-05-20 11:34:48.127] [jointLog] [info] Starting optimizer; [2021-05-20 11:34:48.220] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-05-20 11:34:48.227] [jointLog] [info] iteration = 0 | max rel diff. = 17492.1; [2021-05-20 11:34:48.285] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; [2021-05-20 11:34:55.799] [jointLog] [info] Computed expected counts (for bias correction); [2021-05-20 11:34:55.800] [jointLog] [info] processed bias for 0.3% of the transcripts; [2021-05-20 11:34:56.392] [jointLog] [info] processed bias for 10.0% of the transcripts; [2021-05-20 11:34:57.015] [jointLog] [info] processed bias for 20.0% of the transcripts; [2021-05-20 11:34:57.580] [jointLog] [info] processed bias for 30.0% of the transcripts; [2021-05-20 11:34:58.135] [jointLog] [info] processed bias for 40.0% of the transcripts; [2021-05-20 11:34:58.710] [jointLog] [info] processed bias for 50.0% of the transcripts; [2021-05-20 11:34:59.289] [jointLog] [info] processed bias for 60.0% of t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:6822,Performance,optimiz,optimizer,6822," [jointLog] [info] processed bias for 100.0% of the transcripts; [2021-05-20 11:35:02.630] [jointLog] [info] iteration = 100 | max rel diff. = 5.42568; [2021-05-20 11:35:03.124] [jointLog] [info] iteration = 200 | max rel diff. = 0.616163; [2021-05-20 11:35:03.614] [jointLog] [info] iteration = 300 | max rel diff. = 0.806405; [2021-05-20 11:35:04.117] [jointLog] [info] iteration = 400 | max rel diff. = 0.143529; [2021-05-20 11:35:04.611] [jointLog] [info] iteration = 500 | max rel diff. = 0.131881; [2021-05-20 11:35:05.124] [jointLog] [info] iteration = 600 | max rel diff. = 1.67827; [2021-05-20 11:35:05.631] [jointLog] [info] iteration = 700 | max rel diff. = 0.0151842; [2021-05-20 11:35:06.145] [jointLog] [info] iteration = 800 | max rel diff. = 0.135721; [2021-05-20 11:35:06.657] [jointLog] [info] iteration = 900 | max rel diff. = 0.0942774; [2021-05-20 11:35:06.882] [jointLog] [info] iteration = 945 | max rel diff. = 0.00880347; [2021-05-20 11:35:06.894] [jointLog] [info] Finished optimizer; [2021-05-20 11:35:06.894] [jointLog] [info] writing output . [2021-05-20 11:35:06.972] [jointLog] [warning] NOTE: Read Lib [[ /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz, /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /results/RNA-Seq/Mice_A_batch2/salmon_out/lib_format_counts.json for details. ```. I also run `STAR` alignment and `htseq-count` on the same sample to quantify expression at the gene level, where the alignment rate is high and quantification is ok:. ```; RNA Alignment Statistics for Mice_A_batch2. Started job on |	May 20 06:25:05; Started mapping on |	May 20 06:25:42; Finished on |	May 20 10:46:09; Mapping speed, Million of reads per hour |	37.44. Number of input reads |	162499486; Average input read length |	300; UNIQUE READS:; Uniquely mapped reads number |	141917701; Uniquely mapped reads % |	87.33%; Average mapped length |	298.28; Number of splices: Total |",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:3552,Safety,detect,detected,3552,"; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [info] Counted 10,027,482 total reads in the equivalence classes ; [2021-05-20 11:34:48.050] [jointLog] [info] Number of mappings discarded because of alignment score : 208,344,973; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 11,448,458; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 687,723; [2021-05-20 11:34:48.050] [jointLog] [info] Mapping rate = 6.17078%. [2021-05-20 11:34:48.050] [jointLog] [info] finished quantifyLibrary(); [2021-05-20 11:34:48.127] [jointLog] [info] Starting optimizer; [2021-05-20 11:34:48.220] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:7071,Safety,Detect,Detected,7071,".806405; [2021-05-20 11:35:04.117] [jointLog] [info] iteration = 400 | max rel diff. = 0.143529; [2021-05-20 11:35:04.611] [jointLog] [info] iteration = 500 | max rel diff. = 0.131881; [2021-05-20 11:35:05.124] [jointLog] [info] iteration = 600 | max rel diff. = 1.67827; [2021-05-20 11:35:05.631] [jointLog] [info] iteration = 700 | max rel diff. = 0.0151842; [2021-05-20 11:35:06.145] [jointLog] [info] iteration = 800 | max rel diff. = 0.135721; [2021-05-20 11:35:06.657] [jointLog] [info] iteration = 900 | max rel diff. = 0.0942774; [2021-05-20 11:35:06.882] [jointLog] [info] iteration = 945 | max rel diff. = 0.00880347; [2021-05-20 11:35:06.894] [jointLog] [info] Finished optimizer; [2021-05-20 11:35:06.894] [jointLog] [info] writing output . [2021-05-20 11:35:06.972] [jointLog] [warning] NOTE: Read Lib [[ /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz, /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /results/RNA-Seq/Mice_A_batch2/salmon_out/lib_format_counts.json for details. ```. I also run `STAR` alignment and `htseq-count` on the same sample to quantify expression at the gene level, where the alignment rate is high and quantification is ok:. ```; RNA Alignment Statistics for Mice_A_batch2. Started job on |	May 20 06:25:05; Started mapping on |	May 20 06:25:42; Finished on |	May 20 10:46:09; Mapping speed, Million of reads per hour |	37.44. Number of input reads |	162499486; Average input read length |	300; UNIQUE READS:; Uniquely mapped reads number |	141917701; Uniquely mapped reads % |	87.33%; Average mapped length |	298.28; Number of splices: Total |	128444547; Number of splices: Annotated (sjdb) |	127401836; Number of splices: GT/AG |	127633760; Number of splices: GC/AG |	629527; Number of splices: AT/AC |	35900; Number of splices: Non-canonical |	145360; Mismatch rate per base, % |	0.28%; Deletion rate per base |	0.01%; Deletion average length |	2.29; Insertion ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:1225,Security,validat,validateMappings,1225,"ow for most of the transcripts:. `salmon quant --no-version-check -p 20 -i /library/salmon_mm10 -l A --seqBias --gcBias -1 Mice_A_batch2_1.fq.gz -2 Mice_A_batch2_2.fq.gz -o salmon_out`. ```; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 20 }; ### [ index ] => { /library/salmon_mm10 }; ### [ libType ] => { A }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ mates1 ] => { /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz }; ### [ mates2 ] => { /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz }; ### [ output ] => { /results/RNA-Seq/Mice_A_batch2/salmon_out }; Logs will be written to /results/RNA-Seq/Mice_A_batch2/salmon_out/logs; [2021-05-20 10:53:54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:885,Testability,Log,Logs,885,"I am running `salmon v1.4.0` on my total RNA samples to get isoform expressions. The library consists of mRNA + lncRNA.; The **mapping rate** is extremely lower than expected: **6%** and as a result TPM values are either 0 or very low for most of the transcripts:. `salmon quant --no-version-check -p 20 -i /library/salmon_mm10 -l A --seqBias --gcBias -1 Mice_A_batch2_1.fq.gz -2 Mice_A_batch2_2.fq.gz -o salmon_out`. ```; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 20 }; ### [ index ] => { /library/salmon_mm10 }; ### [ libType ] => { A }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ mates1 ] => { /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz }; ### [ mates2 ] => { /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz }; ### [ output ] => { /results/RNA-Seq/Mice_A_batch2/salmon_out }; Logs will be written to /results/RNA-Seq/Mice_A_batch2/salmon_out/logs; [2021-05-20 10:53:54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/661:951,Testability,log,logs,951,"I am running `salmon v1.4.0` on my total RNA samples to get isoform expressions. The library consists of mRNA + lncRNA.; The **mapping rate** is extremely lower than expected: **6%** and as a result TPM values are either 0 or very low for most of the transcripts:. `salmon quant --no-version-check -p 20 -i /library/salmon_mm10 -l A --seqBias --gcBias -1 Mice_A_batch2_1.fq.gz -2 Mice_A_batch2_2.fq.gz -o salmon_out`. ```; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 20 }; ### [ index ] => { /library/salmon_mm10 }; ### [ libType ] => { A }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ mates1 ] => { /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz }; ### [ mates2 ] => { /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz }; ### [ output ] => { /results/RNA-Seq/Mice_A_batch2/salmon_out }; Logs will be written to /results/RNA-Seq/Mice_A_batch2/salmon_out/logs; [2021-05-20 10:53:54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661
https://github.com/COMBINE-lab/salmon/issues/662:176,Availability,down,down,176,"I'm trying to use salmon v1.0.0 to merge a bunch of bulk quant files successfully also run with salmon. However, salmon can't seem to find the quant files, even though farther down in the log it lists the quant file within the same directory in memory:. [critical] The sample directory /gcloud-shared/quants/A653_388/quant.sf either doesn't exist, or doesn't contain a quant.sf file; ...yet... /gcloud-shared/quants/A653_388:; total 9.9M; drwxr-xr-x 2 root root 4.0K May 20 16:11 aux_info; -rw-r--r-- 1 root root 349 May 20 16:11 cmd_info.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 libParams; -rw-r--r-- 1 root root 588 May 20 16:11 lib_format_counts.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 logs; -rw-r--r-- 1 root root 9.8M May 20 16:11 quant.sf. Here's a shorter version of my command :; salmon --no-version-check quantmerge --quants /gcloud-shared/quants/A653_388 /gcloud-shared/quants/A653_242 --names sample1 sample2 --column numreads --genes -o /gcloud-shared/merge/ukbec_gene_numreads.sf. Any idea what might be happening? I'll also attach the logs and quant file from the sample in case thats helpful. [ukbec_logs_salmon_quantmerge5.txt](https://github.com/COMBINE-lab/salmon/files/6517777/ukbec_logs_salmon_quantmerge5.txt). [ukbec_quants_gencode_32_filtered_A653_388_quant.txt](https://github.com/COMBINE-lab/salmon/files/6517782/ukbec_quants_gencode_32_filtered_A653_388_quant.txt); [ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6517784/ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/662
https://github.com/COMBINE-lab/salmon/issues/662:188,Testability,log,log,188,"I'm trying to use salmon v1.0.0 to merge a bunch of bulk quant files successfully also run with salmon. However, salmon can't seem to find the quant files, even though farther down in the log it lists the quant file within the same directory in memory:. [critical] The sample directory /gcloud-shared/quants/A653_388/quant.sf either doesn't exist, or doesn't contain a quant.sf file; ...yet... /gcloud-shared/quants/A653_388:; total 9.9M; drwxr-xr-x 2 root root 4.0K May 20 16:11 aux_info; -rw-r--r-- 1 root root 349 May 20 16:11 cmd_info.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 libParams; -rw-r--r-- 1 root root 588 May 20 16:11 lib_format_counts.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 logs; -rw-r--r-- 1 root root 9.8M May 20 16:11 quant.sf. Here's a shorter version of my command :; salmon --no-version-check quantmerge --quants /gcloud-shared/quants/A653_388 /gcloud-shared/quants/A653_242 --names sample1 sample2 --column numreads --genes -o /gcloud-shared/merge/ukbec_gene_numreads.sf. Any idea what might be happening? I'll also attach the logs and quant file from the sample in case thats helpful. [ukbec_logs_salmon_quantmerge5.txt](https://github.com/COMBINE-lab/salmon/files/6517777/ukbec_logs_salmon_quantmerge5.txt). [ukbec_quants_gencode_32_filtered_A653_388_quant.txt](https://github.com/COMBINE-lab/salmon/files/6517782/ukbec_quants_gencode_32_filtered_A653_388_quant.txt); [ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6517784/ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/662
https://github.com/COMBINE-lab/salmon/issues/662:702,Testability,log,logs,702,"I'm trying to use salmon v1.0.0 to merge a bunch of bulk quant files successfully also run with salmon. However, salmon can't seem to find the quant files, even though farther down in the log it lists the quant file within the same directory in memory:. [critical] The sample directory /gcloud-shared/quants/A653_388/quant.sf either doesn't exist, or doesn't contain a quant.sf file; ...yet... /gcloud-shared/quants/A653_388:; total 9.9M; drwxr-xr-x 2 root root 4.0K May 20 16:11 aux_info; -rw-r--r-- 1 root root 349 May 20 16:11 cmd_info.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 libParams; -rw-r--r-- 1 root root 588 May 20 16:11 lib_format_counts.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 logs; -rw-r--r-- 1 root root 9.8M May 20 16:11 quant.sf. Here's a shorter version of my command :; salmon --no-version-check quantmerge --quants /gcloud-shared/quants/A653_388 /gcloud-shared/quants/A653_242 --names sample1 sample2 --column numreads --genes -o /gcloud-shared/merge/ukbec_gene_numreads.sf. Any idea what might be happening? I'll also attach the logs and quant file from the sample in case thats helpful. [ukbec_logs_salmon_quantmerge5.txt](https://github.com/COMBINE-lab/salmon/files/6517777/ukbec_logs_salmon_quantmerge5.txt). [ukbec_quants_gencode_32_filtered_A653_388_quant.txt](https://github.com/COMBINE-lab/salmon/files/6517782/ukbec_quants_gencode_32_filtered_A653_388_quant.txt); [ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6517784/ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/662
https://github.com/COMBINE-lab/salmon/issues/662:1062,Testability,log,logs,1062,"I'm trying to use salmon v1.0.0 to merge a bunch of bulk quant files successfully also run with salmon. However, salmon can't seem to find the quant files, even though farther down in the log it lists the quant file within the same directory in memory:. [critical] The sample directory /gcloud-shared/quants/A653_388/quant.sf either doesn't exist, or doesn't contain a quant.sf file; ...yet... /gcloud-shared/quants/A653_388:; total 9.9M; drwxr-xr-x 2 root root 4.0K May 20 16:11 aux_info; -rw-r--r-- 1 root root 349 May 20 16:11 cmd_info.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 libParams; -rw-r--r-- 1 root root 588 May 20 16:11 lib_format_counts.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 logs; -rw-r--r-- 1 root root 9.8M May 20 16:11 quant.sf. Here's a shorter version of my command :; salmon --no-version-check quantmerge --quants /gcloud-shared/quants/A653_388 /gcloud-shared/quants/A653_242 --names sample1 sample2 --column numreads --genes -o /gcloud-shared/merge/ukbec_gene_numreads.sf. Any idea what might be happening? I'll also attach the logs and quant file from the sample in case thats helpful. [ukbec_logs_salmon_quantmerge5.txt](https://github.com/COMBINE-lab/salmon/files/6517777/ukbec_logs_salmon_quantmerge5.txt). [ukbec_quants_gencode_32_filtered_A653_388_quant.txt](https://github.com/COMBINE-lab/salmon/files/6517782/ukbec_quants_gencode_32_filtered_A653_388_quant.txt); [ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6517784/ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/662
https://github.com/COMBINE-lab/salmon/issues/662:1466,Testability,log,log,1466,"I'm trying to use salmon v1.0.0 to merge a bunch of bulk quant files successfully also run with salmon. However, salmon can't seem to find the quant files, even though farther down in the log it lists the quant file within the same directory in memory:. [critical] The sample directory /gcloud-shared/quants/A653_388/quant.sf either doesn't exist, or doesn't contain a quant.sf file; ...yet... /gcloud-shared/quants/A653_388:; total 9.9M; drwxr-xr-x 2 root root 4.0K May 20 16:11 aux_info; -rw-r--r-- 1 root root 349 May 20 16:11 cmd_info.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 libParams; -rw-r--r-- 1 root root 588 May 20 16:11 lib_format_counts.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 logs; -rw-r--r-- 1 root root 9.8M May 20 16:11 quant.sf. Here's a shorter version of my command :; salmon --no-version-check quantmerge --quants /gcloud-shared/quants/A653_388 /gcloud-shared/quants/A653_242 --names sample1 sample2 --column numreads --genes -o /gcloud-shared/merge/ukbec_gene_numreads.sf. Any idea what might be happening? I'll also attach the logs and quant file from the sample in case thats helpful. [ukbec_logs_salmon_quantmerge5.txt](https://github.com/COMBINE-lab/salmon/files/6517777/ukbec_logs_salmon_quantmerge5.txt). [ukbec_quants_gencode_32_filtered_A653_388_quant.txt](https://github.com/COMBINE-lab/salmon/files/6517782/ukbec_quants_gencode_32_filtered_A653_388_quant.txt); [ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6517784/ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/662
https://github.com/COMBINE-lab/salmon/issues/662:1583,Testability,log,log,1583,"I'm trying to use salmon v1.0.0 to merge a bunch of bulk quant files successfully also run with salmon. However, salmon can't seem to find the quant files, even though farther down in the log it lists the quant file within the same directory in memory:. [critical] The sample directory /gcloud-shared/quants/A653_388/quant.sf either doesn't exist, or doesn't contain a quant.sf file; ...yet... /gcloud-shared/quants/A653_388:; total 9.9M; drwxr-xr-x 2 root root 4.0K May 20 16:11 aux_info; -rw-r--r-- 1 root root 349 May 20 16:11 cmd_info.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 libParams; -rw-r--r-- 1 root root 588 May 20 16:11 lib_format_counts.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 logs; -rw-r--r-- 1 root root 9.8M May 20 16:11 quant.sf. Here's a shorter version of my command :; salmon --no-version-check quantmerge --quants /gcloud-shared/quants/A653_388 /gcloud-shared/quants/A653_242 --names sample1 sample2 --column numreads --genes -o /gcloud-shared/merge/ukbec_gene_numreads.sf. Any idea what might be happening? I'll also attach the logs and quant file from the sample in case thats helpful. [ukbec_logs_salmon_quantmerge5.txt](https://github.com/COMBINE-lab/salmon/files/6517777/ukbec_logs_salmon_quantmerge5.txt). [ukbec_quants_gencode_32_filtered_A653_388_quant.txt](https://github.com/COMBINE-lab/salmon/files/6517782/ukbec_quants_gencode_32_filtered_A653_388_quant.txt); [ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6517784/ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/662
https://github.com/COMBINE-lab/salmon/issues/664:126,Availability,error,error,126,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:756,Availability,error,error,756,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:776,Availability,fault,fault,776,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:943,Availability,error,error,943,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:1025,Availability,error,error,1025," ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:1062,Availability,error,error,1062," ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:1164,Availability,Error,Error,1164,"as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:1244,Availability,Error,Error,1244,"utable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/Alignmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:1283,Availability,Error,Error,1283,"utable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/Alignmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:3878,Availability,error,error,3878,"st.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/ONTAlignmentModel.cpp.o CMakeFiles/salmon.dir/AlignmentCommon.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o CMakeFiles/salmon.dir/BAMUtils.cpp.o -o salmon -L/vol/mgx-sw/src/tools/salmon/lib -L/vol/mgx-sw/lib -L/vol/mgx-sw/src/tools/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" ../external/pufferfish/src/libpuffer.a libsalmon_core.a ../external/pufferfish/external/twopaco/graphconstructor/libtwopaco.a ../external/pufferfish/external/twopaco/graphdump/libgraphdump.a ../external/pufferfish/external/ntcard/libntcard.a -lgff /usr/lib/x86_64-linux-gnu/libboost_iostreams.a /usr/lib/x86_64-linux-gnu/libboost_filesystem.a /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_timer.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_program_options.a /usr/lib/x86_64-linux-gnu/libboost_locale.a ../../external/install/lib/libstaden-read.a /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/x86_64-linux-gnu/libz.a -lm /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libbz2.a -lgomp ../external/pufferfish/src/libksw2pp.a libalevin_core.a ../../external/install/lib/libjemalloc.a -ltbbmalloc_proxy -ltbbmalloc -ltbb -lrt -ldl /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_thread.a -pthread /usr/lib/x86_64-linux-gnu/libboost_atomic.a ; ```. I also tried compiling without `-DFETCH_BOOST=TRUE`, i.e. boost packages installed via apt-get, but the same error occurs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:172,Deployability,release,release,172,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:514,Deployability,install,install,514,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:2562,Deployability,install,install,2562,"CellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/ONTAlignmentModel.cpp.o CMakeFiles/salmon.dir/AlignmentCommon.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o CMakeFiles/salmon.dir/BAMUtils.cpp.o -o salmon -L/vol/mgx-sw/src/tools/salmon/lib -L/vol/mgx-sw/lib -L/vol/mgx-sw/src/tools/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" ../external/pufferfish/src/libpuffer.a libsalmon_core.a ../external/pufferfish/external/twopaco/graphconstructor/libtwopaco.a ../external/pufferfish/external/twopaco/graphdump/libgraphdump.a ../external/pufferfish/external/ntcard/libntcard.a -lgff /usr/lib/x86_64-linux-gnu/libboost_iostreams.a /usr/lib/x86_64-linux-gnu/libboost_filesystem.a /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_timer.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_program_options.a /usr/lib/x86_64-linux-gnu/libboost_locale.a ../../external/install/lib/libstaden-read.a /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/x86_64-linux-gnu/libz.a -lm /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libbz2.a -lgomp ../external/pufferfish/src/libksw2pp.a libalevin_core.a ../../external/install/lib/libjemallo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:2655,Deployability,install,install,2655,"dSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/ONTAlignmentModel.cpp.o CMakeFiles/salmon.dir/AlignmentCommon.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o CMakeFiles/salmon.dir/BAMUtils.cpp.o -o salmon -L/vol/mgx-sw/src/tools/salmon/lib -L/vol/mgx-sw/lib -L/vol/mgx-sw/src/tools/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" ../external/pufferfish/src/libpuffer.a libsalmon_core.a ../external/pufferfish/external/twopaco/graphconstructor/libtwopaco.a ../external/pufferfish/external/twopaco/graphdump/libgraphdump.a ../external/pufferfish/external/ntcard/libntcard.a -lgff /usr/lib/x86_64-linux-gnu/libboost_iostreams.a /usr/lib/x86_64-linux-gnu/libboost_filesystem.a /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_timer.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_program_options.a /usr/lib/x86_64-linux-gnu/libboost_locale.a ../../external/install/lib/libstaden-read.a /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/x86_64-linux-gnu/libz.a -lm /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libbz2.a -lgomp ../external/pufferfish/src/libksw2pp.a libalevin_core.a ../../external/install/lib/libjemalloc.a -ltbbmalloc_proxy -ltbbmalloc -ltbb -lrt -ldl /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:3254,Deployability,install,install,3254,"st.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/ONTAlignmentModel.cpp.o CMakeFiles/salmon.dir/AlignmentCommon.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o CMakeFiles/salmon.dir/BAMUtils.cpp.o -o salmon -L/vol/mgx-sw/src/tools/salmon/lib -L/vol/mgx-sw/lib -L/vol/mgx-sw/src/tools/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" ../external/pufferfish/src/libpuffer.a libsalmon_core.a ../external/pufferfish/external/twopaco/graphconstructor/libtwopaco.a ../external/pufferfish/external/twopaco/graphdump/libgraphdump.a ../external/pufferfish/external/ntcard/libntcard.a -lgff /usr/lib/x86_64-linux-gnu/libboost_iostreams.a /usr/lib/x86_64-linux-gnu/libboost_filesystem.a /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_timer.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_program_options.a /usr/lib/x86_64-linux-gnu/libboost_locale.a ../../external/install/lib/libstaden-read.a /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/x86_64-linux-gnu/libz.a -lm /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libbz2.a -lgomp ../external/pufferfish/src/libksw2pp.a libalevin_core.a ../../external/install/lib/libjemalloc.a -ltbbmalloc_proxy -ltbbmalloc -ltbb -lrt -ldl /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_thread.a -pthread /usr/lib/x86_64-linux-gnu/libboost_atomic.a ; ```. I also tried compiling without `-DFETCH_BOOST=TRUE`, i.e. boost packages installed via apt-get, but the same error occurs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:3505,Deployability,install,install,3505,"st.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/ONTAlignmentModel.cpp.o CMakeFiles/salmon.dir/AlignmentCommon.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o CMakeFiles/salmon.dir/BAMUtils.cpp.o -o salmon -L/vol/mgx-sw/src/tools/salmon/lib -L/vol/mgx-sw/lib -L/vol/mgx-sw/src/tools/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" ../external/pufferfish/src/libpuffer.a libsalmon_core.a ../external/pufferfish/external/twopaco/graphconstructor/libtwopaco.a ../external/pufferfish/external/twopaco/graphdump/libgraphdump.a ../external/pufferfish/external/ntcard/libntcard.a -lgff /usr/lib/x86_64-linux-gnu/libboost_iostreams.a /usr/lib/x86_64-linux-gnu/libboost_filesystem.a /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_timer.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_program_options.a /usr/lib/x86_64-linux-gnu/libboost_locale.a ../../external/install/lib/libstaden-read.a /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/x86_64-linux-gnu/libz.a -lm /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libbz2.a -lgomp ../external/pufferfish/src/libksw2pp.a libalevin_core.a ../../external/install/lib/libjemalloc.a -ltbbmalloc_proxy -ltbbmalloc -ltbb -lrt -ldl /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_thread.a -pthread /usr/lib/x86_64-linux-gnu/libboost_atomic.a ; ```. I also tried compiling without `-DFETCH_BOOST=TRUE`, i.e. boost packages installed via apt-get, but the same error occurs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:3842,Deployability,install,installed,3842,"st.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/ONTAlignmentModel.cpp.o CMakeFiles/salmon.dir/AlignmentCommon.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o CMakeFiles/salmon.dir/BAMUtils.cpp.o -o salmon -L/vol/mgx-sw/src/tools/salmon/lib -L/vol/mgx-sw/lib -L/vol/mgx-sw/src/tools/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" ../external/pufferfish/src/libpuffer.a libsalmon_core.a ../external/pufferfish/external/twopaco/graphconstructor/libtwopaco.a ../external/pufferfish/external/twopaco/graphdump/libgraphdump.a ../external/pufferfish/external/ntcard/libntcard.a -lgff /usr/lib/x86_64-linux-gnu/libboost_iostreams.a /usr/lib/x86_64-linux-gnu/libboost_filesystem.a /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_timer.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_program_options.a /usr/lib/x86_64-linux-gnu/libboost_locale.a ../../external/install/lib/libstaden-read.a /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/x86_64-linux-gnu/libz.a -lm /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libbz2.a -lgomp ../external/pufferfish/src/libksw2pp.a libalevin_core.a ../../external/install/lib/libjemalloc.a -ltbbmalloc_proxy -ltbbmalloc -ltbb -lrt -ldl /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_thread.a -pthread /usr/lib/x86_64-linux-gnu/libboost_atomic.a ; ```. I also tried compiling without `-DFETCH_BOOST=TRUE`, i.e. boost packages installed via apt-get, but the same error occurs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:928,Integrability,wrap,wrapper,928,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/issues/664:1036,Integrability,wrap,wrapper,1036," ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664
https://github.com/COMBINE-lab/salmon/pull/665:5,Modifiability,refactor,refactoring,5,Some refactoring to clean some of the argument parsing and to allow future new features. * argument parsing; * allow early load of the index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/665
https://github.com/COMBINE-lab/salmon/pull/665:123,Performance,load,load,123,Some refactoring to clean some of the argument parsing and to allow future new features. * argument parsing; * allow early load of the index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/665
https://github.com/COMBINE-lab/salmon/issues/667:621,Availability,down,downloaded,621,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667
https://github.com/COMBINE-lab/salmon/issues/667:600,Deployability,install,installed,600,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667
https://github.com/COMBINE-lab/salmon/issues/667:233,Performance,load,loading,233,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667
https://github.com/COMBINE-lab/salmon/issues/667:280,Performance,load,loading,280,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667
https://github.com/COMBINE-lab/salmon/issues/667:390,Performance,load,loading,390,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667
https://github.com/COMBINE-lab/salmon/issues/667:933,Performance,load,loading,933,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667
https://github.com/COMBINE-lab/salmon/issues/667:118,Usability,clear,clear,118,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667
https://github.com/COMBINE-lab/salmon/issues/667:836,Usability,clear,clear,836,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667
https://github.com/COMBINE-lab/salmon/issues/667:1453,Usability,simpl,simple,1453,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667
https://github.com/COMBINE-lab/salmon/issues/668:749,Availability,recover,recoverOrphans,749,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668
https://github.com/COMBINE-lab/salmon/issues/668:1008,Availability,fault,fault,1008," the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668
https://github.com/COMBINE-lab/salmon/issues/668:1328,Availability,down,downloaded,1328,"on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send you the salmon_quant.log or any other file that would be useful. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OS CentOS 7.8; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668
https://github.com/COMBINE-lab/salmon/issues/668:332,Deployability,pipeline,pipeline,332,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668
https://github.com/COMBINE-lab/salmon/issues/668:1307,Deployability,install,installed,1307,"on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send you the salmon_quant.log or any other file that would be useful. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OS CentOS 7.8; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668
https://github.com/COMBINE-lab/salmon/issues/668:1438,Modifiability,config,config,1438," that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send you the salmon_quant.log or any other file that would be useful. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OS CentOS 7.8; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668
https://github.com/COMBINE-lab/salmon/issues/668:749,Safety,recover,recoverOrphans,749,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668
https://github.com/COMBINE-lab/salmon/issues/668:730,Security,validat,validateMappings,730,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668
https://github.com/COMBINE-lab/salmon/issues/668:388,Testability,test,tested,388,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668
https://github.com/COMBINE-lab/salmon/issues/668:2026,Testability,log,log,2026," salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send you the salmon_quant.log or any other file that would be useful. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OS CentOS 7.8; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668
https://github.com/COMBINE-lab/salmon/issues/669:7760,Availability,down,downstream,7760,"iff. = 0.109768; [2021-06-08 03:45:01.617] [jointLog] [info] iteration = 800 | max rel diff. = 1.21662; [2021-06-08 03:45:03.120] [jointLog] [info] iteration = 900 | max rel diff. = 3.66627; [2021-06-08 03:45:04.608] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.588204; [2021-06-08 03:45:06.110] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0684939; [2021-06-08 03:45:07.618] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.12848; [2021-06-08 03:45:09.127] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0314333; [2021-06-08 03:45:10.652] [jointLog] [info] iteration = 1,400 | max rel diff. = 1.66027; [2021-06-08 03:45:12.161] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.0215391; [2021-06-08 03:45:13.652] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0482054; [2021-06-08 03:45:15.168] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.10638; [2021-06-08 03:45:16.664] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.527726; [2021-06-08 03:45:16.709] [jointLog] [info] iteration = 1,804 | max rel diff. = 0.00520282; [2021-06-08 03:45:16.741] [jointLog] [info] finished optimizer; [2021-06-08 03:45:16.741] [jointLog] [info] writing output; [2021-06-08 03:45:17.047] [jointLog] [info] Staring Bootstrapping; [2021-06-08 03:45:17.157] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-08 03:45:17.157] [jointLog] [info] Optimizing over 430,882 equivalence classes; ```. I.e. `-l A` gives slightly more counts. When we excluded STAR from the process, and counted pseudoalignments, `-l A` again produced a bit more counts, so this effect is persistent for `-l A`:; - `-l A`: 36,310,400; - `-l ISF`: 36,309,800. (Here we are not comparing counts for pseudoalignments vs STAR aligments, just libtypes withing the same mode). While this difference in counts is not crucial and likely will not affect any downstream analyses, I would appreciate if you could share any insights on what could cause that difference!. Sergey",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669
https://github.com/COMBINE-lab/salmon/issues/669:2387,Performance,optimiz,optimizer,2387," too many loci | 138709; % of reads mapped to too many loci | 0.18%; UNMAPPED READS:; % of reads unmapped: too many mismatches | 0.00%; % of reads unmapped: too short | 9.42%; % of reads unmapped: other | 0.63%; CHIMERIC READS:; Number of chimeric reads | 482178; % of chimeric reads | 0.63%; ```. salmon is 1.3.0 in both cases, the command is the same but the libtype:; ```bash; salmon \; quant \; -l ISF \; -p 16 \; -t /path/to/transcriptome/hg38.fa \; -o /path/to/sample; -a /path/to/sample.transcriptome.bam; --numBootstraps 30; ```. salmon logs:; `-l A`; ```; Completed first pass through the alignment file.; Total # of mapped reads : 30,418,756; # of uniquely mapped reads : 8,515,057; # ambiguously mapped reads : 21,903,699; [2021-06-07 21:04:54.872] [jointLog] [info] Computed 430,852 rich equivalence classes for further processing; [2021-06-07 21:04:54.872] [jointLog] [info] Counted 29,620,334 total reads in the equivalence classes; [2021-06-07 21:04:54.873] [jointLog] [info] starting optimizer; [2021-06-07 21:04:55.023] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-06-07 21:04:55.040] [jointLog] [info] iteration = 0 | max rel diff. = 5827.81; [2021-06-07 21:04:54.620] [fileLog] [info] quantification processed 30,418,756 fragments so far; [2021-06-07 21:04:56.705] [jointLog] [info] iteration = 100 | max rel diff. = 20.953; [2021-06-07 21:04:58.369] [jointLog] [info] iteration = 200 | max rel diff. = 8.08439; [2021-06-07 21:05:00.033] [jointLog] [info] iteration = 300 | max rel diff. = 20.0975; [2021-06-07 21:05:01.696] [jointLog] [info] iteration = 400 | max rel diff. = 0.633444; [2021-06-07 21:05:03.358] [jointLog] [info] iteration = 500 | max rel diff. = 7.58935; [2021-06-07 21:05:05.019] [jointLog] [info] iteration = 600 | max rel diff. = 1.90445; [2021-06-07 21:05:06.684] [jointLog] [info] iteration = 700 | max rel diff. = 0.158913; [2021-06-07 21:05:08.346] [jointLog] [info] iteration = 800 | max rel diff. = 0.690785; [2021-06-07 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669
https://github.com/COMBINE-lab/salmon/issues/669:4330,Performance,optimiz,optimizer,4330," iteration = 800 | max rel diff. = 0.690785; [2021-06-07 21:05:10.018] [jointLog] [info] iteration = 900 | max rel diff. = 0.0773815; [2021-06-07 21:05:11.677] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.0345327; [2021-06-07 21:05:13.336] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.172304; [2021-06-07 21:05:14.993] [jointLog] [info] iteration = 1,200 | max rel diff. = 1.17312; [2021-06-07 21:05:16.651] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.111995; [2021-06-07 21:05:18.313] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.0191206; [2021-06-07 21:05:19.978] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.125342; [2021-06-07 21:05:21.640] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.024507; [2021-06-07 21:05:23.304] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.109772; [2021-06-07 21:05:23.469] [jointLog] [info] iteration = 1,711 | max rel diff. = 0.00699727; [2021-06-07 21:05:23.499] [jointLog] [info] finished optimizer; [2021-06-07 21:05:23.499] [jointLog] [info] writing output; [2021-06-07 21:05:23.829] [jointLog] [info] Staring Bootstrapping; [2021-06-07 21:05:23.962] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-07 21:05:23.962] [jointLog] [info] Optimizing over 430,852 equivalence classes; ```. `-l ISF`:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 30,418,756; # of uniquely mapped reads : 8,515,058; # ambiguously mapped reads : 21,903,698; [2021-06-08 03:44:49.444] [jointLog] [info] Computed 430,882 rich equivalence classes for further processing; [2021-06-08 03:44:49.444] [jointLog] [info] Counted 29,619,881 total reads in the equivalence classes; [2021-06-08 03:44:49.445] [jointLog] [info] starting optimizer; [2021-06-08 03:44:49.599] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-06-08 03:44:49.615] [jointLog] [info] iteration = 0 | max rel diff. = 5827.73; [2021-06-08 03:44:51.123] [jointLog] [info] iter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669
https://github.com/COMBINE-lab/salmon/issues/669:4588,Performance,Optimiz,Optimizing,4588,"eration = 1,100 | max rel diff. = 0.172304; [2021-06-07 21:05:14.993] [jointLog] [info] iteration = 1,200 | max rel diff. = 1.17312; [2021-06-07 21:05:16.651] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.111995; [2021-06-07 21:05:18.313] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.0191206; [2021-06-07 21:05:19.978] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.125342; [2021-06-07 21:05:21.640] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.024507; [2021-06-07 21:05:23.304] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.109772; [2021-06-07 21:05:23.469] [jointLog] [info] iteration = 1,711 | max rel diff. = 0.00699727; [2021-06-07 21:05:23.499] [jointLog] [info] finished optimizer; [2021-06-07 21:05:23.499] [jointLog] [info] writing output; [2021-06-07 21:05:23.829] [jointLog] [info] Staring Bootstrapping; [2021-06-07 21:05:23.962] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-07 21:05:23.962] [jointLog] [info] Optimizing over 430,852 equivalence classes; ```. `-l ISF`:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 30,418,756; # of uniquely mapped reads : 8,515,058; # ambiguously mapped reads : 21,903,698; [2021-06-08 03:44:49.444] [jointLog] [info] Computed 430,882 rich equivalence classes for further processing; [2021-06-08 03:44:49.444] [jointLog] [info] Counted 29,619,881 total reads in the equivalence classes; [2021-06-08 03:44:49.445] [jointLog] [info] starting optimizer; [2021-06-08 03:44:49.599] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-06-08 03:44:49.615] [jointLog] [info] iteration = 0 | max rel diff. = 5827.73; [2021-06-08 03:44:51.123] [jointLog] [info] iteration = 100 | max rel diff. = 17.6527; [2021-06-08 03:44:52.620] [jointLog] [info] iteration = 200 | max rel diff. = 20.0555; [2021-06-08 03:44:54.133] [jointLog] [info] iteration = 300 | max rel diff. = 2.81129; [2021-06-08 03:44:55.641] [jointLog] [info] iteration = 40",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669
https://github.com/COMBINE-lab/salmon/issues/669:5089,Performance,optimiz,optimizer,5089,"4507; [2021-06-07 21:05:23.304] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.109772; [2021-06-07 21:05:23.469] [jointLog] [info] iteration = 1,711 | max rel diff. = 0.00699727; [2021-06-07 21:05:23.499] [jointLog] [info] finished optimizer; [2021-06-07 21:05:23.499] [jointLog] [info] writing output; [2021-06-07 21:05:23.829] [jointLog] [info] Staring Bootstrapping; [2021-06-07 21:05:23.962] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-07 21:05:23.962] [jointLog] [info] Optimizing over 430,852 equivalence classes; ```. `-l ISF`:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 30,418,756; # of uniquely mapped reads : 8,515,058; # ambiguously mapped reads : 21,903,698; [2021-06-08 03:44:49.444] [jointLog] [info] Computed 430,882 rich equivalence classes for further processing; [2021-06-08 03:44:49.444] [jointLog] [info] Counted 29,619,881 total reads in the equivalence classes; [2021-06-08 03:44:49.445] [jointLog] [info] starting optimizer; [2021-06-08 03:44:49.599] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-06-08 03:44:49.615] [jointLog] [info] iteration = 0 | max rel diff. = 5827.73; [2021-06-08 03:44:51.123] [jointLog] [info] iteration = 100 | max rel diff. = 17.6527; [2021-06-08 03:44:52.620] [jointLog] [info] iteration = 200 | max rel diff. = 20.0555; [2021-06-08 03:44:54.133] [jointLog] [info] iteration = 300 | max rel diff. = 2.81129; [2021-06-08 03:44:55.641] [jointLog] [info] iteration = 400 | max rel diff. = 12.4174; [2021-06-08 03:44:57.128] [jointLog] [info] iteration = 500 | max rel diff. = 0.464718; [2021-06-08 03:44:58.630] [jointLog] [info] iteration = 600 | max rel diff. = 1.03722; [2021-06-08 03:45:00.132] [jointLog] [info] iteration = 700 | max rel diff. = 0.109768; [2021-06-08 03:45:01.617] [jointLog] [info] iteration = 800 | max rel diff. = 1.21662; [2021-06-08 03:45:03.120] [jointLog] [info] iteration = 900 | max rel diff. = 3.66627; [2021-06-08 03:45:04.6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669
https://github.com/COMBINE-lab/salmon/issues/669:7023,Performance,optimiz,optimizer,7023,"iff. = 0.109768; [2021-06-08 03:45:01.617] [jointLog] [info] iteration = 800 | max rel diff. = 1.21662; [2021-06-08 03:45:03.120] [jointLog] [info] iteration = 900 | max rel diff. = 3.66627; [2021-06-08 03:45:04.608] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.588204; [2021-06-08 03:45:06.110] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0684939; [2021-06-08 03:45:07.618] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.12848; [2021-06-08 03:45:09.127] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0314333; [2021-06-08 03:45:10.652] [jointLog] [info] iteration = 1,400 | max rel diff. = 1.66027; [2021-06-08 03:45:12.161] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.0215391; [2021-06-08 03:45:13.652] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0482054; [2021-06-08 03:45:15.168] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.10638; [2021-06-08 03:45:16.664] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.527726; [2021-06-08 03:45:16.709] [jointLog] [info] iteration = 1,804 | max rel diff. = 0.00520282; [2021-06-08 03:45:16.741] [jointLog] [info] finished optimizer; [2021-06-08 03:45:16.741] [jointLog] [info] writing output; [2021-06-08 03:45:17.047] [jointLog] [info] Staring Bootstrapping; [2021-06-08 03:45:17.157] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-08 03:45:17.157] [jointLog] [info] Optimizing over 430,882 equivalence classes; ```. I.e. `-l A` gives slightly more counts. When we excluded STAR from the process, and counted pseudoalignments, `-l A` again produced a bit more counts, so this effect is persistent for `-l A`:; - `-l A`: 36,310,400; - `-l ISF`: 36,309,800. (Here we are not comparing counts for pseudoalignments vs STAR aligments, just libtypes withing the same mode). While this difference in counts is not crucial and likely will not affect any downstream analyses, I would appreciate if you could share any insights on what could cause that difference!. Sergey",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669
https://github.com/COMBINE-lab/salmon/issues/669:7281,Performance,Optimiz,Optimizing,7281,"iff. = 0.109768; [2021-06-08 03:45:01.617] [jointLog] [info] iteration = 800 | max rel diff. = 1.21662; [2021-06-08 03:45:03.120] [jointLog] [info] iteration = 900 | max rel diff. = 3.66627; [2021-06-08 03:45:04.608] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.588204; [2021-06-08 03:45:06.110] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0684939; [2021-06-08 03:45:07.618] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.12848; [2021-06-08 03:45:09.127] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0314333; [2021-06-08 03:45:10.652] [jointLog] [info] iteration = 1,400 | max rel diff. = 1.66027; [2021-06-08 03:45:12.161] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.0215391; [2021-06-08 03:45:13.652] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0482054; [2021-06-08 03:45:15.168] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.10638; [2021-06-08 03:45:16.664] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.527726; [2021-06-08 03:45:16.709] [jointLog] [info] iteration = 1,804 | max rel diff. = 0.00520282; [2021-06-08 03:45:16.741] [jointLog] [info] finished optimizer; [2021-06-08 03:45:16.741] [jointLog] [info] writing output; [2021-06-08 03:45:17.047] [jointLog] [info] Staring Bootstrapping; [2021-06-08 03:45:17.157] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-08 03:45:17.157] [jointLog] [info] Optimizing over 430,882 equivalence classes; ```. I.e. `-l A` gives slightly more counts. When we excluded STAR from the process, and counted pseudoalignments, `-l A` again produced a bit more counts, so this effect is persistent for `-l A`:; - `-l A`: 36,310,400; - `-l ISF`: 36,309,800. (Here we are not comparing counts for pseudoalignments vs STAR aligments, just libtypes withing the same mode). While this difference in counts is not crucial and likely will not affect any downstream analyses, I would appreciate if you could share any insights on what could cause that difference!. Sergey",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669
https://github.com/COMBINE-lab/salmon/issues/669:582,Testability,log,log,582,"Hello @rob-p !. Thanks for developing and maintaining salmon!. When running salmon in [bcbio](https://github.com/bcbio/bcbio-nextgen/) ; we are observing a slight difference in total counts when using automatic strandedness (-l A) and (-l ISF). Everything else is the same: data, STAR versions, STAR alignments (we are using STAR alignment quantification mode). The difference (sum over NumReads column in quant.sf) is 400 counts / 30mln:; - -l A: 29,620,300; - -l ISF: 29,619,900; It affects 628 genes out of 58,735. The maximum difference is 311 counts for a gene. STAR alignment log is the same:; ```; Mapping speed, Million of reads per hour | 157.61 ; Number of input reads | 76133470; Average input read length | 271; UNIQUE READS:; Uniquely mapped reads number | 62201102; Uniquely mapped reads % | 81.70%; Average mapped length | 271.68; Number of splices: Total | 29864202; Number of splices: Annotated (sjdb) | 29762114; Number of splices: GT/AG | 29430057; Number of splices: GC/AG | 286461; Number of splices: AT/AC | 27717; Number of splices: Non-canonical | 119967; Mismatch rate per base, % | 0.34%; Deletion rate per base | 0.03%; Deletion average length | 1.95; Insertion rate per base | 0.02%; Insertion average length | 1.57; MULTI-MAPPING READS:; Number of reads mapped to multiple loci | 5982273; % of reads mapped to multiple loci | 7.86%; Number of reads mapped to too many loci | 138709; % of reads mapped to too many loci | 0.18%; UNMAPPED READS:; % of reads unmapped: too many mismatches | 0.00%; % of reads unmapped: too short | 9.42%; % of reads unmapped: other | 0.63%; CHIMERIC READS:; Number of chimeric reads | 482178; % of chimeric reads | 0.63%; ```. salmon is 1.3.0 in both cases, the command is the same but the libtype:; ```bash; salmon \; quant \; -l ISF \; -p 16 \; -t /path/to/transcriptome/hg38.fa \; -o /path/to/sample; -a /path/to/sample.transcriptome.bam; --numBootstraps 30; ```. salmon logs:; `-l A`; ```; Completed first pass through the alignment file.;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669
https://github.com/COMBINE-lab/salmon/issues/669:1932,Testability,log,logs,1932,"0057; Number of splices: GC/AG | 286461; Number of splices: AT/AC | 27717; Number of splices: Non-canonical | 119967; Mismatch rate per base, % | 0.34%; Deletion rate per base | 0.03%; Deletion average length | 1.95; Insertion rate per base | 0.02%; Insertion average length | 1.57; MULTI-MAPPING READS:; Number of reads mapped to multiple loci | 5982273; % of reads mapped to multiple loci | 7.86%; Number of reads mapped to too many loci | 138709; % of reads mapped to too many loci | 0.18%; UNMAPPED READS:; % of reads unmapped: too many mismatches | 0.00%; % of reads unmapped: too short | 9.42%; % of reads unmapped: other | 0.63%; CHIMERIC READS:; Number of chimeric reads | 482178; % of chimeric reads | 0.63%; ```. salmon is 1.3.0 in both cases, the command is the same but the libtype:; ```bash; salmon \; quant \; -l ISF \; -p 16 \; -t /path/to/transcriptome/hg38.fa \; -o /path/to/sample; -a /path/to/sample.transcriptome.bam; --numBootstraps 30; ```. salmon logs:; `-l A`; ```; Completed first pass through the alignment file.; Total # of mapped reads : 30,418,756; # of uniquely mapped reads : 8,515,057; # ambiguously mapped reads : 21,903,699; [2021-06-07 21:04:54.872] [jointLog] [info] Computed 430,852 rich equivalence classes for further processing; [2021-06-07 21:04:54.872] [jointLog] [info] Counted 29,620,334 total reads in the equivalence classes; [2021-06-07 21:04:54.873] [jointLog] [info] starting optimizer; [2021-06-07 21:04:55.023] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-06-07 21:04:55.040] [jointLog] [info] iteration = 0 | max rel diff. = 5827.81; [2021-06-07 21:04:54.620] [fileLog] [info] quantification processed 30,418,756 fragments so far; [2021-06-07 21:04:56.705] [jointLog] [info] iteration = 100 | max rel diff. = 20.953; [2021-06-07 21:04:58.369] [jointLog] [info] iteration = 200 | max rel diff. = 8.08439; [2021-06-07 21:05:00.033] [jointLog] [info] iteration = 300 | max rel diff. = 20.0975; [2021-06-07 21:05:01.696]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669
https://github.com/COMBINE-lab/salmon/issues/670:25,Integrability,protocol,protocol,25,"We currently are using a protocol that uses a barcode strategy similar to Rhapsody, where you have 3, 8nt barcodes separated by two constant regions. I am trying to use the bc-geometry flag using the following command . "" salmon alevin -l ISR -i ~/Data/salmon/cell_hash -1 R1.fq.gz -2 R2.fq.gz --umi-geometry 1[51-56] --bc-geometry 1[3-8,24-29,45-50] --read-geometry 2[1-end] -o outs/ --citeseq --featureStart 0 --featureLength 15"". I am getting an output table that appears to be mapping correctly, however the cell barcodes in the table are 16 nt long instead of the 18 nt specified in the bc-geometry command. Is there something I am missing?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/670
https://github.com/COMBINE-lab/salmon/issues/671:258,Availability,error,errors,258,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671
https://github.com/COMBINE-lab/salmon/issues/671:269,Availability,failure,failure,269,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671
https://github.com/COMBINE-lab/salmon/issues/671:375,Availability,error,error,375,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671
https://github.com/COMBINE-lab/salmon/issues/671:1148,Availability,down,downloaded,1148,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671
https://github.com/COMBINE-lab/salmon/issues/671:1197,Availability,down,downloaded,1197,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671
https://github.com/COMBINE-lab/salmon/issues/671:1127,Deployability,install,installed,1127,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671
https://github.com/COMBINE-lab/salmon/issues/671:550,Security,access,access,550,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671
https://github.com/COMBINE-lab/salmon/issues/675:1055,Availability,recover,recoverOrphans,1055,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675
https://github.com/COMBINE-lab/salmon/issues/675:1055,Safety,recover,recoverOrphans,1055,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675
https://github.com/COMBINE-lab/salmon/issues/675:1033,Security,validat,validateMappings,1033,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675
https://github.com/COMBINE-lab/salmon/issues/675:1476,Security,validat,validateMappings,1476,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675
https://github.com/COMBINE-lab/salmon/issues/675:838,Testability,log,logs,838,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675
https://github.com/COMBINE-lab/salmon/issues/675:867,Testability,log,logs,867,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675
https://github.com/COMBINE-lab/salmon/issues/675:886,Testability,log,log,886,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675
https://github.com/COMBINE-lab/salmon/issues/675:1284,Testability,log,logs,1284,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675
https://github.com/COMBINE-lab/salmon/issues/675:1313,Testability,log,logs,1313,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675
https://github.com/COMBINE-lab/salmon/issues/675:1332,Testability,log,log,1332,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675
https://github.com/COMBINE-lab/salmon/issues/676:558,Testability,test,tested,558,"Hello to all,. I have a question about salmon and more precisely the alignment part.; I use salmon on BAM files of RNAseq data and the problem is that I don't really know what to use as <LIBTYPE>. I used -l A to get the automatic library but the ""meta_info.json"" it gives me:. ```; ""salmon_version"": ""1.4.0"",; ""samp_type"": ""none"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""MU""; ],. ```. ""MU"" but what puzzles me is that my datas are IlluminaTruSeq Stranded. ""MU"" is used for unstranded then it's a little weird.... I tested every libraries and MU gives me the better percentage with 60% of mapping, the other ISF, IU, ISR give less than 10-20% maximum. Is there a problem to use MU on stranded knowing that it is salmon who chose automatically ? Especially since this is what gives me the best results... Thanks for your . Kisekya",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/676
https://github.com/COMBINE-lab/salmon/issues/677:1703,Availability,recover,recoverOrphans,1703,"roduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:1890,Availability,echo,echo,1890,"lease; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:1895,Availability,ERROR,ERROR,1895,"lease; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:1984,Availability,echo,echo,1984,"nstall the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - $ lsb_release -a; ba",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:2218,Availability,down,downloaded,2218,"turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - $ lsb_release -a; bash: lsb_release: command not found...; (base) [aedavids@mustard bin]$ uname -a ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Add any other context a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:905,Deployability,release,release,905,"Our lab makes heavy use of Salmon. Its a great tool we use it almost daily. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; While digging through the log files to try and figure out why some of our biologic samples have low mapping rates I discovered a warning. . [2021-06-22 12:39:41.282] [jointLog] [warning] Only 1920342 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-06-22 12:39:41.282] [jointLog] [info] Mapping rate = 55.5444%. about half of our samples have over 90% mapping rates. . Any idea what this warning means?. **To Reproduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skip",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:927,Deployability,release,release,927,"Our lab makes heavy use of Salmon. Its a great tool we use it almost daily. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; While digging through the log files to try and figure out why some of our biologic samples have low mapping rates I discovered a warning. . [2021-06-22 12:39:41.282] [jointLog] [warning] Only 1920342 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-06-22 12:39:41.282] [jointLog] [info] Mapping rate = 55.5444%. about half of our samples have over 90% mapping rates. . Any idea what this warning means?. **To Reproduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skip",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:968,Deployability,install,installed,968,"Our lab makes heavy use of Salmon. Its a great tool we use it almost daily. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; While digging through the log files to try and figure out why some of our biologic samples have low mapping rates I discovered a warning. . [2021-06-22 12:39:41.282] [jointLog] [warning] Only 1920342 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-06-22 12:39:41.282] [jointLog] [info] Mapping rate = 55.5444%. about half of our samples have over 90% mapping rates. . Any idea what this warning means?. **To Reproduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skip",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:997,Deployability,install,install,997,"Our lab makes heavy use of Salmon. Its a great tool we use it almost daily. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; While digging through the log files to try and figure out why some of our biologic samples have low mapping rates I discovered a warning. . [2021-06-22 12:39:41.282] [jointLog] [warning] Only 1920342 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-06-22 12:39:41.282] [jointLog] [info] Mapping rate = 55.5444%. about half of our samples have over 90% mapping rates. . Any idea what this warning means?. **To Reproduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skip",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:2197,Deployability,install,installed,2197,"turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - $ lsb_release -a; bash: lsb_release: command not found...; (base) [aedavids@mustard bin]$ uname -a ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Add any other context a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:1703,Safety,recover,recoverOrphans,1703,"roduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:1723,Security,validat,validateMappings,1723,"roduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:218,Testability,log,log,218,"Our lab makes heavy use of Salmon. Its a great tool we use it almost daily. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; While digging through the log files to try and figure out why some of our biologic samples have low mapping rates I discovered a warning. . [2021-06-22 12:39:41.282] [jointLog] [warning] Only 1920342 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-06-22 12:39:41.282] [jointLog] [info] Mapping rate = 55.5444%. about half of our samples have over 90% mapping rates. . Any idea what this warning means?. **To Reproduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skip",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:1418,Testability,test,test,1418,"the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-06-22 12:39:41.282] [jointLog] [info] Mapping rate = 55.5444%. about half of our samples have over 90% mapping rates. . Any idea what this warning means?. **To Reproduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotatio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/677:2553,Usability,clear,clear,2553," ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - $ lsb_release -a; bash: lsb_release: command not found...; (base) [aedavids@mustard bin]$ uname -a ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677
https://github.com/COMBINE-lab/salmon/issues/679:685,Security,validat,validateMapping,685,"Hello, I am using salmon for an RNAseq experiment but I m getting very low mapping rate (0.03%!) and a strong strand bias (0.96). It never happened before and I can not understand the cause. I have already used FastQC to check the quality and it is good. It happens also with all the other samples (N=6) the service sent to us for the same RNAseq experiment. At the moment I m afraid the service did a mistake or could this problem be related to the library type? . This is the command I ran:; ```; salmon quant -i /somewhere/in/the/server/index/salmon -l A -1 /somewhere/in/the/server/fastq/sample1_1.fq.gz -2 /somewhere/in/the/server/fastq/sample1_2.fq.gz -p 10 --seqBias --gcBias --validateMapping -o /somewhere/in/the/server/salmon; ```. lib_format_counts.json:; ```; {; ""read_files"": [; ""/somewhere/in/the/server/fastq/sample1_1.fq.gz"",; ""/somewhere/in/the/server/fastq/sample1_2.fq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 6520,; ""num_assigned_fragments"": 6520,; ""num_frags_with_concordant_consistent_mappings"": 2126,; ""num_frags_with_inconsistent_or_orphan_mappings"": 4704,; ""strand_mapping_bias"": 0.964722483537159,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 75,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 2051,; ""SF"": 1436,; ""SR"": 3268,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. few lines from salmon_quant.log:; ```; Only 6520 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. Mapping rate = 0.0301431%; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/679
https://github.com/COMBINE-lab/salmon/issues/679:1352,Testability,log,log,1352,"Hello, I am using salmon for an RNAseq experiment but I m getting very low mapping rate (0.03%!) and a strong strand bias (0.96). It never happened before and I can not understand the cause. I have already used FastQC to check the quality and it is good. It happens also with all the other samples (N=6) the service sent to us for the same RNAseq experiment. At the moment I m afraid the service did a mistake or could this problem be related to the library type? . This is the command I ran:; ```; salmon quant -i /somewhere/in/the/server/index/salmon -l A -1 /somewhere/in/the/server/fastq/sample1_1.fq.gz -2 /somewhere/in/the/server/fastq/sample1_2.fq.gz -p 10 --seqBias --gcBias --validateMapping -o /somewhere/in/the/server/salmon; ```. lib_format_counts.json:; ```; {; ""read_files"": [; ""/somewhere/in/the/server/fastq/sample1_1.fq.gz"",; ""/somewhere/in/the/server/fastq/sample1_2.fq.gz""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 6520,; ""num_assigned_fragments"": 6520,; ""num_frags_with_concordant_consistent_mappings"": 2126,; ""num_frags_with_inconsistent_or_orphan_mappings"": 4704,; ""strand_mapping_bias"": 0.964722483537159,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 75,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 2051,; ""SF"": 1436,; ""SR"": 3268,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. few lines from salmon_quant.log:; ```; Only 6520 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. Mapping rate = 0.0301431%; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/679
https://github.com/COMBINE-lab/salmon/issues/682:385,Availability,down,download,385,"Hi,. I have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:758,Availability,error,error,758,"Hi,. I have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:875,Availability,recover,recovery,875,"Hi,. I have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:930,Availability,error,error,930,"Hi,. I have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:1165,Availability,down,downloaded,1165,"have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; Charles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:1396,Availability,error,error,1396,"have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; Charles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:1537,Availability,error,error,1537,"have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; Charles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:764,Integrability,message,message,764,"Hi,. I have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:1402,Integrability,message,message,1402,"have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; Charles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:875,Safety,recover,recovery,875,"Hi,. I have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/682:1334,Testability,test,testing,1334,"have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; Charles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682
https://github.com/COMBINE-lab/salmon/issues/683:126,Availability,error,error,126,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error : Two references with the same name but different sequences: XR_001465382.2_LOC4; 21118_-. We require that all input records have a unique name up to the first whitespace character. But when I try to create a histogram of that reference it only shows 1 sequence with that name: ; grep 'XR_001465383.2_LOC421108' galGal6.gene+cluster+repBase+tRNA.fa.nodup | sort | uniq -c | awk '{printf(""%s\t%s\n"", $1, $2)}'; 1 >XR_001465383.2_LOC421108_-. **To Reproduce**; This is the code I used ; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa.nodup -i SalmonIndexNodup -k 31. Specifically, please provide at least the following information:. * Which version of salmon was used?; I used v1.5.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Yes; * Which reference (e.g. transcriptome) was used?; Mouse (mm10); * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683
https://github.com/COMBINE-lab/salmon/issues/683:859,Availability,down,downloaded,859,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error : Two references with the same name but different sequences: XR_001465382.2_LOC4; 21118_-. We require that all input records have a unique name up to the first whitespace character. But when I try to create a histogram of that reference it only shows 1 sequence with that name: ; grep 'XR_001465383.2_LOC421108' galGal6.gene+cluster+repBase+tRNA.fa.nodup | sort | uniq -c | awk '{printf(""%s\t%s\n"", $1, $2)}'; 1 >XR_001465383.2_LOC421108_-. **To Reproduce**; This is the code I used ; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa.nodup -i SalmonIndexNodup -k 31. Specifically, please provide at least the following information:. * Which version of salmon was used?; I used v1.5.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Yes; * Which reference (e.g. transcriptome) was used?; Mouse (mm10); * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683
https://github.com/COMBINE-lab/salmon/issues/683:838,Deployability,install,installed,838,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error : Two references with the same name but different sequences: XR_001465382.2_LOC4; 21118_-. We require that all input records have a unique name up to the first whitespace character. But when I try to create a histogram of that reference it only shows 1 sequence with that name: ; grep 'XR_001465383.2_LOC421108' galGal6.gene+cluster+repBase+tRNA.fa.nodup | sort | uniq -c | awk '{printf(""%s\t%s\n"", $1, $2)}'; 1 >XR_001465383.2_LOC421108_-. **To Reproduce**; This is the code I used ; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa.nodup -i SalmonIndexNodup -k 31. Specifically, please provide at least the following information:. * Which version of salmon was used?; I used v1.5.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Yes; * Which reference (e.g. transcriptome) was used?; Mouse (mm10); * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683
https://github.com/COMBINE-lab/salmon/issues/683:1069,Usability,clear,clear,1069,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error : Two references with the same name but different sequences: XR_001465382.2_LOC4; 21118_-. We require that all input records have a unique name up to the first whitespace character. But when I try to create a histogram of that reference it only shows 1 sequence with that name: ; grep 'XR_001465383.2_LOC421108' galGal6.gene+cluster+repBase+tRNA.fa.nodup | sort | uniq -c | awk '{printf(""%s\t%s\n"", $1, $2)}'; 1 >XR_001465383.2_LOC421108_-. **To Reproduce**; This is the code I used ; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa.nodup -i SalmonIndexNodup -k 31. Specifically, please provide at least the following information:. * Which version of salmon was used?; I used v1.5.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Yes; * Which reference (e.g. transcriptome) was used?; Mouse (mm10); * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683
https://github.com/COMBINE-lab/salmon/issues/684:2270,Availability,down,downloaded,2270," ; # Feature counts on genome BAM, without umi_tools dedup: ; ENSMUSG00000029657.15 [...] 7266 415; # Feature counts on deduplicated genome BAM:; ENSMUSG00000029657.15 [...] 7266 289; ```. Here's a scatterplot of log1p(counts) of the salmon quant results for a single sample with and without umi_tools dedup; ![image](https://user-images.githubusercontent.com/7051479/125756098-5aff12af-a75f-4bd3-9c5d-30ce7890a2ba.png). **To Reproduce**; Run Salmon quant on the aligned transcriptome BAM file. I provide subsampled versions of both the deduplicated and non-deduplicated BAM files. If you need the full BAM files, LMK and we can arrange a transfer. . * [POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821654/POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz); * [POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821657/POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz); * [salmon_featurecounts_results.tar.gz](https://github.com/COMBINE-lab/salmon/files/6821561/salmon_featurecounts_results.tar.gz). Specifically, please provide at least the following information:. * Which version of salmon was used? **1.5.1**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **bioconda**; * Which reference (e.g. transcriptome) was used? **gencode.vM25.primary_assembly.annotation.gtf**; * Which read files were used? **Lexogen QuantSeq 3' UMI**; * Which which program options were used? **--noLengthCorrection**. **Expected behavior**; Correctly quantify results on deduplicated BAM. . **Desktop (please complete the following information):**; - OS: CentOS 7; - Version `3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`. **Additional context**; There's already an issue with RSEM described in the UMI-tools repository (https://github.com/CGATOxford/UMI-tools/issues/465), maybe that's related. . CC @chripla",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/684
https://github.com/COMBINE-lab/salmon/issues/684:510,Deployability,pipeline,pipeline,510,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk. **Describe the bug**; I am working with UMI-tagged Lexogen QuantSeq data. Since salmon does not (yet?) support handling UMIs with bulk RNA-seq directly (see https://github.com/COMBINE-lab/salmon/issues/306), I am using [umi_tools](https://github.com/CGATOxford/UMI-tools) + STAR to generate a deduplicated transcriptome BAM file and run Salmon in alignment mode as implemented in the [nf-core/rnaseq](nf-co.re/rnaseq) pipeline. . Unfortunately, Salmon does not seem to handle the deduplicated BAM well. A lot of genes have zero reads which shouldn't. . For instance, for `ENSMUSG00000029657` I get the following results (last column denotes counts in all cases); ```; # Salmon on transcriptome BAM, without umit_tools dedup: quant.genes.no_umi.sf; ENSMUSG00000029657.15 3803.74 3650.23 17.3078 438; # Salmon on deduplicated transcriptome BAM: quant.genes.sf; ENSMUSG00000029657.15 1947.36 1614.62 0 0 ; # Feature counts on genome BAM, without umi_tools dedup: ; ENSMUSG00000029657.15 [...] 7266 415; # Feature counts on deduplicated genome BAM:; ENSMUSG00000029657.15 [...] 7266 289; ```. Here's a scatterplot of log1p(counts) of the salmon quant results for a single sample with and without umi_tools dedup; ![image](https://user-images.githubusercontent.com/7051479/125756098-5aff12af-a75f-4bd3-9c5d-30ce7890a2ba.png). **To Reproduce**; Run Salmon quant on the aligned transcriptome BAM file. I provide subsampled versions of both the deduplicated and non-deduplicated BAM files. If you need the full BAM files, LMK and we can arrange a transfer. . * [POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821654/POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz); * [POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821657/POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz); * [salmon_fe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/684
https://github.com/COMBINE-lab/salmon/issues/684:2249,Deployability,install,installed,2249," ; # Feature counts on genome BAM, without umi_tools dedup: ; ENSMUSG00000029657.15 [...] 7266 415; # Feature counts on deduplicated genome BAM:; ENSMUSG00000029657.15 [...] 7266 289; ```. Here's a scatterplot of log1p(counts) of the salmon quant results for a single sample with and without umi_tools dedup; ![image](https://user-images.githubusercontent.com/7051479/125756098-5aff12af-a75f-4bd3-9c5d-30ce7890a2ba.png). **To Reproduce**; Run Salmon quant on the aligned transcriptome BAM file. I provide subsampled versions of both the deduplicated and non-deduplicated BAM files. If you need the full BAM files, LMK and we can arrange a transfer. . * [POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821654/POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz); * [POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821657/POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz); * [salmon_featurecounts_results.tar.gz](https://github.com/COMBINE-lab/salmon/files/6821561/salmon_featurecounts_results.tar.gz). Specifically, please provide at least the following information:. * Which version of salmon was used? **1.5.1**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **bioconda**; * Which reference (e.g. transcriptome) was used? **gencode.vM25.primary_assembly.annotation.gtf**; * Which read files were used? **Lexogen QuantSeq 3' UMI**; * Which which program options were used? **--noLengthCorrection**. **Expected behavior**; Correctly quantify results on deduplicated BAM. . **Desktop (please complete the following information):**; - OS: CentOS 7; - Version `3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`. **Additional context**; There's already an issue with RSEM described in the UMI-tools repository (https://github.com/CGATOxford/UMI-tools/issues/465), maybe that's related. . CC @chripla",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/684
https://github.com/COMBINE-lab/salmon/issues/685:62,Availability,error,error,62,"I am trying to use Salmon and am being returned the following error. Any help here? . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501367_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501367 }; Logs will be written to salmonRes_SRR1501367/logs; [2021-07-16 11:47:01.372] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.372] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.372] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:1117,Availability,Error,Error,1117,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501367_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501367 }; Logs will be written to salmonRes_SRR1501367/logs; [2021-07-16 11:47:01.372] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.372] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.372] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.380] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:2406,Availability,Error,Error,2406,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.380] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.380] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.380] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR1501370/logs; [2021-07-16 11:47:01.393] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.393] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.393] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:3695,Availability,Error,Error,3695,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR1501370/logs; [2021-07-16 11:47:01.393] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.393] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.393] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.393] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.393] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR1501369/logs; [2021-07-16 11:47:01.387] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.387] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.387] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:4984,Availability,Error,Error,4984,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR1501369/logs; [2021-07-16 11:47:01.387] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.387] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.387] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.387] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.387] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR1501372/logs; [2021-07-16 11:47:01.614] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.614] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.614] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:6273,Availability,Error,Error,6273,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR1501372/logs; [2021-07-16 11:47:01.614] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.614] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.614] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.614] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.614] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR1501371/logs; [2021-07-16 11:47:01.610] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.610] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.610] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:7562,Availability,Error,Error,7562,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR1501371/logs; [2021-07-16 11:47:01.610] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.610] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.610] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.610] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.610] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR1501373/logs; [2021-07-16 11:47:01.638] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.638] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.638] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:8851,Availability,Error,Error,8851,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR1501373/logs; [2021-07-16 11:47:01.638] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.638] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.638] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.638] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.638] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR2173891/logs; [2021-07-16 11:47:01.649] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.649] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.649] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [202",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:10138,Availability,Error,Error,10138,"gnment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR2173891/logs; [2021-07-16 11:47:01.649] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.649] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.649] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.649] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [202",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:11425,Availability,Error,Error,11425," [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR1501367/quant.sf': No such file or directory",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:11717,Availability,Error,Error,11717," [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR1501367/quant.sf': No such file or directory",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:11794,Integrability,message,message,11794," [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR1501367/quant.sf': No such file or directory",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:751,Security,validat,validateMappings,751,"I am trying to use Salmon and am being returned the following error. Any help here? . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501367_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501367 }; Logs will be written to salmonRes_SRR1501367/logs; [2021-07-16 11:47:01.372] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.372] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.372] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:2040,Security,validat,validateMappings,2040,"-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.380] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.380] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.380] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:3329,Security,validat,validateMappings,3329,"-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR1501370/logs; [2021-07-16 11:47:01.393] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.393] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.393] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.393] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.393] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:4618,Security,validat,validateMappings,4618,"-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR1501369/logs; [2021-07-16 11:47:01.387] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.387] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.387] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.387] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.387] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:5907,Security,validat,validateMappings,5907,"-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR1501372/logs; [2021-07-16 11:47:01.614] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.614] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.614] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.614] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.614] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:7196,Security,validat,validateMappings,7196,"-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR1501371/logs; [2021-07-16 11:47:01.610] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.610] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.610] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.610] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.610] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:8485,Security,validat,validateMappings,8485,"-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR1501373/logs; [2021-07-16 11:47:01.638] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.638] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.638] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.638] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.638] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:9772,Security,validat,validateMappings,9772,"07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR2173891/logs; [2021-07-16 11:47:01.649] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.649] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.649] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.649] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:11059,Security,validat,validateMappings,11059," [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR1501367/quant.sf': No such file or directory",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:433,Testability,Log,Logs,433,"I am trying to use Salmon and am being returned the following error. Any help here? . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501367_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501367 }; Logs will be written to salmonRes_SRR1501367/logs; [2021-07-16 11:47:01.372] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.372] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.372] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:478,Testability,log,logs,478,"I am trying to use Salmon and am being returned the following error. Any help here? . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501367_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501367 }; Logs will be written to salmonRes_SRR1501367/logs; [2021-07-16 11:47:01.372] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.372] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.372] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:1722,Testability,Log,Logs,1722,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.380] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.380] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.380] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:1767,Testability,log,logs,1767,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.380] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.380] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.380] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:3011,Testability,Log,Logs,3011,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.380] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.380] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR1501370/logs; [2021-07-16 11:47:01.393] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.393] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.393] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.393] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.393] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:3056,Testability,log,logs,3056,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.380] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.380] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR1501370/logs; [2021-07-16 11:47:01.393] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.393] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.393] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.393] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.393] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:4300,Testability,Log,Logs,4300,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.393] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.393] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR1501369/logs; [2021-07-16 11:47:01.387] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.387] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.387] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.387] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.387] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:4345,Testability,log,logs,4345,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.393] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.393] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR1501369/logs; [2021-07-16 11:47:01.387] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.387] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.387] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.387] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.387] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:5589,Testability,Log,Logs,5589,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.387] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.387] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR1501372/logs; [2021-07-16 11:47:01.614] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.614] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.614] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.614] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.614] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:5634,Testability,log,logs,5634,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.387] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.387] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR1501372/logs; [2021-07-16 11:47:01.614] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.614] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.614] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.614] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.614] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:6878,Testability,Log,Logs,6878,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.614] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.614] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR1501371/logs; [2021-07-16 11:47:01.610] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.610] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.610] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.610] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.610] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:6923,Testability,log,logs,6923,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.614] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.614] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR1501371/logs; [2021-07-16 11:47:01.610] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.610] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.610] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.610] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.610] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:8167,Testability,Log,Logs,8167,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.610] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.610] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR1501373/logs; [2021-07-16 11:47:01.638] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.638] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.638] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.638] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.638] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:8212,Testability,log,logs,8212,"[info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.610] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.610] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR1501373/logs; [2021-07-16 11:47:01.638] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.638] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.638] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.638] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.638] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:9454,Testability,Log,Logs,9454,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.638] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.638] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR2173891/logs; [2021-07-16 11:47:01.649] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.649] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.649] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.649] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:9499,Testability,log,logs,9499,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.638] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.638] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR2173891/logs; [2021-07-16 11:47:01.649] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.649] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.649] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.649] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:10741,Testability,Log,Logs,10741,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.649] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/685:10786,Testability,log,logs,10786,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.649] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685
https://github.com/COMBINE-lab/salmon/issues/687:602,Security,access,access,602,"Hi salmon team!. This is my first time trying out generating an index with a decoy (and doing this on an AWS environment, rather than a local HPC cluster) using salmon 1.5.1. I followed the instructions outlined here: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; But, I got stuck at Round 0:. ![image](https://user-images.githubusercontent.com/7998935/126198587-2e726611-69a4-436c-8236-a2d5de0432c4.png). I assume that maxing out the CPUs here may be the problem? Here, I used an Ubuntu Server (18.01) with 64GB and 8CPUs. I've also tried launching a cluster, giving myself access to up to 50 such machines. But, I still get stuck at the same stage. I would appreciate any advice to get around this issue!. Here are the steps I followed:. conda create -n salmon salmon; conda activate salmon. wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_38/gencode.v38.transcripts.fa.gz; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_38/GRCh38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCh38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.v38.transcripts.fa.gz GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon.gencode.v38_transcript_index –gencode",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/687
https://github.com/COMBINE-lab/salmon/issues/688:804,Testability,test,test,804,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. When running alevin in `--rad` mode, the the `cmd_info.json` file is not output (and/or has very limited information). **To Reproduce**. I am working with version 1.5.1 of salmon, run with the following command:; ```; salmon alevin \; -l ISR \; --chromiumV3 \; -1 read1.fastq.gz -2 read2.fastq.gz \; -i splici_index \; --tgMap splici.tx2gene.tsv \; -o test_align \; --rad ; ```. **Expected behavior**; Without the `--rad` flag, there is a `cmd_info.json` file with the expected fields:; ```; {; ""salmon_version"": ""1.5.1"",; ""libType"": ""ISR"",; ""chromiumV3"": [],; ""mates1"": ""read1.fastq.gz"",; ""mates2"": ""read2.fastq.gz"",; ""index"": ""splici_index"",; ""tgMap"": ""splici.tx2gene.tsv"",; ""output"": ""test"",; ""threads"": ""2"",; ""auxDir"": ""aux_info""; }; ```. I would expect an output file with the same information (roughly) when `salmon alevin` is invoked with `--rad`, to aid in tracking file provenance. In prior versions (<= 1.4.0), there was a `cmd.json` file in `--rad` mode, but the contents were only:; ```; {; ""auxDir"": ""aux_info"", ; ""salmon_version"": ""1.4.0"" ; }; ```. (As a side note, the `aux_info` directory is empty in this case, but this may be expected). **Desktop (please complete the following information):**; - OS: OSX; - Version ; ```; ProductName:	macOS; ProductVersion:	11.4; BuildVersion:	20F71; ```. Also run using the biocontainers docker images, with the same result. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/688
https://github.com/COMBINE-lab/salmon/issues/689:898,Availability,error,error,898,"[2021-07-20 01:35:45.238] [jointLog] [warning] Entry with header [chr7] was longer than 200000 nucleotides. Are you certain that we are indexing a transcriptome and not a genome?; [2021-07-20 01:35:48.224] [jointLog] [warning] Entry with header [chr8] was longer than 200000 nucleotides. Are you certain that we are indexing a transcriptome and not a genome?; [2021-07-20 01:35:51.077] [jointLog] [warning] Entry with header [chr9] was longer than 200000 nucleotides. Are you certain that we are indexing a transcriptome and not a genome?; Elapsed time: 56.3501s. Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; Exception : [std::bad_alloc]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting. don't know why there is an error with the command ; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/689
https://github.com/COMBINE-lab/salmon/issues/690:355,Availability,down,downloaded,355,"Hi, ; This is my first time posting here. I have been trying to get Salmon to work for the past few days but kept running into the same issue (shown below). Any help or tips would be greatly appreciated!. **This bug/issue is primarily related to salmon in bulk mode.**. **Bug/issue Description**; I'm trying to use Salmon with precomputed indecies that I downloaded from the refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)), but when I pass in the index and my `.fastq.gz` files into Salmon I am encountering an error (shown below). . **To Reproduce**. - Used Salmon version 1.2.1; - Downloaded the index (aka the reference transcriptome from refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)).; - Attempted to pass in trimmed .fastq.gz files (the files were trimmed using the FASTQC quality control pipeline) using the following command. > `salmon quant -i default -l A -1 <(gunzip -c <path to .fastq.gz file>) -2 <(gunzip -c <path to .fastq.gz file>) --validateMappings -o salmon_output`. - Received error shown below. ![image](https://user-images.githubusercontent.com/67990244/126880016-0c556d6f-a4f6-4a4b-9906-29d9fc06e00d.png). **Expected behavior**; I expected this program to run normally and generate the quantification output files. . **Desktop (please complete the following information):**; - OS: RedHat Linux Enterprise; - More information in screenshot below; ![image](https://user-images.githubusercontent.com/67990244/126880058-d03a8247-7eea-4108-b2c2-0566ff2c975f.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/690
https://github.com/COMBINE-lab/salmon/issues/690:595,Availability,error,error,595,"Hi, ; This is my first time posting here. I have been trying to get Salmon to work for the past few days but kept running into the same issue (shown below). Any help or tips would be greatly appreciated!. **This bug/issue is primarily related to salmon in bulk mode.**. **Bug/issue Description**; I'm trying to use Salmon with precomputed indecies that I downloaded from the refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)), but when I pass in the index and my `.fastq.gz` files into Salmon I am encountering an error (shown below). . **To Reproduce**. - Used Salmon version 1.2.1; - Downloaded the index (aka the reference transcriptome from refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)).; - Attempted to pass in trimmed .fastq.gz files (the files were trimmed using the FASTQC quality control pipeline) using the following command. > `salmon quant -i default -l A -1 <(gunzip -c <path to .fastq.gz file>) -2 <(gunzip -c <path to .fastq.gz file>) --validateMappings -o salmon_output`. - Received error shown below. ![image](https://user-images.githubusercontent.com/67990244/126880016-0c556d6f-a4f6-4a4b-9906-29d9fc06e00d.png). **Expected behavior**; I expected this program to run normally and generate the quantification output files. . **Desktop (please complete the following information):**; - OS: RedHat Linux Enterprise; - More information in screenshot below; ![image](https://user-images.githubusercontent.com/67990244/126880058-d03a8247-7eea-4108-b2c2-0566ff2c975f.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/690
https://github.com/COMBINE-lab/salmon/issues/690:667,Availability,Down,Downloaded,667,"Hi, ; This is my first time posting here. I have been trying to get Salmon to work for the past few days but kept running into the same issue (shown below). Any help or tips would be greatly appreciated!. **This bug/issue is primarily related to salmon in bulk mode.**. **Bug/issue Description**; I'm trying to use Salmon with precomputed indecies that I downloaded from the refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)), but when I pass in the index and my `.fastq.gz` files into Salmon I am encountering an error (shown below). . **To Reproduce**. - Used Salmon version 1.2.1; - Downloaded the index (aka the reference transcriptome from refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)).; - Attempted to pass in trimmed .fastq.gz files (the files were trimmed using the FASTQC quality control pipeline) using the following command. > `salmon quant -i default -l A -1 <(gunzip -c <path to .fastq.gz file>) -2 <(gunzip -c <path to .fastq.gz file>) --validateMappings -o salmon_output`. - Received error shown below. ![image](https://user-images.githubusercontent.com/67990244/126880016-0c556d6f-a4f6-4a4b-9906-29d9fc06e00d.png). **Expected behavior**; I expected this program to run normally and generate the quantification output files. . **Desktop (please complete the following information):**; - OS: RedHat Linux Enterprise; - More information in screenshot below; ![image](https://user-images.githubusercontent.com/67990244/126880058-d03a8247-7eea-4108-b2c2-0566ff2c975f.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/690
https://github.com/COMBINE-lab/salmon/issues/690:1166,Availability,error,error,1166,"Hi, ; This is my first time posting here. I have been trying to get Salmon to work for the past few days but kept running into the same issue (shown below). Any help or tips would be greatly appreciated!. **This bug/issue is primarily related to salmon in bulk mode.**. **Bug/issue Description**; I'm trying to use Salmon with precomputed indecies that I downloaded from the refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)), but when I pass in the index and my `.fastq.gz` files into Salmon I am encountering an error (shown below). . **To Reproduce**. - Used Salmon version 1.2.1; - Downloaded the index (aka the reference transcriptome from refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)).; - Attempted to pass in trimmed .fastq.gz files (the files were trimmed using the FASTQC quality control pipeline) using the following command. > `salmon quant -i default -l A -1 <(gunzip -c <path to .fastq.gz file>) -2 <(gunzip -c <path to .fastq.gz file>) --validateMappings -o salmon_output`. - Received error shown below. ![image](https://user-images.githubusercontent.com/67990244/126880016-0c556d6f-a4f6-4a4b-9906-29d9fc06e00d.png). **Expected behavior**; I expected this program to run normally and generate the quantification output files. . **Desktop (please complete the following information):**; - OS: RedHat Linux Enterprise; - More information in screenshot below; ![image](https://user-images.githubusercontent.com/67990244/126880058-d03a8247-7eea-4108-b2c2-0566ff2c975f.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/690
https://github.com/COMBINE-lab/salmon/issues/690:964,Deployability,pipeline,pipeline,964,"Hi, ; This is my first time posting here. I have been trying to get Salmon to work for the past few days but kept running into the same issue (shown below). Any help or tips would be greatly appreciated!. **This bug/issue is primarily related to salmon in bulk mode.**. **Bug/issue Description**; I'm trying to use Salmon with precomputed indecies that I downloaded from the refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)), but when I pass in the index and my `.fastq.gz` files into Salmon I am encountering an error (shown below). . **To Reproduce**. - Used Salmon version 1.2.1; - Downloaded the index (aka the reference transcriptome from refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)).; - Attempted to pass in trimmed .fastq.gz files (the files were trimmed using the FASTQC quality control pipeline) using the following command. > `salmon quant -i default -l A -1 <(gunzip -c <path to .fastq.gz file>) -2 <(gunzip -c <path to .fastq.gz file>) --validateMappings -o salmon_output`. - Received error shown below. ![image](https://user-images.githubusercontent.com/67990244/126880016-0c556d6f-a4f6-4a4b-9906-29d9fc06e00d.png). **Expected behavior**; I expected this program to run normally and generate the quantification output files. . **Desktop (please complete the following information):**; - OS: RedHat Linux Enterprise; - More information in screenshot below; ![image](https://user-images.githubusercontent.com/67990244/126880058-d03a8247-7eea-4108-b2c2-0566ff2c975f.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/690
https://github.com/COMBINE-lab/salmon/issues/690:1119,Security,validat,validateMappings,1119,"Hi, ; This is my first time posting here. I have been trying to get Salmon to work for the past few days but kept running into the same issue (shown below). Any help or tips would be greatly appreciated!. **This bug/issue is primarily related to salmon in bulk mode.**. **Bug/issue Description**; I'm trying to use Salmon with precomputed indecies that I downloaded from the refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)), but when I pass in the index and my `.fastq.gz` files into Salmon I am encountering an error (shown below). . **To Reproduce**. - Used Salmon version 1.2.1; - Downloaded the index (aka the reference transcriptome from refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)).; - Attempted to pass in trimmed .fastq.gz files (the files were trimmed using the FASTQC quality control pipeline) using the following command. > `salmon quant -i default -l A -1 <(gunzip -c <path to .fastq.gz file>) -2 <(gunzip -c <path to .fastq.gz file>) --validateMappings -o salmon_output`. - Received error shown below. ![image](https://user-images.githubusercontent.com/67990244/126880016-0c556d6f-a4f6-4a4b-9906-29d9fc06e00d.png). **Expected behavior**; I expected this program to run normally and generate the quantification output files. . **Desktop (please complete the following information):**; - OS: RedHat Linux Enterprise; - More information in screenshot below; ![image](https://user-images.githubusercontent.com/67990244/126880058-d03a8247-7eea-4108-b2c2-0566ff2c975f.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/690
https://github.com/COMBINE-lab/salmon/issues/691:1108,Availability,down,downloaded,1108," concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add an",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691
https://github.com/COMBINE-lab/salmon/issues/691:181,Deployability,update,updates,181,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin-fry. **Describe the bug**; A clear and concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691
https://github.com/COMBINE-lab/salmon/issues/691:1087,Deployability,install,installed,1087," concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add an",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691
https://github.com/COMBINE-lab/salmon/issues/691:536,Testability,test,tested,536,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin-fry. **Describe the bug**; A clear and concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691
https://github.com/COMBINE-lab/salmon/issues/691:122,Usability,clear,clear,122,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin-fry. **Describe the bug**; A clear and concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691
https://github.com/COMBINE-lab/salmon/issues/691:1447,Usability,clear,clear,1447,"; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691
https://github.com/COMBINE-lab/salmon/pull/692:462,Deployability,release,release,462,"The soft-clipping feature is improved in this pull request and accurate CIGAR calculation can be done by passing the corresponding user flag to salmon. This PR uses a new version of pufferfish repository that has these new features implemented. Here's a summary of the changes:; - The soft-clipping can be enabled by `--softclip` flag in the selective-alignment mode of the quant command, same as before. ; - `--softclipOverhangs` flag is deprecated and in this release will have the same effect as `--softclip`.; - Accurate CIGAR calculation can be enabled by the new `--computeCIGAR` flag in the selective-alignment mode of the quant command.; - Another new argument `--maxSoftclipFraction` restricts the fraction of the soft-clipped part of a read. An alignment is reported if and only if `alignment_score >= minScoreFraction * max_alignment_score` where `max_alignment_score = match_score * (read_length – softclip_length)`. This threshold applies separately to the mates of a paired-end read and the soft-clip length on a mate will not affect the maximum allowed soft-clip length on the other mate. ; - If the total length of the soft-clipped regions on a read (in the beginning and the end of the read) is greater than maxSoftclipFraction * read_length, another chance will be given to the read to be aligned end-to-end. If the end-to-end alignment is acceptable based on its score, it will be reported. ; - The new `--endBonus` argument specifies how strict the soft-clipping decisions are made in the program. It specifies the extra bonus score that is added to the end-to-end alignment score, when the alignment reaches the end of query. The larger this value is set, the more likely that soft-clipping is not reported as part of the alignment of a particular query because getting to the end of the query would be preferred. . ** Note that pufferfish library is installed from a branch at the moment and it should be set to the new version of pufferfish once it is released.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/692
https://github.com/COMBINE-lab/salmon/pull/692:1872,Deployability,install,installed,1872,"The soft-clipping feature is improved in this pull request and accurate CIGAR calculation can be done by passing the corresponding user flag to salmon. This PR uses a new version of pufferfish repository that has these new features implemented. Here's a summary of the changes:; - The soft-clipping can be enabled by `--softclip` flag in the selective-alignment mode of the quant command, same as before. ; - `--softclipOverhangs` flag is deprecated and in this release will have the same effect as `--softclip`.; - Accurate CIGAR calculation can be enabled by the new `--computeCIGAR` flag in the selective-alignment mode of the quant command.; - Another new argument `--maxSoftclipFraction` restricts the fraction of the soft-clipped part of a read. An alignment is reported if and only if `alignment_score >= minScoreFraction * max_alignment_score` where `max_alignment_score = match_score * (read_length – softclip_length)`. This threshold applies separately to the mates of a paired-end read and the soft-clip length on a mate will not affect the maximum allowed soft-clip length on the other mate. ; - If the total length of the soft-clipped regions on a read (in the beginning and the end of the read) is greater than maxSoftclipFraction * read_length, another chance will be given to the read to be aligned end-to-end. If the end-to-end alignment is acceptable based on its score, it will be reported. ; - The new `--endBonus` argument specifies how strict the soft-clipping decisions are made in the program. It specifies the extra bonus score that is added to the end-to-end alignment score, when the alignment reaches the end of query. The larger this value is set, the more likely that soft-clipping is not reported as part of the alignment of a particular query because getting to the end of the query would be preferred. . ** Note that pufferfish library is installed from a branch at the moment and it should be set to the new version of pufferfish once it is released.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/692
https://github.com/COMBINE-lab/salmon/pull/692:1975,Deployability,release,released,1975,"The soft-clipping feature is improved in this pull request and accurate CIGAR calculation can be done by passing the corresponding user flag to salmon. This PR uses a new version of pufferfish repository that has these new features implemented. Here's a summary of the changes:; - The soft-clipping can be enabled by `--softclip` flag in the selective-alignment mode of the quant command, same as before. ; - `--softclipOverhangs` flag is deprecated and in this release will have the same effect as `--softclip`.; - Accurate CIGAR calculation can be enabled by the new `--computeCIGAR` flag in the selective-alignment mode of the quant command.; - Another new argument `--maxSoftclipFraction` restricts the fraction of the soft-clipped part of a read. An alignment is reported if and only if `alignment_score >= minScoreFraction * max_alignment_score` where `max_alignment_score = match_score * (read_length – softclip_length)`. This threshold applies separately to the mates of a paired-end read and the soft-clip length on a mate will not affect the maximum allowed soft-clip length on the other mate. ; - If the total length of the soft-clipped regions on a read (in the beginning and the end of the read) is greater than maxSoftclipFraction * read_length, another chance will be given to the read to be aligned end-to-end. If the end-to-end alignment is acceptable based on its score, it will be reported. ; - The new `--endBonus` argument specifies how strict the soft-clipping decisions are made in the program. It specifies the extra bonus score that is added to the end-to-end alignment score, when the alignment reaches the end of query. The larger this value is set, the more likely that soft-clipping is not reported as part of the alignment of a particular query because getting to the end of the query would be preferred. . ** Note that pufferfish library is installed from a branch at the moment and it should be set to the new version of pufferfish once it is released.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/692
https://github.com/COMBINE-lab/salmon/issues/693:97,Availability,recover,recovered,97,"First off, thanks for the great tool!. I've been looking for a way to quantify the length of all recovered transcripts for single-cell RNA-Seq data. The salmon quant approach that generates a quant.sf is the equivalent of what I need. Since I can't specify UMI information with salmon quant, I was curious whether this output is available for alevin. Just can't seem to find anything online after scouring the web for several hours. . Thank you for any insight you can provide,; Aaron",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/693
https://github.com/COMBINE-lab/salmon/issues/693:329,Availability,avail,available,329,"First off, thanks for the great tool!. I've been looking for a way to quantify the length of all recovered transcripts for single-cell RNA-Seq data. The salmon quant approach that generates a quant.sf is the equivalent of what I need. Since I can't specify UMI information with salmon quant, I was curious whether this output is available for alevin. Just can't seem to find anything online after scouring the web for several hours. . Thank you for any insight you can provide,; Aaron",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/693
https://github.com/COMBINE-lab/salmon/issues/693:97,Safety,recover,recovered,97,"First off, thanks for the great tool!. I've been looking for a way to quantify the length of all recovered transcripts for single-cell RNA-Seq data. The salmon quant approach that generates a quant.sf is the equivalent of what I need. Since I can't specify UMI information with salmon quant, I was curious whether this output is available for alevin. Just can't seem to find anything online after scouring the web for several hours. . Thank you for any insight you can provide,; Aaron",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/693
https://github.com/COMBINE-lab/salmon/issues/694:126,Availability,error,error,126,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error when I try to update my index using salmon v1.4.0 or 1.5.1; Version Server Response: Not Found; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; However the index is working with salmon version 0.8.2 . **To Reproduce**; This is how I ran it:; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa -i SalmonIndex --type quasi -k 31; ; This is the dropbox link to the galGal6.gene+cluster+repBase+tRNA.fa https://www.dropbox.com/s/nb39rpydanlxr3p/galGal6.gene%2Bcluster%2BrepBase%2BtRNA.fa?dl=0 file",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/694
https://github.com/COMBINE-lab/salmon/issues/694:241,Availability,Error,Error,241,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error when I try to update my index using salmon v1.4.0 or 1.5.1; Version Server Response: Not Found; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; However the index is working with salmon version 0.8.2 . **To Reproduce**; This is how I ran it:; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa -i SalmonIndex --type quasi -k 31; ; This is the dropbox link to the galGal6.gene+cluster+repBase+tRNA.fa https://www.dropbox.com/s/nb39rpydanlxr3p/galGal6.gene%2Bcluster%2BrepBase%2BtRNA.fa?dl=0 file",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/694
https://github.com/COMBINE-lab/salmon/issues/694:146,Deployability,update,update,146,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error when I try to update my index using salmon v1.4.0 or 1.5.1; Version Server Response: Not Found; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; However the index is working with salmon version 0.8.2 . **To Reproduce**; This is how I ran it:; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa -i SalmonIndex --type quasi -k 31; ; This is the dropbox link to the galGal6.gene+cluster+repBase+tRNA.fa https://www.dropbox.com/s/nb39rpydanlxr3p/galGal6.gene%2Bcluster%2BrepBase%2BtRNA.fa?dl=0 file",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/694
https://github.com/COMBINE-lab/salmon/pull/695:315,Energy Efficiency,adapt,adaptor,315,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695
https://github.com/COMBINE-lab/salmon/pull/695:18,Integrability,protocol,protocol,18,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695
https://github.com/COMBINE-lab/salmon/pull/695:109,Integrability,protocol,protocol,109,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695
https://github.com/COMBINE-lab/salmon/pull/695:594,Integrability,protocol,protocol,594,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695
https://github.com/COMBINE-lab/salmon/pull/695:315,Modifiability,adapt,adaptor,315,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695
https://github.com/COMBINE-lab/salmon/pull/695:703,Safety,avoid,avoid,703,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695
https://github.com/COMBINE-lab/salmon/pull/695:858,Testability,test,tested,858,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695
https://github.com/COMBINE-lab/salmon/issues/696:1630,Availability,Error,Error,1630,"## [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder, it only takes up 126 bits. I have tried generating index's w/ various k-mer lengths, w/ and w/o full genome decoy's, and allocating anywhere from 8-40Gb of RAM to the process. . I am not sure if my indexes are failing to generate. I get no output messaging saying they failed. . Here is the output from my last index build attempt w/o decoy's. Run time in the order of 15min or so:. [2021-08-20 18:04:11.408] [puff::index::jointLog] [warning] Removed 739 transcripts that were sequence duplicates of indexed transcripts.; [2021-08-20 18:04:11.408] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` fla",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:7867,Availability,down,downloaded,7867,"one building index; for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ; Bitarray 528992256 bits (100.00 %) (array + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:8861,Availability,down,download,8861,"rray + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A simpler option would be appreciated. . Thanks!. UPDATE: This was solved by using an index generated by a friend So apparently the issue is w/ building the index.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:7846,Deployability,install,installed,7846,"one building index; for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ; Bitarray 528992256 bits (100.00 %) (array + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:8937,Deployability,UPDATE,UPDATE,8937,"rray + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A simpler option would be appreciated. . Thanks!. UPDATE: This was solved by using an index generated by a friend So apparently the issue is w/ building the index.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:4894,Integrability,wrap,wrapping,4894,"49 kmerInfo.size():563056; approximateContigTotalLength: 72618120; counters for complex kmers:; (prec>1 & succ>1)=21819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of ones in rank vector: 717833; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory indexs/alt_long_index; size = 122492815; -----------------------------------------; | Loading contigs | Time = 11.032 ms; -----------------------------------------; size = 122492815; -----------------------------------------; | Loading contig boundaries | Time = 5.8509 ms; -----------------------------------------; Number of ones: 717833; Number of ones per inventory item: 512; Inventory entries filled: 1403; 717833; [2021-08-20 18:05:53.775] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2021-08-20 18:05:53.780] [puff::index::jointLog] [info] contig count for validation: 717,833; [2021-08-20 18:05:53.943] [puff::index::jointLog] [info] Total # of Contigs : 717,833; [2021-08-20 18:05:53.944] [puff::index::jointLog] [info] Total # of numerical Contigs : 717,833; [2021-08-20 18:05:53.963] [puff::index::jointLog] [info] Total # of contig vec entries: 3,341,414; [2021-08-20 18:05:53.964] [puff::index::jointLog] [info] bits per offset entry 22; [2021-08-20 18:05:54.037] [puff::index::jointLog] [info] Done constructing the contig vector. 717834; [2021-08-20 18:05:54.564] [puff::index::jointLog] [info] # segments = 717,833; [2021-08-20 18:05:54.564] [puff::index::jointLog] [info] total length = 122,492,815; [2021-08-20 18:05:54.582] [puff::index::jointLog] [info] Reading the reference files ...; [2021-08-20 18:05:55.151] [puff::index::jointLog] [info] positional integer width = 27; [2021-08-20 18:05:55.151] [puff::index::jointLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:4497,Performance,Load,Loading,4497,"4	0; True junctions count = 472636; False junctions count = 799354; Hash table size = 1271990; Candidate marks count = 5149133; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 3362277; Edges construction time: 4; --------------------------------------------------------------------------------; Distinct junctions = 472636. allowedIn: 21; Max Junction ID: 563055; seen.size():4504449 kmerInfo.size():563056; approximateContigTotalLength: 72618120; counters for complex kmers:; (prec>1 & succ>1)=21819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of ones in rank vector: 717833; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory indexs/alt_long_index; size = 122492815; -----------------------------------------; | Loading contigs | Time = 11.032 ms; -----------------------------------------; size = 122492815; -----------------------------------------; | Loading contig boundaries | Time = 5.8509 ms; -----------------------------------------; Number of ones: 717833; Number of ones per inventory item: 512; Inventory entries filled: 1403; 717833; [2021-08-20 18:05:53.775] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2021-08-20 18:05:53.780] [puff::index::jointLog] [info] contig count for validation: 717,833; [2021-08-20 18:05:53.943] [puff::index::jointLog] [info] Total # of Contigs : 717,833; [2021-08-20 18:05:53.944] [puff::index::jointLog] [info] Total # of numerical Contigs : 717,833; [2021-08-20 18:05:53.963] [puff::index::jointLog] [info] Total # of contig vec entries: 3,341,414; [2021-08-20 18:05:53.964] [puff::index::jointLog] [info] bits per offset entry 22; [2021-08-20 18:05:54.03",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:4639,Performance,Load,Loading,4639,"---------------------------------------; Reallocating bifurcations time: 0; True marks count: 3362277; Edges construction time: 4; --------------------------------------------------------------------------------; Distinct junctions = 472636. allowedIn: 21; Max Junction ID: 563055; seen.size():4504449 kmerInfo.size():563056; approximateContigTotalLength: 72618120; counters for complex kmers:; (prec>1 & succ>1)=21819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of ones in rank vector: 717833; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory indexs/alt_long_index; size = 122492815; -----------------------------------------; | Loading contigs | Time = 11.032 ms; -----------------------------------------; size = 122492815; -----------------------------------------; | Loading contig boundaries | Time = 5.8509 ms; -----------------------------------------; Number of ones: 717833; Number of ones per inventory item: 512; Inventory entries filled: 1403; 717833; [2021-08-20 18:05:53.775] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2021-08-20 18:05:53.780] [puff::index::jointLog] [info] contig count for validation: 717,833; [2021-08-20 18:05:53.943] [puff::index::jointLog] [info] Total # of Contigs : 717,833; [2021-08-20 18:05:53.944] [puff::index::jointLog] [info] Total # of numerical Contigs : 717,833; [2021-08-20 18:05:53.963] [puff::index::jointLog] [info] Total # of contig vec entries: 3,341,414; [2021-08-20 18:05:53.964] [puff::index::jointLog] [info] bits per offset entry 22; [2021-08-20 18:05:54.037] [puff::index::jointLog] [info] Done constructing the contig vector. 717834; [2021-08-20 18:05:54.564] [puff::index::jointLog] [info] # segments = 717,833; [2021-08-20 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:818,Security,validat,validateMappings,818,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk. **Describe the bug**; A clear and concise description of what the bug is.; After building an index of the most recent build of the ensemble mouse genome (39) with salmon, running quant failed immediately. The output from the failed salmon quant is: . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mnt/home/oconn341/salmon/indexs/alt_long_index }; ### [ libType ] => { A }; ### [ mates1 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz }; ### [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:1264,Security,validat,validateMappings,1264,"quant failed immediately. The output from the failed salmon quant is: . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mnt/home/oconn341/salmon/indexs/alt_long_index }; ### [ libType ] => { A }; ### [ mates1 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz }; ### [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder, it only takes up 126 bits. I have tried generating index's w/ various k-mer lengths, w/ and w/o full genome decoy's, and allocating anywhere from 8-40Gb of RAM to the process. . I am not sure if my indexes are failing to generate. I get no output messaging saying they ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:3181,Security,Hash,Hash,3181,"to the process. . I am not sure if my indexes are failing to generate. I get no output messaging saying they failed. . Here is the output from my last index build attempt w/o decoy's. Run time in the order of 15min or so:. [2021-08-20 18:04:11.408] [puff::index::jointLog] [warning] Removed 739 transcripts that were sequence duplicates of indexed transcripts.; [2021-08-20 18:04:11.408] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-08-20 18:04:11.410] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2021-08-20 18:04:11.410] [puff::index::jointLog] [info] Clipped poly-A tails from 647 transcripts; wrote 116708 cleaned references; [2021-08-20 18:04:17.164] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2021-08-20 18:04:19.369] [puff::index::jointLog] [info] ntHll estimated 100414800 distinct k-mers, setting filter size to 2^31; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 2147483648; Capacity = 2; Files: ; indexs/alt_long_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:2147483648; Pass	Filling	Filtering; 1	15	55	; 2	4	0; True junctions count = 472636; False junctions count = 799354; Hash table size = 1271990; Candidate marks count = 5149133; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 3362277; Edges construction time: 4; --------------------------------------------------------------------------------; Distinct junctions = 472636. allowedIn: 21; Max Junction ID: 563055; seen.size():4504449 kmerInfo.size():563056; approximateContigTotalLength: 72618120; counters for complex kmers:; (prec>1 & succ>1)=21819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:3499,Security,Hash,Hash,3499,"::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-08-20 18:04:11.410] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2021-08-20 18:04:11.410] [puff::index::jointLog] [info] Clipped poly-A tails from 647 transcripts; wrote 116708 cleaned references; [2021-08-20 18:04:17.164] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2021-08-20 18:04:19.369] [puff::index::jointLog] [info] ntHll estimated 100414800 distinct k-mers, setting filter size to 2^31; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 2147483648; Capacity = 2; Files: ; indexs/alt_long_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:2147483648; Pass	Filling	Filtering; 1	15	55	; 2	4	0; True junctions count = 472636; False junctions count = 799354; Hash table size = 1271990; Candidate marks count = 5149133; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 3362277; Edges construction time: 4; --------------------------------------------------------------------------------; Distinct junctions = 472636. allowedIn: 21; Max Junction ID: 563055; seen.size():4504449 kmerInfo.size():563056; approximateContigTotalLength: 72618120; counters for complex kmers:; (prec>1 & succ>1)=21819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of ones in rank vector: 717833; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory indexs/alt_long_index; size = 122492815; -----------------------------------------; | Loading contigs | Time = 11.032 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:5021,Security,validat,validation,5021,"819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of ones in rank vector: 717833; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory indexs/alt_long_index; size = 122492815; -----------------------------------------; | Loading contigs | Time = 11.032 ms; -----------------------------------------; size = 122492815; -----------------------------------------; | Loading contig boundaries | Time = 5.8509 ms; -----------------------------------------; Number of ones: 717833; Number of ones per inventory item: 512; Inventory entries filled: 1403; 717833; [2021-08-20 18:05:53.775] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2021-08-20 18:05:53.780] [puff::index::jointLog] [info] contig count for validation: 717,833; [2021-08-20 18:05:53.943] [puff::index::jointLog] [info] Total # of Contigs : 717,833; [2021-08-20 18:05:53.944] [puff::index::jointLog] [info] Total # of numerical Contigs : 717,833; [2021-08-20 18:05:53.963] [puff::index::jointLog] [info] Total # of contig vec entries: 3,341,414; [2021-08-20 18:05:53.964] [puff::index::jointLog] [info] bits per offset entry 22; [2021-08-20 18:05:54.037] [puff::index::jointLog] [info] Done constructing the contig vector. 717834; [2021-08-20 18:05:54.564] [puff::index::jointLog] [info] # segments = 717,833; [2021-08-20 18:05:54.564] [puff::index::jointLog] [info] total length = 122,492,815; [2021-08-20 18:05:54.582] [puff::index::jointLog] [info] Reading the reference files ...; [2021-08-20 18:05:55.151] [puff::index::jointLog] [info] positional integer width = 27; [2021-08-20 18:05:55.151] [puff::index::jointLog] [info] seqSize = 122,492,815; [2021-08-20 18:05:55.152] [puff::index::jointLog] [info] rankSize = 122,492,815; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:7072,Security,hash,hash,7072,"info] edgeVecSize = 0; [2021-08-20 18:05:55.152] [puff::index::jointLog] [info] num keys = 100,957,825; [Building BooPHF] 100 % elapsed: 0 min 8 sec remaining: 0 min 0 sec; [2021-08-20 18:06:03.447] [puff::index::jointLog] [info] mphf size = 63.0608 MB; [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk size = 61,246,408; [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk 0 = [0, 61,246,408); [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk 1 = [61,246,408, 122,492,785); [2021-08-20 18:06:13.744] [puff::index::jointLog] [info] finished populating pos vector; [2021-08-20 18:06:13.747] [puff::index::jointLog] [info] writing index components; [2021-08-20 18:06:13.876] [puff::index::jointLog] [info] finished writing dense pufferfish index; [2021-08-20 18:06:13.890] [jLog] [info] done building index; for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ; Bitarray 528992256 bits (100.00 %) (array + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:7106,Security,hash,hash,7106,"8:05:55.152] [puff::index::jointLog] [info] num keys = 100,957,825; [Building BooPHF] 100 % elapsed: 0 min 8 sec remaining: 0 min 0 sec; [2021-08-20 18:06:03.447] [puff::index::jointLog] [info] mphf size = 63.0608 MB; [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk size = 61,246,408; [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk 0 = [0, 61,246,408); [2021-08-20 18:06:03.479] [puff::index::jointLog] [info] chunk 1 = [61,246,408, 122,492,785); [2021-08-20 18:06:13.744] [puff::index::jointLog] [info] finished populating pos vector; [2021-08-20 18:06:13.747] [puff::index::jointLog] [info] writing index components; [2021-08-20 18:06:13.876] [puff::index::jointLog] [info] finished writing dense pufferfish index; [2021-08-20 18:06:13.890] [jLog] [info] done building index; for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ; Bitarray 528992256 bits (100.00 %) (array + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:7568,Security,validat,validateMappings,7568,"2021-08-20 18:06:13.744] [puff::index::jointLog] [info] finished populating pos vector; [2021-08-20 18:06:13.747] [puff::index::jointLog] [info] writing index components; [2021-08-20 18:06:13.876] [puff::index::jointLog] [info] finished writing dense pufferfish index; [2021-08-20 18:06:13.890] [jLog] [info] done building index; for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ; Bitarray 528992256 bits (100.00 %) (array + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:933,Testability,Log,Logs,933,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk. **Describe the bug**; A clear and concise description of what the bug is.; After building an index of the most recent build of the ensemble mouse genome (39) with salmon, running quant failed immediately. The output from the failed salmon quant is: . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mnt/home/oconn341/salmon/indexs/alt_long_index }; ### [ libType ] => { A }; ### [ mates1 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz }; ### [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:990,Testability,log,logs,990,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk. **Describe the bug**; A clear and concise description of what the bug is.; After building an index of the most recent build of the ensemble mouse genome (39) with salmon, running quant failed immediately. The output from the failed salmon quant is: . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mnt/home/oconn341/salmon/indexs/alt_long_index }; ### [ libType ] => { A }; ### [ mates1 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz }; ### [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:116,Usability,clear,clear,116,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk. **Describe the bug**; A clear and concise description of what the bug is.; After building an index of the most recent build of the ensemble mouse genome (39) with salmon, running quant failed immediately. The output from the failed salmon quant is: . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mnt/home/oconn341/salmon/indexs/alt_long_index }; ### [ libType ] => { A }; ### [ mates1 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz }; ### [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:8134,Usability,clear,clear,8134,"rray + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A simpler option would be appreciated. . Thanks!. UPDATE: This was solved by using an index generated by a friend So apparently the issue is w/ building the index.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/696:8889,Usability,simpl,simpler,8889,"rray + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A simpler option would be appreciated. . Thanks!. UPDATE: This was solved by using an index generated by a friend So apparently the issue is w/ building the index.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696
https://github.com/COMBINE-lab/salmon/issues/697:54,Safety,predict,predict,54,"Hi, thanks in advance.; I previously used prodigal to predict the protein sequence of specific functional genes in a metagenomic data set. I was not sure if nucleic acid sequence (DNA) generated by prodigal can be used directly as input data for indexing.; Looking forward to your reply.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/697
https://github.com/COMBINE-lab/salmon/issues/698:369,Availability,error,error,369,"Hi, who's concerning,; I was using alevin to run on a PBMC 10xv3 dataset.; Here is my script,; salmon alevin -lISR -1 $fastq1 -2 $fastq2 --chromiumV3 -i $work_p/salmon_index_human -p 12 -o output --tgMap $data_p/test12.tsv --keepCBFraction 1. I kept all CB to make sure I can use emptyDrops. Also, here this index is SAF index followed by your tutorial. Then I got the error message like:; [alevin.log](https://github.com/COMBINE-lab/salmon/files/7035475/alevin.log). Is there any suggestion on how to solve this?; Cheers,; Chloe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/698
https://github.com/COMBINE-lab/salmon/issues/698:375,Integrability,message,message,375,"Hi, who's concerning,; I was using alevin to run on a PBMC 10xv3 dataset.; Here is my script,; salmon alevin -lISR -1 $fastq1 -2 $fastq2 --chromiumV3 -i $work_p/salmon_index_human -p 12 -o output --tgMap $data_p/test12.tsv --keepCBFraction 1. I kept all CB to make sure I can use emptyDrops. Also, here this index is SAF index followed by your tutorial. Then I got the error message like:; [alevin.log](https://github.com/COMBINE-lab/salmon/files/7035475/alevin.log). Is there any suggestion on how to solve this?; Cheers,; Chloe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/698
https://github.com/COMBINE-lab/salmon/issues/698:398,Testability,log,log,398,"Hi, who's concerning,; I was using alevin to run on a PBMC 10xv3 dataset.; Here is my script,; salmon alevin -lISR -1 $fastq1 -2 $fastq2 --chromiumV3 -i $work_p/salmon_index_human -p 12 -o output --tgMap $data_p/test12.tsv --keepCBFraction 1. I kept all CB to make sure I can use emptyDrops. Also, here this index is SAF index followed by your tutorial. Then I got the error message like:; [alevin.log](https://github.com/COMBINE-lab/salmon/files/7035475/alevin.log). Is there any suggestion on how to solve this?; Cheers,; Chloe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/698
https://github.com/COMBINE-lab/salmon/issues/698:462,Testability,log,log,462,"Hi, who's concerning,; I was using alevin to run on a PBMC 10xv3 dataset.; Here is my script,; salmon alevin -lISR -1 $fastq1 -2 $fastq2 --chromiumV3 -i $work_p/salmon_index_human -p 12 -o output --tgMap $data_p/test12.tsv --keepCBFraction 1. I kept all CB to make sure I can use emptyDrops. Also, here this index is SAF index followed by your tutorial. Then I got the error message like:; [alevin.log](https://github.com/COMBINE-lab/salmon/files/7035475/alevin.log). Is there any suggestion on how to solve this?; Cheers,; Chloe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/698
https://github.com/COMBINE-lab/salmon/issues/699:637,Availability,down,downloaded,637,"Hey @rob-p and @k3yavi! Avi and I have chatted a bit about this offline, and [I've commented about this in the past](https://github.com/COMBINE-lab/salmon/discussions/629#discussioncomment-777414), but I'm currently attempting to extend alevin's use to the newer combinatorial indexing experiments like [SPLiT-seq](https://science.sciencemag.org/content/360/6385/176) or the commercial solution, [ParseBio](https://www.parsebiosciences.com/) (the biotech formerly known as SplitBio). Now that you support different barcode geometries and allow the user to specify where these barcodes should be expected, this _should_ be doable. . I've downloaded the [raw data from the original SPLiT-seq paper](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3017261), and we have some ParseBio data of our own; my goal is to help you all write a vignette on this once we get the details worked out. . In short, the R1 file contains cDNA sequence, and R2 contains a 10bp UMI followed by 3 different barcodes in the following arrangements (note: ParseBio seems to shift BC1 up a few bp, to 79-86):; - UMI: 1-10; - BC3: 11-18; - BC2: 49-56; - BC1: 87-94. The intervening bases are a combination of common and variable sequences. The other wrinkle with these approaches is that the cDNA can be amplified using either oligo-dT or random hexamer barcodes. The net effect of this is that BC1 can be one of two options, and some barcode combinations need to be pooled to represent the same cell. For example:. AACGTGAT-CTGTAGCC-ACACAGAA; GATAGACA-CTGTAGCC-ACACAGAA. may be the same cell, amplified by two different means. . We know how the BC1s are paired, so Avi suggested pre-processing the R2 FASTQ file such that we locate random hexamer BC1 sequences and modify them to the matched oligo-dT sequence. In the above example, we'd correct some R2 reads that contain ""GATAGACA"" in the 87-94 position to ""AACGTGAT"". I [wrote a script](https://github.com/jeremymsimon/SPLITseq) (in perl because I'm old-school) that d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:2872,Availability,down,downstream,2872,"hat contain ""GATAGACA"" in the 87-94 position to ""AACGTGAT"". I [wrote a script](https://github.com/jeremymsimon/SPLITseq) (in perl because I'm old-school) that does this and allows for mismatches within 1 hamming distance. I'm sure someone could port this to python, rust, or C/C++ and speed this step up substantially, but it seems to work fine. The next step is to run alevin. I've done so using salmon v1.5.2 with the following parameters (for a ParseBio run), reversing R1/R2 as per Avi's suggestion:; ```; salmon alevin -l ISR \; --expectCells 9000 \; --read-geometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:230,Modifiability,extend,extend,230,"Hey @rob-p and @k3yavi! Avi and I have chatted a bit about this offline, and [I've commented about this in the past](https://github.com/COMBINE-lab/salmon/discussions/629#discussioncomment-777414), but I'm currently attempting to extend alevin's use to the newer combinatorial indexing experiments like [SPLiT-seq](https://science.sciencemag.org/content/360/6385/176) or the commercial solution, [ParseBio](https://www.parsebiosciences.com/) (the biotech formerly known as SplitBio). Now that you support different barcode geometries and allow the user to specify where these barcodes should be expected, this _should_ be doable. . I've downloaded the [raw data from the original SPLiT-seq paper](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3017261), and we have some ParseBio data of our own; my goal is to help you all write a vignette on this once we get the details worked out. . In short, the R1 file contains cDNA sequence, and R2 contains a 10bp UMI followed by 3 different barcodes in the following arrangements (note: ParseBio seems to shift BC1 up a few bp, to 79-86):; - UMI: 1-10; - BC3: 11-18; - BC2: 49-56; - BC1: 87-94. The intervening bases are a combination of common and variable sequences. The other wrinkle with these approaches is that the cDNA can be amplified using either oligo-dT or random hexamer barcodes. The net effect of this is that BC1 can be one of two options, and some barcode combinations need to be pooled to represent the same cell. For example:. AACGTGAT-CTGTAGCC-ACACAGAA; GATAGACA-CTGTAGCC-ACACAGAA. may be the same cell, amplified by two different means. . We know how the BC1s are paired, so Avi suggested pre-processing the R2 FASTQ file such that we locate random hexamer BC1 sequences and modify them to the matched oligo-dT sequence. In the above example, we'd correct some R2 reads that contain ""GATAGACA"" in the 87-94 position to ""AACGTGAT"". I [wrote a script](https://github.com/jeremymsimon/SPLITseq) (in perl because I'm old-school) that d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:1199,Modifiability,variab,variable,1199,"comment-777414), but I'm currently attempting to extend alevin's use to the newer combinatorial indexing experiments like [SPLiT-seq](https://science.sciencemag.org/content/360/6385/176) or the commercial solution, [ParseBio](https://www.parsebiosciences.com/) (the biotech formerly known as SplitBio). Now that you support different barcode geometries and allow the user to specify where these barcodes should be expected, this _should_ be doable. . I've downloaded the [raw data from the original SPLiT-seq paper](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3017261), and we have some ParseBio data of our own; my goal is to help you all write a vignette on this once we get the details worked out. . In short, the R1 file contains cDNA sequence, and R2 contains a 10bp UMI followed by 3 different barcodes in the following arrangements (note: ParseBio seems to shift BC1 up a few bp, to 79-86):; - UMI: 1-10; - BC3: 11-18; - BC2: 49-56; - BC1: 87-94. The intervening bases are a combination of common and variable sequences. The other wrinkle with these approaches is that the cDNA can be amplified using either oligo-dT or random hexamer barcodes. The net effect of this is that BC1 can be one of two options, and some barcode combinations need to be pooled to represent the same cell. For example:. AACGTGAT-CTGTAGCC-ACACAGAA; GATAGACA-CTGTAGCC-ACACAGAA. may be the same cell, amplified by two different means. . We know how the BC1s are paired, so Avi suggested pre-processing the R2 FASTQ file such that we locate random hexamer BC1 sequences and modify them to the matched oligo-dT sequence. In the above example, we'd correct some R2 reads that contain ""GATAGACA"" in the 87-94 position to ""AACGTGAT"". I [wrote a script](https://github.com/jeremymsimon/SPLITseq) (in perl because I'm old-school) that does this and allows for mismatches within 1 hamming distance. I'm sure someone could port this to python, rust, or C/C++ and speed this step up substantially, but it seems to work ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:4080,Performance,Load,Loading,4080,"patibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:53.706] [jointLog] [info] Index contained 231,288 targets; [2021-08-20 13:19:53.777] [jointLog] [info] Number of decoys : 0; [2021-08-20 16:03:00.061] [jointLog] [info] Computed 307,354 rich equivalence classes for further processing; [2021-08-20 16:03:00.061] [jointLog] [info] Counted 46,363,434 total reads in the equivalence classes ; [2021-08-20 16:03:00.062] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-08-20 16:03:00.062] [jointLog] [warning] Found 149640 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2021-08-20 16:03:00.062] [jointLog] [info] Mapping rate = 4.01974%. [2021-08-20 16:03:00.062] [jointLog] [info] finished quantifyLibrary(); ```. And here is my `lib_format_counts.json`, which has 0s for the diff",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:4150,Performance,Load,Loading,4150,"be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:53.706] [jointLog] [info] Index contained 231,288 targets; [2021-08-20 13:19:53.777] [jointLog] [info] Number of decoys : 0; [2021-08-20 16:03:00.061] [jointLog] [info] Computed 307,354 rich equivalence classes for further processing; [2021-08-20 16:03:00.061] [jointLog] [info] Counted 46,363,434 total reads in the equivalence classes ; [2021-08-20 16:03:00.062] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-08-20 16:03:00.062] [jointLog] [warning] Found 149640 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2021-08-20 16:03:00.062] [jointLog] [info] Mapping rate = 4.01974%. [2021-08-20 16:03:00.062] [jointLog] [info] finished quantifyLibrary(); ```. And here is my `lib_format_counts.json`, which has 0s for the different potential libTypes and shows a very high rate of inconsi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:6444,Performance,perform,performs,6444,"assigned_fragments"": 46363434,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 135602410,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; ```. And here is the `alevin_meta_info.json`, which shows the huge attrition in recognized CBs and poor mapping rate:; ```; ""total_reads"": 1153394214,; ""reads_with_N"": 17295,; ""noisy_cb_reads"": 708796684,; ""noisy_umi_reads"": 149640,; ""used_reads"": 444430595,; ""mapping_rate"": 4.019738736091838,; ""reads_in_eqclasses"": 46363434,; ""total_cbs"": 132768705,; ""used_cbs"": 398369,; ""initial_whitelist"": 5383,; ""low_conf_cbs"": 1000,; ""num_features"": 5,; ""no_read_mapping_cbs"": 148,; ""final_num_cbs"": 3931,; ""deduplicated_umis"": 24178832,; ""mean_umis_per_cell"": 6150,; ""mean_genes_per_cell"": 2810; ```. This, in conjunction with the fact that running with `-l A` suggests incorrectly the data are unstranded (`IU`), led @mikelove to suspect alevin may be skipping the libType guesswork that salmon typically performs. . I know these data are of reasonably good quality, because I have instead processed them using [zUMIs](https://github.com/sdparekh/zUMIs), which supports SPLiT-seq data. A side-by-side of the same FASTQs processed this way using alevin or using zUMIs gave me ~270 cells that pass filters (alevin) vs ~50k cells that pass filters (zUMIs), so something is definitely up here. . I'd like to confirm a few details and ask for some guidance on how to move forward:. 1. Is the reversal of R1/R2 like I did here necessary/recommended/correct?; 2. Is alevin truly skipping the libType identification bits such that I need to know which architecture to use? If so, how do I know?; 3. Why are so many CBs called as ""noisy"" here?; 4. Why is the mapping rate so low?; 5. Is there anything else I'm missing that can explain the unexpectedly poor outcome, or some other reason why this approach will not w",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:3281,Security,validat,validation,3281,"2 with the following parameters (for a ParseBio run), reversing R1/R2 as per Avi's suggestion:; ```; salmon alevin -l ISR \; --expectCells 9000 \; --read-geometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:3295,Security,validat,validateMappings,3295,"2 with the following parameters (for a ParseBio run), reversing R1/R2 as per Avi's suggestion:; ```; salmon alevin -l ISR \; --expectCells 9000 \; --read-geometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:3331,Security,validat,validation,3331,"Avi's suggestion:; ```; salmon alevin -l ISR \; --expectCells 9000 \; --read-geometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:53.706] [jointLog] [info] Index contained 231,288 targets; [2021-08-20 13:19:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:3399,Security,validat,validateMappings,3399,"ometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:53.706] [jointLog] [info] Index contained 231,288 targets; [2021-08-20 13:19:53.777] [jointLog] [info] Number of decoys : 0; [2021-08-20 16:03:00.061] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:2943,Testability,log,log,2943,"q) (in perl because I'm old-school) that does this and allows for mismatches within 1 hamming distance. I'm sure someone could port this to python, rust, or C/C++ and speed this step up substantially, but it seems to work fine. The next step is to run alevin. I've done so using salmon v1.5.2 with the following parameters (for a ParseBio run), reversing R1/R2 as per Avi's suggestion:; ```; salmon alevin -l ISR \; --expectCells 9000 \; --read-geometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/699:6882,Usability,guid,guidance,6882,"s_with_N"": 17295,; ""noisy_cb_reads"": 708796684,; ""noisy_umi_reads"": 149640,; ""used_reads"": 444430595,; ""mapping_rate"": 4.019738736091838,; ""reads_in_eqclasses"": 46363434,; ""total_cbs"": 132768705,; ""used_cbs"": 398369,; ""initial_whitelist"": 5383,; ""low_conf_cbs"": 1000,; ""num_features"": 5,; ""no_read_mapping_cbs"": 148,; ""final_num_cbs"": 3931,; ""deduplicated_umis"": 24178832,; ""mean_umis_per_cell"": 6150,; ""mean_genes_per_cell"": 2810; ```. This, in conjunction with the fact that running with `-l A` suggests incorrectly the data are unstranded (`IU`), led @mikelove to suspect alevin may be skipping the libType guesswork that salmon typically performs. . I know these data are of reasonably good quality, because I have instead processed them using [zUMIs](https://github.com/sdparekh/zUMIs), which supports SPLiT-seq data. A side-by-side of the same FASTQs processed this way using alevin or using zUMIs gave me ~270 cells that pass filters (alevin) vs ~50k cells that pass filters (zUMIs), so something is definitely up here. . I'd like to confirm a few details and ask for some guidance on how to move forward:. 1. Is the reversal of R1/R2 like I did here necessary/recommended/correct?; 2. Is alevin truly skipping the libType identification bits such that I need to know which architecture to use? If so, how do I know?; 3. Why are so many CBs called as ""noisy"" here?; 4. Why is the mapping rate so low?; 5. Is there anything else I'm missing that can explain the unexpectedly poor outcome, or some other reason why this approach will not work for these data? . I've also attached here the top 1000 lines of each R1/R2-corrected FASTQ (ParseBio) in the hopes that was somehow helpful in diagnosis, but I can share more reads or the full files some other way if needed. [head_R1.fastq.txt](https://github.com/COMBINE-lab/salmon/files/7068550/head_R1.fastq.txt); [head_R2_corrected.fastq.txt](https://github.com/COMBINE-lab/salmon/files/7068551/head_R2_corrected.fastq.txt). Thanks so much!. Jeremy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699
https://github.com/COMBINE-lab/salmon/issues/700:179,Availability,error,error,179,"This 'bug' is related to the funcionality. When attempting to quantify reads using the form, salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out, I get the error from the title of this post (screenshot below). * Salmon v 1.5.1 (downloaded executable) used to quantify transcriptome from two fastq files, R1 and R2, containing the same number of sequences. Executed as follows:; * salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out. **Expected behavior**; I expected a quant.sf file. Instead I; ![Screen Shot 2021-09-07 at 3 25 26 PM](https://user-images.githubusercontent.com/50889111/132418472-1bca6641-008e-4a9e-aae5-e0b61f771fd4.png); got the error in the title, and in the salmon_quant.log file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version: 18.04.1 . Any insight and help getting that quantification file is greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/700
https://github.com/COMBINE-lab/salmon/issues/700:251,Availability,down,downloaded,251,"This 'bug' is related to the funcionality. When attempting to quantify reads using the form, salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out, I get the error from the title of this post (screenshot below). * Salmon v 1.5.1 (downloaded executable) used to quantify transcriptome from two fastq files, R1 and R2, containing the same number of sequences. Executed as follows:; * salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out. **Expected behavior**; I expected a quant.sf file. Instead I; ![Screen Shot 2021-09-07 at 3 25 26 PM](https://user-images.githubusercontent.com/50889111/132418472-1bca6641-008e-4a9e-aae5-e0b61f771fd4.png); got the error in the title, and in the salmon_quant.log file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version: 18.04.1 . Any insight and help getting that quantification file is greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/700
https://github.com/COMBINE-lab/salmon/issues/700:693,Availability,error,error,693,"This 'bug' is related to the funcionality. When attempting to quantify reads using the form, salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out, I get the error from the title of this post (screenshot below). * Salmon v 1.5.1 (downloaded executable) used to quantify transcriptome from two fastq files, R1 and R2, containing the same number of sequences. Executed as follows:; * salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out. **Expected behavior**; I expected a quant.sf file. Instead I; ![Screen Shot 2021-09-07 at 3 25 26 PM](https://user-images.githubusercontent.com/50889111/132418472-1bca6641-008e-4a9e-aae5-e0b61f771fd4.png); got the error in the title, and in the salmon_quant.log file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version: 18.04.1 . Any insight and help getting that quantification file is greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/700
https://github.com/COMBINE-lab/salmon/issues/700:737,Testability,log,log,737,"This 'bug' is related to the funcionality. When attempting to quantify reads using the form, salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out, I get the error from the title of this post (screenshot below). * Salmon v 1.5.1 (downloaded executable) used to quantify transcriptome from two fastq files, R1 and R2, containing the same number of sequences. Executed as follows:; * salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out. **Expected behavior**; I expected a quant.sf file. Instead I; ![Screen Shot 2021-09-07 at 3 25 26 PM](https://user-images.githubusercontent.com/50889111/132418472-1bca6641-008e-4a9e-aae5-e0b61f771fd4.png); got the error in the title, and in the salmon_quant.log file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version: 18.04.1 . Any insight and help getting that quantification file is greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/700
https://github.com/COMBINE-lab/salmon/issues/701:14,Availability,down,downloaded,14,Version 1.5.2 downloaded binary for linux system from GitHub. Judging but the length of the log output I do not think this applies to all alignments but certainly some alignments give the example output:. ```; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891 - align length 4731) has no trained error model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; ```. Code to run salmon quant mode:; ```; salmon-1.5.2_linux_x86_64/bin/salmon quant -p 4 --ont -t Genome_files/gencode.v37.transcripts.fa -l SF -a /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/alignment/Fantom6_iPSC_rep1_run1_pass_transcriptome.bam -o /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/salmon_quant; ```. Was wondering if I can ignore these errors?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701
https://github.com/COMBINE-lab/salmon/issues/701:356,Availability,error,error,356,Version 1.5.2 downloaded binary for linux system from GitHub. Judging but the length of the log output I do not think this applies to all alignments but certainly some alignments give the example output:. ```; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891 - align length 4731) has no trained error model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; ```. Code to run salmon quant mode:; ```; salmon-1.5.2_linux_x86_64/bin/salmon quant -p 4 --ont -t Genome_files/gencode.v37.transcripts.fa -l SF -a /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/alignment/Fantom6_iPSC_rep1_run1_pass_transcriptome.bam -o /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/salmon_quant; ```. Was wondering if I can ignore these errors?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701
https://github.com/COMBINE-lab/salmon/issues/701:1085,Availability,error,errors,1085,Version 1.5.2 downloaded binary for linux system from GitHub. Judging but the length of the log output I do not think this applies to all alignments but certainly some alignments give the example output:. ```; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891 - align length 4731) has no trained error model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; ```. Code to run salmon quant mode:; ```; salmon-1.5.2_linux_x86_64/bin/salmon quant -p 4 --ont -t Genome_files/gencode.v37.transcripts.fa -l SF -a /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/alignment/Fantom6_iPSC_rep1_run1_pass_transcriptome.bam -o /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/salmon_quant; ```. Was wondering if I can ignore these errors?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701
https://github.com/COMBINE-lab/salmon/issues/701:92,Testability,log,log,92,Version 1.5.2 downloaded binary for linux system from GitHub. Judging but the length of the log output I do not think this applies to all alignments but certainly some alignments give the example output:. ```; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891 - align length 4731) has no trained error model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; ```. Code to run salmon quant mode:; ```; salmon-1.5.2_linux_x86_64/bin/salmon quant -p 4 --ont -t Genome_files/gencode.v37.transcripts.fa -l SF -a /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/alignment/Fantom6_iPSC_rep1_run1_pass_transcriptome.bam -o /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/salmon_quant; ```. Was wondering if I can ignore these errors?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701
https://github.com/COMBINE-lab/salmon/issues/702:5156,Availability,down,downloaded,5156,"2g.tsv"",; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 351484244,; ""num_assigned_fragments"": 351484244,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1727876200,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. For the selective alignment - Salmon quant. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_selective_alignment_index_salmon"",; ""libType"": ""ISR"",; ""threads"": ""32"",; ""unmatedReads"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""output"": ""salmon_quant"",; ""validateMappings"": [],; ""writeMappings"": [],; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz ]"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 387129150,; ""num_assigned_fragments"": 387129150,; ""num_frags_with_concordant_consistent_mappings"": 399519815,; ""num_frags_with_inconsistent_or_orphan_mappings"": 0,; ""strand_mapping_bias"": 0.9389489029474045,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 375128692,; ""SR"": 24391123,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Download executable; * Which reference (e.g. transcriptome) was used?; GENCODE hg38; * Which read files were used?; 10x scRNA-seq files. Any insight about why are these differences in the mapped fragments happening would be much appreciated. . Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702
https://github.com/COMBINE-lab/salmon/issues/702:5199,Availability,Down,Download,5199,"2g.tsv"",; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 351484244,; ""num_assigned_fragments"": 351484244,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1727876200,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. For the selective alignment - Salmon quant. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_selective_alignment_index_salmon"",; ""libType"": ""ISR"",; ""threads"": ""32"",; ""unmatedReads"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""output"": ""salmon_quant"",; ""validateMappings"": [],; ""writeMappings"": [],; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz ]"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 387129150,; ""num_assigned_fragments"": 387129150,; ""num_frags_with_concordant_consistent_mappings"": 399519815,; ""num_frags_with_inconsistent_or_orphan_mappings"": 0,; ""strand_mapping_bias"": 0.9389489029474045,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 375128692,; ""SR"": 24391123,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Download executable; * Which reference (e.g. transcriptome) was used?; GENCODE hg38; * Which read files were used?; 10x scRNA-seq files. Any insight about why are these differences in the mapped fragments happening would be much appreciated. . Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702
https://github.com/COMBINE-lab/salmon/issues/702:5135,Deployability,install,installed,5135,"2g.tsv"",; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 351484244,; ""num_assigned_fragments"": 351484244,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1727876200,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. For the selective alignment - Salmon quant. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_selective_alignment_index_salmon"",; ""libType"": ""ISR"",; ""threads"": ""32"",; ""unmatedReads"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""output"": ""salmon_quant"",; ""validateMappings"": [],; ""writeMappings"": [],; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz ]"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 387129150,; ""num_assigned_fragments"": 387129150,; ""num_frags_with_concordant_consistent_mappings"": 399519815,; ""num_frags_with_inconsistent_or_orphan_mappings"": 0,; ""strand_mapping_bias"": 0.9389489029474045,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 375128692,; ""SR"": 24391123,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Download executable; * Which reference (e.g. transcriptome) was used?; GENCODE hg38; * Which read files were used?; 10x scRNA-seq files. Any insight about why are these differences in the mapped fragments happening would be much appreciated. . Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702
https://github.com/COMBINE-lab/salmon/issues/702:659,Energy Efficiency,reduce,reduced,659,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is a question related to both salmon and alevin. **Describe the bug**; Hey,. First, thanks a lot for creating and maintaining Salmon!! It is super useful!!. I have run alevin with some scRNA-seq data from 10x (so R1 is the BC +UMI and R2 is the RNA sequence) and by evaluating the logs and the lib_format_counts.json file I can see that there are ~360M of mapped fragments. However, if I run salmon quant in the R2 fastq.gz file I see that ~450M of fragments are now mapping. I do not understand from where are these differences coming.... I can still find differences (reduced though) when using the selective alignment as indicated here: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. **To Reproduce**; Steps and data to reproduce the behavior:. For the classic pseudoalignment - Salmon alevin. ```console; cat cmd_info.json; {; ""salmon_version"": ""1.4.0"",; ""libType"": ""ISR"",; ""mates1"": ""Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz"",; ""mates2"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""chromiumV3"": [],; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_pseudoalignment_salmon"",; ""threads"": ""8"",; ""output"": ""alevin_pseudoalignment_output"",; ""tgMap"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/tr2g.tsv"",; ""auxDir"": ""aux_info""; }; cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 360423666,; ""num_assigned_fragments"": 360423666,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1760256573,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ``` . For the classic pseudoalignment - Salmon ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702
https://github.com/COMBINE-lab/salmon/issues/702:2326,Security,validat,validateMappings,2326,"ence.genomes_kike/GRCh38/gencode/tr2g.tsv"",; ""auxDir"": ""aux_info""; }; cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 360423666,; ""num_assigned_fragments"": 360423666,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1760256573,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ``` . For the classic pseudoalignment - Salmon quant. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_pseudoalignment_salmon"",; ""libType"": ""ISR"",; ""threads"": ""32"",; ""unmatedReads"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""output"": ""salmon_quant_pseudoalignment"",; ""validateMappings"": [],; ""writeMappings"": [],; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz ]"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 457240786,; ""num_assigned_fragments"": 457240786,; ""num_frags_with_concordant_consistent_mappings"": 512358332,; ""num_frags_with_inconsistent_or_orphan_mappings"": 0,; ""strand_mapping_bias"": 0.8456024971991673,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 433251485,; ""SR"": 79106847,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; For the selective alignment- Salmon alevin. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""libType"": ""ISR"",; ""mates1"": ""Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz"",; ""mates2"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""chromiumV3"": [],; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_selective_alignment_index_salmon"",; ""threads"": ""8"",; ""outp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702
https://github.com/COMBINE-lab/salmon/issues/702:4398,Security,validat,validateMappings,4398,"ference.genomes_kike/GRCh38/gencode/tr2g.tsv"",; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 351484244,; ""num_assigned_fragments"": 351484244,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1727876200,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. For the selective alignment - Salmon quant. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_selective_alignment_index_salmon"",; ""libType"": ""ISR"",; ""threads"": ""32"",; ""unmatedReads"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""output"": ""salmon_quant"",; ""validateMappings"": [],; ""writeMappings"": [],; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz ]"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 387129150,; ""num_assigned_fragments"": 387129150,; ""num_frags_with_concordant_consistent_mappings"": 399519815,; ""num_frags_with_inconsistent_or_orphan_mappings"": 0,; ""strand_mapping_bias"": 0.9389489029474045,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 375128692,; ""SR"": 24391123,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Download executable; * Which reference (e.g. transcriptome) was used?; GENCODE hg38; * Which read files were used?; 10x scRNA-seq files. Any insight about why are these differences in the mapped fragments happening wo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702
https://github.com/COMBINE-lab/salmon/issues/702:370,Testability,log,logs,370,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is a question related to both salmon and alevin. **Describe the bug**; Hey,. First, thanks a lot for creating and maintaining Salmon!! It is super useful!!. I have run alevin with some scRNA-seq data from 10x (so R1 is the BC +UMI and R2 is the RNA sequence) and by evaluating the logs and the lib_format_counts.json file I can see that there are ~360M of mapped fragments. However, if I run salmon quant in the R2 fastq.gz file I see that ~450M of fragments are now mapping. I do not understand from where are these differences coming.... I can still find differences (reduced though) when using the selective alignment as indicated here: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. **To Reproduce**; Steps and data to reproduce the behavior:. For the classic pseudoalignment - Salmon alevin. ```console; cat cmd_info.json; {; ""salmon_version"": ""1.4.0"",; ""libType"": ""ISR"",; ""mates1"": ""Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz"",; ""mates2"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""chromiumV3"": [],; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_pseudoalignment_salmon"",; ""threads"": ""8"",; ""output"": ""alevin_pseudoalignment_output"",; ""tgMap"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/tr2g.tsv"",; ""auxDir"": ""aux_info""; }; cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 360423666,; ""num_assigned_fragments"": 360423666,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1760256573,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ``` . For the classic pseudoalignment - Salmon ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702
https://github.com/COMBINE-lab/salmon/pull/703:14,Integrability,protocol,protocol,14,"Add [inDropv2 protocol](https://www.nature.com/articles/nprot.2016.154) to salmon alevin. To use this protocol pass the `--indropV2` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/inDrop.html). R1 is the biological read and R2 is the metadata read. Briefly, the reads have 8-11 bp barcode1, followed by a `W1` sequence which should be specified using `--w1` flag then 8bp barcode2 and 6 bp UMI sequence follows. . Summary of changes:; 1. `--indropV2` flag added to process indropV2 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the positions and avoid searching twice; 3. In case the barcode1 is less than 11bp, `A` is added after joining barcodes 1 and 2 to make the total length 19 bp; 4. If no exact match for w1 is found, a search for w1 with a hamming distance <=2 is performed. It was tested for correlation on run SRR7165069 from GEO submission [GSM3141960](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3141960).; Results:; ![image](https://user-images.githubusercontent.com/12998572/133622734-9b473318-fb39-421d-a322-b018f93ac139.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.3634 0.8981 0.9655 0.9307 0.9874 0.9976 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/703
https://github.com/COMBINE-lab/salmon/pull/703:102,Integrability,protocol,protocol,102,"Add [inDropv2 protocol](https://www.nature.com/articles/nprot.2016.154) to salmon alevin. To use this protocol pass the `--indropV2` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/inDrop.html). R1 is the biological read and R2 is the metadata read. Briefly, the reads have 8-11 bp barcode1, followed by a `W1` sequence which should be specified using `--w1` flag then 8bp barcode2 and 6 bp UMI sequence follows. . Summary of changes:; 1. `--indropV2` flag added to process indropV2 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the positions and avoid searching twice; 3. In case the barcode1 is less than 11bp, `A` is added after joining barcodes 1 and 2 to make the total length 19 bp; 4. If no exact match for w1 is found, a search for w1 with a hamming distance <=2 is performed. It was tested for correlation on run SRR7165069 from GEO submission [GSM3141960](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3141960).; Results:; ![image](https://user-images.githubusercontent.com/12998572/133622734-9b473318-fb39-421d-a322-b018f93ac139.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.3634 0.8981 0.9655 0.9307 0.9874 0.9976 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/703
https://github.com/COMBINE-lab/salmon/pull/703:589,Integrability,protocol,protocol,589,"Add [inDropv2 protocol](https://www.nature.com/articles/nprot.2016.154) to salmon alevin. To use this protocol pass the `--indropV2` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/inDrop.html). R1 is the biological read and R2 is the metadata read. Briefly, the reads have 8-11 bp barcode1, followed by a `W1` sequence which should be specified using `--w1` flag then 8bp barcode2 and 6 bp UMI sequence follows. . Summary of changes:; 1. `--indropV2` flag added to process indropV2 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the positions and avoid searching twice; 3. In case the barcode1 is less than 11bp, `A` is added after joining barcodes 1 and 2 to make the total length 19 bp; 4. If no exact match for w1 is found, a search for w1 with a hamming distance <=2 is performed. It was tested for correlation on run SRR7165069 from GEO submission [GSM3141960](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3141960).; Results:; ![image](https://user-images.githubusercontent.com/12998572/133622734-9b473318-fb39-421d-a322-b018f93ac139.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.3634 0.8981 0.9655 0.9307 0.9874 0.9976 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/703
https://github.com/COMBINE-lab/salmon/pull/703:907,Performance,perform,performed,907,"Add [inDropv2 protocol](https://www.nature.com/articles/nprot.2016.154) to salmon alevin. To use this protocol pass the `--indropV2` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/inDrop.html). R1 is the biological read and R2 is the metadata read. Briefly, the reads have 8-11 bp barcode1, followed by a `W1` sequence which should be specified using `--w1` flag then 8bp barcode2 and 6 bp UMI sequence follows. . Summary of changes:; 1. `--indropV2` flag added to process indropV2 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the positions and avoid searching twice; 3. In case the barcode1 is less than 11bp, `A` is added after joining barcodes 1 and 2 to make the total length 19 bp; 4. If no exact match for w1 is found, a search for w1 with a hamming distance <=2 is performed. It was tested for correlation on run SRR7165069 from GEO submission [GSM3141960](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3141960).; Results:; ![image](https://user-images.githubusercontent.com/12998572/133622734-9b473318-fb39-421d-a322-b018f93ac139.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.3634 0.8981 0.9655 0.9307 0.9874 0.9976 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/703
https://github.com/COMBINE-lab/salmon/pull/703:680,Safety,avoid,avoid,680,"Add [inDropv2 protocol](https://www.nature.com/articles/nprot.2016.154) to salmon alevin. To use this protocol pass the `--indropV2` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/inDrop.html). R1 is the biological read and R2 is the metadata read. Briefly, the reads have 8-11 bp barcode1, followed by a `W1` sequence which should be specified using `--w1` flag then 8bp barcode2 and 6 bp UMI sequence follows. . Summary of changes:; 1. `--indropV2` flag added to process indropV2 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the positions and avoid searching twice; 3. In case the barcode1 is less than 11bp, `A` is added after joining barcodes 1 and 2 to make the total length 19 bp; 4. If no exact match for w1 is found, a search for w1 with a hamming distance <=2 is performed. It was tested for correlation on run SRR7165069 from GEO submission [GSM3141960](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3141960).; Results:; ![image](https://user-images.githubusercontent.com/12998572/133622734-9b473318-fb39-421d-a322-b018f93ac139.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.3634 0.8981 0.9655 0.9307 0.9874 0.9976 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/703
https://github.com/COMBINE-lab/salmon/pull/703:925,Testability,test,tested,925,"Add [inDropv2 protocol](https://www.nature.com/articles/nprot.2016.154) to salmon alevin. To use this protocol pass the `--indropV2` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/inDrop.html). R1 is the biological read and R2 is the metadata read. Briefly, the reads have 8-11 bp barcode1, followed by a `W1` sequence which should be specified using `--w1` flag then 8bp barcode2 and 6 bp UMI sequence follows. . Summary of changes:; 1. `--indropV2` flag added to process indropV2 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the positions and avoid searching twice; 3. In case the barcode1 is less than 11bp, `A` is added after joining barcodes 1 and 2 to make the total length 19 bp; 4. If no exact match for w1 is found, a search for w1 with a hamming distance <=2 is performed. It was tested for correlation on run SRR7165069 from GEO submission [GSM3141960](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3141960).; Results:; ![image](https://user-images.githubusercontent.com/12998572/133622734-9b473318-fb39-421d-a322-b018f93ac139.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.3634 0.8981 0.9655 0.9307 0.9874 0.9976 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/703
https://github.com/COMBINE-lab/salmon/issues/706:3956,Performance,optimiz,optimizer,3956,"21-09-20 22:30:11.442] [alevinLog] [info] Learned InvCov: 796.079 normfactor: 896.047; [2021-09-20 22:30:11.442] [alevinLog] [info] Total ESC[32m310ESC[0m(has ESC[32m201ESC[0m low confidence) barcodes; [2021-09-20 22:30:12.167] [alevinLog] [info] Done True Barcode Sampling; [2021-09-20 22:30:12.316] [alevinLog] [warning] Total 55.6923% reads will be thrown away because of noisy Cellular barcodes.; [2021-09-20 22:30:12.333] [alevinLog] [info] Done populating Z matrix; [2021-09-20 22:30:12.334] [alevinLog] [info] Total 7602 CB got sequence corrected; [2021-09-20 22:30:12.334] [alevinLog] [info] Done indexing Barcodes; [2021-09-20 22:30:12.334] [alevinLog] [info] Total Unique barcodes found: 675135; [2021-09-20 22:30:12.334] [alevinLog] [info] Used Barcodes except Whitelist: 7515; [2021-09-20 22:30:13.043] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-09-20 22:30:13.044] [alevinLog] [info] parsing read library format; [2021-09-20 22:33:09.346] [alevinLog] [info] Starting optimizer. [2021-09-20 22:33:09.516] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.516] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 46357.00 UMI after deduplicating.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 2930 BiDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 3804 UniDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [warning] Skipped 21 barcodes due to No mapped read; [2021-09-20 22:33:09.579] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-09-20 22:33:09.590] [alevinLog] [warning] Num Low confidence barcodes too less 186 < 200.Can't performing whitelisting; Skipping; [2021-09-20 22:33:09.591] [alevinLog] [info] Finished optimizer. ```; Then I tried setting `--keepCBFraction 1`. This does decrease the total number of reads being thrown away. However, mapping percenta",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/706
https://github.com/COMBINE-lab/salmon/issues/706:4708,Performance,perform,performing,4708,"[2021-09-20 22:30:13.043] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-09-20 22:30:13.044] [alevinLog] [info] parsing read library format; [2021-09-20 22:33:09.346] [alevinLog] [info] Starting optimizer. [2021-09-20 22:33:09.516] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.516] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 46357.00 UMI after deduplicating.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 2930 BiDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 3804 UniDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [warning] Skipped 21 barcodes due to No mapped read; [2021-09-20 22:33:09.579] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-09-20 22:33:09.590] [alevinLog] [warning] Num Low confidence barcodes too less 186 < 200.Can't performing whitelisting; Skipping; [2021-09-20 22:33:09.591] [alevinLog] [info] Finished optimizer. ```; Then I tried setting `--keepCBFraction 1`. This does decrease the total number of reads being thrown away. However, mapping percentage is still low as compared to what I was getting from CellRanger (27%). I thought that since Alevin takes into consideration the multi mapping reads, the mapping percentage will likely increase because when we ran STAR on this data we found a lot of multi mapping reads. ```bash; nohup ./salmon alevin -l ISR -1 S1_L003_R1_001.fastq.gz -2 S1_L003_R2_001.fastq.gz --chromiumV3 -i ~/salmon_selective/salmon_index/ -p 20 -o ~/salmon_selective/9NT_keepCBfraction --keepCBFraction 1 --tgMap ~/salmon_selective/txgene_p3d7.txt &. [2021-09-21 00:11:13.532] [alevinLog] [info] Total 1.97665% reads will be thrown away because of noisy Cellular barcodes.; [2021-09-21 00:11:17.977] [alevinLog] [info] Done populating Z matrix; [2021-09-21 00:11:17.984] [alevinLog] [info] Total 21839 CB got seque",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/706
https://github.com/COMBINE-lab/salmon/issues/706:4797,Performance,optimiz,optimizer,4797,"th Barcode Processing; Moving to Quantify. [2021-09-20 22:30:13.044] [alevinLog] [info] parsing read library format; [2021-09-20 22:33:09.346] [alevinLog] [info] Starting optimizer. [2021-09-20 22:33:09.516] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.516] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 46357.00 UMI after deduplicating.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 2930 BiDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 3804 UniDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [warning] Skipped 21 barcodes due to No mapped read; [2021-09-20 22:33:09.579] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-09-20 22:33:09.590] [alevinLog] [warning] Num Low confidence barcodes too less 186 < 200.Can't performing whitelisting; Skipping; [2021-09-20 22:33:09.591] [alevinLog] [info] Finished optimizer. ```; Then I tried setting `--keepCBFraction 1`. This does decrease the total number of reads being thrown away. However, mapping percentage is still low as compared to what I was getting from CellRanger (27%). I thought that since Alevin takes into consideration the multi mapping reads, the mapping percentage will likely increase because when we ran STAR on this data we found a lot of multi mapping reads. ```bash; nohup ./salmon alevin -l ISR -1 S1_L003_R1_001.fastq.gz -2 S1_L003_R2_001.fastq.gz --chromiumV3 -i ~/salmon_selective/salmon_index/ -p 20 -o ~/salmon_selective/9NT_keepCBfraction --keepCBFraction 1 --tgMap ~/salmon_selective/txgene_p3d7.txt &. [2021-09-21 00:11:13.532] [alevinLog] [info] Total 1.97665% reads will be thrown away because of noisy Cellular barcodes.; [2021-09-21 00:11:17.977] [alevinLog] [info] Done populating Z matrix; [2021-09-21 00:11:17.984] [alevinLog] [info] Total 21839 CB got sequence corrected; [2021-09-21 00:11:17.985] [alevinLog] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/706
https://github.com/COMBINE-lab/salmon/issues/706:2986,Usability,Learn,Learned,2986,"l_whitelist"": 109,; ""low_conf_cbs"": 201,; ""num_features"": 0,; ""no_read_mapping_cbs"": 21,; ""final_num_cbs"": 288,; ""deduplicated_umis"": 46357,; ""mean_umis_per_cell"": 160,; ""mean_genes_per_cell"": 39; }. [2021-09-20 22:27:11.264] [alevinLog] [info] Found 5757 transcripts(+16 decoys, +8 short and +0 duplicate names in the index); [2021-09-20 22:27:11.271] [alevinLog] [info] Filled with 5765 txp to gene entries; [2021-09-20 22:27:11.272] [alevinLog] [info] Found all transcripts to gene mappings; [2021-09-20 22:27:11.282] [alevinLog] [info] Processing barcodes files (if Present). [2021-09-20 22:30:06.824] [alevinLog] [info] Done barcode density calculation.; [2021-09-20 22:30:06.824] [alevinLog] [info] # Barcodes Used: ESC[32m89886851ESC[0m / ESC[31m89886851ESC[0m.; [2021-09-20 22:30:09.717] [alevinLog] [info] Knee found left boundary at ESC[32m 1051 ESC[0m; [2021-09-20 22:30:11.442] [alevinLog] [info] Gauss Corrected Boundary at ESC[32m 109 ESC[0m; [2021-09-20 22:30:11.442] [alevinLog] [info] Learned InvCov: 796.079 normfactor: 896.047; [2021-09-20 22:30:11.442] [alevinLog] [info] Total ESC[32m310ESC[0m(has ESC[32m201ESC[0m low confidence) barcodes; [2021-09-20 22:30:12.167] [alevinLog] [info] Done True Barcode Sampling; [2021-09-20 22:30:12.316] [alevinLog] [warning] Total 55.6923% reads will be thrown away because of noisy Cellular barcodes.; [2021-09-20 22:30:12.333] [alevinLog] [info] Done populating Z matrix; [2021-09-20 22:30:12.334] [alevinLog] [info] Total 7602 CB got sequence corrected; [2021-09-20 22:30:12.334] [alevinLog] [info] Done indexing Barcodes; [2021-09-20 22:30:12.334] [alevinLog] [info] Total Unique barcodes found: 675135; [2021-09-20 22:30:12.334] [alevinLog] [info] Used Barcodes except Whitelist: 7515; [2021-09-20 22:30:13.043] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-09-20 22:30:13.044] [alevinLog] [info] parsing read library format; [2021-09-20 22:33:09.346] [alevinLog] [info] Starting optimizer. [2021-09-20 22:33",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/706
https://github.com/COMBINE-lab/salmon/issues/706:4568,Usability,Clear,Clearing,4568,"09-20 22:30:12.334] [alevinLog] [info] Total Unique barcodes found: 675135; [2021-09-20 22:30:12.334] [alevinLog] [info] Used Barcodes except Whitelist: 7515; [2021-09-20 22:30:13.043] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-09-20 22:30:13.044] [alevinLog] [info] parsing read library format; [2021-09-20 22:33:09.346] [alevinLog] [info] Starting optimizer. [2021-09-20 22:33:09.516] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.516] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 46357.00 UMI after deduplicating.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 2930 BiDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 3804 UniDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [warning] Skipped 21 barcodes due to No mapped read; [2021-09-20 22:33:09.579] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-09-20 22:33:09.590] [alevinLog] [warning] Num Low confidence barcodes too less 186 < 200.Can't performing whitelisting; Skipping; [2021-09-20 22:33:09.591] [alevinLog] [info] Finished optimizer. ```; Then I tried setting `--keepCBFraction 1`. This does decrease the total number of reads being thrown away. However, mapping percentage is still low as compared to what I was getting from CellRanger (27%). I thought that since Alevin takes into consideration the multi mapping reads, the mapping percentage will likely increase because when we ran STAR on this data we found a lot of multi mapping reads. ```bash; nohup ./salmon alevin -l ISR -1 S1_L003_R1_001.fastq.gz -2 S1_L003_R2_001.fastq.gz --chromiumV3 -i ~/salmon_selective/salmon_index/ -p 20 -o ~/salmon_selective/9NT_keepCBfraction --keepCBFraction 1 --tgMap ~/salmon_selective/txgene_p3d7.txt &. [2021-09-21 00:11:13.532] [alevinLog] [info] Total 1.97665% reads will be thrown away because of noisy Ce",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/706
https://github.com/COMBINE-lab/salmon/issues/708:9575,Availability,avail,available,9575," 400 | max rel diff. = 8.91734; [2021-09-20 16:24:56.130] [jointLog] [info] iteration = 500 | max rel diff. = 1.26201; [2021-09-20 16:24:57.628] [jointLog] [info] iteration = 600 | max rel diff. = 0.155034; [2021-09-20 16:24:59.130] [jointLog] [info] iteration = 700 | max rel diff. = 16.1436; [2021-09-20 16:25:00.660] [jointLog] [info] iteration = 800 | max rel diff. = 2.09965; [2021-09-20 16:25:02.202] [jointLog] [info] iteration = 900 | max rel diff. = 0.122996; [2021-09-20 16:25:03.751] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.156404; [2021-09-20 16:25:05.306] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.103478; [2021-09-20 16:25:06.868] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.03942; [2021-09-20 16:25:08.404] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0699512; [2021-09-20 16:25:09.961] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.109145; [2021-09-20 16:25:11.518] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.135139; [2021-09-20 16:25:13.091] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0545934; [2021-09-20 16:25:14.668] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.0287732; [2021-09-20 16:25:16.226] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.0201942; [2021-09-20 16:25:17.780] [jointLog] [info] iteration = 1,900 | max rel diff. = 1.83806; [2021-09-20 16:25:19.333] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.0251548; [2021-09-20 16:25:19.842] [jointLog] [info] iteration = 2,034 | max rel diff. = 0.00913859; [2021-09-20 16:25:19.858] [jointLog] [info] Finished optimizer; [2021-09-20 16:25:19.858] [jointLog] [info] writing output ; ```. VM running Ubuntu ; Linux ubuntu 5.11.0-34-generic #36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.3 LTS; Release:	20.04; Codename:	focal. Transcriptome index for mouse mm10 downloaded from RefGenie.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:9712,Availability,down,downloaded,9712," 400 | max rel diff. = 8.91734; [2021-09-20 16:24:56.130] [jointLog] [info] iteration = 500 | max rel diff. = 1.26201; [2021-09-20 16:24:57.628] [jointLog] [info] iteration = 600 | max rel diff. = 0.155034; [2021-09-20 16:24:59.130] [jointLog] [info] iteration = 700 | max rel diff. = 16.1436; [2021-09-20 16:25:00.660] [jointLog] [info] iteration = 800 | max rel diff. = 2.09965; [2021-09-20 16:25:02.202] [jointLog] [info] iteration = 900 | max rel diff. = 0.122996; [2021-09-20 16:25:03.751] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.156404; [2021-09-20 16:25:05.306] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.103478; [2021-09-20 16:25:06.868] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.03942; [2021-09-20 16:25:08.404] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0699512; [2021-09-20 16:25:09.961] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.109145; [2021-09-20 16:25:11.518] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.135139; [2021-09-20 16:25:13.091] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0545934; [2021-09-20 16:25:14.668] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.0287732; [2021-09-20 16:25:16.226] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.0201942; [2021-09-20 16:25:17.780] [jointLog] [info] iteration = 1,900 | max rel diff. = 1.83806; [2021-09-20 16:25:19.333] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.0251548; [2021-09-20 16:25:19.842] [jointLog] [info] iteration = 2,034 | max rel diff. = 0.00913859; [2021-09-20 16:25:19.858] [jointLog] [info] Finished optimizer; [2021-09-20 16:25:19.858] [jointLog] [info] writing output ; ```. VM running Ubuntu ; Linux ubuntu 5.11.0-34-generic #36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.3 LTS; Release:	20.04; Codename:	focal. Transcriptome index for mouse mm10 downloaded from RefGenie.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:9644,Deployability,Release,Release,9644," 400 | max rel diff. = 8.91734; [2021-09-20 16:24:56.130] [jointLog] [info] iteration = 500 | max rel diff. = 1.26201; [2021-09-20 16:24:57.628] [jointLog] [info] iteration = 600 | max rel diff. = 0.155034; [2021-09-20 16:24:59.130] [jointLog] [info] iteration = 700 | max rel diff. = 16.1436; [2021-09-20 16:25:00.660] [jointLog] [info] iteration = 800 | max rel diff. = 2.09965; [2021-09-20 16:25:02.202] [jointLog] [info] iteration = 900 | max rel diff. = 0.122996; [2021-09-20 16:25:03.751] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.156404; [2021-09-20 16:25:05.306] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.103478; [2021-09-20 16:25:06.868] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.03942; [2021-09-20 16:25:08.404] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0699512; [2021-09-20 16:25:09.961] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.109145; [2021-09-20 16:25:11.518] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.135139; [2021-09-20 16:25:13.091] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0545934; [2021-09-20 16:25:14.668] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.0287732; [2021-09-20 16:25:16.226] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.0201942; [2021-09-20 16:25:17.780] [jointLog] [info] iteration = 1,900 | max rel diff. = 1.83806; [2021-09-20 16:25:19.333] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.0251548; [2021-09-20 16:25:19.842] [jointLog] [info] iteration = 2,034 | max rel diff. = 0.00913859; [2021-09-20 16:25:19.858] [jointLog] [info] Finished optimizer; [2021-09-20 16:25:19.858] [jointLog] [info] writing output ; ```. VM running Ubuntu ; Linux ubuntu 5.11.0-34-generic #36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.3 LTS; Release:	20.04; Codename:	focal. Transcriptome index for mouse mm10 downloaded from RefGenie.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:1431,Performance,Load,Loading,1431," ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:1501,Performance,Load,Loading,1501,"t/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:1579,Performance,Load,Loading,1579,"{ /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:1724,Performance,Load,Loading,1724,"idateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading refere",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:1855,Performance,Load,Loading,1855,"ResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference ac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:1989,Performance,Load,Loading,1989,"ments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:2233,Performance,Load,Loading,2233,"21-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:2385,Performance,Load,Loading,2385,"1.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:2528,Performance,Load,Loading,2528,"ointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] =>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:2672,Performance,Load,Loading,2672,"--------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:2806,Performance,Load,Loading,2806,"-------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:4395,Performance,Load,Loading,4395," salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:4465,Performance,Load,Loading,4465," ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:4543,Performance,Load,Loading,4543,"## [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:4688,Performance,Load,Loading,4688,"s ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading refere",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:4819,Performance,Load,Loading,4819,"ResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference acc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:4953,Performance,Load,Loading,4953,"ments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:5197,Performance,Load,Loading,5197,"21-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:5349,Performance,Load,Loading,5349,"8.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] First decoy index : 116,507 ; [2021-09-20 16:22:04.460] [jointLog] [info] Automatically detected most likely library type as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:5492,Performance,Load,Loading,5492,"ointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] First decoy index : 116,507 ; [2021-09-20 16:22:04.460] [jointLog] [info] Automatically detected most likely library type as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.16785. [2021-09-20 16:24:48.269] [jointLog] [info] Computed 309,226 rich equivalence classes for further processing; [2021-09-20 16:24:48.269] [j",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:5636,Performance,Load,Loading,5636,"--------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] First decoy index : 116,507 ; [2021-09-20 16:22:04.460] [jointLog] [info] Automatically detected most likely library type as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.16785. [2021-09-20 16:24:48.269] [jointLog] [info] Computed 309,226 rich equivalence classes for further processing; [2021-09-20 16:24:48.269] [jointLog] [info] Counted 34,252,402 total reads in the equivalence classes ; [2021-09-20 16:24:48.274] [jointLog] [info] Number of mappings discarded",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:5769,Performance,Load,Loading,5769,"-------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] First decoy index : 116,507 ; [2021-09-20 16:22:04.460] [jointLog] [info] Automatically detected most likely library type as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.16785. [2021-09-20 16:24:48.269] [jointLog] [info] Computed 309,226 rich equivalence classes for further processing; [2021-09-20 16:24:48.269] [jointLog] [info] Counted 34,252,402 total reads in the equivalence classes ; [2021-09-20 16:24:48.274] [jointLog] [info] Number of mappings discarded because of alignment score : 13,534,931; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments entirely discarded because of alignment sco",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:7229,Performance,optimiz,optimizer,7229,"e as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.16785. [2021-09-20 16:24:48.269] [jointLog] [info] Computed 309,226 rich equivalence classes for further processing; [2021-09-20 16:24:48.269] [jointLog] [info] Counted 34,252,402 total reads in the equivalence classes ; [2021-09-20 16:24:48.274] [jointLog] [info] Number of mappings discarded because of alignment score : 13,534,931; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 627,298; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 340,039; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0; [2021-09-20 16:24:48.274] [jointLog] [info] Mapping rate = 91.4927%. [2021-09-20 16:24:48.274] [jointLog] [info] finished quantifyLibrary(); [2021-09-20 16:24:48.279] [jointLog] [info] Starting optimizer; [2021-09-20 16:24:48.402] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-09-20 16:24:48.422] [jointLog] [info] iteration = 0 | max rel diff. = 9200.26; [2021-09-20 16:24:49.989] [jointLog] [info] iteration = 100 | max rel diff. = 17.4012; [2021-09-20 16:24:51.518] [jointLog] [info] iteration = 200 | max rel diff. = 19.9377; [2021-09-20 16:24:53.017] [jointLog] [info] iteration = 300 | max rel diff. = 14.738; [2021-09-20 16:24:54.590] [jointLog] [info] iteration = 400 | max rel diff. = 8.91734; [2021-09-20 16:24:56.130] [jointLog] [info] iteration = 500 | max rel diff. = 1.26201; [2021-09-20 16:24:57.628] [jointLog] [info] iteration = 600 | max rel diff. = 0.155034; [2021-09-20 16:24:59.130] [jointLog] [info] iteration = 700 | max rel diff. = 16.1436; [2021-09-20 16:25:00.660] [jointLog] [info] iteration = 800 | max rel diff. = 2.09965; [2021-09-20 16:25:02.202] [jointLog] [info] iteration = 900 | max rel diff. = 0.122996; [2021-09-20 16:25:03.75",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:9344,Performance,optimiz,optimizer,9344," 400 | max rel diff. = 8.91734; [2021-09-20 16:24:56.130] [jointLog] [info] iteration = 500 | max rel diff. = 1.26201; [2021-09-20 16:24:57.628] [jointLog] [info] iteration = 600 | max rel diff. = 0.155034; [2021-09-20 16:24:59.130] [jointLog] [info] iteration = 700 | max rel diff. = 16.1436; [2021-09-20 16:25:00.660] [jointLog] [info] iteration = 800 | max rel diff. = 2.09965; [2021-09-20 16:25:02.202] [jointLog] [info] iteration = 900 | max rel diff. = 0.122996; [2021-09-20 16:25:03.751] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.156404; [2021-09-20 16:25:05.306] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.103478; [2021-09-20 16:25:06.868] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.03942; [2021-09-20 16:25:08.404] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0699512; [2021-09-20 16:25:09.961] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.109145; [2021-09-20 16:25:11.518] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.135139; [2021-09-20 16:25:13.091] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0545934; [2021-09-20 16:25:14.668] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.0287732; [2021-09-20 16:25:16.226] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.0201942; [2021-09-20 16:25:17.780] [jointLog] [info] iteration = 1,900 | max rel diff. = 1.83806; [2021-09-20 16:25:19.333] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.0251548; [2021-09-20 16:25:19.842] [jointLog] [info] iteration = 2,034 | max rel diff. = 0.00913859; [2021-09-20 16:25:19.858] [jointLog] [info] Finished optimizer; [2021-09-20 16:25:19.858] [jointLog] [info] writing output ; ```. VM running Ubuntu ; Linux ubuntu 5.11.0-34-generic #36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.3 LTS; Release:	20.04; Codename:	focal. Transcriptome index for mouse mm10 downloaded from RefGenie.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:6197,Safety,detect,detected,6197,"6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] First decoy index : 116,507 ; [2021-09-20 16:22:04.460] [jointLog] [info] Automatically detected most likely library type as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.16785. [2021-09-20 16:24:48.269] [jointLog] [info] Computed 309,226 rich equivalence classes for further processing; [2021-09-20 16:24:48.269] [jointLog] [info] Counted 34,252,402 total reads in the equivalence classes ; [2021-09-20 16:24:48.274] [jointLog] [info] Number of mappings discarded because of alignment score : 13,534,931; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 627,298; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 340,039; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0; [2021-09-20 16:24:48.274] [jointLog] [info] Mapping rate = 91.4927%. [2021-09-20 16:24:48.274] [jointLog] [info] finished quantifyLibrary(); [2021-09-20 16:24:48.279] [jointLog] [info] Starting opti",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:292,Security,validat,validateMappings,292,"**Salmon**. I'm using bioconda version of salmon in a VM Linux instance. When I run salmon quant with the gcBias flag enabled, the run terminates halfway. . ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings --gcBias; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:683,Security,validat,validateMappings,683,"**Salmon**. I'm using bioconda version of salmon in a VM Linux instance. When I run salmon quant with the gcBias flag enabled, the run terminates halfway. . ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings --gcBias; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:1034,Security,validat,validateMappings,1034," salmon in a VM Linux instance. When I run salmon quant with the gcBias flag enabled, the run terminates halfway. . ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings --gcBias; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; ---------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:3081,Security,validat,validateMappings,3081," of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:3288,Security,validat,validateMappings,3288," 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:3670,Security,validat,validateMappings,3670,"g reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; ------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:3998,Security,validat,validateMappings,3998,"ex contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; ---------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:733,Testability,Log,Logs,733,"**Salmon**. I'm using bioconda version of salmon in a VM Linux instance. When I run salmon quant with the gcBias flag enabled, the run terminates halfway. . ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings --gcBias; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:761,Testability,log,logs,761,"**Salmon**. I'm using bioconda version of salmon in a VM Linux instance. When I run salmon quant with the gcBias flag enabled, the run terminates halfway. . ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings --gcBias; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:3697,Testability,Log,Logs,3697,"g reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; ------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/708:3725,Testability,log,logs,3725,"g reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; ------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708
https://github.com/COMBINE-lab/salmon/issues/709:203,Availability,error,error,203,"salmon version 1.5.1; Running with the following keystrokes:; salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o salmonoutput (screenshot attached as ""command""). It keeps throwing the attached error message (as log).; Ive verified the R1 and R2 have the same number of entries using grep to count the number of ""@"" symbols. These match. The lines of each file are the same as well. (screenshot also attached as ""size""); ![Command](https://user-images.githubusercontent.com/50889111/134416661-77de22d1-5fc4-4b89-a21d-940948fdc4b8.png); ![Size](https://user-images.githubusercontent.com/50889111/134416664-21c6373f-57be-4c8d-b917-68aa16262f57.png); <img width=""1314"" alt=""Log"" src=""https://user-images.githubusercontent.com/50889111/134416666-5dcf3843-ef06-45b1-bb77-6c2dbae9e6e4.png"">. I'm not sure what to do from here; Please help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/709
https://github.com/COMBINE-lab/salmon/issues/709:209,Integrability,message,message,209,"salmon version 1.5.1; Running with the following keystrokes:; salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o salmonoutput (screenshot attached as ""command""). It keeps throwing the attached error message (as log).; Ive verified the R1 and R2 have the same number of entries using grep to count the number of ""@"" symbols. These match. The lines of each file are the same as well. (screenshot also attached as ""size""); ![Command](https://user-images.githubusercontent.com/50889111/134416661-77de22d1-5fc4-4b89-a21d-940948fdc4b8.png); ![Size](https://user-images.githubusercontent.com/50889111/134416664-21c6373f-57be-4c8d-b917-68aa16262f57.png); <img width=""1314"" alt=""Log"" src=""https://user-images.githubusercontent.com/50889111/134416666-5dcf3843-ef06-45b1-bb77-6c2dbae9e6e4.png"">. I'm not sure what to do from here; Please help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/709
https://github.com/COMBINE-lab/salmon/issues/709:221,Testability,log,log,221,"salmon version 1.5.1; Running with the following keystrokes:; salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o salmonoutput (screenshot attached as ""command""). It keeps throwing the attached error message (as log).; Ive verified the R1 and R2 have the same number of entries using grep to count the number of ""@"" symbols. These match. The lines of each file are the same as well. (screenshot also attached as ""size""); ![Command](https://user-images.githubusercontent.com/50889111/134416661-77de22d1-5fc4-4b89-a21d-940948fdc4b8.png); ![Size](https://user-images.githubusercontent.com/50889111/134416664-21c6373f-57be-4c8d-b917-68aa16262f57.png); <img width=""1314"" alt=""Log"" src=""https://user-images.githubusercontent.com/50889111/134416666-5dcf3843-ef06-45b1-bb77-6c2dbae9e6e4.png"">. I'm not sure what to do from here; Please help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/709
https://github.com/COMBINE-lab/salmon/issues/709:680,Testability,Log,Log,680,"salmon version 1.5.1; Running with the following keystrokes:; salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o salmonoutput (screenshot attached as ""command""). It keeps throwing the attached error message (as log).; Ive verified the R1 and R2 have the same number of entries using grep to count the number of ""@"" symbols. These match. The lines of each file are the same as well. (screenshot also attached as ""size""); ![Command](https://user-images.githubusercontent.com/50889111/134416661-77de22d1-5fc4-4b89-a21d-940948fdc4b8.png); ![Size](https://user-images.githubusercontent.com/50889111/134416664-21c6373f-57be-4c8d-b917-68aa16262f57.png); <img width=""1314"" alt=""Log"" src=""https://user-images.githubusercontent.com/50889111/134416666-5dcf3843-ef06-45b1-bb77-6c2dbae9e6e4.png"">. I'm not sure what to do from here; Please help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/709
https://github.com/COMBINE-lab/salmon/issues/710:118,Deployability,install,installed,118,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710
https://github.com/COMBINE-lab/salmon/issues/710:252,Deployability,install,installation,252,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710
https://github.com/COMBINE-lab/salmon/issues/710:709,Deployability,install,installation,709,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710
https://github.com/COMBINE-lab/salmon/issues/710:1538,Deployability,Release,Release,1538,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710
https://github.com/COMBINE-lab/salmon/issues/710:215,Modifiability,variab,variables,215,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710
https://github.com/COMBINE-lab/salmon/issues/710:160,Performance,load,load,160,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710
https://github.com/COMBINE-lab/salmon/issues/710:545,Performance,load,loaded,545,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710
https://github.com/COMBINE-lab/salmon/issues/710:563,Performance,load,load,563,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710
https://github.com/COMBINE-lab/salmon/issues/710:1071,Performance,Load,Load,1071,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710
https://github.com/COMBINE-lab/salmon/issues/710:1634,Safety,safe,safe,1634,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710
https://github.com/COMBINE-lab/salmon/issues/713:698,Availability,error,error,698,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:773,Availability,Error,Error,773,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:1221,Availability,error,error,1221," [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:1408,Availability,error,error,1408,"A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{ou",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:4669,Availability,down,downloaded,4669,"vin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz from one sample as representative reads.; * Which which program options were used? See above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:4711,Availability,Down,Downloaded,4711,"vin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz from one sample as representative reads.; * Which which program options were used? See above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:6587,Availability,error,error,6587,"s to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem here. I have attached subsampled fastq files for one of my samples as an example:; [sub_R1.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331798/sub_R1.fastq.gz); [sub_R2.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331799/sub_R2.fastq.gz). This is the error log after attempting to run the map reads step, which indicates an issue with the index build:; [B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331816/B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt). This is the error log after building the index, which seems to have run successfully (though maybe I am missing something):; [build_idx.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331817/build_idx.out.err.txt). This is the versionInfo.json file that is successfully generated after building the index, but that can't be found when mapping reads:; [versionInfo.txt](https://github.com/COMBINE-lab/salmon/files/7331818/versionInfo.txt). Thank you so much for any help/insight you might have! I appreciate it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:6871,Availability,error,error,6871,"s to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem here. I have attached subsampled fastq files for one of my samples as an example:; [sub_R1.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331798/sub_R1.fastq.gz); [sub_R2.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331799/sub_R2.fastq.gz). This is the error log after attempting to run the map reads step, which indicates an issue with the index build:; [B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331816/B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt). This is the error log after building the index, which seems to have run successfully (though maybe I am missing something):; [build_idx.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331817/build_idx.out.err.txt). This is the versionInfo.json file that is successfully generated after building the index, but that can't be found when mapping reads:; [versionInfo.txt](https://github.com/COMBINE-lab/salmon/files/7331818/versionInfo.txt). Thank you so much for any help/insight you might have! I appreciate it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:572,Deployability,pipeline,pipeline,572,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:712,Deployability,pipeline,pipeline,712,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:2928,Deployability,pipeline,pipeline,2928,"_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_coun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:3240,Deployability,update,update,3240,"/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:3267,Deployability,pipeline,pipeline,3267,"/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:4648,Deployability,install,installed,4648,"vin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz from one sample as representative reads.; * Which which program options were used? See above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:4767,Deployability,release,releases,4767,"ata}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz from one sample as representative reads.; * Which which program options were used? See above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:6186,Deployability,release,release,6186,"above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem here. I have attached subsampled fastq files for one of my samples as an example:; [sub_R1.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331798/sub_R1.fastq.gz); [sub_R2.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331799/sub_R2.fastq.gz). This is the error log after attempting to run the map reads step, which indicates an issue with the index build:; [B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331816/B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt). This is the error log after building the index, which seems to have run successfully (though maybe I am missing something):; [build_idx.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331817/build_idx.out.err.txt). This is the versionInfo.json file that is successfully generated after buildi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:6212,Deployability,Release,Release,6212,"ich closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem here. I have attached subsampled fastq files for one of my samples as an example:; [sub_R1.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331798/sub_R1.fastq.gz); [sub_R2.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331799/sub_R2.fastq.gz). This is the error log after attempting to run the map reads step, which indicates an issue with the index build:; [B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331816/B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt). This is the error log after building the index, which seems to have run successfully (though maybe I am missing something):; [build_idx.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331817/build_idx.out.err.txt). This is the versionInfo.json file that is successfully generated after building the index, but that can't be found when mapping",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:3384,Energy Efficiency,Reduce,Reduced,3384,""",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:549,Integrability,wrap,wrapped,549,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:2321,Testability,log,log,2321,"revious (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rul",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:2436,Testability,log,log,2436,"ng. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:2694,Testability,log,log,2694,"//cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:2701,Testability,log,logs,2701,"//cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:3697,Testability,log,log,3697,"threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:3861,Testability,log,logs,3861,"nning this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:3879,Testability,log,log,3879,"cluding `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutori",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:4156,Testability,log,log,4156,"d slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:4163,Testability,log,logs,4163,"d slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:6593,Testability,log,log,6593,"s to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem here. I have attached subsampled fastq files for one of my samples as an example:; [sub_R1.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331798/sub_R1.fastq.gz); [sub_R2.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331799/sub_R2.fastq.gz). This is the error log after attempting to run the map reads step, which indicates an issue with the index build:; [B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331816/B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt). This is the error log after building the index, which seems to have run successfully (though maybe I am missing something):; [build_idx.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331817/build_idx.out.err.txt). This is the versionInfo.json file that is successfully generated after building the index, but that can't be found when mapping reads:; [versionInfo.txt](https://github.com/COMBINE-lab/salmon/files/7331818/versionInfo.txt). Thank you so much for any help/insight you might have! I appreciate it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:6877,Testability,log,log,6877,"s to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem here. I have attached subsampled fastq files for one of my samples as an example:; [sub_R1.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331798/sub_R1.fastq.gz); [sub_R2.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331799/sub_R2.fastq.gz). This is the error log after attempting to run the map reads step, which indicates an issue with the index build:; [B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331816/B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt). This is the error log after building the index, which seems to have run successfully (though maybe I am missing something):; [build_idx.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331817/build_idx.out.err.txt). This is the versionInfo.json file that is successfully generated after building the index, but that can't be found when mapping reads:; [versionInfo.txt](https://github.com/COMBINE-lab/salmon/files/7331818/versionInfo.txt). Thank you so much for any help/insight you might have! I appreciate it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:333,Usability,clear,clear,333,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/713:5299,Usability,clear,clear,5299," -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz from one sample as representative reads.; * Which which program options were used? See above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713
https://github.com/COMBINE-lab/salmon/issues/714:391,Availability,error,error,391,"Greetings,. I would like to thank you for providing this as an open-source tool. Currently, I am performing Salmon Indexing using human Gencode V35. I am following the instruction from: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. But when I try running the command of ""**salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode**"", I hit the error of ""exception : [unrecognised option '-d']. Exiting."". In the --help section the argument of ""-d"" is not present. Please do advise me on how I should proceed with indexing?. Regards,; Ben. ![image](https://user-images.githubusercontent.com/69944967/137584568-a0378455-a751-4d1f-885b-a66addf07160.png). ![image](https://user-images.githubusercontent.com/69944967/137584591-c61a3777-aff5-416f-beee-a33ad81ea5dd.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/714
https://github.com/COMBINE-lab/salmon/issues/714:97,Performance,perform,performing,97,"Greetings,. I would like to thank you for providing this as an open-source tool. Currently, I am performing Salmon Indexing using human Gencode V35. I am following the instruction from: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. But when I try running the command of ""**salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode**"", I hit the error of ""exception : [unrecognised option '-d']. Exiting."". In the --help section the argument of ""-d"" is not present. Please do advise me on how I should proceed with indexing?. Regards,; Ben. ![image](https://user-images.githubusercontent.com/69944967/137584568-a0378455-a751-4d1f-885b-a66addf07160.png). ![image](https://user-images.githubusercontent.com/69944967/137584591-c61a3777-aff5-416f-beee-a33ad81ea5dd.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/714
https://github.com/COMBINE-lab/salmon/issues/715:572,Testability,log,log,572,"Hi,. I am trying to use alevin and alevin-fry to process a mixing experiment with human and mouse cells and generate a plot comparing the amount of UMIs assigned to each species per cell. Since I am using the newer workflow with alevin-fry, I am generating a RAD file with salmon alevin then processing with alevin-fry. For the species-mixed data, I generated a concatenated reference with both mouse and human transcripts to do one alignment on the data. . Starting from ~210m raw reads, I get 139m aligned, and 59m of those are uniquely mapped according to salmon_quant.log. When running alevin-fry, I use the `--resolution trivial` flag to force quantification by uniquely mapped reads alone. However, this procedure does not seem to work, as over 90% of reads map to mouse even though the two species should have been mixed evenly. Do I need to approach this in a different way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/715
https://github.com/COMBINE-lab/salmon/issues/716:57,Deployability,install,installation,57,Could you please provide the newest salmon ; version for installation via e.g. 'sudo apt install salmon' (rather than the cmake source code approach)?; Thanks!,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/716
https://github.com/COMBINE-lab/salmon/issues/716:89,Deployability,install,install,89,Could you please provide the newest salmon ; version for installation via e.g. 'sudo apt install salmon' (rather than the cmake source code approach)?; Thanks!,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/716
https://github.com/COMBINE-lab/salmon/issues/717:430,Availability,error,error,430,"Hello Bob, ; I am trying to implement Salmon 1.5.3 and I have problems running the quant mode. I succeed to prepare the index using decoy protocol and I am trying reads quantification mode.; I; used this command line:; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index -l ISF -1 rawDataPE/ERR3537668_1.fastq.gz -2 rawDataPE/ERR3537668_2.fastq.gz --validateMappings -o transcripts_quant_test. and I got this message error:; Exception : [std::bad_alloc]; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant was invoked improperly.; For usage information, try ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant --help; Exiting. Would you have any idea why I got this message error? Could you please help me to solve this problem?; Best ; Luciana",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717
https://github.com/COMBINE-lab/salmon/issues/717:682,Availability,error,error,682,"Hello Bob, ; I am trying to implement Salmon 1.5.3 and I have problems running the quant mode. I succeed to prepare the index using decoy protocol and I am trying reads quantification mode.; I; used this command line:; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index -l ISF -1 rawDataPE/ERR3537668_1.fastq.gz -2 rawDataPE/ERR3537668_2.fastq.gz --validateMappings -o transcripts_quant_test. and I got this message error:; Exception : [std::bad_alloc]; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant was invoked improperly.; For usage information, try ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant --help; Exiting. Would you have any idea why I got this message error? Could you please help me to solve this problem?; Best ; Luciana",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717
https://github.com/COMBINE-lab/salmon/issues/717:138,Integrability,protocol,protocol,138,"Hello Bob, ; I am trying to implement Salmon 1.5.3 and I have problems running the quant mode. I succeed to prepare the index using decoy protocol and I am trying reads quantification mode.; I; used this command line:; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index -l ISF -1 rawDataPE/ERR3537668_1.fastq.gz -2 rawDataPE/ERR3537668_2.fastq.gz --validateMappings -o transcripts_quant_test. and I got this message error:; Exception : [std::bad_alloc]; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant was invoked improperly.; For usage information, try ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant --help; Exiting. Would you have any idea why I got this message error? Could you please help me to solve this problem?; Best ; Luciana",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717
https://github.com/COMBINE-lab/salmon/issues/717:422,Integrability,message,message,422,"Hello Bob, ; I am trying to implement Salmon 1.5.3 and I have problems running the quant mode. I succeed to prepare the index using decoy protocol and I am trying reads quantification mode.; I; used this command line:; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index -l ISF -1 rawDataPE/ERR3537668_1.fastq.gz -2 rawDataPE/ERR3537668_2.fastq.gz --validateMappings -o transcripts_quant_test. and I got this message error:; Exception : [std::bad_alloc]; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant was invoked improperly.; For usage information, try ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant --help; Exiting. Would you have any idea why I got this message error? Could you please help me to solve this problem?; Best ; Luciana",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717
https://github.com/COMBINE-lab/salmon/issues/717:674,Integrability,message,message,674,"Hello Bob, ; I am trying to implement Salmon 1.5.3 and I have problems running the quant mode. I succeed to prepare the index using decoy protocol and I am trying reads quantification mode.; I; used this command line:; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index -l ISF -1 rawDataPE/ERR3537668_1.fastq.gz -2 rawDataPE/ERR3537668_2.fastq.gz --validateMappings -o transcripts_quant_test. and I got this message error:; Exception : [std::bad_alloc]; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant was invoked improperly.; For usage information, try ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant --help; Exiting. Would you have any idea why I got this message error? Could you please help me to solve this problem?; Best ; Luciana",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717
https://github.com/COMBINE-lab/salmon/issues/717:363,Security,validat,validateMappings,363,"Hello Bob, ; I am trying to implement Salmon 1.5.3 and I have problems running the quant mode. I succeed to prepare the index using decoy protocol and I am trying reads quantification mode.; I; used this command line:; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index -l ISF -1 rawDataPE/ERR3537668_1.fastq.gz -2 rawDataPE/ERR3537668_2.fastq.gz --validateMappings -o transcripts_quant_test. and I got this message error:; Exception : [std::bad_alloc]; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant was invoked improperly.; For usage information, try ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant --help; Exiting. Would you have any idea why I got this message error? Could you please help me to solve this problem?; Best ; Luciana",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717
https://github.com/COMBINE-lab/salmon/issues/720:1041,Availability,error,error,1041,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720
https://github.com/COMBINE-lab/salmon/issues/720:210,Security,password,password,210,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720
https://github.com/COMBINE-lab/salmon/issues/720:812,Testability,log,log,812,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720
https://github.com/COMBINE-lab/salmon/issues/720:835,Testability,log,log,835,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720
https://github.com/COMBINE-lab/salmon/issues/720:854,Testability,log,log,854,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720
https://github.com/COMBINE-lab/salmon/issues/720:924,Testability,log,log,924,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720
https://github.com/COMBINE-lab/salmon/issues/720:947,Testability,log,log,947,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720
https://github.com/COMBINE-lab/salmon/issues/720:1017,Testability,log,log,1017,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720
https://github.com/COMBINE-lab/salmon/issues/722:11,Availability,down,downloaded,11,"Hi All,. I downloaded the Salmon index as well as `tgMap` from refgenie for the mm10 genome using the following. ```; ## get index and tgmap from refgenie; wget -O mm10SalmonIndex.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/salmon_sa_index; gunzip mm10SalmonIndex.gz. wget -O mm10tgMap.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:660,Availability,error,error,660,"Hi All,. I downloaded the Salmon index as well as `tgMap` from refgenie for the mm10 genome using the following. ```; ## get index and tgmap from refgenie; wget -O mm10SalmonIndex.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/salmon_sa_index; gunzip mm10SalmonIndex.gz. wget -O mm10tgMap.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:2267,Availability,error,error,2267,".fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 transcripts. Exiting; ```. I had also tried building the index myself using the Gencode mm10 transcripts downloaded [here](https://www.gencodegenes.org/mouse/), but it seems unclear how one could make the `tgMap` from that exact same genome version/patch. Is there a recommended way to extract `tgMap` from, for example, the GTF file provided on that same webpage?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:2274,Availability,ERROR,ERROR,2274,".fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 transcripts. Exiting; ```. I had also tried building the index myself using the Gencode mm10 transcripts downloaded [here](https://www.gencodegenes.org/mouse/), but it seems unclear how one could make the `tgMap` from that exact same genome version/patch. Is there a recommended way to extract `tgMap` from, for example, the GTF file provided on that same webpage?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:2383,Availability,error,error,2383,".fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 transcripts. Exiting; ```. I had also tried building the index myself using the Gencode mm10 transcripts downloaded [here](https://www.gencodegenes.org/mouse/), but it seems unclear how one could make the `tgMap` from that exact same genome version/patch. Is there a recommended way to extract `tgMap` from, for example, the GTF file provided on that same webpage?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:2390,Availability,ERROR,ERROR,2390,".fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 transcripts. Exiting; ```. I had also tried building the index myself using the Gencode mm10 transcripts downloaded [here](https://www.gencodegenes.org/mouse/), but it seems unclear how one could make the `tgMap` from that exact same genome version/patch. Is there a recommended way to extract `tgMap` from, for example, the GTF file provided on that same webpage?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:2553,Availability,down,downloaded,2553,".fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 transcripts. Exiting; ```. I had also tried building the index myself using the Gencode mm10 transcripts downloaded [here](https://www.gencodegenes.org/mouse/), but it seems unclear how one could make the `tgMap` from that exact same genome version/patch. Is there a recommended way to extract `tgMap` from, for example, the GTF file provided on that same webpage?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:2697,Deployability,patch,patch,2697,".fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 transcripts. Exiting; ```. I had also tried building the index myself using the Gencode mm10 transcripts downloaded [here](https://www.gencodegenes.org/mouse/), but it seems unclear how one could make the `tgMap` from that exact same genome version/patch. Is there a recommended way to extract `tgMap` from, for example, the GTF file provided on that same webpage?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:1322,Security,validat,validation,1322,"ndex; gunzip mm10SalmonIndex.gz. wget -O mm10tgMap.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:1336,Security,validat,validateMappings,1336,"ndex; gunzip mm10SalmonIndex.gz. wget -O mm10tgMap.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:1372,Security,validat,validation,1372,"io.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:1440,Security,validat,validateMappings,1440,"; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:951,Testability,Log,Logs,951,"Hi All,. I downloaded the Salmon index as well as `tgMap` from refgenie for the mm10 genome using the following. ```; ## get index and tgmap from refgenie; wget -O mm10SalmonIndex.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/salmon_sa_index; gunzip mm10SalmonIndex.gz. wget -O mm10tgMap.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/issues/722:990,Testability,log,logs,990,"Hi All,. I downloaded the Salmon index as well as `tgMap` from refgenie for the mm10 genome using the following. ```; ## get index and tgmap from refgenie; wget -O mm10SalmonIndex.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/salmon_sa_index; gunzip mm10SalmonIndex.gz. wget -O mm10tgMap.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722
https://github.com/COMBINE-lab/salmon/pull/723:14,Integrability,protocol,protocol,14,Add supported protocol information and protocol specific notes.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/723
https://github.com/COMBINE-lab/salmon/pull/723:39,Integrability,protocol,protocol,39,Add supported protocol information and protocol specific notes.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/723
https://github.com/COMBINE-lab/salmon/issues/724:12,Availability,error,error,12,"this is the error I am getting. . ```; The package ""salmon"" has no matches.; There are these packages and versions available:. NULL. Error in install_CondaTools(tools = ""salmon"", env = ""RNAseq_analysis"", :; The package and/or version are not available in conda. Check above for details.; In addition: Warning message:; In system(paste(pathToConda, ""search --quiet --json"", package_input, :; running command '/Users/vittoriobontempi/Library/r-miniconda/bin/conda search --quiet --json ""salmon"" -c bioconda -c defaults -c conda-forge 2>/dev/null' had status 1; ```. any help will be greatly appreciated. thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724
https://github.com/COMBINE-lab/salmon/issues/724:115,Availability,avail,available,115,"this is the error I am getting. . ```; The package ""salmon"" has no matches.; There are these packages and versions available:. NULL. Error in install_CondaTools(tools = ""salmon"", env = ""RNAseq_analysis"", :; The package and/or version are not available in conda. Check above for details.; In addition: Warning message:; In system(paste(pathToConda, ""search --quiet --json"", package_input, :; running command '/Users/vittoriobontempi/Library/r-miniconda/bin/conda search --quiet --json ""salmon"" -c bioconda -c defaults -c conda-forge 2>/dev/null' had status 1; ```. any help will be greatly appreciated. thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724
https://github.com/COMBINE-lab/salmon/issues/724:133,Availability,Error,Error,133,"this is the error I am getting. . ```; The package ""salmon"" has no matches.; There are these packages and versions available:. NULL. Error in install_CondaTools(tools = ""salmon"", env = ""RNAseq_analysis"", :; The package and/or version are not available in conda. Check above for details.; In addition: Warning message:; In system(paste(pathToConda, ""search --quiet --json"", package_input, :; running command '/Users/vittoriobontempi/Library/r-miniconda/bin/conda search --quiet --json ""salmon"" -c bioconda -c defaults -c conda-forge 2>/dev/null' had status 1; ```. any help will be greatly appreciated. thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724
https://github.com/COMBINE-lab/salmon/issues/724:242,Availability,avail,available,242,"this is the error I am getting. . ```; The package ""salmon"" has no matches.; There are these packages and versions available:. NULL. Error in install_CondaTools(tools = ""salmon"", env = ""RNAseq_analysis"", :; The package and/or version are not available in conda. Check above for details.; In addition: Warning message:; In system(paste(pathToConda, ""search --quiet --json"", package_input, :; running command '/Users/vittoriobontempi/Library/r-miniconda/bin/conda search --quiet --json ""salmon"" -c bioconda -c defaults -c conda-forge 2>/dev/null' had status 1; ```. any help will be greatly appreciated. thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724
https://github.com/COMBINE-lab/salmon/issues/724:309,Integrability,message,message,309,"this is the error I am getting. . ```; The package ""salmon"" has no matches.; There are these packages and versions available:. NULL. Error in install_CondaTools(tools = ""salmon"", env = ""RNAseq_analysis"", :; The package and/or version are not available in conda. Check above for details.; In addition: Warning message:; In system(paste(pathToConda, ""search --quiet --json"", package_input, :; running command '/Users/vittoriobontempi/Library/r-miniconda/bin/conda search --quiet --json ""salmon"" -c bioconda -c defaults -c conda-forge 2>/dev/null' had status 1; ```. any help will be greatly appreciated. thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724
https://github.com/COMBINE-lab/salmon/issues/725:1552,Availability,fault,fault,1552,"06 08:42:39.323] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-12-06 08:42:40.120] [puff::index::jointLog] [warning] Entry with header [ATMG00665.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping) ; ; [2021-12-06 08:43:01.886] [puff::index::jointLog] [warning] Removed 580 transcripts that were sequence duplicates of indexed transcripts. ; [2021-12-06 08:43:01.886] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag ; [2021-12-06 08:43:01.886] [puff::index::jointLog] [info] Replaced 698 non-ATCG nucleotides; [2021-12-06 08:43:01.886] [puff::index::jointLog] [info] Clipped poly-A tails from 24 transcripts; wrote 40811 cleaned references; Segmentation fault (core dumped); ```; ```; (lldb) bt; * thread #1, name = 'salmon', stop reason = signal SIGSEGV; * frame #0: 0x0000000000995120 salmon`rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::CrtAllocator, 2u>::PrettyPrefix(rapidjson::Type) [inlined] rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >::Put(this=<unavailable>, c=',') at ostreamwrapper.h:51:9; frame #1: 0x0000000000995120 salmon`rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::CrtAllocator, 2u>::PrettyPrefix(this=<unavailable>, type=<unavailable>) at prettywriter.h:215; frame #2: 0x00000000004e10dc salmon`rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::CrtAllocator, 2u>::Bool(this=0x00007fffffff4a70, b=false) at prettywriter.h:96:35; frame #3: 0x00000000004e108f salmon`cereal::JSONOutputArchive::saveValue",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725
https://github.com/COMBINE-lab/salmon/issues/725:7314,Deployability,install,installed,7314,"lmonIndex::build(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) at SalmonIndex.hpp:76; frame #17: 0x00000000009839c3 salmon`salmonIndex(argc=<unavailable>, argv=<unavailable>, (null)=<unavailable>) at BuildSalmonIndex.cpp:236; frame #18: 0x000000000097a673 salmon`main [inlined] std::__1::__function::__value_func<int (int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&)>::operator(this=<unavailable>, __args=<unavailable>, __args=<unavailable>, __args=<unavailable>)(int&&, char const**&&, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) const at functional:1884:16 ; frame #19: 0x000000000097a648 salmon`main [inlined] std::__1::function<int (int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&)>::operator(this=<unavailable>, __arg=<unavailable>, __arg=<unavailable>, __arg=<unavailable>)(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) const at functional:2556; frame #20: 0x000000000097a648 salmon`main(argc=<unavailable>, argv=<unavailable>) at Salmon.cpp:274; frame #21: 0x000000000046bbf0 salmon`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; ```; Given that the crash is happening in a stream.Put() call, I presume that the stream must not be open and this should have been caught earlier. ```; template <typename StreamType>; class BasicOStreamWrapper {; public:; typedef typename StreamType::char_type Ch;; BasicOStreamWrapper(StreamType& stream) : stream_(stream) {}. void Put(Ch c) {; stream_.put(c);; }; ```; If you can provide any clues as to where in this lengthy backtrace the problem actually begins, it would be appreciated.; I used minimal changes to the raw dist to get this working.; Separately installed dependencies:. cereal 1.3.0.10; libgff 2.0.0; tbb 2020.3; boost-libs 1.72.0. Pufferfish 1.6.0 and staden-io_lib 1.14.8.1 are embedded in the build. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725
https://github.com/COMBINE-lab/salmon/issues/725:7324,Integrability,depend,dependencies,7324,"lmonIndex::build(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) at SalmonIndex.hpp:76; frame #17: 0x00000000009839c3 salmon`salmonIndex(argc=<unavailable>, argv=<unavailable>, (null)=<unavailable>) at BuildSalmonIndex.cpp:236; frame #18: 0x000000000097a673 salmon`main [inlined] std::__1::__function::__value_func<int (int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&)>::operator(this=<unavailable>, __args=<unavailable>, __args=<unavailable>, __args=<unavailable>)(int&&, char const**&&, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) const at functional:1884:16 ; frame #19: 0x000000000097a648 salmon`main [inlined] std::__1::function<int (int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&)>::operator(this=<unavailable>, __arg=<unavailable>, __arg=<unavailable>, __arg=<unavailable>)(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) const at functional:2556; frame #20: 0x000000000097a648 salmon`main(argc=<unavailable>, argv=<unavailable>) at Salmon.cpp:274; frame #21: 0x000000000046bbf0 salmon`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; ```; Given that the crash is happening in a stream.Put() call, I presume that the stream must not be open and this should have been caught earlier. ```; template <typename StreamType>; class BasicOStreamWrapper {; public:; typedef typename StreamType::char_type Ch;; BasicOStreamWrapper(StreamType& stream) : stream_(stream) {}. void Put(Ch c) {; stream_.put(c);; }; ```; If you can provide any clues as to where in this lengthy backtrace the problem actually begins, it would be appreciated.; I used minimal changes to the raw dist to get this working.; Separately installed dependencies:. cereal 1.3.0.10; libgff 2.0.0; tbb 2020.3; boost-libs 1.72.0. Pufferfish 1.6.0 and staden-io_lib 1.14.8.1 are embedded in the build. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725
https://github.com/COMBINE-lab/salmon/issues/725:4639,Testability,log,log,4639," #8: 0x00000000004e0f04 salmon`void cereal::save<bool&>(ar=0x00007fffffff4990, t=0x00007fffffff44f8) at json.hpp:944:5; frame #9: 0x00000000004e0ea5 salmon`cereal::JSONOutputArchive& cereal::OutputArchive<cereal::JSONOutputArchive, 0u>::processImpl<cereal::NameValuePair<bool&>, (this=0x00007fffffff4990, t=0x00007fffffff44f8)0>(cereal::NameValuePair<bool&> const&) at cereal.hpp:505:9; frame #10: 0x00000000004e0e49 salmon`void cereal::OutputArchive<cereal::JSONOutputArchive, 0u>::process<cereal::NameValuePair<bool&> >(this=0x00007fffffff4990, head=0x00007fffffff44f8) at cereal.hpp:417:15; frame #11: 0x0000000000483895 salmon`cereal::JSONOutputArchive& cereal::OutputArchive<cereal::JSONOutputArchive, 0u>::operator(this=0x00007fffffff4990, args=0x00007fffffff44f8)<cereal::NameValuePair<bool&> >(cereal::NameValuePair<bool&>&&) at cereal.hpp:311:15; frame #12: 0x0000000000569d2b salmon`fixFasta(parser=0x00000008018dd000, decoyNames=0x00007fffffff66c8, keepDuplicates=false, k=31, sepStr="" \t"", expect_transcriptome=true, iomutex=0x00007fffffff5f80, log=<unavailable>, outFile=<unavailable>, refIdExtensions=size=40811, shortRefs=size=1) at FixFasta.cpp:456:5; frame #13: 0x000000000056d58f salmon`fixFastaMain(args=size=7, refIdExtension=size=40811, shortRefs=size=1, log=<unavailable>, hasFeatures=false) at FixFasta.cpp:684:16 ; frame #14: 0x0000000000471f33 salmon`pufferfishIndex(indexOpts=0x00007fffffffdcd8) at PufferfishIndexer.cpp:429:17; frame #15: 0x0000000000983a5c salmon`salmonIndex(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) [inlined] SalmonIndex::buildPuffIndex_(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) at SalmonIndex.hpp:111:15; frame #16: 0x0000000000983a32 salmon`salmonIndex(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) [inlined] SalmonIndex::build(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725
https://github.com/COMBINE-lab/salmon/issues/725:4858,Testability,log,log,4858,"essImpl<cereal::NameValuePair<bool&>, (this=0x00007fffffff4990, t=0x00007fffffff44f8)0>(cereal::NameValuePair<bool&> const&) at cereal.hpp:505:9; frame #10: 0x00000000004e0e49 salmon`void cereal::OutputArchive<cereal::JSONOutputArchive, 0u>::process<cereal::NameValuePair<bool&> >(this=0x00007fffffff4990, head=0x00007fffffff44f8) at cereal.hpp:417:15; frame #11: 0x0000000000483895 salmon`cereal::JSONOutputArchive& cereal::OutputArchive<cereal::JSONOutputArchive, 0u>::operator(this=0x00007fffffff4990, args=0x00007fffffff44f8)<cereal::NameValuePair<bool&> >(cereal::NameValuePair<bool&>&&) at cereal.hpp:311:15; frame #12: 0x0000000000569d2b salmon`fixFasta(parser=0x00000008018dd000, decoyNames=0x00007fffffff66c8, keepDuplicates=false, k=31, sepStr="" \t"", expect_transcriptome=true, iomutex=0x00007fffffff5f80, log=<unavailable>, outFile=<unavailable>, refIdExtensions=size=40811, shortRefs=size=1) at FixFasta.cpp:456:5; frame #13: 0x000000000056d58f salmon`fixFastaMain(args=size=7, refIdExtension=size=40811, shortRefs=size=1, log=<unavailable>, hasFeatures=false) at FixFasta.cpp:684:16 ; frame #14: 0x0000000000471f33 salmon`pufferfishIndex(indexOpts=0x00007fffffffdcd8) at PufferfishIndexer.cpp:429:17; frame #15: 0x0000000000983a5c salmon`salmonIndex(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) [inlined] SalmonIndex::buildPuffIndex_(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) at SalmonIndex.hpp:111:15; frame #16: 0x0000000000983a32 salmon`salmonIndex(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) [inlined] SalmonIndex::build(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) at SalmonIndex.hpp:76; frame #17: 0x00000000009839c3 salmon`salmonIndex(argc=<unavailable>, argv=<unavailable>, (null)=<unavailable>) at BuildSalmonIndex.cpp:236; frame #18: 0x000000000097a673 salmon`main [inlined] std::__1::__function::__val",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725
https://github.com/COMBINE-lab/salmon/pull/726:41,Integrability,protocol,protocol,41,"This PR addresses issue #699. To use the protocol, pass the `--splitseqV2` or `--splitseqV1` flag. To test the implementation correlation analysis was done on [data](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE137941) submitted with the [article](https://www.sciencedirect.com/science/article/pii/S1934590920300552). Thanks @jeremymsimon for pointing to the data. Here are the results of correlation b/w the alevin output and published counts. This test run was done as mentioned in [here](https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988185505). ![image](https://user-images.githubusercontent.com/12998572/145128352-6efe899a-ea06-49bf-9223-24ad4ba70223.png). ```; > summary(cr); Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.2966 0.7128 0.8690 0.8163 0.9448 0.9963 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/726
https://github.com/COMBINE-lab/salmon/pull/726:102,Testability,test,test,102,"This PR addresses issue #699. To use the protocol, pass the `--splitseqV2` or `--splitseqV1` flag. To test the implementation correlation analysis was done on [data](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE137941) submitted with the [article](https://www.sciencedirect.com/science/article/pii/S1934590920300552). Thanks @jeremymsimon for pointing to the data. Here are the results of correlation b/w the alevin output and published counts. This test run was done as mentioned in [here](https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988185505). ![image](https://user-images.githubusercontent.com/12998572/145128352-6efe899a-ea06-49bf-9223-24ad4ba70223.png). ```; > summary(cr); Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.2966 0.7128 0.8690 0.8163 0.9448 0.9963 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/726
https://github.com/COMBINE-lab/salmon/pull/726:459,Testability,test,test,459,"This PR addresses issue #699. To use the protocol, pass the `--splitseqV2` or `--splitseqV1` flag. To test the implementation correlation analysis was done on [data](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE137941) submitted with the [article](https://www.sciencedirect.com/science/article/pii/S1934590920300552). Thanks @jeremymsimon for pointing to the data. Here are the results of correlation b/w the alevin output and published counts. This test run was done as mentioned in [here](https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988185505). ![image](https://user-images.githubusercontent.com/12998572/145128352-6efe899a-ea06-49bf-9223-24ad4ba70223.png). ```; > summary(cr); Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.2966 0.7128 0.8690 0.8163 0.9448 0.9963 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/726
https://github.com/COMBINE-lab/salmon/issues/728:488,Safety,detect,detected,488,"Hello. I ran Alevin with the `--dumpBfh` flag. This resulted in ``bfh.txt`` present in the output. ; At first sight, this file shares similarities with the ``eq_classes.txt`` you obtain when running salmon with the ``--dumpEq`` flag. Could you explain the format of the file in more detail? I couldn't find in the documentation of Alevin. At the moment, I think that: . - The first line is the number of transcripts.; - The second line is the number of valid barcodes, i.e. the number of detected cells. ; - The third line is the number of equivalence classes; - The next lines, starting with ENSMUST in my case, are the transcripts. ; - The next lines, starting with ACGT and in my case 12 characters long, are the retrieved cellular barcodes. ; - ... (Here I don't know what I am looking at). Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/728
https://github.com/COMBINE-lab/salmon/issues/729:188,Availability,down,downloaded,188,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729
https://github.com/COMBINE-lab/salmon/issues/729:473,Availability,error,error,473,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729
https://github.com/COMBINE-lab/salmon/issues/729:512,Availability,Error,Error,512,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729
https://github.com/COMBINE-lab/salmon/issues/729:169,Deployability,install,installing,169,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729
https://github.com/COMBINE-lab/salmon/issues/729:415,Deployability,configurat,configuration,415,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729
https://github.com/COMBINE-lab/salmon/issues/729:415,Modifiability,config,configuration,415,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729
https://github.com/COMBINE-lab/salmon/issues/729:486,Modifiability,Config,Configuring,486,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729
https://github.com/COMBINE-lab/salmon/issues/729:533,Modifiability,variab,variables,533,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729
https://github.com/COMBINE-lab/salmon/issues/729:648,Testability,test,tested,648,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729
https://github.com/COMBINE-lab/salmon/issues/730:281,Availability,error,error,281,"I have made a singularity container for the salmon v1.6.0 and I am working with centOS. ; I am trying to make an index file for human transcript using this command:. **salmon index -t hg19_EnsenmblGenes_sequence_ensenmbl.fasta -i Ensembl_hg19_salmon_index**. But I am getting this error:. **Version Info: This is the most recent version of salmon.; exception : [the option '--index' is required but missing]. Exiting.**; ; Then I tried this command:. **salmon --index -t hg19_EnsenmblGenes_sequence_ensenmbl.fasta -i Ensembl_hg19_salmon_index**. Then I got this error:. **Version Info: This is the most recent version of salmon.; salmon was invoked improperly.; For usage information, try salmon --help; Exiting.**. Do you know how I can fix the issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/730
https://github.com/COMBINE-lab/salmon/issues/730:562,Availability,error,error,562,"I have made a singularity container for the salmon v1.6.0 and I am working with centOS. ; I am trying to make an index file for human transcript using this command:. **salmon index -t hg19_EnsenmblGenes_sequence_ensenmbl.fasta -i Ensembl_hg19_salmon_index**. But I am getting this error:. **Version Info: This is the most recent version of salmon.; exception : [the option '--index' is required but missing]. Exiting.**; ; Then I tried this command:. **salmon --index -t hg19_EnsenmblGenes_sequence_ensenmbl.fasta -i Ensembl_hg19_salmon_index**. Then I got this error:. **Version Info: This is the most recent version of salmon.; salmon was invoked improperly.; For usage information, try salmon --help; Exiting.**. Do you know how I can fix the issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/730
https://github.com/COMBINE-lab/salmon/issues/731:182,Availability,error,error,182,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:227,Availability,error,error,227,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:519,Availability,Down,Download,519,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:938,Availability,down,download,938,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:2340,Availability,error,error,2340,"10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/indexes/salmon/mm10 \; -d /no_backup/indexes/salmon/mm10/decoys.txt \; -k 28 --threads 6; ```; The author of `salmon` find that a *k* of 31 seems to work well for reads of 75bp or longer, but recommend considering a smaller *k* if you plan to deal with shorter reads. So I picked `28` cause I have 50bp SE. After the job starts I get this error message:; ```; Version Info: This is the most recent version of salmon.; [2021-12-24 17:32:49.324] [jLog] [info] building index; out : /no_backup/indexes/salmon/mm10; [2021-12-24 17:32:49.326] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000177564.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping); [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:3691,Availability,error,errors,3691," less than equal to the k-mer length of 28 (perhaps after poly-A clipping); [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-am",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:3698,Availability,down,downstream,3698," less than equal to the k-mer length of 28 (perhaps after poly-A clipping); [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-am",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:3855,Availability,error,error,3855,"] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 7.2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:4002,Availability,error,error,4002,"gth less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 7.2 (Nitrogen); Release:	7.2; Codename:	Nitrogen; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:307,Deployability,install,install,307,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:372,Deployability,install,installed,372,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:450,Deployability,install,install,450,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:655,Deployability,release,release-,655,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:4857,Deployability,release,release,4857,"gth less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 7.2 (Nitrogen); Release:	7.2; Codename:	Nitrogen; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:4881,Deployability,Release,Release,4881,"gth less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 7.2 (Nitrogen); Release:	7.2; Codename:	Nitrogen; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:2346,Integrability,message,message,2346,"10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/indexes/salmon/mm10 \; -d /no_backup/indexes/salmon/mm10/decoys.txt \; -k 28 --threads 6; ```; The author of `salmon` find that a *k* of 31 seems to work well for reads of 75bp or longer, but recommend considering a smaller *k* if you plan to deal with shorter reads. So I picked `28` cause I have 50bp SE. After the job starts I get this error message:; ```; Version Info: This is the most recent version of salmon.; [2021-12-24 17:32:49.324] [jLog] [info] building index; out : /no_backup/indexes/salmon/mm10; [2021-12-24 17:32:49.326] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000177564.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping); [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/731:4376,Safety,avoid,avoid,4376,"gth less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 7.2 (Nitrogen); Release:	7.2; Codename:	Nitrogen; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731
https://github.com/COMBINE-lab/salmon/issues/732:1546,Energy Efficiency,allocate,allocated,1546,"Hi ; I am running an analysis using FLAIR (https://github.com/BrooksLabUCSC/flair) that uses the desired salmon version at the back end. Since it is trying to construct a de-novo transcriptome it pools the samples resulting in a sam file that is 266GB. When I run this analysis on the HPC, the salmon analysis ends without quant.sf file being written. The start and end of the STDERR written by salmon are shown below. . ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.6.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../data/FLAIR_2021-12-26/collapse_2021-12-26.firstpass.fa }; # [ output ] => { tmp99xm2qn8_2 }; # [ threads ] => { 8 }; # [ ont ] => { }; # [ libType ] => { U }; # [ alignments ] => { tmp99xm2qn8.firstpass.sam }; ---------------------------------------------; Completed first pass through the alignment file.; Total # of mapped reads : 74567310; # of uniquely mapped reads : 8113553; # ambiguously mapped reads : 66453757. Freeing memory used by read queue . . .; Joined parsing thread . . . ""tmp99xm2qn8.firstpass.sam""; Closed all files . . .; Emptied frag queue. . .; Emptied Alignment Group Pool. .; Emptied Alignment Group Queue. . . done; ============; Exception : [std::bad_alloc]; ============; ```; /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon alignment-quant was invoked improperly.; For usage information, try /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon quant --help-alignments. I have tried increasing the memory allocated to the analysis. It seems to complete but without the quantification files. . I also do not understand if it runs to the this point how this statement ""alignment-quant was invoked improperly."" could be true. . Any help would be greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/732
https://github.com/COMBINE-lab/salmon/issues/732:1038,Performance,queue,queue,1038,"Hi ; I am running an analysis using FLAIR (https://github.com/BrooksLabUCSC/flair) that uses the desired salmon version at the back end. Since it is trying to construct a de-novo transcriptome it pools the samples resulting in a sam file that is 266GB. When I run this analysis on the HPC, the salmon analysis ends without quant.sf file being written. The start and end of the STDERR written by salmon are shown below. . ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.6.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../data/FLAIR_2021-12-26/collapse_2021-12-26.firstpass.fa }; # [ output ] => { tmp99xm2qn8_2 }; # [ threads ] => { 8 }; # [ ont ] => { }; # [ libType ] => { U }; # [ alignments ] => { tmp99xm2qn8.firstpass.sam }; ---------------------------------------------; Completed first pass through the alignment file.; Total # of mapped reads : 74567310; # of uniquely mapped reads : 8113553; # ambiguously mapped reads : 66453757. Freeing memory used by read queue . . .; Joined parsing thread . . . ""tmp99xm2qn8.firstpass.sam""; Closed all files . . .; Emptied frag queue. . .; Emptied Alignment Group Pool. .; Emptied Alignment Group Queue. . . done; ============; Exception : [std::bad_alloc]; ============; ```; /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon alignment-quant was invoked improperly.; For usage information, try /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon quant --help-alignments. I have tried increasing the memory allocated to the analysis. It seems to complete but without the quantification files. . I also do not understand if it runs to the this point how this statement ""alignment-quant was invoked improperly."" could be true. . Any help would be greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/732
https://github.com/COMBINE-lab/salmon/issues/732:1145,Performance,queue,queue,1145,"Hi ; I am running an analysis using FLAIR (https://github.com/BrooksLabUCSC/flair) that uses the desired salmon version at the back end. Since it is trying to construct a de-novo transcriptome it pools the samples resulting in a sam file that is 266GB. When I run this analysis on the HPC, the salmon analysis ends without quant.sf file being written. The start and end of the STDERR written by salmon are shown below. . ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.6.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../data/FLAIR_2021-12-26/collapse_2021-12-26.firstpass.fa }; # [ output ] => { tmp99xm2qn8_2 }; # [ threads ] => { 8 }; # [ ont ] => { }; # [ libType ] => { U }; # [ alignments ] => { tmp99xm2qn8.firstpass.sam }; ---------------------------------------------; Completed first pass through the alignment file.; Total # of mapped reads : 74567310; # of uniquely mapped reads : 8113553; # ambiguously mapped reads : 66453757. Freeing memory used by read queue . . .; Joined parsing thread . . . ""tmp99xm2qn8.firstpass.sam""; Closed all files . . .; Emptied frag queue. . .; Emptied Alignment Group Pool. .; Emptied Alignment Group Queue. . . done; ============; Exception : [std::bad_alloc]; ============; ```; /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon alignment-quant was invoked improperly.; For usage information, try /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon quant --help-alignments. I have tried increasing the memory allocated to the analysis. It seems to complete but without the quantification files. . I also do not understand if it runs to the this point how this statement ""alignment-quant was invoked improperly."" could be true. . Any help would be greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/732
https://github.com/COMBINE-lab/salmon/issues/732:1214,Performance,Queue,Queue,1214,"Hi ; I am running an analysis using FLAIR (https://github.com/BrooksLabUCSC/flair) that uses the desired salmon version at the back end. Since it is trying to construct a de-novo transcriptome it pools the samples resulting in a sam file that is 266GB. When I run this analysis on the HPC, the salmon analysis ends without quant.sf file being written. The start and end of the STDERR written by salmon are shown below. . ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.6.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../data/FLAIR_2021-12-26/collapse_2021-12-26.firstpass.fa }; # [ output ] => { tmp99xm2qn8_2 }; # [ threads ] => { 8 }; # [ ont ] => { }; # [ libType ] => { U }; # [ alignments ] => { tmp99xm2qn8.firstpass.sam }; ---------------------------------------------; Completed first pass through the alignment file.; Total # of mapped reads : 74567310; # of uniquely mapped reads : 8113553; # ambiguously mapped reads : 66453757. Freeing memory used by read queue . . .; Joined parsing thread . . . ""tmp99xm2qn8.firstpass.sam""; Closed all files . . .; Emptied frag queue. . .; Emptied Alignment Group Pool. .; Emptied Alignment Group Queue. . . done; ============; Exception : [std::bad_alloc]; ============; ```; /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon alignment-quant was invoked improperly.; For usage information, try /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon quant --help-alignments. I have tried increasing the memory allocated to the analysis. It seems to complete but without the quantification files. . I also do not understand if it runs to the this point how this statement ""alignment-quant was invoked improperly."" could be true. . Any help would be greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/732
https://github.com/COMBINE-lab/salmon/issues/733:46,Deployability,pipeline,pipeline,46,"Dear COMBINE-lab team,. I am using **Alevin** pipeline from the **salmon-1.4.0 release** to preprocess some Drop-Seq data. . From what I understood, Alevin is using sets of low quality, ambiguous and high quality barcodes for the final whitelisting. Ambiguous and high quality ones are sets of barcodes of equal sizes above the knee/threshold used for the initial whitelisting. Ambiguous barcodes get classified as either high or low quality. Correct me if I'm wrong, but I think this means that the final whitelisted barcodes (those of high quality) should all be above the knee/threshold.; However I observed that **some of the barcodes dumped in the whitelist.txt file from the intelligent whitelisting were not above the knee/threshold used for initial whitelisting.** . I was wondering if you could reproduce my observation, or tell me if I misunderstood something. Here's the code I used :. ```; with open(f""./aux_info/alevin_meta_info.json"") as f:; alevin_meta_info = json.load(f). knee_or_threshold = alevin_meta_info[""initial_whitelist""]; whitelist = pd.read_table(f""./alevin/whitelist.txt"", header=None)[0].values; quants_mat_rows = pd.read_table(f""./alevin/quants_mat_rows.txt"", header=None).values.ravel(); raw_cb_frequency = pd.read_table(f""./alevin/raw_cb_frequency.txt"", header=None, index_col=0). print(alevin_meta_info) >>. {'total_reads': 145095156,; 'reads_with_N': 0,; 'noisy_cb_reads': 66182273,; 'noisy_umi_reads': 3866,; 'used_reads': 78909017,; 'mapping_rate': 44.93378883027631,; 'reads_in_eqclasses': 65196751,; 'total_cbs': 3146561,; 'used_cbs': 92693,; 'initial_whitelist': 3000,; 'low_conf_cbs': 1000,; 'num_features': 7,; 'no_read_mapping_cbs': 1,; 'final_num_cbs': 2597,; 'deduplicated_umis': 6871590,; 'mean_umis_per_cell': 2645,; 'mean_genes_per_cell': 1370}. print(len(quants_mat_rows)) >> 3999; print(knee_or_threshold) >> 3000. print(len(whitelist)) >> 2597; print(len(np.intersect1d(raw_cb_frequency[:knee_or_threshold].index, whitelist))) >> 2513; ```. The thresh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/733
https://github.com/COMBINE-lab/salmon/issues/733:79,Deployability,release,release,79,"Dear COMBINE-lab team,. I am using **Alevin** pipeline from the **salmon-1.4.0 release** to preprocess some Drop-Seq data. . From what I understood, Alevin is using sets of low quality, ambiguous and high quality barcodes for the final whitelisting. Ambiguous and high quality ones are sets of barcodes of equal sizes above the knee/threshold used for the initial whitelisting. Ambiguous barcodes get classified as either high or low quality. Correct me if I'm wrong, but I think this means that the final whitelisted barcodes (those of high quality) should all be above the knee/threshold.; However I observed that **some of the barcodes dumped in the whitelist.txt file from the intelligent whitelisting were not above the knee/threshold used for initial whitelisting.** . I was wondering if you could reproduce my observation, or tell me if I misunderstood something. Here's the code I used :. ```; with open(f""./aux_info/alevin_meta_info.json"") as f:; alevin_meta_info = json.load(f). knee_or_threshold = alevin_meta_info[""initial_whitelist""]; whitelist = pd.read_table(f""./alevin/whitelist.txt"", header=None)[0].values; quants_mat_rows = pd.read_table(f""./alevin/quants_mat_rows.txt"", header=None).values.ravel(); raw_cb_frequency = pd.read_table(f""./alevin/raw_cb_frequency.txt"", header=None, index_col=0). print(alevin_meta_info) >>. {'total_reads': 145095156,; 'reads_with_N': 0,; 'noisy_cb_reads': 66182273,; 'noisy_umi_reads': 3866,; 'used_reads': 78909017,; 'mapping_rate': 44.93378883027631,; 'reads_in_eqclasses': 65196751,; 'total_cbs': 3146561,; 'used_cbs': 92693,; 'initial_whitelist': 3000,; 'low_conf_cbs': 1000,; 'num_features': 7,; 'no_read_mapping_cbs': 1,; 'final_num_cbs': 2597,; 'deduplicated_umis': 6871590,; 'mean_umis_per_cell': 2645,; 'mean_genes_per_cell': 1370}. print(len(quants_mat_rows)) >> 3999; print(knee_or_threshold) >> 3000. print(len(whitelist)) >> 2597; print(len(np.intersect1d(raw_cb_frequency[:knee_or_threshold].index, whitelist))) >> 2513; ```. The thresh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/733
https://github.com/COMBINE-lab/salmon/issues/733:980,Performance,load,load,980,"Dear COMBINE-lab team,. I am using **Alevin** pipeline from the **salmon-1.4.0 release** to preprocess some Drop-Seq data. . From what I understood, Alevin is using sets of low quality, ambiguous and high quality barcodes for the final whitelisting. Ambiguous and high quality ones are sets of barcodes of equal sizes above the knee/threshold used for the initial whitelisting. Ambiguous barcodes get classified as either high or low quality. Correct me if I'm wrong, but I think this means that the final whitelisted barcodes (those of high quality) should all be above the knee/threshold.; However I observed that **some of the barcodes dumped in the whitelist.txt file from the intelligent whitelisting were not above the knee/threshold used for initial whitelisting.** . I was wondering if you could reproduce my observation, or tell me if I misunderstood something. Here's the code I used :. ```; with open(f""./aux_info/alevin_meta_info.json"") as f:; alevin_meta_info = json.load(f). knee_or_threshold = alevin_meta_info[""initial_whitelist""]; whitelist = pd.read_table(f""./alevin/whitelist.txt"", header=None)[0].values; quants_mat_rows = pd.read_table(f""./alevin/quants_mat_rows.txt"", header=None).values.ravel(); raw_cb_frequency = pd.read_table(f""./alevin/raw_cb_frequency.txt"", header=None, index_col=0). print(alevin_meta_info) >>. {'total_reads': 145095156,; 'reads_with_N': 0,; 'noisy_cb_reads': 66182273,; 'noisy_umi_reads': 3866,; 'used_reads': 78909017,; 'mapping_rate': 44.93378883027631,; 'reads_in_eqclasses': 65196751,; 'total_cbs': 3146561,; 'used_cbs': 92693,; 'initial_whitelist': 3000,; 'low_conf_cbs': 1000,; 'num_features': 7,; 'no_read_mapping_cbs': 1,; 'final_num_cbs': 2597,; 'deduplicated_umis': 6871590,; 'mean_umis_per_cell': 2645,; 'mean_genes_per_cell': 1370}. print(len(quants_mat_rows)) >> 3999; print(knee_or_threshold) >> 3000. print(len(whitelist)) >> 2597; print(len(np.intersect1d(raw_cb_frequency[:knee_or_threshold].index, whitelist))) >> 2513; ```. The thresh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/733
https://github.com/COMBINE-lab/salmon/pull/734:1817,Deployability,integrat,integration,1817,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/pull/734:85,Integrability,protocol,protocols,85,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/pull/734:1243,Integrability,protocol,protocol,1243,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/pull/734:1576,Integrability,protocol,protocols,1576,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/pull/734:1817,Integrability,integrat,integration,1817,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/pull/734:1863,Integrability,protocol,protocols,1863,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/pull/734:192,Modifiability,variab,variable,192,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/pull/734:617,Modifiability,variab,variable,617,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/pull/734:411,Testability,test,tests,411,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/pull/734:451,Testability,test,tested,451,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734
https://github.com/COMBINE-lab/salmon/issues/735:931,Availability,avail,available,931,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735
https://github.com/COMBINE-lab/salmon/issues/735:973,Availability,avail,available,973,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735
https://github.com/COMBINE-lab/salmon/issues/735:836,Deployability,UPGRADE,UPGRADE,836,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735
https://github.com/COMBINE-lab/salmon/issues/735:1024,Deployability,release,releases,1024,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735
https://github.com/COMBINE-lab/salmon/issues/735:1093,Deployability,upgrade,upgrade,1093,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735
https://github.com/COMBINE-lab/salmon/issues/735:1215,Deployability,update,updates,1215,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735
https://github.com/COMBINE-lab/salmon/issues/735:707,Safety,detect,detected,707,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735
https://github.com/COMBINE-lab/salmon/issues/736:63,Availability,error,error,63,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:189,Availability,error,error,189,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:250,Availability,error,error,250,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:668,Availability,error,error,668,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:1306,Availability,error,errors,1306,"of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:1493,Availability,error,error,1493," reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:1609,Availability,error,error,1609,"ead1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:1660,Availability,error,error,1660,"ng:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:1931,Availability,error,error,1931,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:2016,Availability,error,error,2016,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:2127,Availability,error,error,2127,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:2259,Availability,error,error,2259,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:2319,Availability,error,error,2319,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:2516,Availability,error,error,2516,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:2606,Availability,error,error,2606,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:2665,Availability,error,error,2665,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:355,Deployability,install,installed,355,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:69,Integrability,message,message,69,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:195,Integrability,message,messages,195,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:256,Integrability,message,message,256,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:2522,Integrability,message,message,2522,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:2612,Integrability,message,message,2612,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:551,Security,validat,validateMapping,551,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:1006,Security,validat,validateMappings,1006,"n of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got tha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:693,Testability,Log,Logs,693,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:732,Testability,log,logs,732,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/736:2367,Testability,test,tests,2367,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736
https://github.com/COMBINE-lab/salmon/issues/737:498,Availability,error,error,498,"HI,; I using Salmon version1.2.1_l.; I have mate pairs for transcriptome mapping. ; `./bin/salmon quant -i /media/amit/Amit/Usr/new_salmon_index/ -l IU -1 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L3_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq -2 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L4_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L4_HK500HUMpybEAAKRAAPEI-530_2.fq -p 8 --validateMappings -o /media/amit/Amit/Usr/DNA12/fastq/DNA12.quant`. But salmon gives an error:; ```; The following errors were detected with the read files; ======================================================; ERROR: file [V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq] does not appear to exist!. ```; Kindly help. I have followed all the instructions noted here:; https://github.com/COMBINE-lab/salmon/issues/69. Regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/737
https://github.com/COMBINE-lab/salmon/issues/737:525,Availability,error,errors,525,"HI,; I using Salmon version1.2.1_l.; I have mate pairs for transcriptome mapping. ; `./bin/salmon quant -i /media/amit/Amit/Usr/new_salmon_index/ -l IU -1 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L3_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq -2 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L4_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L4_HK500HUMpybEAAKRAAPEI-530_2.fq -p 8 --validateMappings -o /media/amit/Amit/Usr/DNA12/fastq/DNA12.quant`. But salmon gives an error:; ```; The following errors were detected with the read files; ======================================================; ERROR: file [V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq] does not appear to exist!. ```; Kindly help. I have followed all the instructions noted here:; https://github.com/COMBINE-lab/salmon/issues/69. Regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/737
https://github.com/COMBINE-lab/salmon/issues/737:623,Availability,ERROR,ERROR,623,"HI,; I using Salmon version1.2.1_l.; I have mate pairs for transcriptome mapping. ; `./bin/salmon quant -i /media/amit/Amit/Usr/new_salmon_index/ -l IU -1 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L3_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq -2 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L4_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L4_HK500HUMpybEAAKRAAPEI-530_2.fq -p 8 --validateMappings -o /media/amit/Amit/Usr/DNA12/fastq/DNA12.quant`. But salmon gives an error:; ```; The following errors were detected with the read files; ======================================================; ERROR: file [V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq] does not appear to exist!. ```; Kindly help. I have followed all the instructions noted here:; https://github.com/COMBINE-lab/salmon/issues/69. Regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/737
https://github.com/COMBINE-lab/salmon/issues/737:537,Safety,detect,detected,537,"HI,; I using Salmon version1.2.1_l.; I have mate pairs for transcriptome mapping. ; `./bin/salmon quant -i /media/amit/Amit/Usr/new_salmon_index/ -l IU -1 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L3_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq -2 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L4_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L4_HK500HUMpybEAAKRAAPEI-530_2.fq -p 8 --validateMappings -o /media/amit/Amit/Usr/DNA12/fastq/DNA12.quant`. But salmon gives an error:; ```; The following errors were detected with the read files; ======================================================; ERROR: file [V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq] does not appear to exist!. ```; Kindly help. I have followed all the instructions noted here:; https://github.com/COMBINE-lab/salmon/issues/69. Regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/737
https://github.com/COMBINE-lab/salmon/issues/737:411,Security,validat,validateMappings,411,"HI,; I using Salmon version1.2.1_l.; I have mate pairs for transcriptome mapping. ; `./bin/salmon quant -i /media/amit/Amit/Usr/new_salmon_index/ -l IU -1 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L3_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq -2 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L4_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L4_HK500HUMpybEAAKRAAPEI-530_2.fq -p 8 --validateMappings -o /media/amit/Amit/Usr/DNA12/fastq/DNA12.quant`. But salmon gives an error:; ```; The following errors were detected with the read files; ======================================================; ERROR: file [V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq] does not appear to exist!. ```; Kindly help. I have followed all the instructions noted here:; https://github.com/COMBINE-lab/salmon/issues/69. Regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/737
https://github.com/COMBINE-lab/salmon/issues/738:167,Testability,log,log,167,"Hello. I am analyzing Drop-Seq data with salmon alevin. I applied the tips given in this discussion (#506). ; However, to me the mapping rates (found in ""salmon_quant.log"") are rather low. On average, the mapping rate is only 23 % with a standard deviation of 9 % when running salmon alevin with default parameters. ; When setting ```--expectCells``` or ```--forceCells```, these numbers change to 23 % (sd: 5%) and 26 % (sd: 6%). Are these mapping rates what you expect for Drop-Seq data? It is my first time analyzing Drop-Seq data, so I have no reference. ; Is this low mapping rate problematic? . Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/738
https://github.com/COMBINE-lab/salmon/issues/739:188,Safety,detect,detected,188,"Hello. I am analyzing Drop-Seq data with salmon alevin. I applied the tips given in this discussion (#506). ; When adding the ```--forceCells``` flag and setting it to 1000, the number of detected cells is 1499 or 1500 in all samples. ; I don't think this is normal behaviour, but I have no idea what is causing this. . Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/739
https://github.com/COMBINE-lab/salmon/issues/740:1009,Availability,error,error,1009,"Hi all, ; I have a dataset with 40 samples, which I aligned to a reference transcriptome using HISAT2. I then quantified these using salmon using the alignment mode, with a command like this:. `salmon quant -t referencetranscriptome.fa -l U -a alignment.bam -o path/to/out/dir/`. Here referencetranscriptome.fa is constant for all 40 samples, and the same reference I indexed for use with HISAT. Upon rereading the documentation, I understand that this is wrong?. > Say that you’ve prepared your alignments using your favorite aligner and the results are in the file aln.bam, and assume that the sequence of the transcriptome you want to quantify is in the file transcripts.fa. This makes it seem like for each run of salmon in alignment mode, I should use a different transcriptome. For instance, something like this:. `salmon quant -t transcriptome1A.fa -l U -a 1A.bam -o /path/to/out/dir`. So question 1: Is this the right approach?. When I noticed this, I tried to run the above command, which gave me an error like this:. > Please provide a reference FASTA file that includes all targets present in the BAM header If you have access to the genome FASTA and GTF used for alignment consider generating a transcriptome fasta using a command like: gffread -w output.fa -g genome.fa genome.gtf. A post on Biostars with the same error had the issue that the references were difference (genome and transcriptome), which is not the case for me. Additionally, I tried running gffread as suggested by the salmon error, which doesn't work at all because it wants to pull gene names (?) from my gff file, but my first column has chromosome numbers, while my gene names are in the 9th column. The command was:. `gffread -w transcript1A.fa -g referencetranscriptome.fa referenceannotation.gff`. So question 2 : Is gffread the right step here? If so, what should I be using to have it run properly?. Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/740
https://github.com/COMBINE-lab/salmon/issues/740:1328,Availability,error,error,1328,"Hi all, ; I have a dataset with 40 samples, which I aligned to a reference transcriptome using HISAT2. I then quantified these using salmon using the alignment mode, with a command like this:. `salmon quant -t referencetranscriptome.fa -l U -a alignment.bam -o path/to/out/dir/`. Here referencetranscriptome.fa is constant for all 40 samples, and the same reference I indexed for use with HISAT. Upon rereading the documentation, I understand that this is wrong?. > Say that you’ve prepared your alignments using your favorite aligner and the results are in the file aln.bam, and assume that the sequence of the transcriptome you want to quantify is in the file transcripts.fa. This makes it seem like for each run of salmon in alignment mode, I should use a different transcriptome. For instance, something like this:. `salmon quant -t transcriptome1A.fa -l U -a 1A.bam -o /path/to/out/dir`. So question 1: Is this the right approach?. When I noticed this, I tried to run the above command, which gave me an error like this:. > Please provide a reference FASTA file that includes all targets present in the BAM header If you have access to the genome FASTA and GTF used for alignment consider generating a transcriptome fasta using a command like: gffread -w output.fa -g genome.fa genome.gtf. A post on Biostars with the same error had the issue that the references were difference (genome and transcriptome), which is not the case for me. Additionally, I tried running gffread as suggested by the salmon error, which doesn't work at all because it wants to pull gene names (?) from my gff file, but my first column has chromosome numbers, while my gene names are in the 9th column. The command was:. `gffread -w transcript1A.fa -g referencetranscriptome.fa referenceannotation.gff`. So question 2 : Is gffread the right step here? If so, what should I be using to have it run properly?. Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/740
https://github.com/COMBINE-lab/salmon/issues/740:1507,Availability,error,error,1507,"Hi all, ; I have a dataset with 40 samples, which I aligned to a reference transcriptome using HISAT2. I then quantified these using salmon using the alignment mode, with a command like this:. `salmon quant -t referencetranscriptome.fa -l U -a alignment.bam -o path/to/out/dir/`. Here referencetranscriptome.fa is constant for all 40 samples, and the same reference I indexed for use with HISAT. Upon rereading the documentation, I understand that this is wrong?. > Say that you’ve prepared your alignments using your favorite aligner and the results are in the file aln.bam, and assume that the sequence of the transcriptome you want to quantify is in the file transcripts.fa. This makes it seem like for each run of salmon in alignment mode, I should use a different transcriptome. For instance, something like this:. `salmon quant -t transcriptome1A.fa -l U -a 1A.bam -o /path/to/out/dir`. So question 1: Is this the right approach?. When I noticed this, I tried to run the above command, which gave me an error like this:. > Please provide a reference FASTA file that includes all targets present in the BAM header If you have access to the genome FASTA and GTF used for alignment consider generating a transcriptome fasta using a command like: gffread -w output.fa -g genome.fa genome.gtf. A post on Biostars with the same error had the issue that the references were difference (genome and transcriptome), which is not the case for me. Additionally, I tried running gffread as suggested by the salmon error, which doesn't work at all because it wants to pull gene names (?) from my gff file, but my first column has chromosome numbers, while my gene names are in the 9th column. The command was:. `gffread -w transcript1A.fa -g referencetranscriptome.fa referenceannotation.gff`. So question 2 : Is gffread the right step here? If so, what should I be using to have it run properly?. Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/740
https://github.com/COMBINE-lab/salmon/issues/740:1131,Security,access,access,1131,"Hi all, ; I have a dataset with 40 samples, which I aligned to a reference transcriptome using HISAT2. I then quantified these using salmon using the alignment mode, with a command like this:. `salmon quant -t referencetranscriptome.fa -l U -a alignment.bam -o path/to/out/dir/`. Here referencetranscriptome.fa is constant for all 40 samples, and the same reference I indexed for use with HISAT. Upon rereading the documentation, I understand that this is wrong?. > Say that you’ve prepared your alignments using your favorite aligner and the results are in the file aln.bam, and assume that the sequence of the transcriptome you want to quantify is in the file transcripts.fa. This makes it seem like for each run of salmon in alignment mode, I should use a different transcriptome. For instance, something like this:. `salmon quant -t transcriptome1A.fa -l U -a 1A.bam -o /path/to/out/dir`. So question 1: Is this the right approach?. When I noticed this, I tried to run the above command, which gave me an error like this:. > Please provide a reference FASTA file that includes all targets present in the BAM header If you have access to the genome FASTA and GTF used for alignment consider generating a transcriptome fasta using a command like: gffread -w output.fa -g genome.fa genome.gtf. A post on Biostars with the same error had the issue that the references were difference (genome and transcriptome), which is not the case for me. Additionally, I tried running gffread as suggested by the salmon error, which doesn't work at all because it wants to pull gene names (?) from my gff file, but my first column has chromosome numbers, while my gene names are in the 9th column. The command was:. `gffread -w transcript1A.fa -g referencetranscriptome.fa referenceannotation.gff`. So question 2 : Is gffread the right step here? If so, what should I be using to have it run properly?. Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/740
https://github.com/COMBINE-lab/salmon/issues/741:237,Availability,error,error,237,"I am trying to create index using salmon for human Genome (not transcriptome). The version of salmon I am using is : salmon `v0.13.1` .; The command I used is :. salmon index \; -t /hg38_genome/GRCh38.p13.genome.fa \; -i index. The main error I am getting is:. Command error:; [2022-01-26 12:20:19.647] [jointLog] [warning] Entry with header [KI270896.1] was longer than 200000 nucleotides. Are you certain that we are indexing a transcriptome and not a genome?. If I use transcriptome file instead of genome, it works perfectly and returns the index files. I got both `transcriptome` and `genome` from the `gencode`. For my analysis I need to use genome. do you know how I can use genome?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/741
https://github.com/COMBINE-lab/salmon/issues/741:269,Availability,error,error,269,"I am trying to create index using salmon for human Genome (not transcriptome). The version of salmon I am using is : salmon `v0.13.1` .; The command I used is :. salmon index \; -t /hg38_genome/GRCh38.p13.genome.fa \; -i index. The main error I am getting is:. Command error:; [2022-01-26 12:20:19.647] [jointLog] [warning] Entry with header [KI270896.1] was longer than 200000 nucleotides. Are you certain that we are indexing a transcriptome and not a genome?. If I use transcriptome file instead of genome, it works perfectly and returns the index files. I got both `transcriptome` and `genome` from the `gencode`. For my analysis I need to use genome. do you know how I can use genome?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/741
https://github.com/COMBINE-lab/salmon/issues/742:85,Availability,down,downloaded,85,"Hi, ; I am new to bioinformatics and scRNAseq.; I am working on a scRNAseq dataset i downloaded from GEO. Downloading the SRA file with fastq-dump --split-files resulted in 3 reads, i.e R1, R2, and R3. I understand the R3 reads are the sample index reads. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:106,Availability,Down,Downloading,106,"Hi, ; I am new to bioinformatics and scRNAseq.; I am working on a scRNAseq dataset i downloaded from GEO. Downloading the SRA file with fastq-dump --split-files resulted in 3 reads, i.e R1, R2, and R3. I understand the R3 reads are the sample index reads. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:2518,Availability,down,downstream,2518,"e use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equiv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:3875,Performance,Load,Loading,3875,"Threads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-01-26 13:09:14.959] [jointLog] [info] There is 1 library.; [2022-01-26 13:09:14.961] [jointLog] [info] Loading pufferfish index; [2022-01-26 13:09:14.962] [jointLog] [info] Loading dense pufferfish index.; [2022-01-26 13:09:19.753] [jointLog] [info] done; [2022-01-26 13:09:20.383] [jointLog] [info] Index contained 184,844 targets; [2022-01-26 13:09:20.563] [jointLog] [info] Number of decoys : 0; [2022-01-26 13:43:01.425] [jointLog] [info] Computed 288,594 rich equivalence classes for further processing; [2022-01-26 13:43:01.425] [jointLog] [info] Counted 280,466,412 total reads in the equivalence classes ; [2022-01-26 13:43:01.426] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-01-26 13:43:01.426] [jointLog] [warning] Found 14751 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2022-01-26 13:43:01.426] [jointLog] [info] Mapping rate = 58.3421%. [2022-01-26 13:43:01.426] [jointLog] [info] finished quantifyLibrary()",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:3945,Performance,Load,Loading,3945,"Threads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-01-26 13:09:14.959] [jointLog] [info] There is 1 library.; [2022-01-26 13:09:14.961] [jointLog] [info] Loading pufferfish index; [2022-01-26 13:09:14.962] [jointLog] [info] Loading dense pufferfish index.; [2022-01-26 13:09:19.753] [jointLog] [info] done; [2022-01-26 13:09:20.383] [jointLog] [info] Index contained 184,844 targets; [2022-01-26 13:09:20.563] [jointLog] [info] Number of decoys : 0; [2022-01-26 13:43:01.425] [jointLog] [info] Computed 288,594 rich equivalence classes for further processing; [2022-01-26 13:43:01.425] [jointLog] [info] Counted 280,466,412 total reads in the equivalence classes ; [2022-01-26 13:43:01.426] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-01-26 13:43:01.426] [jointLog] [warning] Found 14751 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2022-01-26 13:43:01.426] [jointLog] [info] Mapping rate = 58.3421%. [2022-01-26 13:43:01.426] [jointLog] [info] finished quantifyLibrary()",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:1207,Security,validat,validation,1207,"eads, i.e R1, R2, and R3. I understand the R3 reads are the sample index reads. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:1221,Security,validat,validateMappings,1221,"eads, i.e R1, R2, and R3. I understand the R3 reads are the sample index reads. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:1257,Security,validat,validation,1257,"s. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:1325,Security,validat,validateMappings,1325,"ly accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:3076,Security,validat,validation,3076,"evin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-01-26 13:09:14.959] [jointLog] [info] There is 1 library.; [2022-01-26 13:09:14.961] [jointLog] [info] Loading pufferfish index; [2022-01-26 13:09:14.962] [jointLog] [info] Loading dense pufferfish index.; [2022-01-26 13:09:19.753] [jointLog] [info] done; [2022-01-26 13:09:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:3090,Security,validat,validateMappings,3090,"evin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-01-26 13:09:14.959] [jointLog] [info] There is 1 library.; [2022-01-26 13:09:14.961] [jointLog] [info] Loading pufferfish index; [2022-01-26 13:09:14.962] [jointLog] [info] Loading dense pufferfish index.; [2022-01-26 13:09:19.753] [jointLog] [info] done; [2022-01-26 13:09:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:3126,Security,validat,validation,3126,"_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-01-26 13:09:14.959] [jointLog] [info] There is 1 library.; [2022-01-26 13:09:14.961] [jointLog] [info] Loading pufferfish index; [2022-01-26 13:09:14.962] [jointLog] [info] Loading dense pufferfish index.; [2022-01-26 13:09:19.753] [jointLog] [info] done; [2022-01-26 13:09:20.383] [jointLog] [info] Index contained 184,844 targets; [2022-01-26 13:09:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:3194,Security,validat,validateMappings,3194,".tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-01-26 13:09:14.959] [jointLog] [info] There is 1 library.; [2022-01-26 13:09:14.961] [jointLog] [info] Loading pufferfish index; [2022-01-26 13:09:14.962] [jointLog] [info] Loading dense pufferfish index.; [2022-01-26 13:09:19.753] [jointLog] [info] done; [2022-01-26 13:09:20.383] [jointLog] [info] Index contained 184,844 targets; [2022-01-26 13:09:20.563] [jointLog] [info] Number of decoys : 0; [2022-01-26 13:43:01.425] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:871,Testability,log,log,871,"Hi, ; I am new to bioinformatics and scRNAseq.; I am working on a scRNAseq dataset i downloaded from GEO. Downloading the SRA file with fastq-dump --split-files resulted in 3 reads, i.e R1, R2, and R3. I understand the R3 reads are the sample index reads. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/742:2739,Testability,Log,Log,2739,"30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742
https://github.com/COMBINE-lab/salmon/issues/743:252,Energy Efficiency,adapt,adapters,252,"Hi @rob-p,. would it be possible to add a feature similar to `salmon quant` like `--read-geometry 1[1-end]` (as in Alevin) to define which part of both R1 (and R2) should be used for the quantification? That would omit the need for trimming in case of adapters and make salmon workflows even more lightweight. best,; -Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/743
https://github.com/COMBINE-lab/salmon/issues/743:252,Integrability,adapter,adapters,252,"Hi @rob-p,. would it be possible to add a feature similar to `salmon quant` like `--read-geometry 1[1-end]` (as in Alevin) to define which part of both R1 (and R2) should be used for the quantification? That would omit the need for trimming in case of adapters and make salmon workflows even more lightweight. best,; -Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/743
https://github.com/COMBINE-lab/salmon/issues/743:252,Modifiability,adapt,adapters,252,"Hi @rob-p,. would it be possible to add a feature similar to `salmon quant` like `--read-geometry 1[1-end]` (as in Alevin) to define which part of both R1 (and R2) should be used for the quantification? That would omit the need for trimming in case of adapters and make salmon workflows even more lightweight. best,; -Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/743
https://github.com/COMBINE-lab/salmon/issues/746:318,Availability,error,error,318,"I am using `salmon` for both creating index and quant using the latest version of salmon using the following commands:. 1- for indexing:. salmon index ; -t ""${fasta}"" ; -i index . 2- for quantification:. salmon quant ; --libType=U; --index $index ; -1 ${reads[0]} ; -2 ${reads[1]} ; -o $pair_id. But I am getting this error:. Command error:; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [the option '--index' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. This error is related to quant part. Do you know how I can fix the problem?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/746
https://github.com/COMBINE-lab/salmon/issues/746:334,Availability,error,error,334,"I am using `salmon` for both creating index and quant using the latest version of salmon using the following commands:. 1- for indexing:. salmon index ; -t ""${fasta}"" ; -i index . 2- for quantification:. salmon quant ; --libType=U; --index $index ; -1 ${reads[0]} ; -2 ${reads[1]} ; -o $pair_id. But I am getting this error:. Command error:; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [the option '--index' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. This error is related to quant part. Do you know how I can fix the problem?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/746
https://github.com/COMBINE-lab/salmon/issues/746:656,Availability,error,error,656,"I am using `salmon` for both creating index and quant using the latest version of salmon using the following commands:. 1- for indexing:. salmon index ; -t ""${fasta}"" ; -i index . 2- for quantification:. salmon quant ; --libType=U; --index $index ; -1 ${reads[0]} ; -2 ${reads[1]} ; -o $pair_id. But I am getting this error:. Command error:; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [the option '--index' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. This error is related to quant part. Do you know how I can fix the problem?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/746
https://github.com/COMBINE-lab/salmon/issues/746:602,Safety,detect,detected,602,"I am using `salmon` for both creating index and quant using the latest version of salmon using the following commands:. 1- for indexing:. salmon index ; -t ""${fasta}"" ; -i index . 2- for quantification:. salmon quant ; --libType=U; --index $index ; -1 ${reads[0]} ; -2 ${reads[1]} ; -o $pair_id. But I am getting this error:. Command error:; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [the option '--index' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. This error is related to quant part. Do you know how I can fix the problem?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/746
https://github.com/COMBINE-lab/salmon/issues/747:649,Availability,down,down,649,"I'm looking at sequencing from cells infected with different SARS2 virus variants. In addition to looking at the host transcriptome, I'd also like to know more about the different levels of viral transcript expression. I'm curious the best way to do this. I can very easily take the SARS2 reference strain and generate a combined human-SARS2 transcriptome, but I'm worried about how the various mutations that define these viral strains will mess with Salmon's mapping of reads. . My current plan is to drop the --minScoreFraction (maybe to 0.7?) and change the mismatch penalty to 0, but I'm not sure it's the best option. I could also try to hunt down the genomes of each variant I'm using, but the annotations and deposited sequences for a lot of the variants aren't super great, so I might just run into this same problem. . Any advice on how best to use Salmon for this task would be greatly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/747
https://github.com/COMBINE-lab/salmon/issues/748:940,Availability,down,download,940,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Only `u` (unmapped) reads are labelled in the `aux_info/unmapped.txt` file, even when the log file indicates that many fragments were discarded because they are best-mapped to decoys. . **To Reproduce**. This GitHub repository details the motivation and full workflow of my pipeline: https://github.com/greenelab/2022-microberna/. To get the read files, I ran:; ```; rule rnaseq_sample_download:; output:; reads=""outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:1472,Availability,down,download,1472,"outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + ""_1.fastq.gz""); os.remove(params.tmp_base + ""_2.fastq.gz""); ```. However, I think it would be fine to reproduce from untrimmed files:; ```; wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR436/001/ERR4363141/ERR4363141.fastq.gz; ```. I generated the transcriptome by annotating all publicly available genomes for my species (*Faecalibacterium prausnitzii_C*). Using these annotations, I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:2435,Availability,avail,available,2435,"gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + ""_1.fastq.gz""); os.remove(params.tmp_base + ""_2.fastq.gz""); ```. However, I think it would be fine to reproduce from untrimmed files:; ```; wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR436/001/ERR4363141/ERR4363141.fastq.gz; ```. I generated the transcriptome by annotating all publicly available genomes for my species (*Faecalibacterium prausnitzii_C*). Using these annotations, I cut out coding domain sequences and nc/r/tRNAs and clustered the sequences at 95% identity. Then, I took the complement of these sequences (all the left over intergenic stuff) and designated these as decoys. . I indexed the transcriptome with:; ```; rule index_transcriptome:; input:; seqs=ancient(""outputs/gtdb_genomes_salmon_ref/{gtdb_species}.fa""),; decoys=ancient(""outputs/gtdb_genomes_intergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:3592,Availability,down,downloaded,3592,"95% identity. Then, I took the complement of these sequences (all the left over intergenic stuff) and designated these as decoys. . I indexed the transcriptome with:; ```; rule index_transcriptome:; input:; seqs=ancient(""outputs/gtdb_genomes_salmon_ref/{gtdb_species}.fa""),; decoys=ancient(""outputs/gtdb_genomes_intergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:5028,Availability,avail,available,5028,"I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm trying to use the decoys as a first step in identifying reads that map to intergenic sequences, where reads might span two coding domain sequences, or land in the intergenic sequences between two coding domain sequenes. (#52). Decoy names: [s__Faecalibacterium_prausnitzii_C_clustered_intergenic_seq_names.txt.gz](https://github.com/COMBINE-lab/salmon/files/8005978/s__Faecalibacterium_prausnitzii_C_clustered_intergenic_seq_names.txt.gz); Transcriptome: [s__Faecaliba",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:390,Deployability,pipeline,pipeline,390,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Only `u` (unmapped) reads are labelled in the `aux_info/unmapped.txt` file, even when the log file indicates that many fragments were discarded because they are best-mapped to decoys. . **To Reproduce**. This GitHub repository details the motivation and full workflow of my pipeline: https://github.com/greenelab/2022-microberna/. To get the read files, I ran:; ```; rule rnaseq_sample_download:; output:; reads=""outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:3571,Deployability,install,installed,3571,"95% identity. Then, I took the complement of these sequences (all the left over intergenic stuff) and designated these as decoys. . I indexed the transcriptome with:; ```; rule index_transcriptome:; input:; seqs=ancient(""outputs/gtdb_genomes_salmon_ref/{gtdb_species}.fa""),; decoys=ancient(""outputs/gtdb_genomes_intergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:5097,Deployability,Release,Release,5097,"ed in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm trying to use the decoys as a first step in identifying reads that map to intergenic sequences, where reads might span two coding domain sequences, or land in the intergenic sequences between two coding domain sequenes. (#52). Decoy names: [s__Faecalibacterium_prausnitzii_C_clustered_intergenic_seq_names.txt.gz](https://github.com/COMBINE-lab/salmon/files/8005978/s__Faecalibacterium_prausnitzii_C_clustered_intergenic_seq_names.txt.gz); Transcriptome: [s__Faecalibacterium_prausnitzii_C.fa.gz](https://github.com/COMBINE-lab/salmon/files/8005980/s__Faecalibacterium_prausnitzii_C.fa.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:419,Energy Efficiency,green,greenelab,419,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Only `u` (unmapped) reads are labelled in the `aux_info/unmapped.txt` file, even when the log file indicates that many fragments were discarded because they are best-mapped to decoys. . **To Reproduce**. This GitHub repository details the motivation and full workflow of my pipeline: https://github.com/greenelab/2022-microberna/. To get the read files, I ran:; ```; rule rnaseq_sample_download:; output:; reads=""outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:3906,Security,validat,validateMappings,3906,"ntergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:206,Testability,log,log,206,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Only `u` (unmapped) reads are labelled in the `aux_info/unmapped.txt` file, even when the log file indicates that many fragments were discarded because they are best-mapped to decoys. . **To Reproduce**. This GitHub repository details the motivation and full workflow of my pipeline: https://github.com/greenelab/2022-microberna/. To get the read files, I ran:; ```; rule rnaseq_sample_download:; output:; reads=""outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:3241,Testability,benchmark,benchmark,3241,"rom untrimmed files:; ```; wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR436/001/ERR4363141/ERR4363141.fastq.gz; ```. I generated the transcriptome by annotating all publicly available genomes for my species (*Faecalibacterium prausnitzii_C*). Using these annotations, I cut out coding domain sequences and nc/r/tRNAs and clustered the sequences at 95% identity. Then, I took the complement of these sequences (all the left over intergenic stuff) and designated these as decoys. . I indexed the transcriptome with:; ```; rule index_transcriptome:; input:; seqs=ancient(""outputs/gtdb_genomes_salmon_ref/{gtdb_species}.fa""),; decoys=ancient(""outputs/gtdb_genomes_intergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:3252,Testability,benchmark,benchmarks,3252,"rom untrimmed files:; ```; wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR436/001/ERR4363141/ERR4363141.fastq.gz; ```. I generated the transcriptome by annotating all publicly available genomes for my species (*Faecalibacterium prausnitzii_C*). Using these annotations, I cut out coding domain sequences and nc/r/tRNAs and clustered the sequences at 95% identity. Then, I took the complement of these sequences (all the left over intergenic stuff) and designated these as decoys. . I indexed the transcriptome with:; ```; rule index_transcriptome:; input:; seqs=ancient(""outputs/gtdb_genomes_salmon_ref/{gtdb_species}.fa""),; decoys=ancient(""outputs/gtdb_genomes_intergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:4019,Testability,log,log,4019,"species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:4284,Testability,log,logs,4284,"ml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Bec",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:4309,Testability,log,logs,4309,"almon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many pair",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:4327,Testability,log,log,4327," {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:4473,Testability,log,logs,4473,"rence transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:4491,Testability,log,log,4491,"s -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:4636,Testability,log,logs,4636,"piled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm trying to use the decoys as a first step in identifying reads that map to interg",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/748:4654,Testability,log,log,4654,".g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm trying to use the decoys as a first step in identifying reads that map to intergenic sequences, where reads might span two coding domain sequences, or land in the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748
https://github.com/COMBINE-lab/salmon/issues/753:990,Availability,error,error,990,"I am running alevin on the 10X V3 pbmc 1k data set and I am getting a strange warning when running the following command:; ```; salmon alevin -i salmon-index/ -p 16 -l IU --chromiumV3 -1 pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz -2 pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz -o salmon-out --tgMap t2g.tsv; ```; I get the following warning:; ```; [2022-02-18 19:46:11.256] [jointLog] [warning] NOTE: Read Lib [[ [pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz, pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz], [ /pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz, pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz] ]] :. Found no concordant and consistent mappings. If this is a paired-end library, are you sure the reads are properly paired? check the file: salmon-out/lib_format_counts.json for details; ```; I cannot discern the source of the error. Notably, this error does not occur when I use -lISR instead of -l IU. Any thoughts?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/753
https://github.com/COMBINE-lab/salmon/issues/753:1011,Availability,error,error,1011,"I am running alevin on the 10X V3 pbmc 1k data set and I am getting a strange warning when running the following command:; ```; salmon alevin -i salmon-index/ -p 16 -l IU --chromiumV3 -1 pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz -2 pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz -o salmon-out --tgMap t2g.tsv; ```; I get the following warning:; ```; [2022-02-18 19:46:11.256] [jointLog] [warning] NOTE: Read Lib [[ [pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz, pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz], [ /pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz, pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz] ]] :. Found no concordant and consistent mappings. If this is a paired-end library, are you sure the reads are properly paired? check the file: salmon-out/lib_format_counts.json for details; ```; I cannot discern the source of the error. Notably, this error does not occur when I use -lISR instead of -l IU. Any thoughts?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/753
https://github.com/COMBINE-lab/salmon/issues/754:378,Energy Efficiency,reduce,reduced,378,"Hi,; When I use the default k-mer length of 31 to generate index, it throws warnings like 'ENSTxxxxx had length less than equal to the k-mer length of 31'. I checked these transcripts, and most of them are immunoglobulin and T cell receptor genes. ; My question is:; 1. Transcripts with a length below specified k-mer length will be discarded during alignment, right? ; 2. If I reduced the k-mer length to a smaller odd value, say 15, will this affect accuracy? My read length is 150. ; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/754
https://github.com/COMBINE-lab/salmon/issues/755:26,Deployability,install,installing,26,"Hi,; i met a problem when installing the index for salmon. The feedback suggests that ""server did not respond before timeout"". This problem is shown in the following picture.; I've already given it enough space for running, while it seems that it was stuck in the first step. And the index file only contains ""pre_indexing.log ref_indexing.log""; So could you please help me to solve this problem?; Thanks; ![image](https://user-images.githubusercontent.com/100278952/155299114-10a7e3b7-bf08-49aa-824d-48dcbaa1fd71.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755
https://github.com/COMBINE-lab/salmon/issues/755:117,Safety,timeout,timeout,117,"Hi,; i met a problem when installing the index for salmon. The feedback suggests that ""server did not respond before timeout"". This problem is shown in the following picture.; I've already given it enough space for running, while it seems that it was stuck in the first step. And the index file only contains ""pre_indexing.log ref_indexing.log""; So could you please help me to solve this problem?; Thanks; ![image](https://user-images.githubusercontent.com/100278952/155299114-10a7e3b7-bf08-49aa-824d-48dcbaa1fd71.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755
https://github.com/COMBINE-lab/salmon/issues/755:323,Testability,log,log,323,"Hi,; i met a problem when installing the index for salmon. The feedback suggests that ""server did not respond before timeout"". This problem is shown in the following picture.; I've already given it enough space for running, while it seems that it was stuck in the first step. And the index file only contains ""pre_indexing.log ref_indexing.log""; So could you please help me to solve this problem?; Thanks; ![image](https://user-images.githubusercontent.com/100278952/155299114-10a7e3b7-bf08-49aa-824d-48dcbaa1fd71.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755
https://github.com/COMBINE-lab/salmon/issues/755:340,Testability,log,log,340,"Hi,; i met a problem when installing the index for salmon. The feedback suggests that ""server did not respond before timeout"". This problem is shown in the following picture.; I've already given it enough space for running, while it seems that it was stuck in the first step. And the index file only contains ""pre_indexing.log ref_indexing.log""; So could you please help me to solve this problem?; Thanks; ![image](https://user-images.githubusercontent.com/100278952/155299114-10a7e3b7-bf08-49aa-824d-48dcbaa1fd71.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755
https://github.com/COMBINE-lab/salmon/issues/755:63,Usability,feedback,feedback,63,"Hi,; i met a problem when installing the index for salmon. The feedback suggests that ""server did not respond before timeout"". This problem is shown in the following picture.; I've already given it enough space for running, while it seems that it was stuck in the first step. And the index file only contains ""pre_indexing.log ref_indexing.log""; So could you please help me to solve this problem?; Thanks; ![image](https://user-images.githubusercontent.com/100278952/155299114-10a7e3b7-bf08-49aa-824d-48dcbaa1fd71.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755
https://github.com/COMBINE-lab/salmon/issues/756:235,Availability,down,downstream,235,"I understand that salmon does not use read quality scores when performing alignment/quantitation but, as it stands, running with `--writeMappings` it also doesn't output the qualities in its SAM-format output. That may not impact most downstream applications of the data but it does limit some. I'd be particularly interested in using reads that have been aligned and assigned to transcripts with an EM algorithm to investigate RNA editing. The most advanced methods of doing this integrate the quality of base calls from the sequencer into the models and, as such, cannot currently run on the data output. Although it may save a few CPU cycles in not reading and outputting the qualities - I can understand the choice when running with default settings - when running with `--writeMappings` that nominal difference in speed needs to be weighed up against downstream utility. Could this be looked into?. Cheers! George",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/756
https://github.com/COMBINE-lab/salmon/issues/756:856,Availability,down,downstream,856,"I understand that salmon does not use read quality scores when performing alignment/quantitation but, as it stands, running with `--writeMappings` it also doesn't output the qualities in its SAM-format output. That may not impact most downstream applications of the data but it does limit some. I'd be particularly interested in using reads that have been aligned and assigned to transcripts with an EM algorithm to investigate RNA editing. The most advanced methods of doing this integrate the quality of base calls from the sequencer into the models and, as such, cannot currently run on the data output. Although it may save a few CPU cycles in not reading and outputting the qualities - I can understand the choice when running with default settings - when running with `--writeMappings` that nominal difference in speed needs to be weighed up against downstream utility. Could this be looked into?. Cheers! George",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/756
https://github.com/COMBINE-lab/salmon/issues/756:481,Deployability,integrat,integrate,481,"I understand that salmon does not use read quality scores when performing alignment/quantitation but, as it stands, running with `--writeMappings` it also doesn't output the qualities in its SAM-format output. That may not impact most downstream applications of the data but it does limit some. I'd be particularly interested in using reads that have been aligned and assigned to transcripts with an EM algorithm to investigate RNA editing. The most advanced methods of doing this integrate the quality of base calls from the sequencer into the models and, as such, cannot currently run on the data output. Although it may save a few CPU cycles in not reading and outputting the qualities - I can understand the choice when running with default settings - when running with `--writeMappings` that nominal difference in speed needs to be weighed up against downstream utility. Could this be looked into?. Cheers! George",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/756
https://github.com/COMBINE-lab/salmon/issues/756:481,Integrability,integrat,integrate,481,"I understand that salmon does not use read quality scores when performing alignment/quantitation but, as it stands, running with `--writeMappings` it also doesn't output the qualities in its SAM-format output. That may not impact most downstream applications of the data but it does limit some. I'd be particularly interested in using reads that have been aligned and assigned to transcripts with an EM algorithm to investigate RNA editing. The most advanced methods of doing this integrate the quality of base calls from the sequencer into the models and, as such, cannot currently run on the data output. Although it may save a few CPU cycles in not reading and outputting the qualities - I can understand the choice when running with default settings - when running with `--writeMappings` that nominal difference in speed needs to be weighed up against downstream utility. Could this be looked into?. Cheers! George",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/756
https://github.com/COMBINE-lab/salmon/issues/756:63,Performance,perform,performing,63,"I understand that salmon does not use read quality scores when performing alignment/quantitation but, as it stands, running with `--writeMappings` it also doesn't output the qualities in its SAM-format output. That may not impact most downstream applications of the data but it does limit some. I'd be particularly interested in using reads that have been aligned and assigned to transcripts with an EM algorithm to investigate RNA editing. The most advanced methods of doing this integrate the quality of base calls from the sequencer into the models and, as such, cannot currently run on the data output. Although it may save a few CPU cycles in not reading and outputting the qualities - I can understand the choice when running with default settings - when running with `--writeMappings` that nominal difference in speed needs to be weighed up against downstream utility. Could this be looked into?. Cheers! George",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/756
https://github.com/COMBINE-lab/salmon/issues/760:70,Deployability,release,releases,70,"Hi, thanks for a great tool. I just noticed that contrary to previous releases, v1.8.0 does _not_ have a binary asset, cf. https://github.com/COMBINE-lab/salmon/releases. Was this forgotten, or a switch to releasing only source tarballs?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/760
https://github.com/COMBINE-lab/salmon/issues/760:161,Deployability,release,releases,161,"Hi, thanks for a great tool. I just noticed that contrary to previous releases, v1.8.0 does _not_ have a binary asset, cf. https://github.com/COMBINE-lab/salmon/releases. Was this forgotten, or a switch to releasing only source tarballs?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/760
https://github.com/COMBINE-lab/salmon/issues/761:102,Availability,down,download,102,"Contrary to earlier versions, e.g. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.7.0/salmon-1.7.0_linux_x86_64.tar.gz; $ tar zxf salmon-1.7.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 2676 0 --:--:-- --:--:-- --:--:-- 2676; 100 52.5M 100 52.5M 0 0 26.0M 0 0:00:02 0:00:02 --:--:-- 33.2M; 20220314-W11-1 (d073) 12:51:34 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.7.0_linux_x86_64/; total 1184; drwxr-xr-x 4 hb hb 4096 Feb 16 10:01 .; drwxrwxr-x 4 hb hb 4096 Mar 14 12:51 ..; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 bin # <===; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 lib # <===; -rw-r--r-- 1 hb hb 1193382 Feb 15 21:05 sample_data.tgz; ```. the binaries for the recent salmon 1.8.0 release does not share any of the files or subfolders with ""group"" and ""other"";. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; tar zxf salmon-1.8.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 7689 0 --:--:-- --:--:-- --:--:-- 7689; 100 91.9M 100 91.9M 0 0 33.4M 0 0:00:02 0:00:02 --:--:-- 35.9M; 20220314-W11-1 (d073) 12:51:14 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.8.0_linux_x86_64/; total 1184; drwx------ 4 hb hb 4096 Mar 10 09:57 .; drwxrwxr-x 3 hb hb 4096 Mar 14 12:51 ..; drwx------ 2 hb hb 4096 Mar 14 12:51 bin # <===; drwx------ 2 hb hb 4096 Mar 8 06:57 lib # <===; -rw------- 1 hb hb 1193382 Mar 8 06:57 sample_data.tgz # <===. $ ls -la salmon-1.8.0_linux_x86_64/bin; total 442304; drwx------ 2 hb hb 4096 Mar 14 12:51 .; drwx------ 4 hb hb 4096 Mar 10 09:57 ..; -rw------- 1 hb hb 452905776 Mar 8 06:57 salmon # <===; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/761
https://github.com/COMBINE-lab/salmon/issues/761:954,Availability,down,download,954,"Contrary to earlier versions, e.g. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.7.0/salmon-1.7.0_linux_x86_64.tar.gz; $ tar zxf salmon-1.7.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 2676 0 --:--:-- --:--:-- --:--:-- 2676; 100 52.5M 100 52.5M 0 0 26.0M 0 0:00:02 0:00:02 --:--:-- 33.2M; 20220314-W11-1 (d073) 12:51:34 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.7.0_linux_x86_64/; total 1184; drwxr-xr-x 4 hb hb 4096 Feb 16 10:01 .; drwxrwxr-x 4 hb hb 4096 Mar 14 12:51 ..; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 bin # <===; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 lib # <===; -rw-r--r-- 1 hb hb 1193382 Feb 15 21:05 sample_data.tgz; ```. the binaries for the recent salmon 1.8.0 release does not share any of the files or subfolders with ""group"" and ""other"";. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; tar zxf salmon-1.8.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 7689 0 --:--:-- --:--:-- --:--:-- 7689; 100 91.9M 100 91.9M 0 0 33.4M 0 0:00:02 0:00:02 --:--:-- 35.9M; 20220314-W11-1 (d073) 12:51:14 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.8.0_linux_x86_64/; total 1184; drwx------ 4 hb hb 4096 Mar 10 09:57 .; drwxrwxr-x 3 hb hb 4096 Mar 14 12:51 ..; drwx------ 2 hb hb 4096 Mar 14 12:51 bin # <===; drwx------ 2 hb hb 4096 Mar 8 06:57 lib # <===; -rw------- 1 hb hb 1193382 Mar 8 06:57 sample_data.tgz # <===. $ ls -la salmon-1.8.0_linux_x86_64/bin; total 442304; drwx------ 2 hb hb 4096 Mar 14 12:51 .; drwx------ 4 hb hb 4096 Mar 10 09:57 ..; -rw------- 1 hb hb 452905776 Mar 8 06:57 salmon # <===; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/761
https://github.com/COMBINE-lab/salmon/issues/761:93,Deployability,release,releases,93,"Contrary to earlier versions, e.g. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.7.0/salmon-1.7.0_linux_x86_64.tar.gz; $ tar zxf salmon-1.7.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 2676 0 --:--:-- --:--:-- --:--:-- 2676; 100 52.5M 100 52.5M 0 0 26.0M 0 0:00:02 0:00:02 --:--:-- 33.2M; 20220314-W11-1 (d073) 12:51:34 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.7.0_linux_x86_64/; total 1184; drwxr-xr-x 4 hb hb 4096 Feb 16 10:01 .; drwxrwxr-x 4 hb hb 4096 Mar 14 12:51 ..; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 bin # <===; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 lib # <===; -rw-r--r-- 1 hb hb 1193382 Feb 15 21:05 sample_data.tgz; ```. the binaries for the recent salmon 1.8.0 release does not share any of the files or subfolders with ""group"" and ""other"";. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; tar zxf salmon-1.8.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 7689 0 --:--:-- --:--:-- --:--:-- 7689; 100 91.9M 100 91.9M 0 0 33.4M 0 0:00:02 0:00:02 --:--:-- 35.9M; 20220314-W11-1 (d073) 12:51:14 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.8.0_linux_x86_64/; total 1184; drwx------ 4 hb hb 4096 Mar 10 09:57 .; drwxrwxr-x 3 hb hb 4096 Mar 14 12:51 ..; drwx------ 2 hb hb 4096 Mar 14 12:51 bin # <===; drwx------ 2 hb hb 4096 Mar 8 06:57 lib # <===; -rw------- 1 hb hb 1193382 Mar 8 06:57 sample_data.tgz # <===. $ ls -la salmon-1.8.0_linux_x86_64/bin; total 442304; drwx------ 2 hb hb 4096 Mar 14 12:51 .; drwx------ 4 hb hb 4096 Mar 10 09:57 ..; -rw------- 1 hb hb 452905776 Mar 8 06:57 salmon # <===; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/761
https://github.com/COMBINE-lab/salmon/issues/761:806,Deployability,release,release,806,"Contrary to earlier versions, e.g. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.7.0/salmon-1.7.0_linux_x86_64.tar.gz; $ tar zxf salmon-1.7.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 2676 0 --:--:-- --:--:-- --:--:-- 2676; 100 52.5M 100 52.5M 0 0 26.0M 0 0:00:02 0:00:02 --:--:-- 33.2M; 20220314-W11-1 (d073) 12:51:34 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.7.0_linux_x86_64/; total 1184; drwxr-xr-x 4 hb hb 4096 Feb 16 10:01 .; drwxrwxr-x 4 hb hb 4096 Mar 14 12:51 ..; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 bin # <===; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 lib # <===; -rw-r--r-- 1 hb hb 1193382 Feb 15 21:05 sample_data.tgz; ```. the binaries for the recent salmon 1.8.0 release does not share any of the files or subfolders with ""group"" and ""other"";. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; tar zxf salmon-1.8.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 7689 0 --:--:-- --:--:-- --:--:-- 7689; 100 91.9M 100 91.9M 0 0 33.4M 0 0:00:02 0:00:02 --:--:-- 35.9M; 20220314-W11-1 (d073) 12:51:14 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.8.0_linux_x86_64/; total 1184; drwx------ 4 hb hb 4096 Mar 10 09:57 .; drwxrwxr-x 3 hb hb 4096 Mar 14 12:51 ..; drwx------ 2 hb hb 4096 Mar 14 12:51 bin # <===; drwx------ 2 hb hb 4096 Mar 8 06:57 lib # <===; -rw------- 1 hb hb 1193382 Mar 8 06:57 sample_data.tgz # <===. $ ls -la salmon-1.8.0_linux_x86_64/bin; total 442304; drwx------ 2 hb hb 4096 Mar 14 12:51 .; drwx------ 4 hb hb 4096 Mar 10 09:57 ..; -rw------- 1 hb hb 452905776 Mar 8 06:57 salmon # <===; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/761
https://github.com/COMBINE-lab/salmon/issues/761:945,Deployability,release,releases,945,"Contrary to earlier versions, e.g. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.7.0/salmon-1.7.0_linux_x86_64.tar.gz; $ tar zxf salmon-1.7.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 2676 0 --:--:-- --:--:-- --:--:-- 2676; 100 52.5M 100 52.5M 0 0 26.0M 0 0:00:02 0:00:02 --:--:-- 33.2M; 20220314-W11-1 (d073) 12:51:34 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.7.0_linux_x86_64/; total 1184; drwxr-xr-x 4 hb hb 4096 Feb 16 10:01 .; drwxrwxr-x 4 hb hb 4096 Mar 14 12:51 ..; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 bin # <===; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 lib # <===; -rw-r--r-- 1 hb hb 1193382 Feb 15 21:05 sample_data.tgz; ```. the binaries for the recent salmon 1.8.0 release does not share any of the files or subfolders with ""group"" and ""other"";. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; tar zxf salmon-1.8.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 7689 0 --:--:-- --:--:-- --:--:-- 7689; 100 91.9M 100 91.9M 0 0 33.4M 0 0:00:02 0:00:02 --:--:-- 35.9M; 20220314-W11-1 (d073) 12:51:14 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.8.0_linux_x86_64/; total 1184; drwx------ 4 hb hb 4096 Mar 10 09:57 .; drwxrwxr-x 3 hb hb 4096 Mar 14 12:51 ..; drwx------ 2 hb hb 4096 Mar 14 12:51 bin # <===; drwx------ 2 hb hb 4096 Mar 8 06:57 lib # <===; -rw------- 1 hb hb 1193382 Mar 8 06:57 sample_data.tgz # <===. $ ls -la salmon-1.8.0_linux_x86_64/bin; total 442304; drwx------ 2 hb hb 4096 Mar 14 12:51 .; drwx------ 4 hb hb 4096 Mar 10 09:57 ..; -rw------- 1 hb hb 452905776 Mar 8 06:57 salmon # <===; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/761
https://github.com/COMBINE-lab/salmon/issues/762:255,Usability,guid,guidance,255,"Hi, such a beautiful RNA-seq analysis tool!!!. So when I used it I have a question: does the relatively high(0.9~) or low(0.1~) strand bias mean that the library is stranded? I can't well understand the exact meaning of this value. Could you give me some guidance? Great gratitude for you~~~",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/762
https://github.com/COMBINE-lab/salmon/issues/763:1760,Availability,error,errors,1760,"om [this study](https://www.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA590042&o=acc_s%3Aa), and tried to map them using `Alevin`. following `fastq-dump` I generated the barcode fastq files using `umi-tools`, this is a 3' PE Chromium scRNASeq, so I used; ```; umi_tools extract \; --stdin=GSE140511/fastq_files/SRR10480618_1.fastq.gz \; --stdout GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz \; --read2-in GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --read2-out GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; --bc-pattern=CCCCCCCCCCCCCCCCNNNNNNNNNN \; --log=processed_SRR10480618.log; ```. following this step I then ran it on Alevin with ; ```; salmon alevin \; -l ISR \; -1 GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; -2 GSE140511/fastq_files/SRR10480618_1.fastq.gz GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --chromium \; -i /data/shared/seb_temp/Mm_index \; -p 32 \; -o /home/seb/shared/seb_temp/GSE140511/salmon_alevin_output/SRR10480618 \; --tgMap /home/seb/shared/seb_temp/txp2gene_SB.tsv; ```. my `txp2gene` file looks like this; ```; ENSMUST00000178537.2 ENSMUSG00000095668.2; ENSMUST00000178862.2 ENSMUSG00000094569.2; ENSMUST00000196221.2 ENSMUSG00000096749.3; ENSMUST00000179664.2 ENSMUSG00000096749.3; ENSMUST00000177564.2 ENSMUSG00000096176.2; ENSMUST00000179520.2 ENSMUSG00000094028.2; ENSMUST00000179883.2 ENSMUSG00000094552.2; ENSMUST00000195858.2 ENSMUSG00000096420.3; ENSMUST00000179932.2 ENSMUSG00000096420.3; ENSMUST00000180001.2 ENSMUSG00000095656.2; ```; and I generated it using the gtf file created by indexing the genome. however, when `salmon alevin` finishes its run, I get a mapping rate of 3% or less, and no errors are generated. I then tried to pass the barcodes that are published in GEO for this sample as `whitelist` adding the following argument; `--whitelist GSM4173504_WT_1_barcodes.tsv`; but here the mapping rate goes down to 0%!!. I am not sure what's going on...any suggestion would be great.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/763
https://github.com/COMBINE-lab/salmon/issues/763:1979,Availability,down,down,1979,"om [this study](https://www.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA590042&o=acc_s%3Aa), and tried to map them using `Alevin`. following `fastq-dump` I generated the barcode fastq files using `umi-tools`, this is a 3' PE Chromium scRNASeq, so I used; ```; umi_tools extract \; --stdin=GSE140511/fastq_files/SRR10480618_1.fastq.gz \; --stdout GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz \; --read2-in GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --read2-out GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; --bc-pattern=CCCCCCCCCCCCCCCCNNNNNNNNNN \; --log=processed_SRR10480618.log; ```. following this step I then ran it on Alevin with ; ```; salmon alevin \; -l ISR \; -1 GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; -2 GSE140511/fastq_files/SRR10480618_1.fastq.gz GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --chromium \; -i /data/shared/seb_temp/Mm_index \; -p 32 \; -o /home/seb/shared/seb_temp/GSE140511/salmon_alevin_output/SRR10480618 \; --tgMap /home/seb/shared/seb_temp/txp2gene_SB.tsv; ```. my `txp2gene` file looks like this; ```; ENSMUST00000178537.2 ENSMUSG00000095668.2; ENSMUST00000178862.2 ENSMUSG00000094569.2; ENSMUST00000196221.2 ENSMUSG00000096749.3; ENSMUST00000179664.2 ENSMUSG00000096749.3; ENSMUST00000177564.2 ENSMUSG00000096176.2; ENSMUST00000179520.2 ENSMUSG00000094028.2; ENSMUST00000179883.2 ENSMUSG00000094552.2; ENSMUST00000195858.2 ENSMUSG00000096420.3; ENSMUST00000179932.2 ENSMUSG00000096420.3; ENSMUST00000180001.2 ENSMUSG00000095656.2; ```; and I generated it using the gtf file created by indexing the genome. however, when `salmon alevin` finishes its run, I get a mapping rate of 3% or less, and no errors are generated. I then tried to pass the barcodes that are published in GEO for this sample as `whitelist` adding the following argument; `--whitelist GSM4173504_WT_1_barcodes.tsv`; but here the mapping rate goes down to 0%!!. I am not sure what's going on...any suggestion would be great.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/763
https://github.com/COMBINE-lab/salmon/issues/763:615,Testability,log,log,615,"Hi all. I have been working with the raw fastq files from [this study](https://www.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA590042&o=acc_s%3Aa), and tried to map them using `Alevin`. following `fastq-dump` I generated the barcode fastq files using `umi-tools`, this is a 3' PE Chromium scRNASeq, so I used; ```; umi_tools extract \; --stdin=GSE140511/fastq_files/SRR10480618_1.fastq.gz \; --stdout GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz \; --read2-in GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --read2-out GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; --bc-pattern=CCCCCCCCCCCCCCCCNNNNNNNNNN \; --log=processed_SRR10480618.log; ```. following this step I then ran it on Alevin with ; ```; salmon alevin \; -l ISR \; -1 GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; -2 GSE140511/fastq_files/SRR10480618_1.fastq.gz GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --chromium \; -i /data/shared/seb_temp/Mm_index \; -p 32 \; -o /home/seb/shared/seb_temp/GSE140511/salmon_alevin_output/SRR10480618 \; --tgMap /home/seb/shared/seb_temp/txp2gene_SB.tsv; ```. my `txp2gene` file looks like this; ```; ENSMUST00000178537.2 ENSMUSG00000095668.2; ENSMUST00000178862.2 ENSMUSG00000094569.2; ENSMUST00000196221.2 ENSMUSG00000096749.3; ENSMUST00000179664.2 ENSMUSG00000096749.3; ENSMUST00000177564.2 ENSMUSG00000096176.2; ENSMUST00000179520.2 ENSMUSG00000094028.2; ENSMUST00000179883.2 ENSMUSG00000094552.2; ENSMUST00000195858.2 ENSMUSG00000096420.3; ENSMUST00000179932.2 ENSMUSG00000096420.3; ENSMUST00000180001.2 ENSMUSG00000095656.2; ```; and I generated it using the gtf file created by indexing the genome. however, when `salmon alevin` finishes its run, I get a mapping rate of 3% or less, and no errors are generated. I then tried to pass the barcodes that are published in GEO for this sample as `whitelist` adding the following argument; `--whitelist GSM4173504_WT_1_barcodes.tsv`; but here the mapping rate goes down to 0%!!. I am not",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/763
https://github.com/COMBINE-lab/salmon/issues/763:641,Testability,log,log,641,"Hi all. I have been working with the raw fastq files from [this study](https://www.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA590042&o=acc_s%3Aa), and tried to map them using `Alevin`. following `fastq-dump` I generated the barcode fastq files using `umi-tools`, this is a 3' PE Chromium scRNASeq, so I used; ```; umi_tools extract \; --stdin=GSE140511/fastq_files/SRR10480618_1.fastq.gz \; --stdout GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz \; --read2-in GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --read2-out GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; --bc-pattern=CCCCCCCCCCCCCCCCNNNNNNNNNN \; --log=processed_SRR10480618.log; ```. following this step I then ran it on Alevin with ; ```; salmon alevin \; -l ISR \; -1 GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; -2 GSE140511/fastq_files/SRR10480618_1.fastq.gz GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --chromium \; -i /data/shared/seb_temp/Mm_index \; -p 32 \; -o /home/seb/shared/seb_temp/GSE140511/salmon_alevin_output/SRR10480618 \; --tgMap /home/seb/shared/seb_temp/txp2gene_SB.tsv; ```. my `txp2gene` file looks like this; ```; ENSMUST00000178537.2 ENSMUSG00000095668.2; ENSMUST00000178862.2 ENSMUSG00000094569.2; ENSMUST00000196221.2 ENSMUSG00000096749.3; ENSMUST00000179664.2 ENSMUSG00000096749.3; ENSMUST00000177564.2 ENSMUSG00000096176.2; ENSMUST00000179520.2 ENSMUSG00000094028.2; ENSMUST00000179883.2 ENSMUSG00000094552.2; ENSMUST00000195858.2 ENSMUSG00000096420.3; ENSMUST00000179932.2 ENSMUSG00000096420.3; ENSMUST00000180001.2 ENSMUSG00000095656.2; ```; and I generated it using the gtf file created by indexing the genome. however, when `salmon alevin` finishes its run, I get a mapping rate of 3% or less, and no errors are generated. I then tried to pass the barcodes that are published in GEO for this sample as `whitelist` adding the following argument; `--whitelist GSM4173504_WT_1_barcodes.tsv`; but here the mapping rate goes down to 0%!!. I am not",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/763
https://github.com/COMBINE-lab/salmon/issues/764:140,Availability,error,error,140,"Hi,; I am new to using salmon. I have tried quantifying one of my samples in both alignment and mapping-based modes. In both cases I get an error saying ""unrecognised option"" for various parts of the command (including both the ""-i"" and ""-t"" flags). Below is an example of my code and the error:. salmon quant -t References/Ensembl/Homo_sapiens.GRCh37.cdna.all.fa\; -l A\; -a bam_files/RNA_007_7669.Aligned.out.sort.com.bam\; -o salmon_quant_trial; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '-t'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. Do you know why flags such as -i and -t are not being recognized? I have tried using --index and --targets instead which hasn't helped. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/764
https://github.com/COMBINE-lab/salmon/issues/764:289,Availability,error,error,289,"Hi,; I am new to using salmon. I have tried quantifying one of my samples in both alignment and mapping-based modes. In both cases I get an error saying ""unrecognised option"" for various parts of the command (including both the ""-i"" and ""-t"" flags). Below is an example of my code and the error:. salmon quant -t References/Ensembl/Homo_sapiens.GRCh37.cdna.all.fa\; -l A\; -a bam_files/RNA_007_7669.Aligned.out.sort.com.bam\; -o salmon_quant_trial; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '-t'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. Do you know why flags such as -i and -t are not being recognized? I have tried using --index and --targets instead which hasn't helped. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/764
https://github.com/COMBINE-lab/salmon/issues/764:689,Safety,detect,detected,689,"Hi,; I am new to using salmon. I have tried quantifying one of my samples in both alignment and mapping-based modes. In both cases I get an error saying ""unrecognised option"" for various parts of the command (including both the ""-i"" and ""-t"" flags). Below is an example of my code and the error:. salmon quant -t References/Ensembl/Homo_sapiens.GRCh37.cdna.all.fa\; -l A\; -a bam_files/RNA_007_7669.Aligned.out.sort.com.bam\; -o salmon_quant_trial; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '-t'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. Do you know why flags such as -i and -t are not being recognized? I have tried using --index and --targets instead which hasn't helped. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/764
https://github.com/COMBINE-lab/salmon/issues/765:446,Energy Efficiency,adapt,adapters,446,"Hi Rob & Team, . First and foremost, my thanks for developing such a great and versatile tool, very grateful for your work. . I'm hoping for some words of wisdom. We've got some data from Lexogen CORALL libraries (parired end + UMI). One of the main benefits in using this kit, is the lack of fragmentation step, instead there is Displacement Stop Primers (DSP) which are theoretically randomly distributed. . One approach we've taken is to trim adapters, and collapse UMIs (from STAR alignment). Following these steps, we've got theoretically clean data, so using `samtools fastq` to make a Salmon-friendly input. We observed a very unusual fragment length distribution with this, it looks largely poisson. I've rationalised this as the fragments being particularly short after UMI + Adaptor trimming, and given the random nature of DSPs, this could make some sense. One thing that stuck out in my mind was ordering of the reads (which were coord sorted), thus they'd be coming into salmon that way, breaking an assumption of the streaming EM algorithm. . We're currently name sorting the reads prior to Salmon quantification, but I wonder if you could explain if this unusual FLD could be a consequence of position sorted fastq, or any other thoughts you have around this situation? The good news is that ultimately, the same high level biology comes out of the quantifications whichever way do it. . Thanks for any insight. Andrew",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/765
https://github.com/COMBINE-lab/salmon/issues/765:785,Energy Efficiency,Adapt,Adaptor,785,"Hi Rob & Team, . First and foremost, my thanks for developing such a great and versatile tool, very grateful for your work. . I'm hoping for some words of wisdom. We've got some data from Lexogen CORALL libraries (parired end + UMI). One of the main benefits in using this kit, is the lack of fragmentation step, instead there is Displacement Stop Primers (DSP) which are theoretically randomly distributed. . One approach we've taken is to trim adapters, and collapse UMIs (from STAR alignment). Following these steps, we've got theoretically clean data, so using `samtools fastq` to make a Salmon-friendly input. We observed a very unusual fragment length distribution with this, it looks largely poisson. I've rationalised this as the fragments being particularly short after UMI + Adaptor trimming, and given the random nature of DSPs, this could make some sense. One thing that stuck out in my mind was ordering of the reads (which were coord sorted), thus they'd be coming into salmon that way, breaking an assumption of the streaming EM algorithm. . We're currently name sorting the reads prior to Salmon quantification, but I wonder if you could explain if this unusual FLD could be a consequence of position sorted fastq, or any other thoughts you have around this situation? The good news is that ultimately, the same high level biology comes out of the quantifications whichever way do it. . Thanks for any insight. Andrew",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/765
https://github.com/COMBINE-lab/salmon/issues/765:446,Integrability,adapter,adapters,446,"Hi Rob & Team, . First and foremost, my thanks for developing such a great and versatile tool, very grateful for your work. . I'm hoping for some words of wisdom. We've got some data from Lexogen CORALL libraries (parired end + UMI). One of the main benefits in using this kit, is the lack of fragmentation step, instead there is Displacement Stop Primers (DSP) which are theoretically randomly distributed. . One approach we've taken is to trim adapters, and collapse UMIs (from STAR alignment). Following these steps, we've got theoretically clean data, so using `samtools fastq` to make a Salmon-friendly input. We observed a very unusual fragment length distribution with this, it looks largely poisson. I've rationalised this as the fragments being particularly short after UMI + Adaptor trimming, and given the random nature of DSPs, this could make some sense. One thing that stuck out in my mind was ordering of the reads (which were coord sorted), thus they'd be coming into salmon that way, breaking an assumption of the streaming EM algorithm. . We're currently name sorting the reads prior to Salmon quantification, but I wonder if you could explain if this unusual FLD could be a consequence of position sorted fastq, or any other thoughts you have around this situation? The good news is that ultimately, the same high level biology comes out of the quantifications whichever way do it. . Thanks for any insight. Andrew",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/765
https://github.com/COMBINE-lab/salmon/issues/765:446,Modifiability,adapt,adapters,446,"Hi Rob & Team, . First and foremost, my thanks for developing such a great and versatile tool, very grateful for your work. . I'm hoping for some words of wisdom. We've got some data from Lexogen CORALL libraries (parired end + UMI). One of the main benefits in using this kit, is the lack of fragmentation step, instead there is Displacement Stop Primers (DSP) which are theoretically randomly distributed. . One approach we've taken is to trim adapters, and collapse UMIs (from STAR alignment). Following these steps, we've got theoretically clean data, so using `samtools fastq` to make a Salmon-friendly input. We observed a very unusual fragment length distribution with this, it looks largely poisson. I've rationalised this as the fragments being particularly short after UMI + Adaptor trimming, and given the random nature of DSPs, this could make some sense. One thing that stuck out in my mind was ordering of the reads (which were coord sorted), thus they'd be coming into salmon that way, breaking an assumption of the streaming EM algorithm. . We're currently name sorting the reads prior to Salmon quantification, but I wonder if you could explain if this unusual FLD could be a consequence of position sorted fastq, or any other thoughts you have around this situation? The good news is that ultimately, the same high level biology comes out of the quantifications whichever way do it. . Thanks for any insight. Andrew",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/765
https://github.com/COMBINE-lab/salmon/issues/765:785,Modifiability,Adapt,Adaptor,785,"Hi Rob & Team, . First and foremost, my thanks for developing such a great and versatile tool, very grateful for your work. . I'm hoping for some words of wisdom. We've got some data from Lexogen CORALL libraries (parired end + UMI). One of the main benefits in using this kit, is the lack of fragmentation step, instead there is Displacement Stop Primers (DSP) which are theoretically randomly distributed. . One approach we've taken is to trim adapters, and collapse UMIs (from STAR alignment). Following these steps, we've got theoretically clean data, so using `samtools fastq` to make a Salmon-friendly input. We observed a very unusual fragment length distribution with this, it looks largely poisson. I've rationalised this as the fragments being particularly short after UMI + Adaptor trimming, and given the random nature of DSPs, this could make some sense. One thing that stuck out in my mind was ordering of the reads (which were coord sorted), thus they'd be coming into salmon that way, breaking an assumption of the streaming EM algorithm. . We're currently name sorting the reads prior to Salmon quantification, but I wonder if you could explain if this unusual FLD could be a consequence of position sorted fastq, or any other thoughts you have around this situation? The good news is that ultimately, the same high level biology comes out of the quantifications whichever way do it. . Thanks for any insight. Andrew",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/765
https://github.com/COMBINE-lab/salmon/issues/766:126,Availability,error,errors,126,"I was attempting to create an index for mapping of transcripts using the full chicken (Gallus gallus) genome from Ensembl. No errors appeared, but the ref_indexing.log stated ""Replaced 9,788,221 non-ATCG nucleotides"" which seems rather high compared to some of the numbers I've seen from gencode-derived indices. This is my first time making an index, so I don't know where to begin troubleshooting. What ""non-ATCG nucleotides"" are being replaced here, and what are they being replaced with? Could Salmon be reading metadata in transcript headers as nucleotide sequences? Why would it do that? Am I just being paranoid?. Here's my code. Note that chicken does not have a ""transcriptome"" file, so I concatenated the cdna and ncrna files ahead of the full genome. I've also attached the ref_indexing.log file.; ```. SALMON_BIN=/data/homezvol1/fweghors/chickscripts/salmon-1.8.0_linux_x86_64/bin/salmon; grep ""^>"" <(gunzip -c Gallus_gallus.GRCg6a.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat Gallus_gallus.GRCg6a.cdna.all.fa.gz Gallus_gallus.GRCg6a.ncrna.fa.gz Gallus_gallus.GRCg6a.dna.toplevel.fa.gz > gentrome.fa.gz. gunzip gentrome.fa.gz. $SALMON_BIN index -t gentrome.fa -d decoys.txt -p 13 -i salmon_index; ```. [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/8375551/ref_indexing.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/766
https://github.com/COMBINE-lab/salmon/issues/766:164,Testability,log,log,164,"I was attempting to create an index for mapping of transcripts using the full chicken (Gallus gallus) genome from Ensembl. No errors appeared, but the ref_indexing.log stated ""Replaced 9,788,221 non-ATCG nucleotides"" which seems rather high compared to some of the numbers I've seen from gencode-derived indices. This is my first time making an index, so I don't know where to begin troubleshooting. What ""non-ATCG nucleotides"" are being replaced here, and what are they being replaced with? Could Salmon be reading metadata in transcript headers as nucleotide sequences? Why would it do that? Am I just being paranoid?. Here's my code. Note that chicken does not have a ""transcriptome"" file, so I concatenated the cdna and ncrna files ahead of the full genome. I've also attached the ref_indexing.log file.; ```. SALMON_BIN=/data/homezvol1/fweghors/chickscripts/salmon-1.8.0_linux_x86_64/bin/salmon; grep ""^>"" <(gunzip -c Gallus_gallus.GRCg6a.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat Gallus_gallus.GRCg6a.cdna.all.fa.gz Gallus_gallus.GRCg6a.ncrna.fa.gz Gallus_gallus.GRCg6a.dna.toplevel.fa.gz > gentrome.fa.gz. gunzip gentrome.fa.gz. $SALMON_BIN index -t gentrome.fa -d decoys.txt -p 13 -i salmon_index; ```. [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/8375551/ref_indexing.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/766
https://github.com/COMBINE-lab/salmon/issues/766:798,Testability,log,log,798,"I was attempting to create an index for mapping of transcripts using the full chicken (Gallus gallus) genome from Ensembl. No errors appeared, but the ref_indexing.log stated ""Replaced 9,788,221 non-ATCG nucleotides"" which seems rather high compared to some of the numbers I've seen from gencode-derived indices. This is my first time making an index, so I don't know where to begin troubleshooting. What ""non-ATCG nucleotides"" are being replaced here, and what are they being replaced with? Could Salmon be reading metadata in transcript headers as nucleotide sequences? Why would it do that? Am I just being paranoid?. Here's my code. Note that chicken does not have a ""transcriptome"" file, so I concatenated the cdna and ncrna files ahead of the full genome. I've also attached the ref_indexing.log file.; ```. SALMON_BIN=/data/homezvol1/fweghors/chickscripts/salmon-1.8.0_linux_x86_64/bin/salmon; grep ""^>"" <(gunzip -c Gallus_gallus.GRCg6a.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat Gallus_gallus.GRCg6a.cdna.all.fa.gz Gallus_gallus.GRCg6a.ncrna.fa.gz Gallus_gallus.GRCg6a.dna.toplevel.fa.gz > gentrome.fa.gz. gunzip gentrome.fa.gz. $SALMON_BIN index -t gentrome.fa -d decoys.txt -p 13 -i salmon_index; ```. [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/8375551/ref_indexing.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/766
https://github.com/COMBINE-lab/salmon/issues/766:1274,Testability,log,log,1274,"I was attempting to create an index for mapping of transcripts using the full chicken (Gallus gallus) genome from Ensembl. No errors appeared, but the ref_indexing.log stated ""Replaced 9,788,221 non-ATCG nucleotides"" which seems rather high compared to some of the numbers I've seen from gencode-derived indices. This is my first time making an index, so I don't know where to begin troubleshooting. What ""non-ATCG nucleotides"" are being replaced here, and what are they being replaced with? Could Salmon be reading metadata in transcript headers as nucleotide sequences? Why would it do that? Am I just being paranoid?. Here's my code. Note that chicken does not have a ""transcriptome"" file, so I concatenated the cdna and ncrna files ahead of the full genome. I've also attached the ref_indexing.log file.; ```. SALMON_BIN=/data/homezvol1/fweghors/chickscripts/salmon-1.8.0_linux_x86_64/bin/salmon; grep ""^>"" <(gunzip -c Gallus_gallus.GRCg6a.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat Gallus_gallus.GRCg6a.cdna.all.fa.gz Gallus_gallus.GRCg6a.ncrna.fa.gz Gallus_gallus.GRCg6a.dna.toplevel.fa.gz > gentrome.fa.gz. gunzip gentrome.fa.gz. $SALMON_BIN index -t gentrome.fa -d decoys.txt -p 13 -i salmon_index; ```. [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/8375551/ref_indexing.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/766
https://github.com/COMBINE-lab/salmon/issues/766:1344,Testability,log,log,1344,"I was attempting to create an index for mapping of transcripts using the full chicken (Gallus gallus) genome from Ensembl. No errors appeared, but the ref_indexing.log stated ""Replaced 9,788,221 non-ATCG nucleotides"" which seems rather high compared to some of the numbers I've seen from gencode-derived indices. This is my first time making an index, so I don't know where to begin troubleshooting. What ""non-ATCG nucleotides"" are being replaced here, and what are they being replaced with? Could Salmon be reading metadata in transcript headers as nucleotide sequences? Why would it do that? Am I just being paranoid?. Here's my code. Note that chicken does not have a ""transcriptome"" file, so I concatenated the cdna and ncrna files ahead of the full genome. I've also attached the ref_indexing.log file.; ```. SALMON_BIN=/data/homezvol1/fweghors/chickscripts/salmon-1.8.0_linux_x86_64/bin/salmon; grep ""^>"" <(gunzip -c Gallus_gallus.GRCg6a.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat Gallus_gallus.GRCg6a.cdna.all.fa.gz Gallus_gallus.GRCg6a.ncrna.fa.gz Gallus_gallus.GRCg6a.dna.toplevel.fa.gz > gentrome.fa.gz. gunzip gentrome.fa.gz. $SALMON_BIN index -t gentrome.fa -d decoys.txt -p 13 -i salmon_index; ```. [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/8375551/ref_indexing.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/766
https://github.com/COMBINE-lab/salmon/issues/767:385,Availability,error,error,385,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; after following tutorial step by step from the following website:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. with the following files ; GRCm39.primary_assembly.genome.fa.gz; gencode.vM28.transcripts.fa.gz. I get the following error . Exception : [Device or resource busy: 'salmon_index/twopaco_tmp']; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting. **To Reproduce**; Steps and data to reproduce the behavior:; create the files:; decoys.txt; gentrome.fa.gz. and put them in salmonDecoy directory ; and run:; salmon index -t salmonDecoy/gentrome.fa.gz -d salmonDecoy/decoys.txt -p 12 -i salmon_index --gencode. Specifically, please provide at least the following information:; * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; I used a linux machine with conda salmon env ; salmon version: salmon 1.8.0. **Expected behavior**; create index for salmon . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/767
https://github.com/COMBINE-lab/salmon/issues/767:956,Availability,down,downloaded,956,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; after following tutorial step by step from the following website:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. with the following files ; GRCm39.primary_assembly.genome.fa.gz; gencode.vM28.transcripts.fa.gz. I get the following error . Exception : [Device or resource busy: 'salmon_index/twopaco_tmp']; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting. **To Reproduce**; Steps and data to reproduce the behavior:; create the files:; decoys.txt; gentrome.fa.gz. and put them in salmonDecoy directory ; and run:; salmon index -t salmonDecoy/gentrome.fa.gz -d salmonDecoy/decoys.txt -p 12 -i salmon_index --gencode. Specifically, please provide at least the following information:; * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; I used a linux machine with conda salmon env ; salmon version: salmon 1.8.0. **Expected behavior**; create index for salmon . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/767
https://github.com/COMBINE-lab/salmon/issues/767:935,Deployability,install,installed,935,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; after following tutorial step by step from the following website:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. with the following files ; GRCm39.primary_assembly.genome.fa.gz; gencode.vM28.transcripts.fa.gz. I get the following error . Exception : [Device or resource busy: 'salmon_index/twopaco_tmp']; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting. **To Reproduce**; Steps and data to reproduce the behavior:; create the files:; decoys.txt; gentrome.fa.gz. and put them in salmonDecoy directory ; and run:; salmon index -t salmonDecoy/gentrome.fa.gz -d salmonDecoy/decoys.txt -p 12 -i salmon_index --gencode. Specifically, please provide at least the following information:; * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; I used a linux machine with conda salmon env ; salmon version: salmon 1.8.0. **Expected behavior**; create index for salmon . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/767
https://github.com/COMBINE-lab/salmon/issues/768:2793,Performance,Load,Loading,2793,".fa.gz and gencode.v40.transcripts.fa.gz from Gencode using the same tutorial above (2) gencode.v40.transcripts.fa.gz from Gencode only (3) Homo_sapiens.GRCh38.cdna.all.fa.gz from Ensembl ; But I still received the same warning and 0 fragments mapped results. Below is one of the log file (they all look similar):. > [2022-04-15 23:47:55.696] [jointLog] [info] setting maxHashResizeThreads to 48 ; [2022-04-15 23:47:55.696] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored. ; [2022-04-15 23:47:55.696] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65 ; [2022-04-15 23:47:55.696] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35. ; [2022-04-15 23:47:55.696] [jointLog] [info] parsing read library format ; [2022-04-15 23:47:55.696] [jointLog] [info] There is 1 library. ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading pufferfish index ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading dense pufferfish index. ; [2022-04-15 23:49:52.320] [jointLog] [info] done ; [2022-04-15 23:49:52.320] [jointLog] [info] Index contained 245,900 targets ; [2022-04-15 23:49:52.424] [jointLog] [info] Number of decoys : 639 ; [2022-04-15 23:49:52.424] [jointLog] [info] First decoy index : 245,261 ; [2022-04-15 23:50:13.651] [jointLog] [warning] salmon was only able to assign 0 fragments to transcripts in the index, but the minimum number of required assigned fragments (--minAssignedFrags) was 3. This could be indicative of a mismatch between the reference and sample, or a very bad sample. You can change the --minAssignedFrags parameter to force salmon to quantify with fewer assigned fragments (must have at least 1). I wonder maybe there's something wrong with my fastq files but I have no idea since they look fine(?):. > @SRR493372.1 HWI-M00266:2:000000000-A0HDE:1:1:14862:1427 length=26 CAGATCCCTCCCCTGGTCACTACAGA ; +SRR4933",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/768
https://github.com/COMBINE-lab/salmon/issues/768:2864,Performance,Load,Loading,2864," same tutorial above (2) gencode.v40.transcripts.fa.gz from Gencode only (3) Homo_sapiens.GRCh38.cdna.all.fa.gz from Ensembl ; But I still received the same warning and 0 fragments mapped results. Below is one of the log file (they all look similar):. > [2022-04-15 23:47:55.696] [jointLog] [info] setting maxHashResizeThreads to 48 ; [2022-04-15 23:47:55.696] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored. ; [2022-04-15 23:47:55.696] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65 ; [2022-04-15 23:47:55.696] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35. ; [2022-04-15 23:47:55.696] [jointLog] [info] parsing read library format ; [2022-04-15 23:47:55.696] [jointLog] [info] There is 1 library. ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading pufferfish index ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading dense pufferfish index. ; [2022-04-15 23:49:52.320] [jointLog] [info] done ; [2022-04-15 23:49:52.320] [jointLog] [info] Index contained 245,900 targets ; [2022-04-15 23:49:52.424] [jointLog] [info] Number of decoys : 639 ; [2022-04-15 23:49:52.424] [jointLog] [info] First decoy index : 245,261 ; [2022-04-15 23:50:13.651] [jointLog] [warning] salmon was only able to assign 0 fragments to transcripts in the index, but the minimum number of required assigned fragments (--minAssignedFrags) was 3. This could be indicative of a mismatch between the reference and sample, or a very bad sample. You can change the --minAssignedFrags parameter to force salmon to quantify with fewer assigned fragments (must have at least 1). I wonder maybe there's something wrong with my fastq files but I have no idea since they look fine(?):. > @SRR493372.1 HWI-M00266:2:000000000-A0HDE:1:1:14862:1427 length=26 CAGATCCCTCCCCTGGTCACTACAGA ; +SRR493372.1 HWI-M00266:2:000000000-A0HDE:1:1:14862:1427 length=26 @CC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/768
https://github.com/COMBINE-lab/salmon/issues/768:1553,Security,validat,validateMappings,1553,"g warning and 0 hits and 0 TPM in my quant.sf file. > [2022-04-15 23:50:13.651] [jointLog] [warning] salmon was only able to assign 0 fragments to transcripts in the index, but the minimum number of required assigned fragments (--minAssignedFrags) was 31. This could be indicative of a mismatch between the reference and sample, or a very bad sample. You can change the --minAssignedFrags parameter to force salmon to quantify with fewer assigned fragments (must have at least 1). I then lower the k-mer length and tried setting --minAssignedFrags to 5, 3, 1 but always got the same warning and results. And here is my command for quantification (but I changed --minAssignedFrags parameter several times):. `salmon quant -i ../ref/salmon_index -l IU -1 SRR493372_1.fastq SRR493373_1.fastq SRR493374_1.fastq SRR493375_1.fastq SRR493376_1.fastq SRR493377_1.fastq -2 SRR493372_2.fastq SRR493373_2.fastq SRR493374_2.fastq SRR493375_2.fastq SRR493376_2.fastq SRR493377_2.fastq --validateMappings --minAssignedFrags 1 -o transcripts_quant`. I then tried different transcriptome files for building indices. I built the index using the following transcriptome respectively: (1) another decoy-aware transcriptome with GRCh38.p13.genome.fa.gz and gencode.v40.transcripts.fa.gz from Gencode using the same tutorial above (2) gencode.v40.transcripts.fa.gz from Gencode only (3) Homo_sapiens.GRCh38.cdna.all.fa.gz from Ensembl ; But I still received the same warning and 0 fragments mapped results. Below is one of the log file (they all look similar):. > [2022-04-15 23:47:55.696] [jointLog] [info] setting maxHashResizeThreads to 48 ; [2022-04-15 23:47:55.696] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored. ; [2022-04-15 23:47:55.696] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65 ; [2022-04-15 23:47:55.696] [jointLog] [info] Setting consensusSlack to selective",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/768
https://github.com/COMBINE-lab/salmon/issues/768:2392,Security,validat,validateMappings,2392,"astq SRR493376_1.fastq SRR493377_1.fastq -2 SRR493372_2.fastq SRR493373_2.fastq SRR493374_2.fastq SRR493375_2.fastq SRR493376_2.fastq SRR493377_2.fastq --validateMappings --minAssignedFrags 1 -o transcripts_quant`. I then tried different transcriptome files for building indices. I built the index using the following transcriptome respectively: (1) another decoy-aware transcriptome with GRCh38.p13.genome.fa.gz and gencode.v40.transcripts.fa.gz from Gencode using the same tutorial above (2) gencode.v40.transcripts.fa.gz from Gencode only (3) Homo_sapiens.GRCh38.cdna.all.fa.gz from Ensembl ; But I still received the same warning and 0 fragments mapped results. Below is one of the log file (they all look similar):. > [2022-04-15 23:47:55.696] [jointLog] [info] setting maxHashResizeThreads to 48 ; [2022-04-15 23:47:55.696] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored. ; [2022-04-15 23:47:55.696] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65 ; [2022-04-15 23:47:55.696] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35. ; [2022-04-15 23:47:55.696] [jointLog] [info] parsing read library format ; [2022-04-15 23:47:55.696] [jointLog] [info] There is 1 library. ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading pufferfish index ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading dense pufferfish index. ; [2022-04-15 23:49:52.320] [jointLog] [info] done ; [2022-04-15 23:49:52.320] [jointLog] [info] Index contained 245,900 targets ; [2022-04-15 23:49:52.424] [jointLog] [info] Number of decoys : 639 ; [2022-04-15 23:49:52.424] [jointLog] [info] First decoy index : 245,261 ; [2022-04-15 23:50:13.651] [jointLog] [warning] salmon was only able to assign 0 fragments to transcripts in the index, but the minimum number of required assigned fragments (--minAssignedFrags) was 3. This could be indicative of a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/768
https://github.com/COMBINE-lab/salmon/issues/768:2085,Testability,log,log,2085,"nd tried setting --minAssignedFrags to 5, 3, 1 but always got the same warning and results. And here is my command for quantification (but I changed --minAssignedFrags parameter several times):. `salmon quant -i ../ref/salmon_index -l IU -1 SRR493372_1.fastq SRR493373_1.fastq SRR493374_1.fastq SRR493375_1.fastq SRR493376_1.fastq SRR493377_1.fastq -2 SRR493372_2.fastq SRR493373_2.fastq SRR493374_2.fastq SRR493375_2.fastq SRR493376_2.fastq SRR493377_2.fastq --validateMappings --minAssignedFrags 1 -o transcripts_quant`. I then tried different transcriptome files for building indices. I built the index using the following transcriptome respectively: (1) another decoy-aware transcriptome with GRCh38.p13.genome.fa.gz and gencode.v40.transcripts.fa.gz from Gencode using the same tutorial above (2) gencode.v40.transcripts.fa.gz from Gencode only (3) Homo_sapiens.GRCh38.cdna.all.fa.gz from Ensembl ; But I still received the same warning and 0 fragments mapped results. Below is one of the log file (they all look similar):. > [2022-04-15 23:47:55.696] [jointLog] [info] setting maxHashResizeThreads to 48 ; [2022-04-15 23:47:55.696] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored. ; [2022-04-15 23:47:55.696] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65 ; [2022-04-15 23:47:55.696] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35. ; [2022-04-15 23:47:55.696] [jointLog] [info] parsing read library format ; [2022-04-15 23:47:55.696] [jointLog] [info] There is 1 library. ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading pufferfish index ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading dense pufferfish index. ; [2022-04-15 23:49:52.320] [jointLog] [info] done ; [2022-04-15 23:49:52.320] [jointLog] [info] Index contained 245,900 targets ; [2022-04-15 23:49:52.424] [jointLog] [info] Number of decoys : 63",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/768
https://github.com/COMBINE-lab/salmon/issues/769:165,Availability,error,error,165,"Hi,; I run the command `salmon alevin -i index -p 4 -l SR --chromium --sketch -r 1.fastq.gz -o ./output` with single-end data as input . Although it didn't generate error, it didn't map anything. Can I use two single-end data from different samples as pair-end data to run `salmon alevin `. Thank you !. and here is a part of the output ; ```; [2022-04-23 17:54:35.286] [jointLog] [info] done; [2022-04-23 17:54:37.347] [jointLog] [info] Index contained 127,042 targets; [2022-04-23 17:54:37.628] [jointLog] [info] Number of decoys : 0. [2022-04-23 17:54:38.715] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2022-04-23 17:54:38.715] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2022-04-23 17:54:38.715] [jointLog] [info] Selectively-aligned 0 total fragments out of 0; [2022-04-23 17:54:38.715] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-04-23 17:54:38.715] [jointLog] [info] finished sc_align(); [2022-04-23 17:54:39.453] [alevinLog] [info] sc-align successful.; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/769
https://github.com/COMBINE-lab/salmon/issues/770:423,Availability,error,error,423,"This is concerned with alevin, using a cite-seq like method with a different UMI barcode length. I believe this is similar to #531. running the command like this:. ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass \; --citeseq; ```; Produces the error `ERROR: Please specify one and only one scRNA protocol;`. whereas removing the `--citeseq` argument like this:; ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass; ```; Produces the error `[alevinLog] [critical] Transcript to Gene Map File not provided. Exiting Now.`. This is based on salmon 1.8.0 installed via bioconda on ubuntu 18.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/770
https://github.com/COMBINE-lab/salmon/issues/770:430,Availability,ERROR,ERROR,430,"This is concerned with alevin, using a cite-seq like method with a different UMI barcode length. I believe this is similar to #531. running the command like this:. ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass \; --citeseq; ```; Produces the error `ERROR: Please specify one and only one scRNA protocol;`. whereas removing the `--citeseq` argument like this:; ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass; ```; Produces the error `[alevinLog] [critical] Transcript to Gene Map File not provided. Exiting Now.`. This is based on salmon 1.8.0 installed via bioconda on ubuntu 18.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/770
https://github.com/COMBINE-lab/salmon/issues/770:787,Availability,error,error,787,"This is concerned with alevin, using a cite-seq like method with a different UMI barcode length. I believe this is similar to #531. running the command like this:. ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass \; --citeseq; ```; Produces the error `ERROR: Please specify one and only one scRNA protocol;`. whereas removing the `--citeseq` argument like this:; ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass; ```; Produces the error `[alevinLog] [critical] Transcript to Gene Map File not provided. Exiting Now.`. This is based on salmon 1.8.0 installed via bioconda on ubuntu 18.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/770
https://github.com/COMBINE-lab/salmon/issues/770:904,Deployability,install,installed,904,"This is concerned with alevin, using a cite-seq like method with a different UMI barcode length. I believe this is similar to #531. running the command like this:. ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass \; --citeseq; ```; Produces the error `ERROR: Please specify one and only one scRNA protocol;`. whereas removing the `--citeseq` argument like this:; ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass; ```; Produces the error `[alevinLog] [critical] Transcript to Gene Map File not provided. Exiting Now.`. This is based on salmon 1.8.0 installed via bioconda on ubuntu 18.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/770
https://github.com/COMBINE-lab/salmon/issues/770:475,Integrability,protocol,protocol,475,"This is concerned with alevin, using a cite-seq like method with a different UMI barcode length. I believe this is similar to #531. running the command like this:. ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass \; --citeseq; ```; Produces the error `ERROR: Please specify one and only one scRNA protocol;`. whereas removing the `--citeseq` argument like this:; ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass; ```; Produces the error `[alevinLog] [critical] Transcript to Gene Map File not provided. Exiting Now.`. This is based on salmon 1.8.0 installed via bioconda on ubuntu 18.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/770
https://github.com/COMBINE-lab/salmon/pull/771:97,Availability,down,down,97,This commit uses multi-stage builds to minimize the Docker image size.; The uncompressed size is down to 101 MB from 1.38 GB. The second ; stage of the build begins with a fresh ubuntu:18.04 image and copies in; the compiled salmon binaries. It also installs one system library that; is linked by one of the salmon shared libraries.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/771
https://github.com/COMBINE-lab/salmon/pull/771:250,Deployability,install,installs,250,This commit uses multi-stage builds to minimize the Docker image size.; The uncompressed size is down to 101 MB from 1.38 GB. The second ; stage of the build begins with a fresh ubuntu:18.04 image and copies in; the compiled salmon binaries. It also installs one system library that; is linked by one of the salmon shared libraries.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/771
https://github.com/COMBINE-lab/salmon/issues/773:121,Deployability,pipeline,pipeline,121,"Hi Salmon Support,. If I am only interested in the express level of some isoforms of a given gene, may I just run salmon pipeline on those transcripts? For example, there are 5 such isoforms, and I plan to just index a transcriptome file containing those 5 isoform transcript sequences and then run the salmon. Is it legitimate?. Thanks a lot. C.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/773
https://github.com/COMBINE-lab/salmon/issues/775:3456,Integrability,protocol,protocol,3456,"022-05-13 03:02:19.507] [jointLog] [info] iteration = 400 | max rel diff. = 5.00889; [2022-05-13 03:02:20.812] [jointLog] [info] iteration = 500 | max rel diff. = 10.9087; [2022-05-13 03:02:22.073] [jointLog] [info] iteration = 600 | max rel diff. = 0.162723; [2022-05-13 03:02:23.316] [jointLog] [info] iteration = 700 | max rel diff. = 0.125884; [2022-05-13 03:02:24.647] [jointLog] [info] iteration = 800 | max rel diff. = 0.611449; [2022-05-13 03:02:26.020] [jointLog] [info] iteration = 900 | max rel diff. = 0.0687607; [2022-05-13 03:02:27.302] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.144642; [2022-05-13 03:02:28.620] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0139885; [2022-05-13 03:02:29.874] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.053712; [2022-05-13 03:02:31.161] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0312546; [2022-05-13 03:02:32.489] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.107944; [2022-05-13 03:02:32.656] [jointLog] [info] iteration = 1,414 | max rel diff. = 0.00665317; [2022-05-13 03:02:32.664] [jointLog] [info] Finished optimizer; [2022-05-13 03:02:32.665] [jointLog] [info] writing output . [2022-05-13 03:02:32.905] [jointLog] [warning] NOTE: Read Lib [[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: sample6BE.salmon/lib_format_counts.json for details. This is the lib_format_counts.json details . ""read_files"": ""[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 27069942,; ""num_assigned_fragments"": 27069942,; ""num_frags_with_concordant_consistent_mappings"": 25715904,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1666158,; ""strand_mapping_bias"": 0.0481568915485141,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1238398,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 24477506,; ""SF"": 981192,; ""SR"": 684966,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775
https://github.com/COMBINE-lab/salmon/issues/775:1640,Performance,optimiz,optimizer,1640,"=========; Observed 42829220 total fragments (42829220 in most recent round). [2022-05-13 03:02:14.185] [jointLog] [info] Computed 384,282 rich equivalence classes for further processing; [2022-05-13 03:02:14.185] [jointLog] [info] Counted 27,069,942 total reads in the equivalence classes ; [2022-05-13 03:02:14.202] [jointLog] [info] Number of mappings discarded because of alignment score : 262,747,517; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2,776,678; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 1,099,008; [2022-05-13 03:02:14.202] [jointLog] [info] Mapping rate = 63.2044%. [2022-05-13 03:02:14.202] [jointLog] [info] finished quantifyLibrary(); [2022-05-13 03:02:14.226] [jointLog] [info] Starting optimizer; [2022-05-13 03:02:14.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2022-05-13 03:02:14.325] [jointLog] [info] iteration = 0 | max rel diff. = 10590.7; [2022-05-13 03:02:15.594] [jointLog] [info] iteration = 100 | max rel diff. = 16.0264; [2022-05-13 03:02:16.882] [jointLog] [info] iteration = 200 | max rel diff. = 7.78855; [2022-05-13 03:02:18.217] [jointLog] [info] iteration = 300 | max rel diff. = 1.68712; [2022-05-13 03:02:19.507] [jointLog] [info] iteration = 400 | max rel diff. = 5.00889; [2022-05-13 03:02:20.812] [jointLog] [info] iteration = 500 | max rel diff. = 10.9087; [2022-05-13 03:02:22.073] [jointLog] [info] iteration = 600 | max rel diff. = 0.162723; [2022-05-13 03:02:23.316] [jointLog] [info] iteration = 700 | max rel diff. = 0.125884; [2022-05-13 03:02:24.647] [jointLog] [info] iteration = 800 | max rel diff. = 0.611449; [2022-05-13 03:02:26.020] [jointLog] [info] iteration = 900 | max rel diff. = 0.0687607; [2022-05-13 03:02:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775
https://github.com/COMBINE-lab/salmon/issues/775:3218,Performance,optimiz,optimizer,3218,"022-05-13 03:02:19.507] [jointLog] [info] iteration = 400 | max rel diff. = 5.00889; [2022-05-13 03:02:20.812] [jointLog] [info] iteration = 500 | max rel diff. = 10.9087; [2022-05-13 03:02:22.073] [jointLog] [info] iteration = 600 | max rel diff. = 0.162723; [2022-05-13 03:02:23.316] [jointLog] [info] iteration = 700 | max rel diff. = 0.125884; [2022-05-13 03:02:24.647] [jointLog] [info] iteration = 800 | max rel diff. = 0.611449; [2022-05-13 03:02:26.020] [jointLog] [info] iteration = 900 | max rel diff. = 0.0687607; [2022-05-13 03:02:27.302] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.144642; [2022-05-13 03:02:28.620] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0139885; [2022-05-13 03:02:29.874] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.053712; [2022-05-13 03:02:31.161] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0312546; [2022-05-13 03:02:32.489] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.107944; [2022-05-13 03:02:32.656] [jointLog] [info] iteration = 1,414 | max rel diff. = 0.00665317; [2022-05-13 03:02:32.664] [jointLog] [info] Finished optimizer; [2022-05-13 03:02:32.665] [jointLog] [info] writing output . [2022-05-13 03:02:32.905] [jointLog] [warning] NOTE: Read Lib [[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: sample6BE.salmon/lib_format_counts.json for details. This is the lib_format_counts.json details . ""read_files"": ""[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 27069942,; ""num_assigned_fragments"": 27069942,; ""num_frags_with_concordant_consistent_mappings"": 25715904,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1666158,; ""strand_mapping_bias"": 0.0481568915485141,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1238398,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 24477506,; ""SF"": 981192,; ""SR"": 684966,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775
https://github.com/COMBINE-lab/salmon/issues/775:3399,Safety,Detect,Detected,3399,"022-05-13 03:02:19.507] [jointLog] [info] iteration = 400 | max rel diff. = 5.00889; [2022-05-13 03:02:20.812] [jointLog] [info] iteration = 500 | max rel diff. = 10.9087; [2022-05-13 03:02:22.073] [jointLog] [info] iteration = 600 | max rel diff. = 0.162723; [2022-05-13 03:02:23.316] [jointLog] [info] iteration = 700 | max rel diff. = 0.125884; [2022-05-13 03:02:24.647] [jointLog] [info] iteration = 800 | max rel diff. = 0.611449; [2022-05-13 03:02:26.020] [jointLog] [info] iteration = 900 | max rel diff. = 0.0687607; [2022-05-13 03:02:27.302] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.144642; [2022-05-13 03:02:28.620] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0139885; [2022-05-13 03:02:29.874] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.053712; [2022-05-13 03:02:31.161] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0312546; [2022-05-13 03:02:32.489] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.107944; [2022-05-13 03:02:32.656] [jointLog] [info] iteration = 1,414 | max rel diff. = 0.00665317; [2022-05-13 03:02:32.664] [jointLog] [info] Finished optimizer; [2022-05-13 03:02:32.665] [jointLog] [info] writing output . [2022-05-13 03:02:32.905] [jointLog] [warning] NOTE: Read Lib [[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: sample6BE.salmon/lib_format_counts.json for details. This is the lib_format_counts.json details . ""read_files"": ""[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 27069942,; ""num_assigned_fragments"": 27069942,; ""num_frags_with_concordant_consistent_mappings"": 25715904,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1666158,; ""strand_mapping_bias"": 0.0481568915485141,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1238398,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 24477506,; ""SF"": 981192,; ""SR"": 684966,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775
https://github.com/COMBINE-lab/salmon/issues/775:578,Security,validat,validateMappings,578,"Dear Rob,. Would you please explain why large number of reads have been discarded due to alignment?. This is bulk RNAseq on mouse tissue. I tried fastp and trim galore for trimming the reads but they hardly make any difference from untrimmed reads. I used STAR for alignment initially and I got an alignment rate of 90% . This is my Salmon code; this is to generate the index:; salmon index -t Mus_musculus.GRCm38.cdna.all.fa -i transcripts_index; this is to run salmon:; salmon quant -i transcripts_index -l IU -1 fastp_6BE_1.fq.gz -2 fastp_6BE_2.fq.gz -o sample6BE.salmon ; --validateMappings --softclip. This is the salmon log; ==================; Observed 42829220 total fragments (42829220 in most recent round). [2022-05-13 03:02:14.185] [jointLog] [info] Computed 384,282 rich equivalence classes for further processing; [2022-05-13 03:02:14.185] [jointLog] [info] Counted 27,069,942 total reads in the equivalence classes ; [2022-05-13 03:02:14.202] [jointLog] [info] Number of mappings discarded because of alignment score : 262,747,517; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2,776,678; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 1,099,008; [2022-05-13 03:02:14.202] [jointLog] [info] Mapping rate = 63.2044%. [2022-05-13 03:02:14.202] [jointLog] [info] finished quantifyLibrary(); [2022-05-13 03:02:14.226] [jointLog] [info] Starting optimizer; [2022-05-13 03:02:14.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2022-05-13 03:02:14.325] [jointLog] [info] iteration = 0 | max rel diff. = 10590.7; [2022-05-13 03:02:15.594] [jointLog] [info] iteration = 100 | max rel diff. = 16.0264; [2022-05-13 03:02:16.882] [jointLog] [info] iteration = 200 | max rel diff. = 7.7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775
https://github.com/COMBINE-lab/salmon/issues/775:626,Testability,log,log,626,"Dear Rob,. Would you please explain why large number of reads have been discarded due to alignment?. This is bulk RNAseq on mouse tissue. I tried fastp and trim galore for trimming the reads but they hardly make any difference from untrimmed reads. I used STAR for alignment initially and I got an alignment rate of 90% . This is my Salmon code; this is to generate the index:; salmon index -t Mus_musculus.GRCm38.cdna.all.fa -i transcripts_index; this is to run salmon:; salmon quant -i transcripts_index -l IU -1 fastp_6BE_1.fq.gz -2 fastp_6BE_2.fq.gz -o sample6BE.salmon ; --validateMappings --softclip. This is the salmon log; ==================; Observed 42829220 total fragments (42829220 in most recent round). [2022-05-13 03:02:14.185] [jointLog] [info] Computed 384,282 rich equivalence classes for further processing; [2022-05-13 03:02:14.185] [jointLog] [info] Counted 27,069,942 total reads in the equivalence classes ; [2022-05-13 03:02:14.202] [jointLog] [info] Number of mappings discarded because of alignment score : 262,747,517; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2,776,678; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 1,099,008; [2022-05-13 03:02:14.202] [jointLog] [info] Mapping rate = 63.2044%. [2022-05-13 03:02:14.202] [jointLog] [info] finished quantifyLibrary(); [2022-05-13 03:02:14.226] [jointLog] [info] Starting optimizer; [2022-05-13 03:02:14.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2022-05-13 03:02:14.325] [jointLog] [info] iteration = 0 | max rel diff. = 10590.7; [2022-05-13 03:02:15.594] [jointLog] [info] iteration = 100 | max rel diff. = 16.0264; [2022-05-13 03:02:16.882] [jointLog] [info] iteration = 200 | max rel diff. = 7.7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775
https://github.com/COMBINE-lab/salmon/issues/776:204,Availability,Error,Error,204,"Hello, salmon developer!; I am working on an arm HPC machine. And when I tried to build with salmon on it. I found a little problem in the CMakeLists.txt. ```; not setting -DHAVE_NUMERIC_LIMITS128; CMake Error at /home/hzwi/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Iconv (missing: Iconv_LIBRARY); Call Stack (most recent call first):; /home/houzhuangwei/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /home/hzw/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindIconv.cmake:165 (find_package_handle_standard_args); CMakeLists.txt:362 (find_package); ```; It seems the cmake can not found the right path of libiconv.; So I change the CMakeLists.txt the 362-365 line.; ```; find_package(Iconv REQUIRED); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; ```; find_package(iconv); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; or ; I use the -D in the cmake like; ```; cmake -DFETCH_BOOST=TRUE -DBOOST_ROOT=/path/boost -DCMAKE_INSTALL_PREFIX=/path/salmon-1.8.0/salmon_install -DIconv_LIBRARY=/path/libiconv-1.16/iconv_install/lib ; ```; Then the configure was success",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/776
https://github.com/COMBINE-lab/salmon/issues/776:338,Integrability,message,message,338,"Hello, salmon developer!; I am working on an arm HPC machine. And when I tried to build with salmon on it. I found a little problem in the CMakeLists.txt. ```; not setting -DHAVE_NUMERIC_LIMITS128; CMake Error at /home/hzwi/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Iconv (missing: Iconv_LIBRARY); Call Stack (most recent call first):; /home/houzhuangwei/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /home/hzw/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindIconv.cmake:165 (find_package_handle_standard_args); CMakeLists.txt:362 (find_package); ```; It seems the cmake can not found the right path of libiconv.; So I change the CMakeLists.txt the 362-365 line.; ```; find_package(Iconv REQUIRED); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; ```; find_package(iconv); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; or ; I use the -D in the cmake like; ```; cmake -DFETCH_BOOST=TRUE -DBOOST_ROOT=/path/boost -DCMAKE_INSTALL_PREFIX=/path/salmon-1.8.0/salmon_install -DIconv_LIBRARY=/path/libiconv-1.16/iconv_install/lib ; ```; Then the configure was success",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/776
https://github.com/COMBINE-lab/salmon/issues/776:1304,Modifiability,config,configure,1304,"Hello, salmon developer!; I am working on an arm HPC machine. And when I tried to build with salmon on it. I found a little problem in the CMakeLists.txt. ```; not setting -DHAVE_NUMERIC_LIMITS128; CMake Error at /home/hzwi/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Iconv (missing: Iconv_LIBRARY); Call Stack (most recent call first):; /home/houzhuangwei/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /home/hzw/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindIconv.cmake:165 (find_package_handle_standard_args); CMakeLists.txt:362 (find_package); ```; It seems the cmake can not found the right path of libiconv.; So I change the CMakeLists.txt the 362-365 line.; ```; find_package(Iconv REQUIRED); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; ```; find_package(iconv); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; or ; I use the -D in the cmake like; ```; cmake -DFETCH_BOOST=TRUE -DBOOST_ROOT=/path/boost -DCMAKE_INSTALL_PREFIX=/path/salmon-1.8.0/salmon_install -DIconv_LIBRARY=/path/libiconv-1.16/iconv_install/lib ; ```; Then the configure was success",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/776
https://github.com/COMBINE-lab/salmon/issues/777:435,Security,validat,validatefastq,435,"Hi,. I recently used STAR and Salmon to quantify RNA expression from FASTQ files. When using Salmon, I was achieving good alignment rates of around 70%, but getting dismal STAR alignment rates of 1%-20% (both using GENCODE v38 references). Further inspection of my STAR log files shows most reads were being unmapped because they were too short. From STAR github issues I discovered that my FASTQ files were scrambled (confirmed with [validatefastq](https://github.com/biopet/validatefastq) tool), and the read headers were not properly sorted. This meant that the reads in the `R1` file did not necessarily correspond to the reads in the `R2` file (this was confirmed by BLASTing some of the reads and seeing they corresponded to different loci). . After discovering my FASTQs were scrambled, I was surprised that Salmon still had such high alignment rates yet STAR did not. I was wondering how exactly Salmon handles input FASTQs with mismatched reads. Is there some fix that Salmon applies to match reads with their corresponding sequence ID, thus explaining the high alignment rate? Are the results from Salmon on my bad input FASTQs complete gibberish and should be discarded, or are they somehow still valid? Is there any defined behavior that Salmon should follow when it encounters improperly sorted input FASTQs?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/777
https://github.com/COMBINE-lab/salmon/issues/777:476,Security,validat,validatefastq,476,"Hi,. I recently used STAR and Salmon to quantify RNA expression from FASTQ files. When using Salmon, I was achieving good alignment rates of around 70%, but getting dismal STAR alignment rates of 1%-20% (both using GENCODE v38 references). Further inspection of my STAR log files shows most reads were being unmapped because they were too short. From STAR github issues I discovered that my FASTQ files were scrambled (confirmed with [validatefastq](https://github.com/biopet/validatefastq) tool), and the read headers were not properly sorted. This meant that the reads in the `R1` file did not necessarily correspond to the reads in the `R2` file (this was confirmed by BLASTing some of the reads and seeing they corresponded to different loci). . After discovering my FASTQs were scrambled, I was surprised that Salmon still had such high alignment rates yet STAR did not. I was wondering how exactly Salmon handles input FASTQs with mismatched reads. Is there some fix that Salmon applies to match reads with their corresponding sequence ID, thus explaining the high alignment rate? Are the results from Salmon on my bad input FASTQs complete gibberish and should be discarded, or are they somehow still valid? Is there any defined behavior that Salmon should follow when it encounters improperly sorted input FASTQs?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/777
https://github.com/COMBINE-lab/salmon/issues/777:270,Testability,log,log,270,"Hi,. I recently used STAR and Salmon to quantify RNA expression from FASTQ files. When using Salmon, I was achieving good alignment rates of around 70%, but getting dismal STAR alignment rates of 1%-20% (both using GENCODE v38 references). Further inspection of my STAR log files shows most reads were being unmapped because they were too short. From STAR github issues I discovered that my FASTQ files were scrambled (confirmed with [validatefastq](https://github.com/biopet/validatefastq) tool), and the read headers were not properly sorted. This meant that the reads in the `R1` file did not necessarily correspond to the reads in the `R2` file (this was confirmed by BLASTing some of the reads and seeing they corresponded to different loci). . After discovering my FASTQs were scrambled, I was surprised that Salmon still had such high alignment rates yet STAR did not. I was wondering how exactly Salmon handles input FASTQs with mismatched reads. Is there some fix that Salmon applies to match reads with their corresponding sequence ID, thus explaining the high alignment rate? Are the results from Salmon on my bad input FASTQs complete gibberish and should be discarded, or are they somehow still valid? Is there any defined behavior that Salmon should follow when it encounters improperly sorted input FASTQs?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/777
https://github.com/COMBINE-lab/salmon/issues/778:99,Availability,error,error,99,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:160,Availability,error,error,160,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:476,Availability,error,error,476,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:496,Availability,fault,fault,496,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:663,Availability,error,error,663,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:745,Availability,error,error,745,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:782,Availability,error,error,782,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:884,Availability,Error,Error,884,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:964,Availability,Error,Error,964,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:1003,Availability,Error,Error,1003,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:36,Deployability,install,install,36,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:234,Deployability,install,install,234,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:648,Integrability,wrap,wrapper,648,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/778:756,Integrability,wrap,wrapper,756,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778
https://github.com/COMBINE-lab/salmon/issues/779:188,Integrability,depend,depending,188,"Hello, before writing further, I want to say that I have read through previous related open/closed issues but could not find a suitable answer. The problem: rather different mapping rates depending on library type. I am working with 150+ RNA-seq samples from two dozen tissues. I generated a novel, non-redunant transcriptome from these samples (which also includes the known annotation from ensembl) using ryuto. Following filtering of likely artifacts, predicting non-coding, and lowly expressed transcripts (identified via salmon v1.8.0), a _final_ transcriptome is generated. The selective alignment index (with decoys) is then used for a second and final round of quantification as. ```; salmon quant \; -p {threads} \; --seqBias \; --gcBias \; -i {input.sal_idx} \; -l A \; --numGibbsSamples 100 \; --dumpEq \; -1 {r1} \; -2 {r2} \; -o {params.out_dir}; ```. This is a rather heterogeneous collection of RNA-seq data with ~30% polyA selected and unstranded and ~70% rRNA-depleted and stranded so I expect some _interesting_ results along the way. Included in this collection are a handful of samples with both library preps and this is where I first noticed the problem above. For example, one sample has a polyA mapping rate of 84.01% and a ribo-dep of 46.67% (portion of each _meta_info.json_ below). Both of these however had STAR uniquely mapped reads >90%. Overall, the polyA samples have salmon mapping rates between ~75-90% while the ribo-dep at ~35-60%. I checked for rRNA contamination with RSeQC for a couple of the ribo-dep samples but did not observe anything significant to explain the decrease. I also want to note that these libraries were generated years apart and sequenced at different facilities so I am quite sure that is introducing a fair amount of variance. I guess I still I would have expected more similar mapping rates but apologies if this is the most obvious likely culprit!. My questions are; 1. What could be explaining this difference on the whole or between indi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/779
https://github.com/COMBINE-lab/salmon/issues/779:455,Safety,predict,predicting,455,"Hello, before writing further, I want to say that I have read through previous related open/closed issues but could not find a suitable answer. The problem: rather different mapping rates depending on library type. I am working with 150+ RNA-seq samples from two dozen tissues. I generated a novel, non-redunant transcriptome from these samples (which also includes the known annotation from ensembl) using ryuto. Following filtering of likely artifacts, predicting non-coding, and lowly expressed transcripts (identified via salmon v1.8.0), a _final_ transcriptome is generated. The selective alignment index (with decoys) is then used for a second and final round of quantification as. ```; salmon quant \; -p {threads} \; --seqBias \; --gcBias \; -i {input.sal_idx} \; -l A \; --numGibbsSamples 100 \; --dumpEq \; -1 {r1} \; -2 {r2} \; -o {params.out_dir}; ```. This is a rather heterogeneous collection of RNA-seq data with ~30% polyA selected and unstranded and ~70% rRNA-depleted and stranded so I expect some _interesting_ results along the way. Included in this collection are a handful of samples with both library preps and this is where I first noticed the problem above. For example, one sample has a polyA mapping rate of 84.01% and a ribo-dep of 46.67% (portion of each _meta_info.json_ below). Both of these however had STAR uniquely mapped reads >90%. Overall, the polyA samples have salmon mapping rates between ~75-90% while the ribo-dep at ~35-60%. I checked for rRNA contamination with RSeQC for a couple of the ribo-dep samples but did not observe anything significant to explain the decrease. I also want to note that these libraries were generated years apart and sequenced at different facilities so I am quite sure that is introducing a fair amount of variance. I guess I still I would have expected more similar mapping rates but apologies if this is the most obvious likely culprit!. My questions are; 1. What could be explaining this difference on the whole or between indi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/779
https://github.com/COMBINE-lab/salmon/issues/783:584,Availability,down,download,584,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon (bulk mode) latest binary (1.8.0) from github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:1117,Availability,down,downloaded,1117,"m github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178862.2], ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:1160,Availability,down,downloaded,1160,"m github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178862.2], ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:1233,Availability,down,downloaded,1233," on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178862.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:575,Deployability,release,releases,575,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon (bulk mode) latest binary (1.8.0) from github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:1096,Deployability,install,installed,1096,"m github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178862.2], ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:11768,Energy Efficiency,allocate,allocated,11768,"022-06-01 18:14:47.999] [puff::index::jointLog] [info] Replaced 73,600,668 non-ATCG nucleotides; [2022-06-01 18:14:47.999] [puff::index::jointLog] [info] Clipped poly-A tails from 647 transcripts; wrote 116780 cleaned references; [2022-06-01 18:14:53.762] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2022-06-01 18:15:29.014] [puff::index::jointLog] [info] ntHll estimated 2268760823 distinct k-mers, setting filter size to 2^36; Threads = 60; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files: ; Mus_musculus.GRCm39_v1.8.0_decoy.index/ref_k31_fixed.fa. Round 0, 0:68719476736; Pass	Filling	Filtering; 1	104	79	; 2	75	5; True junctions count = 14895414; False junctions count = 1201318; Hash table size = 16096732; Candidate marks count = 337141231. Reallocating bifurcations time: 8; True marks count: 335754103; Edges construction time: 117. Distinct junctions = 14895414. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0_decoy.index; size = 3020582944. | Loading contigs | Time = 469.49 ms. size = 3020582944. | Loading contig boundaries | Time = 242.8 ms. Number of ones: 24974473; Number of ones per inventory item: 512; Inventory entries filled: 48779; 24974473; [2022-06-01",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:12826,Integrability,wrap,wrapping,12826,"in:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0_decoy.index; size = 3020582944. | Loading contigs | Time = 469.49 ms. size = 3020582944. | Loading contig boundaries | Time = 242.8 ms. Number of ones: 24974473; Number of ones per inventory item: 512; Inventory entries filled: 48779; 24974473; [2022-06-01 18:28:15.208] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2022-06-01 18:28:15.619] [puff::index::jointLog] [info] contig count for validation: 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of Contigs : 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of numerical Contigs : 24,974,473; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] Total # of contig vec entries: 345,523,986; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] bits per offset entry 29; [2022-06-01 18:28:53.341] [puff::index::jointLog] [info] Done constructing the contig vector. 24974474; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] # segments = 24,974,473; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] total length = 3,020,582,944; [2022-06-01 18:29:07.850] [puff::index::jointLog] [info] Reading the reference files ...; [2022-06-01 18:29:20.813] [puff::index::jointLog] [info] positional integer width = 32; [2022-06-01 18:29:20.813] [pu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:12553,Performance,Load,Loading,12553,"ize = 16096732; Candidate marks count = 337141231. Reallocating bifurcations time: 8; True marks count: 335754103; Edges construction time: 117. Distinct junctions = 14895414. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0_decoy.index; size = 3020582944. | Loading contigs | Time = 469.49 ms. size = 3020582944. | Loading contig boundaries | Time = 242.8 ms. Number of ones: 24974473; Number of ones per inventory item: 512; Inventory entries filled: 48779; 24974473; [2022-06-01 18:28:15.208] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2022-06-01 18:28:15.619] [puff::index::jointLog] [info] contig count for validation: 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of Contigs : 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of numerical Contigs : 24,974,473; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] Total # of contig vec entries: 345,523,986; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] bits per offset entry 29; [2022-06-01 18:28:53.341] [puff::index::jointLog] [info] Done constructing the contig vector. 24974474; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] # segments = 24,974,473; [2022-06-01 18:29:07.368] [pu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:12610,Performance,Load,Loading,12610,"g bifurcations time: 8; True marks count: 335754103; Edges construction time: 117. Distinct junctions = 14895414. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0_decoy.index; size = 3020582944. | Loading contigs | Time = 469.49 ms. size = 3020582944. | Loading contig boundaries | Time = 242.8 ms. Number of ones: 24974473; Number of ones per inventory item: 512; Inventory entries filled: 48779; 24974473; [2022-06-01 18:28:15.208] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2022-06-01 18:28:15.619] [puff::index::jointLog] [info] contig count for validation: 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of Contigs : 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of numerical Contigs : 24,974,473; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] Total # of contig vec entries: 345,523,986; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] bits per offset entry 29; [2022-06-01 18:28:53.341] [puff::index::jointLog] [info] Done constructing the contig vector. 24974474; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] # segments = 24,974,473; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] total length = 3,020,582,944; [202",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:11294,Security,Hash,Hash,11294,"31 (perhaps after poly-A clipping); [2022-06-01 18:13:44.543] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2022-06-01 18:14:47.999] [puff::index::jointLog] [warning] Removed 739 transcripts that were sequence duplicates of indexed transcripts.; [2022-06-01 18:14:47.999] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2022-06-01 18:14:47.999] [puff::index::jointLog] [info] Replaced 73,600,668 non-ATCG nucleotides; [2022-06-01 18:14:47.999] [puff::index::jointLog] [info] Clipped poly-A tails from 647 transcripts; wrote 116780 cleaned references; [2022-06-01 18:14:53.762] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2022-06-01 18:15:29.014] [puff::index::jointLog] [info] ntHll estimated 2268760823 distinct k-mers, setting filter size to 2^36; Threads = 60; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files: ; Mus_musculus.GRCm39_v1.8.0_decoy.index/ref_k31_fixed.fa. Round 0, 0:68719476736; Pass	Filling	Filtering; 1	104	79	; 2	75	5; True junctions count = 14895414; False junctions count = 1201318; Hash table size = 16096732; Candidate marks count = 337141231. Reallocating bifurcations time: 8; True marks count: 335754103; Edges construction time: 117. Distinct junctions = 14895414. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:11554,Security,Hash,Hash,11554,"f::index::jointLog] [warning] Removed 739 transcripts that were sequence duplicates of indexed transcripts.; [2022-06-01 18:14:47.999] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2022-06-01 18:14:47.999] [puff::index::jointLog] [info] Replaced 73,600,668 non-ATCG nucleotides; [2022-06-01 18:14:47.999] [puff::index::jointLog] [info] Clipped poly-A tails from 647 transcripts; wrote 116780 cleaned references; [2022-06-01 18:14:53.762] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2022-06-01 18:15:29.014] [puff::index::jointLog] [info] ntHll estimated 2268760823 distinct k-mers, setting filter size to 2^36; Threads = 60; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files: ; Mus_musculus.GRCm39_v1.8.0_decoy.index/ref_k31_fixed.fa. Round 0, 0:68719476736; Pass	Filling	Filtering; 1	104	79	; 2	75	5; True junctions count = 14895414; False junctions count = 1201318; Hash table size = 16096732; Candidate marks count = 337141231. Reallocating bifurcations time: 8; True marks count: 335754103; Edges construction time: 117. Distinct junctions = 14895414. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:12953,Security,validat,validation,12953,"een.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0_decoy.index; size = 3020582944. | Loading contigs | Time = 469.49 ms. size = 3020582944. | Loading contig boundaries | Time = 242.8 ms. Number of ones: 24974473; Number of ones per inventory item: 512; Inventory entries filled: 48779; 24974473; [2022-06-01 18:28:15.208] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2022-06-01 18:28:15.619] [puff::index::jointLog] [info] contig count for validation: 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of Contigs : 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of numerical Contigs : 24,974,473; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] Total # of contig vec entries: 345,523,986; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] bits per offset entry 29; [2022-06-01 18:28:53.341] [puff::index::jointLog] [info] Done constructing the contig vector. 24974474; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] # segments = 24,974,473; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] total length = 3,020,582,944; [2022-06-01 18:29:07.850] [puff::index::jointLog] [info] Reading the reference files ...; [2022-06-01 18:29:20.813] [puff::index::jointLog] [info] positional integer width = 32; [2022-06-01 18:29:20.813] [puff::index::jointLog] [info] seqSize = 3,020,582,944; [2022-06-01 18:29:20.813] [puff::index::jointLog] [info] rankSize",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/783:164,Usability,clear,clear,164,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon (bulk mode) latest binary (1.8.0) from github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783
https://github.com/COMBINE-lab/salmon/issues/785:81,Availability,error,error,81,"I am trying to quantify my reads with salmon quant (v. 1.8.0) and I'm getting an error saying ""SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]"". Do you know what is the issue?. `./salmon-1.8.0_linux_x86_64/bin/salmon quant -l A -a ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam -t ./vcae1.4.cds.fa -o ./Rev5-2.quant`. Version Info: This is the most recent version of salmon.; salmon (alignment-based) v1.8.0; [ program ] => salmon; [ command ] => quant; [ libType ] => { A }; [ alignments ] => { ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam }; [ targets ] => {./vcae1.4.cds.fa }; [ output ] => { ./Rev5-2.quant }; Logs will be written to /h./Rev5-2.quant/logs; [2022-06-21 22:56:14.963] [jointLog] [info] setting maxHashResizeThreads to 8; [2022-06-21 22:56:14.963] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; [2022-06-21 22:56:15.015] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam"", fasta = ""./vcae1.4.cds.fa"" . . . **SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/785
https://github.com/COMBINE-lab/salmon/issues/785:708,Testability,Log,Logs,708,"I am trying to quantify my reads with salmon quant (v. 1.8.0) and I'm getting an error saying ""SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]"". Do you know what is the issue?. `./salmon-1.8.0_linux_x86_64/bin/salmon quant -l A -a ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam -t ./vcae1.4.cds.fa -o ./Rev5-2.quant`. Version Info: This is the most recent version of salmon.; salmon (alignment-based) v1.8.0; [ program ] => salmon; [ command ] => quant; [ libType ] => { A }; [ alignments ] => { ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam }; [ targets ] => {./vcae1.4.cds.fa }; [ output ] => { ./Rev5-2.quant }; Logs will be written to /h./Rev5-2.quant/logs; [2022-06-21 22:56:14.963] [jointLog] [info] setting maxHashResizeThreads to 8; [2022-06-21 22:56:14.963] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; [2022-06-21 22:56:15.015] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam"", fasta = ""./vcae1.4.cds.fa"" . . . **SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/785
https://github.com/COMBINE-lab/salmon/issues/785:749,Testability,log,logs,749,"I am trying to quantify my reads with salmon quant (v. 1.8.0) and I'm getting an error saying ""SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]"". Do you know what is the issue?. `./salmon-1.8.0_linux_x86_64/bin/salmon quant -l A -a ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam -t ./vcae1.4.cds.fa -o ./Rev5-2.quant`. Version Info: This is the most recent version of salmon.; salmon (alignment-based) v1.8.0; [ program ] => salmon; [ command ] => quant; [ libType ] => { A }; [ alignments ] => { ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam }; [ targets ] => {./vcae1.4.cds.fa }; [ output ] => { ./Rev5-2.quant }; Logs will be written to /h./Rev5-2.quant/logs; [2022-06-21 22:56:14.963] [jointLog] [info] setting maxHashResizeThreads to 8; [2022-06-21 22:56:14.963] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; [2022-06-21 22:56:15.015] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam"", fasta = ""./vcae1.4.cds.fa"" . . . **SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/785
https://github.com/COMBINE-lab/salmon/issues/786:582,Safety,detect,detected,582,"Hello,; Thank you for developing this tool. I am trying to quantify transcript abundance using direct RNA seq reads after mapping with minimap2 to a transcriptome that I got using FLAIR and SQANTI tools. In this post, I am attaching a screenshot with the annotation file and the coverage file provided to IGV (coverage obtained by mapping to the genome). . ![image](https://user-images.githubusercontent.com/91305037/176149469-38b2bd94-3c21-4a33-8c4c-56d7590229bd.png). As we can see there are 4 overlapping transcripts. However, after running salmon only the longest transcript is detected (cf screenshot below). ![image](https://user-images.githubusercontent.com/91305037/176149696-c70d22b5-059b-493d-90f1-050d4c0ba276.png). The command line I used for minimap2 was: `minimap2 -ax map-ont sqanti_transcriptome.fasta reads.fastq > reads.sam -N 100`; The command line for salmon was `salmon quant -t sqanti_transcriptome.fasta -l A -a reads.bam -o reads_counts --ont --noErrorModel.`. How can I quantify all these overlapping transcripts ? ; Do I need to provide the files so that you can reproduce this?; Thank you in advance, ; Best regards.; Lan Anh. Edit: I also have another question concerning the library type. When using the automatic mode, SF library is used. But for ONT nanopore reads, since the read comes from the reverse strand, should it be SR? or because it can come from both strands, is it U?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/786
https://github.com/COMBINE-lab/salmon/issues/787:189,Availability,Down,Downloading,189,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:270,Availability,down,downloaded,270,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:322,Availability,down,downloads,322,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:1619,Availability,error,errors,1619,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:1921,Availability,error,error,1921,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:21,Deployability,install,install,21,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:168,Deployability,install,install,168,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:423,Deployability,Install,Installing,423,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:1479,Deployability,install,install,1479,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:1560,Deployability,install,install,1560,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:2224,Deployability,update,update,2224,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:1595,Modifiability,Config,Configuring,1595,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:306,Performance,Cache,Caches,306,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:515,Testability,Log,Logs,515,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:907,Testability,log,log,907,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:1717,Testability,log,log,1717,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/787:1803,Testability,log,log,1803,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787
https://github.com/COMBINE-lab/salmon/issues/788:478,Availability,error,error,478,"Hello,. I tried creating a salmon index for bos taurus but was not successful. I created the decoy file using:. grep ""^>"" <(gunzip -c Bos_taurus.ARS-UCD1.2.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. When i try to index using ; salmon index -t bos_taurus_gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode ; OR; salmon index -t Bos_taurus.ARS-UCD1.2.cdna.all.fa.gz -i bos_taurus_107_index --decoys decoys.txt -k 31. I get an error. The last two lines of the log file are. [puff::index::jointLog] [critical] The decoy file contained the names of 2211 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1. What is happening and how can i solve this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/788
https://github.com/COMBINE-lab/salmon/issues/788:709,Availability,error,errors,709,"Hello,. I tried creating a salmon index for bos taurus but was not successful. I created the decoy file using:. grep ""^>"" <(gunzip -c Bos_taurus.ARS-UCD1.2.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. When i try to index using ; salmon index -t bos_taurus_gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode ; OR; salmon index -t Bos_taurus.ARS-UCD1.2.cdna.all.fa.gz -i bos_taurus_107_index --decoys decoys.txt -k 31. I get an error. The last two lines of the log file are. [puff::index::jointLog] [critical] The decoy file contained the names of 2211 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1. What is happening and how can i solve this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/788
https://github.com/COMBINE-lab/salmon/issues/788:716,Availability,down,downstream,716,"Hello,. I tried creating a salmon index for bos taurus but was not successful. I created the decoy file using:. grep ""^>"" <(gunzip -c Bos_taurus.ARS-UCD1.2.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. When i try to index using ; salmon index -t bos_taurus_gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode ; OR; salmon index -t Bos_taurus.ARS-UCD1.2.cdna.all.fa.gz -i bos_taurus_107_index --decoys decoys.txt -k 31. I get an error. The last two lines of the log file are. [puff::index::jointLog] [critical] The decoy file contained the names of 2211 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1. What is happening and how can i solve this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/788
https://github.com/COMBINE-lab/salmon/issues/788:847,Availability,error,error,847,"Hello,. I tried creating a salmon index for bos taurus but was not successful. I created the decoy file using:. grep ""^>"" <(gunzip -c Bos_taurus.ARS-UCD1.2.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. When i try to index using ; salmon index -t bos_taurus_gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode ; OR; salmon index -t Bos_taurus.ARS-UCD1.2.cdna.all.fa.gz -i bos_taurus_107_index --decoys decoys.txt -k 31. I get an error. The last two lines of the log file are. [puff::index::jointLog] [critical] The decoy file contained the names of 2211 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1. What is happening and how can i solve this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/788
https://github.com/COMBINE-lab/salmon/issues/788:511,Testability,log,log,511,"Hello,. I tried creating a salmon index for bos taurus but was not successful. I created the decoy file using:. grep ""^>"" <(gunzip -c Bos_taurus.ARS-UCD1.2.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. When i try to index using ; salmon index -t bos_taurus_gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode ; OR; salmon index -t Bos_taurus.ARS-UCD1.2.cdna.all.fa.gz -i bos_taurus_107_index --decoys decoys.txt -k 31. I get an error. The last two lines of the log file are. [puff::index::jointLog] [critical] The decoy file contained the names of 2211 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1. What is happening and how can i solve this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/788
https://github.com/COMBINE-lab/salmon/issues/790:1161,Deployability,pipeline,pipeline,1161,"the selective alignment algorithm Salmon employs is not well-suited for long reads (#602), and therefore the software needs to be run in alignment mode for accurate counting. My main question then concerns the optimal parameters for the upstream alignment step. The ONT community seems to have settled on using minimap2 for this, but beyond that the guidance gets a bit murky... The [minimap2](https://github.com/lh3/minimap2/#map-long-splice) documentation suggests the following command for mapping long RNA reads:. `minimap2 -ax splice:hq -uf ref.fa reads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, depending on how Salmon actually uses the alternate mappings (i.e., is it just for the statistics or does it affect the counts as well?). . I've also seen groups to",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790
https://github.com/COMBINE-lab/salmon/issues/790:1203,Deployability,pipeline,pipeline-transcriptome-de,1203," needs to be run in alignment mode for accurate counting. My main question then concerns the optimal parameters for the upstream alignment step. The ONT community seems to have settled on using minimap2 for this, but beyond that the guidance gets a bit murky... The [minimap2](https://github.com/lh3/minimap2/#map-long-splice) documentation suggests the following command for mapping long RNA reads:. `minimap2 -ax splice:hq -uf ref.fa reads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, depending on how Salmon actually uses the alternate mappings (i.e., is it just for the statistics or does it affect the counts as well?). . I've also seen groups toying with adjusting the _-p_ setting in minimap2 which sets the minimal ratio of the secondary to primary alignment sc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790
https://github.com/COMBINE-lab/salmon/issues/790:1993,Integrability,depend,depending,1993,"eads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, depending on how Salmon actually uses the alternate mappings (i.e., is it just for the statistics or does it affect the counts as well?). . I've also seen groups toying with adjusting the _-p_ setting in minimap2 which sets the minimal ratio of the secondary to primary alignment score that is allowed in order to report the secondary mapping. Surveying the forums and discussion boards, values of _-N_ ranging from the default of 5 to 100 and of _-p_ ranging from 0 to 1, (i.e., anything) seem to be acceptable. Given this ambiguity, I figured going to the 'source' and asking the creators what Salmon actually wants might be beneficial, so if yall have done any testing or have recommendations I'd very appreciative.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790
https://github.com/COMBINE-lab/salmon/issues/790:1765,Testability,log,logic,1765,"ads:. `minimap2 -ax splice:hq -uf ref.fa reads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, depending on how Salmon actually uses the alternate mappings (i.e., is it just for the statistics or does it affect the counts as well?). . I've also seen groups toying with adjusting the _-p_ setting in minimap2 which sets the minimal ratio of the secondary to primary alignment score that is allowed in order to report the secondary mapping. Surveying the forums and discussion boards, values of _-N_ ranging from the default of 5 to 100 and of _-p_ ranging from 0 to 1, (i.e., anything) seem to be acceptable. Given this ambiguity, I figured going to the 'source' and asking the creators what Salmon actually wants might be beneficial, so if yall have done any testing or ha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790
https://github.com/COMBINE-lab/salmon/issues/790:2657,Testability,test,testing,2657,"eads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, depending on how Salmon actually uses the alternate mappings (i.e., is it just for the statistics or does it affect the counts as well?). . I've also seen groups toying with adjusting the _-p_ setting in minimap2 which sets the minimal ratio of the secondary to primary alignment score that is allowed in order to report the secondary mapping. Surveying the forums and discussion boards, values of _-N_ ranging from the default of 5 to 100 and of _-p_ ranging from 0 to 1, (i.e., anything) seem to be acceptable. Given this ambiguity, I figured going to the 'source' and asking the creators what Salmon actually wants might be beneficial, so if yall have done any testing or have recommendations I'd very appreciative.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790
https://github.com/COMBINE-lab/salmon/issues/790:21,Usability,guid,guidance,21,"I'm looking for some guidance on recommendations / best practices for quantifying direct RNA / cDNA Nanopore reads using Salmon. It is my understanding that the selective alignment algorithm Salmon employs is not well-suited for long reads (#602), and therefore the software needs to be run in alignment mode for accurate counting. My main question then concerns the optimal parameters for the upstream alignment step. The ONT community seems to have settled on using minimap2 for this, but beyond that the guidance gets a bit murky... The [minimap2](https://github.com/lh3/minimap2/#map-long-splice) documentation suggests the following command for mapping long RNA reads:. `minimap2 -ax splice:hq -uf ref.fa reads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, dependin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790
https://github.com/COMBINE-lab/salmon/issues/790:507,Usability,guid,guidance,507,"I'm looking for some guidance on recommendations / best practices for quantifying direct RNA / cDNA Nanopore reads using Salmon. It is my understanding that the selective alignment algorithm Salmon employs is not well-suited for long reads (#602), and therefore the software needs to be run in alignment mode for accurate counting. My main question then concerns the optimal parameters for the upstream alignment step. The ONT community seems to have settled on using minimap2 for this, but beyond that the guidance gets a bit murky... The [minimap2](https://github.com/lh3/minimap2/#map-long-splice) documentation suggests the following command for mapping long RNA reads:. `minimap2 -ax splice:hq -uf ref.fa reads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, dependin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790
https://github.com/COMBINE-lab/salmon/issues/791:108,Performance,perform,perform,108,"When I followed the tutorial here (https://combine-lab.github.io/alevin-tutorial/2020/alevin-features/ ) to perform HTO quantification by alevin (also add --dumpMtx option), a malformed MTX file was generated. <img width=""551"" alt=""image"" src=""https://user-images.githubusercontent.com/77259528/181101587-d06b7ab1-1d86-4eee-bf45-2a9432facf80.png"">. Has 999230 nonzero entries, but the second line indicates the number of nonzero entries is `0`, which should be `999230`? So when I read the matrix by `scipy.io.mmread`, all entries would be zero. . Thank you very much for your help in advance! If I misunderstood anything, please kindly let me know.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/791
https://github.com/COMBINE-lab/salmon/issues/792:622,Availability,echo,echo,622,"Dear salmon support team,. I firstly assembled MAGs from my metagenome data, then predicted the ORF gene operons using the prodigal software to generate the corresponding prodigal predicted MAG *faa files. Now, I am using each MAG *fna fasta file to map on their corresponding prodigal predicted *faa protein sequences. **But, the TPM values in my quantification files - quant.sf are all as 0.**. So, could you give me some suggestions on this condition?. **Salmon command lines**; #index each MAG faa file; for f in ${quant_sf_dir}*faa; do ; fname=${f##*/}; fbase=${f##*.} ; index_dir=${f%.faa}; #mkdir -p ${index_dir}; #echo ${index_dir}; /services/tools/salmon/1.5.2/bin/salmon index -t ${f} -i ${index_dir}; done. #quantify each MAG fna using each corresponding MAG indexed faa file; for i in ${MAG_PATH}*.fasta; do; iname=${i##*/}; i_dir=${iname%.fasta}; index_dir=${quant_sf_dir}${i_dir}; /services/tools/salmon/1.5.2/bin/salmon quant -i ${index_dir} -l A \; -r ${i} \; **--minAssignedFrags 1 \**; -p 20 -o ${index_dir}_salmon_count > ${index_dir}.salmon.log 2>&1;; done. Best,. Bing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792
https://github.com/COMBINE-lab/salmon/issues/792:82,Safety,predict,predicted,82,"Dear salmon support team,. I firstly assembled MAGs from my metagenome data, then predicted the ORF gene operons using the prodigal software to generate the corresponding prodigal predicted MAG *faa files. Now, I am using each MAG *fna fasta file to map on their corresponding prodigal predicted *faa protein sequences. **But, the TPM values in my quantification files - quant.sf are all as 0.**. So, could you give me some suggestions on this condition?. **Salmon command lines**; #index each MAG faa file; for f in ${quant_sf_dir}*faa; do ; fname=${f##*/}; fbase=${f##*.} ; index_dir=${f%.faa}; #mkdir -p ${index_dir}; #echo ${index_dir}; /services/tools/salmon/1.5.2/bin/salmon index -t ${f} -i ${index_dir}; done. #quantify each MAG fna using each corresponding MAG indexed faa file; for i in ${MAG_PATH}*.fasta; do; iname=${i##*/}; i_dir=${iname%.fasta}; index_dir=${quant_sf_dir}${i_dir}; /services/tools/salmon/1.5.2/bin/salmon quant -i ${index_dir} -l A \; -r ${i} \; **--minAssignedFrags 1 \**; -p 20 -o ${index_dir}_salmon_count > ${index_dir}.salmon.log 2>&1;; done. Best,. Bing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792
https://github.com/COMBINE-lab/salmon/issues/792:180,Safety,predict,predicted,180,"Dear salmon support team,. I firstly assembled MAGs from my metagenome data, then predicted the ORF gene operons using the prodigal software to generate the corresponding prodigal predicted MAG *faa files. Now, I am using each MAG *fna fasta file to map on their corresponding prodigal predicted *faa protein sequences. **But, the TPM values in my quantification files - quant.sf are all as 0.**. So, could you give me some suggestions on this condition?. **Salmon command lines**; #index each MAG faa file; for f in ${quant_sf_dir}*faa; do ; fname=${f##*/}; fbase=${f##*.} ; index_dir=${f%.faa}; #mkdir -p ${index_dir}; #echo ${index_dir}; /services/tools/salmon/1.5.2/bin/salmon index -t ${f} -i ${index_dir}; done. #quantify each MAG fna using each corresponding MAG indexed faa file; for i in ${MAG_PATH}*.fasta; do; iname=${i##*/}; i_dir=${iname%.fasta}; index_dir=${quant_sf_dir}${i_dir}; /services/tools/salmon/1.5.2/bin/salmon quant -i ${index_dir} -l A \; -r ${i} \; **--minAssignedFrags 1 \**; -p 20 -o ${index_dir}_salmon_count > ${index_dir}.salmon.log 2>&1;; done. Best,. Bing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792
https://github.com/COMBINE-lab/salmon/issues/792:286,Safety,predict,predicted,286,"Dear salmon support team,. I firstly assembled MAGs from my metagenome data, then predicted the ORF gene operons using the prodigal software to generate the corresponding prodigal predicted MAG *faa files. Now, I am using each MAG *fna fasta file to map on their corresponding prodigal predicted *faa protein sequences. **But, the TPM values in my quantification files - quant.sf are all as 0.**. So, could you give me some suggestions on this condition?. **Salmon command lines**; #index each MAG faa file; for f in ${quant_sf_dir}*faa; do ; fname=${f##*/}; fbase=${f##*.} ; index_dir=${f%.faa}; #mkdir -p ${index_dir}; #echo ${index_dir}; /services/tools/salmon/1.5.2/bin/salmon index -t ${f} -i ${index_dir}; done. #quantify each MAG fna using each corresponding MAG indexed faa file; for i in ${MAG_PATH}*.fasta; do; iname=${i##*/}; i_dir=${iname%.fasta}; index_dir=${quant_sf_dir}${i_dir}; /services/tools/salmon/1.5.2/bin/salmon quant -i ${index_dir} -l A \; -r ${i} \; **--minAssignedFrags 1 \**; -p 20 -o ${index_dir}_salmon_count > ${index_dir}.salmon.log 2>&1;; done. Best,. Bing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792
https://github.com/COMBINE-lab/salmon/issues/792:1061,Testability,log,log,1061,"Dear salmon support team,. I firstly assembled MAGs from my metagenome data, then predicted the ORF gene operons using the prodigal software to generate the corresponding prodigal predicted MAG *faa files. Now, I am using each MAG *fna fasta file to map on their corresponding prodigal predicted *faa protein sequences. **But, the TPM values in my quantification files - quant.sf are all as 0.**. So, could you give me some suggestions on this condition?. **Salmon command lines**; #index each MAG faa file; for f in ${quant_sf_dir}*faa; do ; fname=${f##*/}; fbase=${f##*.} ; index_dir=${f%.faa}; #mkdir -p ${index_dir}; #echo ${index_dir}; /services/tools/salmon/1.5.2/bin/salmon index -t ${f} -i ${index_dir}; done. #quantify each MAG fna using each corresponding MAG indexed faa file; for i in ${MAG_PATH}*.fasta; do; iname=${i##*/}; i_dir=${iname%.fasta}; index_dir=${quant_sf_dir}${i_dir}; /services/tools/salmon/1.5.2/bin/salmon quant -i ${index_dir} -l A \; -r ${i} \; **--minAssignedFrags 1 \**; -p 20 -o ${index_dir}_salmon_count > ${index_dir}.salmon.log 2>&1;; done. Best,. Bing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792
https://github.com/COMBINE-lab/salmon/issues/795:1980,Availability,down,downloaded,1980,"quences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during index ing. Further details can be found at https://salmon.readthedocs.io/en/latest/sal mon.html#preparing-transcriptome-indices-mapping-based-mode.; [2022-08-22 15:07:03.860] [jLog] [info] building index; out : transcripts_index; [2022-08-22 15:07:03.860] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Replaced 0 non-ATCG nuc leotides; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Clipped poly-A tails fr om 0 transcripts; wrote 0 cleaned references; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Filter size not provide d; estimating from number of distinct k-mers; [2022-08-22 15:07:03.866] [puff::index::jointLog] [info] ntHll estimated 47270 d istinct k-mers, setting filter size to 2^20; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1048576; Capacity = 2; Files:; transcripts_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1048576; Pass Filling Filtering; terminate called without an active exception; Aborted (core dumped). **To Reproduce**; Steps and data to reproduce the behavior:; salmon index -t contigs_for_salmon -i transcripts_index -k 31; my reads are paired end RNA-reads (rRNA REMOVED); My transcriptome is a 90 contigs resulted from reads assembly; Specifically, please provide at least the following information:. * Which version of salmon was used?; * ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; 1.9.0 (latest). **Expected behavior**; use salmon index for Preparing transcriptome indices. **Desktop (please complete the following information):**; - OS: ubuntu 20.04.4 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795
https://github.com/COMBINE-lab/salmon/issues/795:1959,Deployability,install,installed,1959,"quences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during index ing. Further details can be found at https://salmon.readthedocs.io/en/latest/sal mon.html#preparing-transcriptome-indices-mapping-based-mode.; [2022-08-22 15:07:03.860] [jLog] [info] building index; out : transcripts_index; [2022-08-22 15:07:03.860] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Replaced 0 non-ATCG nuc leotides; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Clipped poly-A tails fr om 0 transcripts; wrote 0 cleaned references; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Filter size not provide d; estimating from number of distinct k-mers; [2022-08-22 15:07:03.866] [puff::index::jointLog] [info] ntHll estimated 47270 d istinct k-mers, setting filter size to 2^20; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1048576; Capacity = 2; Files:; transcripts_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1048576; Pass Filling Filtering; terminate called without an active exception; Aborted (core dumped). **To Reproduce**; Steps and data to reproduce the behavior:; salmon index -t contigs_for_salmon -i transcripts_index -k 31; my reads are paired end RNA-reads (rRNA REMOVED); My transcriptome is a 90 contigs resulted from reads assembly; Specifically, please provide at least the following information:. * Which version of salmon was used?; * ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; 1.9.0 (latest). **Expected behavior**; use salmon index for Preparing transcriptome indices. **Desktop (please complete the following information):**; - OS: ubuntu 20.04.4 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795
https://github.com/COMBINE-lab/salmon/issues/795:1575,Safety,Abort,Aborted,1575,"quences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during index ing. Further details can be found at https://salmon.readthedocs.io/en/latest/sal mon.html#preparing-transcriptome-indices-mapping-based-mode.; [2022-08-22 15:07:03.860] [jLog] [info] building index; out : transcripts_index; [2022-08-22 15:07:03.860] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Replaced 0 non-ATCG nuc leotides; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Clipped poly-A tails fr om 0 transcripts; wrote 0 cleaned references; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Filter size not provide d; estimating from number of distinct k-mers; [2022-08-22 15:07:03.866] [puff::index::jointLog] [info] ntHll estimated 47270 d istinct k-mers, setting filter size to 2^20; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1048576; Capacity = 2; Files:; transcripts_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1048576; Pass Filling Filtering; terminate called without an active exception; Aborted (core dumped). **To Reproduce**; Steps and data to reproduce the behavior:; salmon index -t contigs_for_salmon -i transcripts_index -k 31; my reads are paired end RNA-reads (rRNA REMOVED); My transcriptome is a 90 contigs resulted from reads assembly; Specifically, please provide at least the following information:. * Which version of salmon was used?; * ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; 1.9.0 (latest). **Expected behavior**; use salmon index for Preparing transcriptome indices. **Desktop (please complete the following information):**; - OS: ubuntu 20.04.4 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795
https://github.com/COMBINE-lab/salmon/issues/795:1302,Security,Hash,Hash,1302,"dex is being built witho ut any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during index ing. Further details can be found at https://salmon.readthedocs.io/en/latest/sal mon.html#preparing-transcriptome-indices-mapping-based-mode.; [2022-08-22 15:07:03.860] [jLog] [info] building index; out : transcripts_index; [2022-08-22 15:07:03.860] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Replaced 0 non-ATCG nuc leotides; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Clipped poly-A tails fr om 0 transcripts; wrote 0 cleaned references; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Filter size not provide d; estimating from number of distinct k-mers; [2022-08-22 15:07:03.866] [puff::index::jointLog] [info] ntHll estimated 47270 d istinct k-mers, setting filter size to 2^20; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1048576; Capacity = 2; Files:; transcripts_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1048576; Pass Filling Filtering; terminate called without an active exception; Aborted (core dumped). **To Reproduce**; Steps and data to reproduce the behavior:; salmon index -t contigs_for_salmon -i transcripts_index -k 31; my reads are paired end RNA-reads (rRNA REMOVED); My transcriptome is a 90 contigs resulted from reads assembly; Specifically, please provide at least the following information:. * Which version of salmon was used?; * ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; 1.9.0 (latest). **Expected behavior**; use salmon index for Preparing transcriptome indices. **Desktop (please complete the following in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795
https://github.com/COMBINE-lab/salmon/issues/795:116,Usability,clear,clear,116,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk; **Describe the bug**; A clear and concise description of what the bug is.; Version Info: This is the most recent version of salmon.; [2022-08-22 15:07:03.859] [jLog] [warning] The salmon index is being built witho ut any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during index ing. Further details can be found at https://salmon.readthedocs.io/en/latest/sal mon.html#preparing-transcriptome-indices-mapping-based-mode.; [2022-08-22 15:07:03.860] [jLog] [info] building index; out : transcripts_index; [2022-08-22 15:07:03.860] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Replaced 0 non-ATCG nuc leotides; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Clipped poly-A tails fr om 0 transcripts; wrote 0 cleaned references; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Filter size not provide d; estimating from number of distinct k-mers; [2022-08-22 15:07:03.866] [puff::index::jointLog] [info] ntHll estimated 47270 d istinct k-mers, setting filter size to 2^20; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1048576; Capacity = 2; Files:; transcripts_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1048576; Pass Filling Filtering; terminate called without an active exception; Aborted (core dumped). **To Reproduce**; Steps and data to reproduce the behavior:; salmon index -t contigs_for_salmon -i transcripts_index -k 31; my reads are paired end RNA-reads (rRNA REMOVED); My transcriptome is a 90 contigs resulted from reads assembly; Specifically, please provide at least the following information:. * Which version of salmon was used?; * ; * How was salmon installed (compiled, downloaded executable",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795
https://github.com/COMBINE-lab/salmon/issues/796:195,Deployability,pipeline,pipeline,195,"I am trying to do transcript isoform quantification after mapping ONT long reads to transcripts. I have a transcriptome made up of gencode and novel transcripts identified by following the TALON pipeline. Due to some strangeness when combining the two sets of transcripts, if I run minimap2 with default parameters I get a very large number of unmapped reads that would normally map well to either gencode or TALON transcripts when alone. To combat this, I was advised to change the -f parameter to 1000. In doing so I get a similar amount of mapped reads, but around 6 times as many non-primary alignments as when I map with default parameters to gencode transcripts alone. Is it still okay to use salmon quantification with data that has been mapped in this way, or will the ONT model not give accurate quantification?. How I have been quantifying:; `salmon quant -p 1 --ont -t transcripts.fa -l SF -a transcriptome.bam -o salmon`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/796
https://github.com/COMBINE-lab/salmon/issues/797:192,Availability,error,error,192,"I am trying make a Salmon Indexing but when I run with this code: ; $salmon index -t ../transcriptome/gencode.v37.transcripts.fa.gz -i ../transcriptome/genecode.v37.salmon141 . And I got this error:; Version Info: This is the most recent version of salmon.; The file [../transcriptome/gencode.v37.transcripts.fa.gz] pr; ovided for the transcriptome does not appear to exist.(salmon). I am trying to do this practice of ARN-seq:; https://comunidadbioinfo.github.io/minicurso_abr_2021/bin/Practica-RNAseq.html. i don't understand the error, because i have gencode.v37.transcripts.fa.gz in /reference",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/797
https://github.com/COMBINE-lab/salmon/issues/797:532,Availability,error,error,532,"I am trying make a Salmon Indexing but when I run with this code: ; $salmon index -t ../transcriptome/gencode.v37.transcripts.fa.gz -i ../transcriptome/genecode.v37.salmon141 . And I got this error:; Version Info: This is the most recent version of salmon.; The file [../transcriptome/gencode.v37.transcripts.fa.gz] pr; ovided for the transcriptome does not appear to exist.(salmon). I am trying to do this practice of ARN-seq:; https://comunidadbioinfo.github.io/minicurso_abr_2021/bin/Practica-RNAseq.html. i don't understand the error, because i have gencode.v37.transcripts.fa.gz in /reference",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/797
https://github.com/COMBINE-lab/salmon/issues/798:208,Deployability,pipeline,pipeline,208,"Hi all. I'm doing a fairly simple RNA Seq experiment right now, but ran into a problem when trying to quantify reads from the chloroplast (A. thaliana). For the entire analysis, I am using the nf-core/rnaseq pipeline (default parameters) which gives me Alignment (STAR) based counts from Salmon at the end and additional counts from FeatureCounts. The whole pipeline runs without problems and the mapping looks good. When I compare the number of reads between Salmon and FeatureCounts, the results are pretty much the same for the nucleus, but for the chloroplast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798
https://github.com/COMBINE-lab/salmon/issues/798:358,Deployability,pipeline,pipeline,358,"Hi all. I'm doing a fairly simple RNA Seq experiment right now, but ran into a problem when trying to quantify reads from the chloroplast (A. thaliana). For the entire analysis, I am using the nf-core/rnaseq pipeline (default parameters) which gives me Alignment (STAR) based counts from Salmon at the end and additional counts from FeatureCounts. The whole pipeline runs without problems and the mapping looks good. When I compare the number of reads between Salmon and FeatureCounts, the results are pretty much the same for the nucleus, but for the chloroplast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798
https://github.com/COMBINE-lab/salmon/issues/798:1052,Deployability,pipeline,pipeline,1052,". thaliana). For the entire analysis, I am using the nf-core/rnaseq pipeline (default parameters) which gives me Alignment (STAR) based counts from Salmon at the end and additional counts from FeatureCounts. The whole pipeline runs without problems and the mapping looks good. When I compare the number of reads between Salmon and FeatureCounts, the results are pretty much the same for the nucleus, but for the chloroplast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloropl",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798
https://github.com/COMBINE-lab/salmon/issues/798:1358,Deployability,pipeline,pipeline,1358,"whole pipeline runs without problems and the mapping looks good. When I compare the number of reads between Salmon and FeatureCounts, the results are pretty much the same for the nucleus, but for the chloroplast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloroplast genome (super small, polycistronic and monocistronic units, partially small genes, high expression levels)? I know there are publications where Salmon has been used for chloroplast read counts, but I haven't ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798
https://github.com/COMBINE-lab/salmon/issues/798:1683,Deployability,pipeline,pipeline,1683,"st they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloroplast genome (super small, polycistronic and monocistronic units, partially small genes, high expression levels)? I know there are publications where Salmon has been used for chloroplast read counts, but I haven't found any information about their parameters. I would be super happy if you guys could help me here. I could also just work with FeatureCounts, but I would like to understand my problems. All the best; Florian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798
https://github.com/COMBINE-lab/salmon/issues/798:1716,Deployability,pipeline,pipeline,1716,"st they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloroplast genome (super small, polycistronic and monocistronic units, partially small genes, high expression levels)? I know there are publications where Salmon has been used for chloroplast read counts, but I haven't found any information about their parameters. I would be super happy if you guys could help me here. I could also just work with FeatureCounts, but I would like to understand my problems. All the best; Florian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798
https://github.com/COMBINE-lab/salmon/issues/798:1938,Deployability,pipeline,pipelines,1938,"st they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloroplast genome (super small, polycistronic and monocistronic units, partially small genes, high expression levels)? I know there are publications where Salmon has been used for chloroplast read counts, but I haven't found any information about their parameters. I would be super happy if you guys could help me here. I could also just work with FeatureCounts, but I would like to understand my problems. All the best; Florian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798
https://github.com/COMBINE-lab/salmon/issues/798:2000,Deployability,pipeline,pipeline,2000,"st they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloroplast genome (super small, polycistronic and monocistronic units, partially small genes, high expression levels)? I know there are publications where Salmon has been used for chloroplast read counts, but I haven't found any information about their parameters. I would be super happy if you guys could help me here. I could also just work with FeatureCounts, but I would like to understand my problems. All the best; Florian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798
https://github.com/COMBINE-lab/salmon/issues/798:1546,Security,validat,validate,1546,"ast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloroplast genome (super small, polycistronic and monocistronic units, partially small genes, high expression levels)? I know there are publications where Salmon has been used for chloroplast read counts, but I haven't found any information about their parameters. I would be super happy if you guys could help me here. I could also just work with FeatureCounts, but I would like to understand my problems. All the best; Floria",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798
https://github.com/COMBINE-lab/salmon/issues/798:27,Usability,simpl,simple,27,"Hi all. I'm doing a fairly simple RNA Seq experiment right now, but ran into a problem when trying to quantify reads from the chloroplast (A. thaliana). For the entire analysis, I am using the nf-core/rnaseq pipeline (default parameters) which gives me Alignment (STAR) based counts from Salmon at the end and additional counts from FeatureCounts. The whole pipeline runs without problems and the mapping looks good. When I compare the number of reads between Salmon and FeatureCounts, the results are pretty much the same for the nucleus, but for the chloroplast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798
https://github.com/COMBINE-lab/salmon/issues/799:50,Performance,perform,perform,50,"I am working with Salmon in mapping-based mode to perform differential expression.; I am interested to understand which reads Salmon uses to produce counts, so I added --writeMappings and I checked the bam.; I hoped that Salmon would take into account samflags on field $3 to filter out 'bad' alignments, however, I am not able to figure out if Salmon consider flags. Moreover, in the 5th field (MAPQ) only 0 and 1 are produced. Should I suppose that 1 is considered 'mapped' and 0 to be 'unmapped' ?; I thank you in advance for your willingness; Bests",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/799
https://github.com/COMBINE-lab/salmon/issues/800:421,Deployability,upgrade,upgrade,421,"Hello,. I was using Salmon 1.10 for quantifying some of my RNA-seq datasets, against a custom transcriptome. The transcriptome has 89109 transcripts, but the final quant.sf file has 88119. I am wondering how some of the transcripts(990) are missing from the quant.sf. Does this mean that, they are not fully mapping against the transcriptome? In that case, shouldn't they be reported with a zero TPM?; Do you recommend I upgrade the version?. Thank you in advance.; Gayathri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/800
https://github.com/COMBINE-lab/salmon/issues/802:1753,Availability,Ping,Ping,1753,"Hi salmon team,. Thank you for developing this useful tool! I used salmon (v1.9.0) to quantify transcript abundance using full-length cDNA reads (ONT) after mapping with minimap2 to a transcriptome (Ensembl, GRCh38.p13). The commands as follows:. ```; minimap2 -t 4 -ax map-ont -N 100 -p 0.99 Homo_sapiens.GRCh38.cdna.all.mmi sample_full_length.fa | samtools view -bS > sample_cdna.bam; salmon quant -p 4 --ont -l U -t Homo_sapiens.GRCh38.cdna.all.fa -a sample_cdna.bam -o salmon_quant -g TranscriptID_GeneID_from_cDNA_fasta.tsv; ```. I found that salmon with the ""--ont"" option has a tendency to assign reads to isoforms containing longer exons (especially at the 5' end), even if regions specific to the longer exons have no read coverage. In the following example, the expression abundance of TPI1-202 is obviously higher than TPI1-201 based on genome mapping coverage in IGV tools. <img width=""415"" alt=""image"" src=""https://user-images.githubusercontent.com/33354198/191897914-cb68c719-3971-4489-b970-5f2322d878aa.png"">. However, in salmon (with “--ont”) results, the average detected transcript abundance for TPI1-202, TPI1-201 and TPI1-210 were 84.339, 186.753 and 132.503 respectively, i.e., the abundance of TPI1-202 was much lower than TPI1-201. Salmon seems to overestimate the abundance of TPI1-201 and TPI1-210 which contain longer exons at the 5' end. Similar problems were also observed in many other genes. Meanwhile, using the “--noErrorModel” option instead of “--ont” does not show this behavior (but “--noErrorModel” has problematic quantifications in other cases). Could you help with this problem? Is there any specific considerations in the “--ont” mode that could explain this behavior, and how can I fix it?. Thanks in advance!. Ping",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/802
https://github.com/COMBINE-lab/salmon/issues/802:1080,Safety,detect,detected,1080,"Hi salmon team,. Thank you for developing this useful tool! I used salmon (v1.9.0) to quantify transcript abundance using full-length cDNA reads (ONT) after mapping with minimap2 to a transcriptome (Ensembl, GRCh38.p13). The commands as follows:. ```; minimap2 -t 4 -ax map-ont -N 100 -p 0.99 Homo_sapiens.GRCh38.cdna.all.mmi sample_full_length.fa | samtools view -bS > sample_cdna.bam; salmon quant -p 4 --ont -l U -t Homo_sapiens.GRCh38.cdna.all.fa -a sample_cdna.bam -o salmon_quant -g TranscriptID_GeneID_from_cDNA_fasta.tsv; ```. I found that salmon with the ""--ont"" option has a tendency to assign reads to isoforms containing longer exons (especially at the 5' end), even if regions specific to the longer exons have no read coverage. In the following example, the expression abundance of TPI1-202 is obviously higher than TPI1-201 based on genome mapping coverage in IGV tools. <img width=""415"" alt=""image"" src=""https://user-images.githubusercontent.com/33354198/191897914-cb68c719-3971-4489-b970-5f2322d878aa.png"">. However, in salmon (with “--ont”) results, the average detected transcript abundance for TPI1-202, TPI1-201 and TPI1-210 were 84.339, 186.753 and 132.503 respectively, i.e., the abundance of TPI1-202 was much lower than TPI1-201. Salmon seems to overestimate the abundance of TPI1-201 and TPI1-210 which contain longer exons at the 5' end. Similar problems were also observed in many other genes. Meanwhile, using the “--noErrorModel” option instead of “--ont” does not show this behavior (but “--noErrorModel” has problematic quantifications in other cases). Could you help with this problem? Is there any specific considerations in the “--ont” mode that could explain this behavior, and how can I fix it?. Thanks in advance!. Ping",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/802
https://github.com/COMBINE-lab/salmon/issues/803:508,Deployability,release,release-,508,"Hello @rob-p @k3yavi . I'm contacting you because I'm getting different number of genes quantified based on the tool that I'm using to quantify my RNA-Seq samples. I'm running it using nf-core/rnaseq 3.8.1 version.; The point is if I use STAR/SALMON I get 61860 genes quantified, same number as unique genes IDs in GTF file, if I run in pseudo-mapping mode SALMON I get 61466 genes quantified. ## This is the way that I'm generating the index:; `; ### Get files from ensembl; wget http://ftp.ensembl.org/pub/release-107/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; gunzip Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; wget http://ftp.ensembl.org/pub/release-107/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; gunzip Homo_sapiens.GRCh38.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-107/gtf/homo_sapiens/Homo_sapiens.GRCh38.107.gtf.gz; gunzip Homo_sapiens.GRCh38.107.gtf.gz; ; ### Get files from ERCC92 (Spike-in); wget https://assets.thermofisher.com/TFS-Assets/LSG/manuals/ERCC92.zip; unzip ERCC92.zip; rm -rf ERCC92.zip; ; ### Add ERCC92 to FASTA file and to GTF file; cat ERCC92.fa Homo_sapiens.GRCh38.dna.primary_assembly.fa > Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa; cat ERCC92.gtf Homo_sapiens.GRCh38.107.gtf > Homo_sapiens.GRCh38.107_ERCC92.gtf; ; ### Regenerate a new transcript fasta; gffread -w regenerate_transcriptome.fa -g Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa Homo_sapiens.GRCh38.107_ERCC92.gtf; ; ### Create the decoys; grep ""^>"" Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; ; ### Generate gentrome; cat regenerate_transcriptome.fa Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa > gentrome.fa; ; ### Create salmon index; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index; `. ## Parameters pass to nf-core. `; STAR nf-params.json; {; ""input"": ""/localdata/samples_to_test/samplesheet_test_samples.csv"",; ""outdir"": ""/locald",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/803
https://github.com/COMBINE-lab/salmon/issues/803:678,Deployability,release,release-,678,"Hello @rob-p @k3yavi . I'm contacting you because I'm getting different number of genes quantified based on the tool that I'm using to quantify my RNA-Seq samples. I'm running it using nf-core/rnaseq 3.8.1 version.; The point is if I use STAR/SALMON I get 61860 genes quantified, same number as unique genes IDs in GTF file, if I run in pseudo-mapping mode SALMON I get 61466 genes quantified. ## This is the way that I'm generating the index:; `; ### Get files from ensembl; wget http://ftp.ensembl.org/pub/release-107/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; gunzip Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; wget http://ftp.ensembl.org/pub/release-107/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; gunzip Homo_sapiens.GRCh38.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-107/gtf/homo_sapiens/Homo_sapiens.GRCh38.107.gtf.gz; gunzip Homo_sapiens.GRCh38.107.gtf.gz; ; ### Get files from ERCC92 (Spike-in); wget https://assets.thermofisher.com/TFS-Assets/LSG/manuals/ERCC92.zip; unzip ERCC92.zip; rm -rf ERCC92.zip; ; ### Add ERCC92 to FASTA file and to GTF file; cat ERCC92.fa Homo_sapiens.GRCh38.dna.primary_assembly.fa > Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa; cat ERCC92.gtf Homo_sapiens.GRCh38.107.gtf > Homo_sapiens.GRCh38.107_ERCC92.gtf; ; ### Regenerate a new transcript fasta; gffread -w regenerate_transcriptome.fa -g Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa Homo_sapiens.GRCh38.107_ERCC92.gtf; ; ### Create the decoys; grep ""^>"" Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; ; ### Generate gentrome; cat regenerate_transcriptome.fa Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa > gentrome.fa; ; ### Create salmon index; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index; `. ## Parameters pass to nf-core. `; STAR nf-params.json; {; ""input"": ""/localdata/samples_to_test/samplesheet_test_samples.csv"",; ""outdir"": ""/locald",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/803
https://github.com/COMBINE-lab/salmon/issues/803:825,Deployability,release,release-,825,"Hello @rob-p @k3yavi . I'm contacting you because I'm getting different number of genes quantified based on the tool that I'm using to quantify my RNA-Seq samples. I'm running it using nf-core/rnaseq 3.8.1 version.; The point is if I use STAR/SALMON I get 61860 genes quantified, same number as unique genes IDs in GTF file, if I run in pseudo-mapping mode SALMON I get 61466 genes quantified. ## This is the way that I'm generating the index:; `; ### Get files from ensembl; wget http://ftp.ensembl.org/pub/release-107/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; gunzip Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; wget http://ftp.ensembl.org/pub/release-107/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; gunzip Homo_sapiens.GRCh38.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-107/gtf/homo_sapiens/Homo_sapiens.GRCh38.107.gtf.gz; gunzip Homo_sapiens.GRCh38.107.gtf.gz; ; ### Get files from ERCC92 (Spike-in); wget https://assets.thermofisher.com/TFS-Assets/LSG/manuals/ERCC92.zip; unzip ERCC92.zip; rm -rf ERCC92.zip; ; ### Add ERCC92 to FASTA file and to GTF file; cat ERCC92.fa Homo_sapiens.GRCh38.dna.primary_assembly.fa > Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa; cat ERCC92.gtf Homo_sapiens.GRCh38.107.gtf > Homo_sapiens.GRCh38.107_ERCC92.gtf; ; ### Regenerate a new transcript fasta; gffread -w regenerate_transcriptome.fa -g Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa Homo_sapiens.GRCh38.107_ERCC92.gtf; ; ### Create the decoys; grep ""^>"" Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; ; ### Generate gentrome; cat regenerate_transcriptome.fa Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa > gentrome.fa; ; ### Create salmon index; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index; `. ## Parameters pass to nf-core. `; STAR nf-params.json; {; ""input"": ""/localdata/samples_to_test/samplesheet_test_samples.csv"",; ""outdir"": ""/locald",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/803
https://github.com/COMBINE-lab/salmon/issues/804:61,Availability,down,downloaded,61,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804
https://github.com/COMBINE-lab/salmon/issues/804:159,Availability,Down,Downloading,159,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804
https://github.com/COMBINE-lab/salmon/issues/804:509,Security,validat,validateMappings,509,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804
https://github.com/COMBINE-lab/salmon/issues/804:185,Testability,test,test,185,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804
https://github.com/COMBINE-lab/salmon/issues/804:229,Testability,test,test,229,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804
https://github.com/COMBINE-lab/salmon/issues/804:472,Testability,test,test,472,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804
https://github.com/COMBINE-lab/salmon/issues/804:657,Testability,log,log,657,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804
https://github.com/COMBINE-lab/salmon/issues/805:289,Modifiability,extend,extended,289,"Hello salmon team! @jamorrison and I were looking through the code and seeing how best we could contribute a new single-cell RNA-seq technology. Our approach (STORM-seq https://www.biorxiv.org/content/10.1101/2022.03.14.484332v3) has made use of salmon for the pre-print and recently been extended to include UMIs. Thus, we would love to make use of the alevin fry framework if possible. It's paired-end, but without a cell barcode and uses `-l ISR` as the library type in salmon. The read structure looks like this:. Read 1; biological read. Read 2; UMI (8bp) + Linker (6bp) + biological read. We've started looking through the `SingleCellProtocols.hpp` header file to add in STORM, but wanted to ask what would be the best way to go about contributing a new technology like this. Also, without the cell barcode, would it make sense to have a small function to add a synthetic barcode if the length of the cell barcode is 0?. Thanks again for a great tool!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/805
https://github.com/COMBINE-lab/salmon/issues/806:2636,Availability,down,downloaded,2636,"initial_whitelist"": 28000,; ""low_conf_cbs"": 997,; ""num_features"": 5,; ""final_num_cbs"": 19134,; ""deduplicated_umis"": 127624221,; ""mean_umis_per_cell"": 6670,; ""mean_genes_per_cell"": 2229; }. ==> salmon_1.9_OG_2022-Oct-13_S3/aux_info/alevin_meta_info.json <==; {; ""total_reads"": 1657137137,; ""reads_with_N"": 59329,; ""noisy_cb_reads"": 447471964,; ""noisy_umi_reads"": 3629,; ""used_reads"": 1209602215,; ""mapping_rate"": 55.061293216313938,; ""reads_in_eqclasses"": 912441138,; ""total_cbs"": 33411349,; ""used_cbs"": 1567701,; ""initial_whitelist"": 28000,; ""low_conf_cbs"": 997,; ""num_features"": 5,; ""final_num_cbs"": 18395,; ""deduplicated_umis"": 125889439,; ""mean_umis_per_cell"": 6843,; ""mean_genes_per_cell"": 2248; }; ```. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Run `salmon alevin` on more than 2^32 sequenced reads. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v41 + CHM13 v2.0 assembly; * Which read files were used? BD Rhapsody + NovaSeq; * Which which program options were used?. ```; [cell barcodes were pre-corrected and merged using my own [custom script](https://gitlab.com/gringer/bioinfscripts/-/blob/master/synthSquish.pl)]; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} \; -p 10 -o salmon_1.9_cbc_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**; ```; {; ""total_reads"": 4579183639,; ""reads_with_N"": 165542,; ""noisy_cb_reads"": 1240522569,; ""noisy_umi_reads"": 6297,; ""used_reads"": 3338489231,; ""mapping_rate"": 52.32744469106451,; ""reads_in_eq",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/806
https://github.com/COMBINE-lab/salmon/issues/806:2685,Availability,down,download,2685,"initial_whitelist"": 28000,; ""low_conf_cbs"": 997,; ""num_features"": 5,; ""final_num_cbs"": 19134,; ""deduplicated_umis"": 127624221,; ""mean_umis_per_cell"": 6670,; ""mean_genes_per_cell"": 2229; }. ==> salmon_1.9_OG_2022-Oct-13_S3/aux_info/alevin_meta_info.json <==; {; ""total_reads"": 1657137137,; ""reads_with_N"": 59329,; ""noisy_cb_reads"": 447471964,; ""noisy_umi_reads"": 3629,; ""used_reads"": 1209602215,; ""mapping_rate"": 55.061293216313938,; ""reads_in_eqclasses"": 912441138,; ""total_cbs"": 33411349,; ""used_cbs"": 1567701,; ""initial_whitelist"": 28000,; ""low_conf_cbs"": 997,; ""num_features"": 5,; ""final_num_cbs"": 18395,; ""deduplicated_umis"": 125889439,; ""mean_umis_per_cell"": 6843,; ""mean_genes_per_cell"": 2248; }; ```. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Run `salmon alevin` on more than 2^32 sequenced reads. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v41 + CHM13 v2.0 assembly; * Which read files were used? BD Rhapsody + NovaSeq; * Which which program options were used?. ```; [cell barcodes were pre-corrected and merged using my own [custom script](https://gitlab.com/gringer/bioinfscripts/-/blob/master/synthSquish.pl)]; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} \; -p 10 -o salmon_1.9_cbc_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**; ```; {; ""total_reads"": 4579183639,; ""reads_with_N"": 165542,; ""noisy_cb_reads"": 1240522569,; ""noisy_umi_reads"": 6297,; ""used_reads"": 3338489231,; ""mapping_rate"": 52.32744469106451,; ""reads_in_eq",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/806
https://github.com/COMBINE-lab/salmon/issues/806:2615,Deployability,install,installed,2615,"initial_whitelist"": 28000,; ""low_conf_cbs"": 997,; ""num_features"": 5,; ""final_num_cbs"": 19134,; ""deduplicated_umis"": 127624221,; ""mean_umis_per_cell"": 6670,; ""mean_genes_per_cell"": 2229; }. ==> salmon_1.9_OG_2022-Oct-13_S3/aux_info/alevin_meta_info.json <==; {; ""total_reads"": 1657137137,; ""reads_with_N"": 59329,; ""noisy_cb_reads"": 447471964,; ""noisy_umi_reads"": 3629,; ""used_reads"": 1209602215,; ""mapping_rate"": 55.061293216313938,; ""reads_in_eqclasses"": 912441138,; ""total_cbs"": 33411349,; ""used_cbs"": 1567701,; ""initial_whitelist"": 28000,; ""low_conf_cbs"": 997,; ""num_features"": 5,; ""final_num_cbs"": 18395,; ""deduplicated_umis"": 125889439,; ""mean_umis_per_cell"": 6843,; ""mean_genes_per_cell"": 2248; }; ```. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Run `salmon alevin` on more than 2^32 sequenced reads. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v41 + CHM13 v2.0 assembly; * Which read files were used? BD Rhapsody + NovaSeq; * Which which program options were used?. ```; [cell barcodes were pre-corrected and merged using my own [custom script](https://gitlab.com/gringer/bioinfscripts/-/blob/master/synthSquish.pl)]; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} \; -p 10 -o salmon_1.9_cbc_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**; ```; {; ""total_reads"": 4579183639,; ""reads_with_N"": 165542,; ""noisy_cb_reads"": 1240522569,; ""noisy_umi_reads"": 6297,; ""used_reads"": 3338489231,; ""mapping_rate"": 52.32744469106451,; ""reads_in_eq",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/806
https://github.com/COMBINE-lab/salmon/issues/807:540,Usability,guid,guidance,540,"I'm using Salmon to quantify isoforms in TCGA short-read data, which have fairly short reads (48-50 bp, generally). I noted on the documentation that a k-mer size of 31 while building the index is good for 75 bp and up, but shortening that length might be better for smaller reads. How short of an index should I use for TCGA, and how should I go about thinking about which number is optimal? I'm not sure what the tradeoffs are, and don't want to randomly pick a number smaller than 31 that may not be best. Thanks so much for any help or guidance you can provide! I've used STAR+RSEM, Kallisto, and have now settled on Salmon for my project, and I am really, really happy with its versatility, speed, and accuracy. Excellent work on this tool!. Kindest regards,; Ryan Englander. MD/PhD Candidate, GS3; Jackson Laboratory for Genomic Medicine",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/807
https://github.com/COMBINE-lab/salmon/issues/808:2036,Availability,error,errors,2036,"eduplicated_umis"": 402386555,; ""mean_umis_per_cell"": 2954,; ""mean_genes_per_cell"": 896; }; ```. \* total reads have been corrected by adding 2^32. From my understanding of the numbers, this suggests a PCR duplication rate of either 8.95X (comparing ""used reads"" with ""deduplicated umis"") or 6.16X (comparing ""reads in eqclasses"" with ""deduplicated umis""). I had a go at trying to ""manually"" count (via awk/grep/sort/uniq/etc.) the cell barcodes and UMIs associated with the MT-ND1 gene:. ND1-matching reads with good cell barcode QC (barcodes linkable to expected cell barcodes), and good mapping (>60bp matching): 5292134; Unique cell/UMI pairs (subset from the above data): 1590232; => PCR duplication rate ~= 3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (""identify potential PCR/sequencing errors in the UMIs, and performs hybrid de-duplication while accounting for UMI collisions""), so I'm at a loss as to why the difference is this large. I'm not too worried about numbers being different, but the UMI proportion is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808
https://github.com/COMBINE-lab/salmon/issues/808:2724,Availability,down,downloaded,2724,"3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (""identify potential PCR/sequencing errors in the UMIs, and performs hybrid de-duplication while accounting for UMI collisions""), so I'm at a loss as to why the difference is this large. I'm not too worried about numbers being different, but the UMI proportion is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808
https://github.com/COMBINE-lab/salmon/issues/808:2773,Availability,down,download,2773,"3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (""identify potential PCR/sequencing errors in the UMIs, and performs hybrid de-duplication while accounting for UMI collisions""), so I'm at a loss as to why the difference is this large. I'm not too worried about numbers being different, but the UMI proportion is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808
https://github.com/COMBINE-lab/salmon/issues/808:3778,Availability,avail,available,3778,"n is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linux`. ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bookworm/sid; Release: unstable; Codename: sid; ```. **Additional Information**; The SevenBridges Rhapsody pipeline uses STAR v2.5.2b for annotating R2 reads, which are combined with R1 reads using custom python scripts (possibly involving calling HTSeq and Picard), then collapsed down to molecules using custom python scripts (apparently ""apply rsec and dbec correction to the (sorted) valid annotation dataset"").",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808
https://github.com/COMBINE-lab/salmon/issues/808:4126,Availability,down,down,4126,"n is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linux`. ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bookworm/sid; Release: unstable; Codename: sid; ```. **Additional Information**; The SevenBridges Rhapsody pipeline uses STAR v2.5.2b for annotating R2 reads, which are combined with R1 reads using custom python scripts (possibly involving calling HTSeq and Picard), then collapsed down to molecules using custom python scripts (apparently ""apply rsec and dbec correction to the (sorted) valid annotation dataset"").",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808
https://github.com/COMBINE-lab/salmon/issues/808:2703,Deployability,install,installed,2703,"3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (""identify potential PCR/sequencing errors in the UMIs, and performs hybrid de-duplication while accounting for UMI collisions""), so I'm at a loss as to why the difference is this large. I'm not too worried about numbers being different, but the UMI proportion is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808
https://github.com/COMBINE-lab/salmon/issues/808:3858,Deployability,Release,Release,3858,"n is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linux`. ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bookworm/sid; Release: unstable; Codename: sid; ```. **Additional Information**; The SevenBridges Rhapsody pipeline uses STAR v2.5.2b for annotating R2 reads, which are combined with R1 reads using custom python scripts (possibly involving calling HTSeq and Picard), then collapsed down to molecules using custom python scripts (apparently ""apply rsec and dbec correction to the (sorted) valid annotation dataset"").",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808
https://github.com/COMBINE-lab/salmon/issues/808:3951,Deployability,pipeline,pipeline,3951,"n is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linux`. ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bookworm/sid; Release: unstable; Codename: sid; ```. **Additional Information**; The SevenBridges Rhapsody pipeline uses STAR v2.5.2b for annotating R2 reads, which are combined with R1 reads using custom python scripts (possibly involving calling HTSeq and Picard), then collapsed down to molecules using custom python scripts (apparently ""apply rsec and dbec correction to the (sorted) valid annotation dataset"").",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808
https://github.com/COMBINE-lab/salmon/issues/808:621,Integrability,depend,depending,621,"I've been previously processing my data using Salmon Alevin. We've just got our results back from a SevenBridges analysis of our single cell sequencing data, and there's a substantial difference in PCR duplicate rate between the two platforms. Here are the numbers for SevenBridges (three samples were analysed separately):. Sample,Aligned_Reads,Molecules,RSEC_Molecules,Raw_Depth,RSEC_Depth,Saturation; S1,1152169399,251097626,226949623,4.59,5.08,93.82; S2,1021623258,258701917,238156437,3.95,4.29,92.49; S3,1232889654,268962282,242417971,4.58,5.09,93.72. In other words, a PCR duplication rate of 4-5X (columns 4 & 5), depending on what statistic is chosen. For salmon alevin, here's our metadata* for the whole run:. ```; {; ""total_reads"": 4579183639,; ""reads_with_N"": 59361,; ""noisy_cb_reads"": 977033360,; ""noisy_umi_reads"": 152773,; ""used_reads"": 3601938145,; ""mapping_rate"": 54.155827599470509,; ""reads_in_eqclasses"": 2479894797,; ""total_cbs"": 37916487,; ""used_cbs"": 137766,; ""no_read_mapping_cbs"": 1,; ""final_num_cbs"": 136196,; ""deduplicated_umis"": 402386555,; ""mean_umis_per_cell"": 2954,; ""mean_genes_per_cell"": 896; }; ```. \* total reads have been corrected by adding 2^32. From my understanding of the numbers, this suggests a PCR duplication rate of either 8.95X (comparing ""used reads"" with ""deduplicated umis"") or 6.16X (comparing ""reads in eqclasses"" with ""deduplicated umis""). I had a go at trying to ""manually"" count (via awk/grep/sort/uniq/etc.) the cell barcodes and UMIs associated with the MT-ND1 gene:. ND1-matching reads with good cell barcode QC (barcodes linkable to expected cell barcodes), and good mapping (>60bp matching): 5292134; Unique cell/UMI pairs (subset from the above data): 1590232; => PCR duplication rate ~= 3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808
https://github.com/COMBINE-lab/salmon/issues/808:2060,Performance,perform,performs,2060,"eduplicated_umis"": 402386555,; ""mean_umis_per_cell"": 2954,; ""mean_genes_per_cell"": 896; }; ```. \* total reads have been corrected by adding 2^32. From my understanding of the numbers, this suggests a PCR duplication rate of either 8.95X (comparing ""used reads"" with ""deduplicated umis"") or 6.16X (comparing ""reads in eqclasses"" with ""deduplicated umis""). I had a go at trying to ""manually"" count (via awk/grep/sort/uniq/etc.) the cell barcodes and UMIs associated with the MT-ND1 gene:. ND1-matching reads with good cell barcode QC (barcodes linkable to expected cell barcodes), and good mapping (>60bp matching): 5292134; Unique cell/UMI pairs (subset from the above data): 1590232; => PCR duplication rate ~= 3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (""identify potential PCR/sequencing errors in the UMIs, and performs hybrid de-duplication while accounting for UMI collisions""), so I'm at a loss as to why the difference is this large. I'm not too worried about numbers being different, but the UMI proportion is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808
https://github.com/COMBINE-lab/salmon/pull/810:38,Availability,failure,failure,38,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810
https://github.com/COMBINE-lab/salmon/pull/810:77,Availability,error,error,77,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810
https://github.com/COMBINE-lab/salmon/pull/810:83,Integrability,message,messages,83,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810
https://github.com/COMBINE-lab/salmon/pull/810:191,Integrability,message,message,191,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810
https://github.com/COMBINE-lab/salmon/pull/810:136,Modifiability,variab,variable,136,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810
https://github.com/COMBINE-lab/salmon/pull/810:33,Testability,test,test,33,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810
https://github.com/COMBINE-lab/salmon/issues/812:151,Safety,detect,detect,151,"Dear all,. I would say that salmon is so fast to report the TPM and read counts for each transcript or gene, and I always use salmon+tximport+edgeR to detect the differentially expressed genes. Because the edgeR can output the normalized read counts and tximport can output TPM for each gene based on the results generated by salmon, I asked the difference between TPM and log2(CPM). From following correlation plot, I found that the samples are clustered by different quantifications, TPM and CPM, but not by samples. Because my RNA-seq experiment contains 7 biological replicates in each of two conditions, I decide to identify differentially expressed genes by using Wilcoxon rank-sum test based on each gene’s TPM or CPM. Also, I can also retain the overlapped differentially expressed genes between edgeR and Wilcoxon rank-sum test. I would like to hear your suggestion. ```; y <- DGEList(counts=data, group=group, genes=genelength) # the genelength is generated by salmon+tximport for each sample ; keep <- filterByExpr(y); y <- y[keep,,keep.lib.sizes=FALSE]; y <- calcNormFactors(y); logcpm <- cpm(y, log=TRUE, prior.count=1); ```; [tpm_cpm_corr-spearman.pdf](https://github.com/COMBINE-lab/salmon/files/10067714/tpm_cpm_corr-spearman.pdf). Thank you in advance. Best regards,; Zheng zhuqing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812
https://github.com/COMBINE-lab/salmon/issues/812:688,Testability,test,test,688,"Dear all,. I would say that salmon is so fast to report the TPM and read counts for each transcript or gene, and I always use salmon+tximport+edgeR to detect the differentially expressed genes. Because the edgeR can output the normalized read counts and tximport can output TPM for each gene based on the results generated by salmon, I asked the difference between TPM and log2(CPM). From following correlation plot, I found that the samples are clustered by different quantifications, TPM and CPM, but not by samples. Because my RNA-seq experiment contains 7 biological replicates in each of two conditions, I decide to identify differentially expressed genes by using Wilcoxon rank-sum test based on each gene’s TPM or CPM. Also, I can also retain the overlapped differentially expressed genes between edgeR and Wilcoxon rank-sum test. I would like to hear your suggestion. ```; y <- DGEList(counts=data, group=group, genes=genelength) # the genelength is generated by salmon+tximport for each sample ; keep <- filterByExpr(y); y <- y[keep,,keep.lib.sizes=FALSE]; y <- calcNormFactors(y); logcpm <- cpm(y, log=TRUE, prior.count=1); ```; [tpm_cpm_corr-spearman.pdf](https://github.com/COMBINE-lab/salmon/files/10067714/tpm_cpm_corr-spearman.pdf). Thank you in advance. Best regards,; Zheng zhuqing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812
https://github.com/COMBINE-lab/salmon/issues/812:832,Testability,test,test,832,"Dear all,. I would say that salmon is so fast to report the TPM and read counts for each transcript or gene, and I always use salmon+tximport+edgeR to detect the differentially expressed genes. Because the edgeR can output the normalized read counts and tximport can output TPM for each gene based on the results generated by salmon, I asked the difference between TPM and log2(CPM). From following correlation plot, I found that the samples are clustered by different quantifications, TPM and CPM, but not by samples. Because my RNA-seq experiment contains 7 biological replicates in each of two conditions, I decide to identify differentially expressed genes by using Wilcoxon rank-sum test based on each gene’s TPM or CPM. Also, I can also retain the overlapped differentially expressed genes between edgeR and Wilcoxon rank-sum test. I would like to hear your suggestion. ```; y <- DGEList(counts=data, group=group, genes=genelength) # the genelength is generated by salmon+tximport for each sample ; keep <- filterByExpr(y); y <- y[keep,,keep.lib.sizes=FALSE]; y <- calcNormFactors(y); logcpm <- cpm(y, log=TRUE, prior.count=1); ```; [tpm_cpm_corr-spearman.pdf](https://github.com/COMBINE-lab/salmon/files/10067714/tpm_cpm_corr-spearman.pdf). Thank you in advance. Best regards,; Zheng zhuqing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812
https://github.com/COMBINE-lab/salmon/issues/812:1091,Testability,log,logcpm,1091,"Dear all,. I would say that salmon is so fast to report the TPM and read counts for each transcript or gene, and I always use salmon+tximport+edgeR to detect the differentially expressed genes. Because the edgeR can output the normalized read counts and tximport can output TPM for each gene based on the results generated by salmon, I asked the difference between TPM and log2(CPM). From following correlation plot, I found that the samples are clustered by different quantifications, TPM and CPM, but not by samples. Because my RNA-seq experiment contains 7 biological replicates in each of two conditions, I decide to identify differentially expressed genes by using Wilcoxon rank-sum test based on each gene’s TPM or CPM. Also, I can also retain the overlapped differentially expressed genes between edgeR and Wilcoxon rank-sum test. I would like to hear your suggestion. ```; y <- DGEList(counts=data, group=group, genes=genelength) # the genelength is generated by salmon+tximport for each sample ; keep <- filterByExpr(y); y <- y[keep,,keep.lib.sizes=FALSE]; y <- calcNormFactors(y); logcpm <- cpm(y, log=TRUE, prior.count=1); ```; [tpm_cpm_corr-spearman.pdf](https://github.com/COMBINE-lab/salmon/files/10067714/tpm_cpm_corr-spearman.pdf). Thank you in advance. Best regards,; Zheng zhuqing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812
https://github.com/COMBINE-lab/salmon/issues/812:1108,Testability,log,log,1108,"Dear all,. I would say that salmon is so fast to report the TPM and read counts for each transcript or gene, and I always use salmon+tximport+edgeR to detect the differentially expressed genes. Because the edgeR can output the normalized read counts and tximport can output TPM for each gene based on the results generated by salmon, I asked the difference between TPM and log2(CPM). From following correlation plot, I found that the samples are clustered by different quantifications, TPM and CPM, but not by samples. Because my RNA-seq experiment contains 7 biological replicates in each of two conditions, I decide to identify differentially expressed genes by using Wilcoxon rank-sum test based on each gene’s TPM or CPM. Also, I can also retain the overlapped differentially expressed genes between edgeR and Wilcoxon rank-sum test. I would like to hear your suggestion. ```; y <- DGEList(counts=data, group=group, genes=genelength) # the genelength is generated by salmon+tximport for each sample ; keep <- filterByExpr(y); y <- y[keep,,keep.lib.sizes=FALSE]; y <- calcNormFactors(y); logcpm <- cpm(y, log=TRUE, prior.count=1); ```; [tpm_cpm_corr-spearman.pdf](https://github.com/COMBINE-lab/salmon/files/10067714/tpm_cpm_corr-spearman.pdf). Thank you in advance. Best regards,; Zheng zhuqing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812
https://github.com/COMBINE-lab/salmon/issues/813:585,Availability,error,error,585,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; A clear and concise description of what the bug is.; I am running the following command on some sci-rna-seq3 samples and it seems to not work as expected. ; `salmon alevin -i af_splici/dm6_splici_idx/ -l ISR -1 data/SRR17122012_1.fastq -2 data/SRR17122012_2.fastq -o SRR17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813
https://github.com/COMBINE-lab/salmon/issues/813:994,Availability,error,error,994,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; A clear and concise description of what the bug is.; I am running the following command on some sci-rna-seq3 samples and it seems to not work as expected. ; `salmon alevin -i af_splici/dm6_splici_idx/ -l ISR -1 data/SRR17122012_1.fastq -2 data/SRR17122012_2.fastq -o SRR17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813
https://github.com/COMBINE-lab/salmon/issues/813:1845,Availability,error,error,1845,"R17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of salmon was used? salmon (1.9.0); alevin-fry (0.8.0) ; * How was salmon installed (compiled, downloaded executable, through bioconda)? Conda install; * Which reference (e.g. transcriptome) was used? Drosophila melanogaster (BDGP6.32 (GCA_000001215.4)); ; **Desktop (please complete the following information):**; - OS: Ubuntu Linux. Thanks in advance for all your help regarding this!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813
https://github.com/COMBINE-lab/salmon/issues/813:2094,Availability,down,downloaded,2094,"R17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of salmon was used? salmon (1.9.0); alevin-fry (0.8.0) ; * How was salmon installed (compiled, downloaded executable, through bioconda)? Conda install; * Which reference (e.g. transcriptome) was used? Drosophila melanogaster (BDGP6.32 (GCA_000001215.4)); ; **Desktop (please complete the following information):**; - OS: Ubuntu Linux. Thanks in advance for all your help regarding this!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813
https://github.com/COMBINE-lab/salmon/issues/813:2073,Deployability,install,installed,2073,"R17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of salmon was used? salmon (1.9.0); alevin-fry (0.8.0) ; * How was salmon installed (compiled, downloaded executable, through bioconda)? Conda install; * Which reference (e.g. transcriptome) was used? Drosophila melanogaster (BDGP6.32 (GCA_000001215.4)); ; **Desktop (please complete the following information):**; - OS: Ubuntu Linux. Thanks in advance for all your help regarding this!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813
https://github.com/COMBINE-lab/salmon/issues/813:2142,Deployability,install,install,2142,"R17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of salmon was used? salmon (1.9.0); alevin-fry (0.8.0) ; * How was salmon installed (compiled, downloaded executable, through bioconda)? Conda install; * Which reference (e.g. transcriptome) was used? Drosophila melanogaster (BDGP6.32 (GCA_000001215.4)); ; **Desktop (please complete the following information):**; - OS: Ubuntu Linux. Thanks in advance for all your help regarding this!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813
https://github.com/COMBINE-lab/salmon/issues/813:871,Modifiability,variab,variable,871,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; A clear and concise description of what the bug is.; I am running the following command on some sci-rna-seq3 samples and it seems to not work as expected. ; `salmon alevin -i af_splici/dm6_splici_idx/ -l ISR -1 data/SRR17122012_1.fastq -2 data/SRR17122012_2.fastq -o SRR17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813
https://github.com/COMBINE-lab/salmon/issues/813:688,Testability,assert,assertion,688,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; A clear and concise description of what the bug is.; I am running the following command on some sci-rna-seq3 samples and it seems to not work as expected. ; `salmon alevin -i af_splici/dm6_splici_idx/ -l ISR -1 data/SRR17122012_1.fastq -2 data/SRR17122012_2.fastq -o SRR17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813
https://github.com/COMBINE-lab/salmon/issues/813:118,Usability,clear,clear,118,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; A clear and concise description of what the bug is.; I am running the following command on some sci-rna-seq3 samples and it seems to not work as expected. ; `salmon alevin -i af_splici/dm6_splici_idx/ -l ISR -1 data/SRR17122012_1.fastq -2 data/SRR17122012_2.fastq -o SRR17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813
https://github.com/COMBINE-lab/salmon/issues/814:117,Availability,error,error,117,"Dear community,. I have 4 lane files for each sample. I want to run Alevin on these samples. Alevin runs without any error, but the mapping rate is too low (about 5%). I tried different k-mers, different versions of transcriptome datasets, and all protocols (--dropseq / --chromium / --chromiumV3), but my mapping rate is still too low. Let me explain my workflow. These are my samples:. ```; Sample1_S1_L001_I1_001.fastq.gz Sample1_S1_L002_R1_001.fastq.gz Sample1_S1_L003_R2_001.fastq.gz; Sample1_S1_L001_R1_001.fastq.gz Sample1_S1_L002_R2_001.fastq.gz Sample1_S1_L004_I1_001.fastq.gz; Sample1_S1_L001_R2_001.fastq.gz Sample1_S1_L003_I1_001.fastq.gz Sample1_S1_L004_R1_001.fastq.gz; Sample1_S1_L002_I1_001.fastq.gz Sample1_S1_L003_R1_001.fastq.gz Sample1_S1_L004_R2_001.fastq.gz; ```. I generated single I1, R1 and R2 files by concatenating fastq.gz files across lanes; for instance, Sample1_S1_L001_R1_001.fastq.gz + Sample1_S1_L002_R1_001.fastq.gz + Sample1_S1_L003_R1_001.fastq.gz + Sample1_S1_L004_R1_001.fastq.gz -> Single_S1_L001_R1_001.fastq.gz . I indexed my transcriptome by salmon, and I used Alevin using the indexed transcriptome. I used the following command:. ```; salmon alevin -l ISR \; -1 ""Single_S1_L001_R1_001.fastq.gz"" \; -2 ""Single_S1_L001_R2_001.fastq.gz"" \; --chromiumV3 \; -i $my_index \; -p 48 \; -o outputfolder \; --tgMap $my_tgmap \; --expectCells 10000 \; --forceCells 10000; ```. However, my mapping rate is only ~5%. I used cell ranger on the same data and the same transcriptome; the mapping rate is ~95%.; Is there any bug on Alevin? How can I improve the mapping rate?. Thank you!. ```; Alevin log:; [2022-12-03 15:43:12.004] [alevinLog] [info] Found 117342 transcripts(+0 decoys, +35 short and +0 duplicate names in the index); [2022-12-03 15:43:12.072] [alevinLog] [info] Filled with 117377 txp to gene entries; [2022-12-03 15:43:12.083] [alevinLog] [info] Found all transcripts to gene mappings; [2022-12-03 15:43:12.097] [alevinLog] [info] Processing barcodes fi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:248,Integrability,protocol,protocols,248,"Dear community,. I have 4 lane files for each sample. I want to run Alevin on these samples. Alevin runs without any error, but the mapping rate is too low (about 5%). I tried different k-mers, different versions of transcriptome datasets, and all protocols (--dropseq / --chromium / --chromiumV3), but my mapping rate is still too low. Let me explain my workflow. These are my samples:. ```; Sample1_S1_L001_I1_001.fastq.gz Sample1_S1_L002_R1_001.fastq.gz Sample1_S1_L003_R2_001.fastq.gz; Sample1_S1_L001_R1_001.fastq.gz Sample1_S1_L002_R2_001.fastq.gz Sample1_S1_L004_I1_001.fastq.gz; Sample1_S1_L001_R2_001.fastq.gz Sample1_S1_L003_I1_001.fastq.gz Sample1_S1_L004_R1_001.fastq.gz; Sample1_S1_L002_I1_001.fastq.gz Sample1_S1_L003_R1_001.fastq.gz Sample1_S1_L004_R2_001.fastq.gz; ```. I generated single I1, R1 and R2 files by concatenating fastq.gz files across lanes; for instance, Sample1_S1_L001_R1_001.fastq.gz + Sample1_S1_L002_R1_001.fastq.gz + Sample1_S1_L003_R1_001.fastq.gz + Sample1_S1_L004_R1_001.fastq.gz -> Single_S1_L001_R1_001.fastq.gz . I indexed my transcriptome by salmon, and I used Alevin using the indexed transcriptome. I used the following command:. ```; salmon alevin -l ISR \; -1 ""Single_S1_L001_R1_001.fastq.gz"" \; -2 ""Single_S1_L001_R2_001.fastq.gz"" \; --chromiumV3 \; -i $my_index \; -p 48 \; -o outputfolder \; --tgMap $my_tgmap \; --expectCells 10000 \; --forceCells 10000; ```. However, my mapping rate is only ~5%. I used cell ranger on the same data and the same transcriptome; the mapping rate is ~95%.; Is there any bug on Alevin? How can I improve the mapping rate?. Thank you!. ```; Alevin log:; [2022-12-03 15:43:12.004] [alevinLog] [info] Found 117342 transcripts(+0 decoys, +35 short and +0 duplicate names in the index); [2022-12-03 15:43:12.072] [alevinLog] [info] Filled with 117377 txp to gene entries; [2022-12-03 15:43:12.083] [alevinLog] [info] Found all transcripts to gene mappings; [2022-12-03 15:43:12.097] [alevinLog] [info] Processing barcodes fi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:3120,Performance,optimiz,optimizer,3120,03 15:58:16.214] [alevinLog] [info] # Barcodes Used: [32m639154757[0m / [31m639154757[0m.; [2022-12-03 15:58:20.629] [alevinLog] [info] Total [32m5461[0m(has [32m1000[0m low confidence) barcodes; [2022-12-03 15:58:21.139] [alevinLog] [info] Done True Barcode Sampling; [2022-12-03 15:58:23.597] [alevinLog] [warning] Total 56.2839% reads will be thrown away because of noisy Cellular barcodes.; [2022-12-03 15:58:23.987] [alevinLog] [info] Done populating Z matrix; [2022-12-03 15:58:24.080] [alevinLog] [info] Total 188093 CB got sequence corrected; [2022-12-03 15:58:24.122] [alevinLog] [info] Done indexing Barcodes; [2022-12-03 15:58:24.122] [alevinLog] [info] Total Unique barcodes found: 16409283; [2022-12-03 15:58:24.122] [alevinLog] [info] Used Barcodes except Whitelist: 187465; [2022-12-03 15:58:24.389] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2022-12-03 15:58:24.389] [alevinLog] [info] parsing read library format; [2022-12-03 16:17:47.714] [alevinLog] [info] Starting optimizer. [2022-12-03 16:17:47.868] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:17:47.868] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLo,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:4045,Performance,optimiz,optimizer,4045,"fo] parsing read library format; [2022-12-03 16:17:47.714] [alevinLog] [info] Starting optimizer. [2022-12-03 16:17:47.868] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:17:47.868] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:5202,Performance,Load,Loading,5202,"eads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-12-03 15:58:24.389] [jointLog] [info] There is 1 library.; [2022-12-03 15:58:24.435] [jointLog] [info] Loading pufferfish index; [2022-12-03 15:58:24.454] [jointLog] [info] Loading dense pufferfish index.; [2022-12-03 15:58:26.905] [jointLog] [info] done; [2022-12-03 15:58:26.973] [jointLog] [info] Index contained 117,377 targets; [2022-12-03 15:58:27.002] [jointLog] [info] Number of decoys : 0; [2022-12-03 16:17:44.963] [jointLog] [info] Computed 194,611 rich equivalence classes for further processing; [2022-12-03 16:17:44.963] [jointLog] [info] Counted 35,761,228 total reads in the equivalence classes; [2022-12-03 16:17:44.964] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-12-03 16:17:44.964] [jointLog] [warning] Found 9264 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2022-12-03 16:17:44.964] [jointLog] [info] Mapping rate = 5.59508%. [2022-12-03 16:17:44.964] [jointLog] [info] finished quantifyLibrary(). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:5272,Performance,Load,Loading,5272,"eads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-12-03 15:58:24.389] [jointLog] [info] There is 1 library.; [2022-12-03 15:58:24.435] [jointLog] [info] Loading pufferfish index; [2022-12-03 15:58:24.454] [jointLog] [info] Loading dense pufferfish index.; [2022-12-03 15:58:26.905] [jointLog] [info] done; [2022-12-03 15:58:26.973] [jointLog] [info] Index contained 117,377 targets; [2022-12-03 15:58:27.002] [jointLog] [info] Number of decoys : 0; [2022-12-03 16:17:44.963] [jointLog] [info] Computed 194,611 rich equivalence classes for further processing; [2022-12-03 16:17:44.963] [jointLog] [info] Counted 35,761,228 total reads in the equivalence classes; [2022-12-03 16:17:44.964] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-12-03 16:17:44.964] [jointLog] [warning] Found 9264 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2022-12-03 16:17:44.964] [jointLog] [info] Mapping rate = 5.59508%. [2022-12-03 16:17:44.964] [jointLog] [info] finished quantifyLibrary(). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:4404,Security,validat,validation,4404,":18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-12-03 15:58:24.389] [jointLog] [info] There is 1 library.; [2022-12-03 15:58:24.435] [jointLog] [info] Loading pufferfish index; [2022-12-03 15:58:24.454] [jointLog] [info] Loading dense pufferfish index.; [2022-12-03 15:58:26.905] [jointLog] [info] done; [2022-12-03 15:58:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:4418,Security,validat,validateMappings,4418,":18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-12-03 15:58:24.389] [jointLog] [info] There is 1 library.; [2022-12-03 15:58:24.435] [jointLog] [info] Loading pufferfish index; [2022-12-03 15:58:24.454] [jointLog] [info] Loading dense pufferfish index.; [2022-12-03 15:58:26.905] [jointLog] [info] done; [2022-12-03 15:58:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:4454,Security,validat,validation,4454,"022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-12-03 15:58:24.389] [jointLog] [info] There is 1 library.; [2022-12-03 15:58:24.435] [jointLog] [info] Loading pufferfish index; [2022-12-03 15:58:24.454] [jointLog] [info] Loading dense pufferfish index.; [2022-12-03 15:58:26.905] [jointLog] [info] done; [2022-12-03 15:58:26.973] [jointLog] [info] Index contained 117,377 targets; [2022-12-03 15:58:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:4522,Security,validat,validateMappings,4522,"22-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-12-03 15:58:24.389] [jointLog] [info] There is 1 library.; [2022-12-03 15:58:24.435] [jointLog] [info] Loading pufferfish index; [2022-12-03 15:58:24.454] [jointLog] [info] Loading dense pufferfish index.; [2022-12-03 15:58:26.905] [jointLog] [info] done; [2022-12-03 15:58:26.973] [jointLog] [info] Index contained 117,377 targets; [2022-12-03 15:58:27.002] [jointLog] [info] Number of decoys : 0; [2022-12-03 16:17:44.963] [joint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:1629,Testability,log,log,1629,"1_001.fastq.gz Sample1_S1_L004_R1_001.fastq.gz; Sample1_S1_L002_I1_001.fastq.gz Sample1_S1_L003_R1_001.fastq.gz Sample1_S1_L004_R2_001.fastq.gz; ```. I generated single I1, R1 and R2 files by concatenating fastq.gz files across lanes; for instance, Sample1_S1_L001_R1_001.fastq.gz + Sample1_S1_L002_R1_001.fastq.gz + Sample1_S1_L003_R1_001.fastq.gz + Sample1_S1_L004_R1_001.fastq.gz -> Single_S1_L001_R1_001.fastq.gz . I indexed my transcriptome by salmon, and I used Alevin using the indexed transcriptome. I used the following command:. ```; salmon alevin -l ISR \; -1 ""Single_S1_L001_R1_001.fastq.gz"" \; -2 ""Single_S1_L001_R2_001.fastq.gz"" \; --chromiumV3 \; -i $my_index \; -p 48 \; -o outputfolder \; --tgMap $my_tgmap \; --expectCells 10000 \; --forceCells 10000; ```. However, my mapping rate is only ~5%. I used cell ranger on the same data and the same transcriptome; the mapping rate is ~95%.; Is there any bug on Alevin? How can I improve the mapping rate?. Thank you!. ```; Alevin log:; [2022-12-03 15:43:12.004] [alevinLog] [info] Found 117342 transcripts(+0 decoys, +35 short and +0 duplicate names in the index); [2022-12-03 15:43:12.072] [alevinLog] [info] Filled with 117377 txp to gene entries; [2022-12-03 15:43:12.083] [alevinLog] [info] Found all transcripts to gene mappings; [2022-12-03 15:43:12.097] [alevinLog] [info] Processing barcodes files (if Present). [2022-12-03 15:58:16.214] [alevinLog] [info] Done barcode density calculation.; [2022-12-03 15:58:16.214] [alevinLog] [info] # Barcodes Used: [32m639154757[0m / [31m639154757[0m.; [2022-12-03 15:58:20.629] [alevinLog] [info] Total [32m5461[0m(has [32m1000[0m low confidence) barcodes; [2022-12-03 15:58:21.139] [alevinLog] [info] Done True Barcode Sampling; [2022-12-03 15:58:23.597] [alevinLog] [warning] Total 56.2839% reads will be thrown away because of noisy Cellular barcodes.; [2022-12-03 15:58:23.987] [alevinLog] [info] Done populating Z matrix; [2022-12-03 15:58:24.080] [alevinLog] [info] Total 188093 CB g",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:4069,Testability,log,log,4069,"03 16:17:47.714] [alevinLog] [info] Starting optimizer. [2022-12-03 16:17:47.868] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:17:47.868] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensus",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/issues/814:3649,Usability,Clear,Clearing,3649,"ed; [2022-12-03 15:58:24.122] [alevinLog] [info] Done indexing Barcodes; [2022-12-03 15:58:24.122] [alevinLog] [info] Total Unique barcodes found: 16409283; [2022-12-03 15:58:24.122] [alevinLog] [info] Used Barcodes except Whitelist: 187465; [2022-12-03 15:58:24.389] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2022-12-03 15:58:24.389] [alevinLog] [info] parsing read library format; [2022-12-03 16:17:47.714] [alevinLog] [info] Starting optimizer. [2022-12-03 16:17:47.868] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:17:47.868] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814
https://github.com/COMBINE-lab/salmon/pull/815:363,Availability,error,errors,363,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:1043,Availability,error,errors,1043,"ot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:1555,Availability,error,errors,1555,"improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-act",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3109,Availability,error,errors,3109,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3447,Availability,error,error,3447,"ompute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3682,Availability,error,errors,3682,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:136,Deployability,integrat,integrated,136,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:409,Deployability,integrat,integrated,409,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:1212,Deployability,configurat,configuration,1212,"ot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:2284,Deployability,update,updated,2284,"environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3192,Deployability,upgrade,upgrade,3192,"ime — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3279,Deployability,deploy,deployed,3279,"ime — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3369,Deployability,release,released,3369,"or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3989,Deployability,integrat,integration,3989,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:4365,Deployability,integrat,integrated,4365,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:2725,Energy Efficiency,power,powers,2725," ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:2783,Energy Efficiency,power,powers,2783," ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:136,Integrability,integrat,integrated,136,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:409,Integrability,integrat,integrated,409,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3989,Integrability,integrat,integration,3989,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:4365,Integrability,integrat,integrated,4365,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:1212,Modifiability,config,configuration,1212,"ot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:1562,Modifiability,config,configuring-code-scanning,1562,"improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-act",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:1659,Modifiability,config,configure,1659,"improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-act",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3116,Modifiability,config,configuring-code-scanning,3116,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:283,Security,secur,security,283,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:963,Security,secur,security,963,"ot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:1475,Security,secur,security,1475,"improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-act",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:1997,Security,secur,security,1997,"](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:2184,Security,Secur,Security,2184,"r repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:2292,Security,secur,security,2292,"environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:2962,Security,secur,security-and-quality,2962," — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-revie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3029,Security,secur,security,3029,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:3602,Security,secur,security,3602,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/pull/815:2559,Usability,learn,learn-github-actions,2559,"ode-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/co",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815
https://github.com/COMBINE-lab/salmon/issues/816:658,Modifiability,variab,variable,658,"From the `alevin-fry` repo (by @fransua). ```; Hi,; I cannot find clear help on read_geometry. There are a couple of examples but they do not seem to work for me and I am struggling to change them.; Specifically I have several questions:. what does the ""read_geometry"" refers to? I saw that it is usually set to ""2[1-end]"", but why only read 2, and when does the whole read is not a read?. what is the pattern of inclusion exclusion? 1-10 starts at the first nucleotide but includes the ninth or the tenth too?. How does alevin-fry deals with unexact position, for instance in my case the cell tag can start anywhere between position 85 and 115 because of a variable polyA before. thanks. ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/816
https://github.com/COMBINE-lab/salmon/issues/816:66,Usability,clear,clear,66,"From the `alevin-fry` repo (by @fransua). ```; Hi,; I cannot find clear help on read_geometry. There are a couple of examples but they do not seem to work for me and I am struggling to change them.; Specifically I have several questions:. what does the ""read_geometry"" refers to? I saw that it is usually set to ""2[1-end]"", but why only read 2, and when does the whole read is not a read?. what is the pattern of inclusion exclusion? 1-10 starts at the first nucleotide but includes the ninth or the tenth too?. How does alevin-fry deals with unexact position, for instance in my case the cell tag can start anywhere between position 85 and 115 because of a variable polyA before. thanks. ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/816
https://github.com/COMBINE-lab/salmon/pull/817:102,Availability,error,error,102,Subtract 2 to counter artificial increase in barcode length. Read1 length of 33 or 34 would result in error while being valid lengths.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/817
https://github.com/COMBINE-lab/salmon/issues/818:288,Usability,guid,guidance,288,"To whom it may concern,. I am running Salmon with ""--numBootstraps 100"", but I am unsure where the bootstrapped estimates are doing. Are they incorporated directly into the *.quant.sf file, or is the only output from bootstrapping sent to the ""bootstraps.gz"" file? Thanks so much for any guidance you can provide!. Kindest regards,; Ryan Englander",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/818
https://github.com/COMBINE-lab/salmon/issues/819:331,Deployability,pipeline,pipeline,331,"To whom it may concern,. I have been using Salmon to quantify RNA-seq data using a new long-read RNA sequencing-based GTF I have developed. When I run Salmon on RNA-seq samples from TCGA (read length = 50 bp, kmer length = 21), I tend to get ~95% of reads mapping to my transcriptome. However, when I use the same script to run my pipeline on in-house sequenced data (read length = 150 bp, kmer length = 21), I am getting only around 80-85% of reads mapping to my transcriptome. According to STAR, >90% (usually >95%) of these same in-house samples mapped to the genome. Why am I getting lower mapping rates? Could read length have something to do with it? Thanks so much for any advice or guidance you can provide. Script: ; [5_runSalmon.sh.zip](https://github.com/COMBINE-lab/salmon/files/10262688/5_runSalmon.sh.zip); (The only difference between my TCGA and in-house runs are that for TCGA I use ""-i IU"" and for my in-house samples I use ""-i ISR"" due to differences in the strandedness of the prep protocols). Yours most sincerely,; Ryan Englander",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/819
https://github.com/COMBINE-lab/salmon/issues/819:1002,Integrability,protocol,protocols,1002,"To whom it may concern,. I have been using Salmon to quantify RNA-seq data using a new long-read RNA sequencing-based GTF I have developed. When I run Salmon on RNA-seq samples from TCGA (read length = 50 bp, kmer length = 21), I tend to get ~95% of reads mapping to my transcriptome. However, when I use the same script to run my pipeline on in-house sequenced data (read length = 150 bp, kmer length = 21), I am getting only around 80-85% of reads mapping to my transcriptome. According to STAR, >90% (usually >95%) of these same in-house samples mapped to the genome. Why am I getting lower mapping rates? Could read length have something to do with it? Thanks so much for any advice or guidance you can provide. Script: ; [5_runSalmon.sh.zip](https://github.com/COMBINE-lab/salmon/files/10262688/5_runSalmon.sh.zip); (The only difference between my TCGA and in-house runs are that for TCGA I use ""-i IU"" and for my in-house samples I use ""-i ISR"" due to differences in the strandedness of the prep protocols). Yours most sincerely,; Ryan Englander",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/819
https://github.com/COMBINE-lab/salmon/issues/819:690,Usability,guid,guidance,690,"To whom it may concern,. I have been using Salmon to quantify RNA-seq data using a new long-read RNA sequencing-based GTF I have developed. When I run Salmon on RNA-seq samples from TCGA (read length = 50 bp, kmer length = 21), I tend to get ~95% of reads mapping to my transcriptome. However, when I use the same script to run my pipeline on in-house sequenced data (read length = 150 bp, kmer length = 21), I am getting only around 80-85% of reads mapping to my transcriptome. According to STAR, >90% (usually >95%) of these same in-house samples mapped to the genome. Why am I getting lower mapping rates? Could read length have something to do with it? Thanks so much for any advice or guidance you can provide. Script: ; [5_runSalmon.sh.zip](https://github.com/COMBINE-lab/salmon/files/10262688/5_runSalmon.sh.zip); (The only difference between my TCGA and in-house runs are that for TCGA I use ""-i IU"" and for my in-house samples I use ""-i ISR"" due to differences in the strandedness of the prep protocols). Yours most sincerely,; Ryan Englander",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/819
https://github.com/COMBINE-lab/salmon/issues/825:895,Availability,down,download,895,"I see existing open issues with no workaround listed. Filing new one in the hopes of at getting a workaround. I have 48 files in all and could quantify one by one but not sure how to collate the results from all of them. Help is much appreciated. I am very happy to help reproduce the problem and gather whatever information is needed to fix this problem. Bulk mode was used with aligned files. I do plan to try this with fastq files (instead of already aligned files). Core is dumped if I use more than one file. Here is how I used it. I tried this while letting it pick the number of thread automatically (no change) and specifying the number of threads as 8 (went a little farther with that). 1.; v 1.9.0. 2.; Salmon was installed using the command conda install -c bioconda salmon; Arabidopsis Thaliana reference genome was used - TAIR10_chr_all.fas - from here: https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files. 3.; Alignment was done using STAR. 4.; See command below for options used. 5.; Linux login01 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. 6. Output, for success case, one file only. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam -o salmonquant; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be igno",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:4116,Availability,failure,failure,4116," ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48 files:. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a $file_list -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { apex_infe_t1_rep1_S29_R1_001Aligned.out.bam apex_infe_t1_rep3_S53_R1_001Aligned.out.bam apex_infe_t2_rep1_S30_R1_001Aligned.out.bam apex_infe_t2_rep3_S54_R1_001Aligned.out.bam apex_infe_t3_rep1_S31_R1_001Aligned.out.bam apex_infe_t3_rep3_S55_R1_001Aligned.out.bam apex_infe_t4_rep1_S32_R1_001Aligned.out.bam apex_infe_t4_rep3_S56_R1_001Aligned.out.bam apex_infe_t5_rep1_S33_R1_001Aligned.out.bam apex_infe_t5_rep3_S57_R1_001Aligned.out.bam apex_infe_t6_rep1_S34_R1_001Aligned.out.bam apex_infe_t6_rep3_S58_R1_001Aligned.out.bam apex_mock_t1_rep1_S23_R1_001Align",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:7932,Availability,fault,fault,7932,"rior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:7969,Availability,failure,failure,7969,"d.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:10044,Availability,fault,fault,10044,"s/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhausted. 1759 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 25000000 reads in current roundSegmentation fault (core dumped). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:724,Deployability,install,installed,724,"I see existing open issues with no workaround listed. Filing new one in the hopes of at getting a workaround. I have 48 files in all and could quantify one by one but not sure how to collate the results from all of them. Help is much appreciated. I am very happy to help reproduce the problem and gather whatever information is needed to fix this problem. Bulk mode was used with aligned files. I do plan to try this with fastq files (instead of already aligned files). Core is dumped if I use more than one file. Here is how I used it. I tried this while letting it pick the number of thread automatically (no change) and specifying the number of threads as 8 (went a little farther with that). 1.; v 1.9.0. 2.; Salmon was installed using the command conda install -c bioconda salmon; Arabidopsis Thaliana reference genome was used - TAIR10_chr_all.fas - from here: https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files. 3.; Alignment was done using STAR. 4.; See command below for options used. 5.; Linux login01 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. 6. Output, for success case, one file only. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam -o salmonquant; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be igno",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:758,Deployability,install,install,758,"I see existing open issues with no workaround listed. Filing new one in the hopes of at getting a workaround. I have 48 files in all and could quantify one by one but not sure how to collate the results from all of them. Help is much appreciated. I am very happy to help reproduce the problem and gather whatever information is needed to fix this problem. Bulk mode was used with aligned files. I do plan to try this with fastq files (instead of already aligned files). Core is dumped if I use more than one file. Here is how I used it. I tried this while letting it pick the number of thread automatically (no change) and specifying the number of threads as 8 (went a little farther with that). 1.; v 1.9.0. 2.; Salmon was installed using the command conda install -c bioconda salmon; Arabidopsis Thaliana reference genome was used - TAIR10_chr_all.fas - from here: https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files. 3.; Alignment was done using STAR. 4.; See command below for options used. 5.; Linux login01 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. 6. Output, for success case, one file only. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam -o salmonquant; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be igno",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:2825,Energy Efficiency,allocate,allocated,2825,"info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:2894,Energy Efficiency,allocate,allocated,2894,"16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:7798,Energy Efficiency,allocate,allocated,7798,"info] setting maxHashResizeThreads to 8; [2023-01-29 16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:7867,Energy Efficiency,allocate,allocated,7867,"16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../Sa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
https://github.com/COMBINE-lab/salmon/issues/825:9910,Energy Efficiency,allocate,allocated,9910,"s/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhausted. 1759 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 25000000 reads in current roundSegmentation fault (core dumped). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825
