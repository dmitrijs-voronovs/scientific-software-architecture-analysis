id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://www.sofa-framework.org/index-wcopy.html:253134,Security,access,access-object-data-on-the-fly-,253134,"SOLVED] 3D Model of human anatomy. /3d-printing-simulation-using-sofa; ; SOFA - Topic: 3D printing simulation using SOFA. /abdominal-organs-in-sofa; ; SOFA - Topic: Abdominal Organs in SOFA. /about-explanation-of-components; ; SOFA - Topic: [SOLVED] about explanation of components. /about-stick-and-stickcontactconstraint; ; SOFA - Topic: about stick and stickcontactconstraint. /about-the-suturing-simulation; ; SOFA - Topic: [SOLVED] About the suture simulation. /about-the-unit; ; SOFA - Topic: [SOLVED] About the unit. /access-constraint-forces-from-a-different-class; ; SOFA - Topic: [SOLVED] Access constraint forces from a different class. /accessing-and-mofiying-array-values-with-context-managers-in-sofapython3; ; SOFA - Topic: Accessing and mofiying array values with Context Managers in SofaPython3. /accessing-deformations-force-states-etc-using-python; ; SOFA - Topic: [SOLVED] Accessing deformations, force states, etc using Python. /access-object-data-on-the-fly-sofapython3; ; SOFA - Topic: Access object data on the fly, sofaPython3. /access-stress-in-triangularfemforcefield; ; SOFA - Topic: Access stress in TriangularFEMForceField. /activating-twoway-option-in-attachconstraint-component-or-not; ; SOFA - Topic: Activating twoWay option in attachConstraint component or not. /actuating-multiple-components-with-cableconstraint; ; SOFA - Topic: Actuating multiple components with CableConstraint. /add_executable-cannot-create-target-another-target-with-the-same-namea-exist; ; SOFA - Topic: add_executable cannot create target, another target with the same namea exist. /add-curve-paramater-to-an-instrument; ; SOFA - Topic: [SOLVED] Add curve paramater to an instrument. /adding-captions-and-instructions-in-sofa-animation-exercises; . /feed; ; [SOLVED] Adding captions and instructions in sofa animation exercises – SOFA. SOFA - Topic: [SOLVED] Adding captions and instructions in sofa animation exercises. /adding-constraint-in-python-controller; ; SOFA - Topic: Adding Const",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:253238,Security,access,access-stress-in-triangularfemforcefield,253238,"ulation using SOFA. /abdominal-organs-in-sofa; ; SOFA - Topic: Abdominal Organs in SOFA. /about-explanation-of-components; ; SOFA - Topic: [SOLVED] about explanation of components. /about-stick-and-stickcontactconstraint; ; SOFA - Topic: about stick and stickcontactconstraint. /about-the-suturing-simulation; ; SOFA - Topic: [SOLVED] About the suture simulation. /about-the-unit; ; SOFA - Topic: [SOLVED] About the unit. /access-constraint-forces-from-a-different-class; ; SOFA - Topic: [SOLVED] Access constraint forces from a different class. /accessing-and-mofiying-array-values-with-context-managers-in-sofapython3; ; SOFA - Topic: Accessing and mofiying array values with Context Managers in SofaPython3. /accessing-deformations-force-states-etc-using-python; ; SOFA - Topic: [SOLVED] Accessing deformations, force states, etc using Python. /access-object-data-on-the-fly-sofapython3; ; SOFA - Topic: Access object data on the fly, sofaPython3. /access-stress-in-triangularfemforcefield; ; SOFA - Topic: Access stress in TriangularFEMForceField. /activating-twoway-option-in-attachconstraint-component-or-not; ; SOFA - Topic: Activating twoWay option in attachConstraint component or not. /actuating-multiple-components-with-cableconstraint; ; SOFA - Topic: Actuating multiple components with CableConstraint. /add_executable-cannot-create-target-another-target-with-the-same-namea-exist; ; SOFA - Topic: add_executable cannot create target, another target with the same namea exist. /add-curve-paramater-to-an-instrument; ; SOFA - Topic: [SOLVED] Add curve paramater to an instrument. /adding-captions-and-instructions-in-sofa-animation-exercises; . /feed; ; [SOLVED] Adding captions and instructions in sofa animation exercises – SOFA. SOFA - Topic: [SOLVED] Adding captions and instructions in sofa animation exercises. /adding-constraint-in-python-controller; ; SOFA - Topic: Adding Constraint in Python Controller. /adding-contact-surface-meshes-to-mapped-system; ; SOFA - Topic: Adding Con",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:255261,Security,access,access-failure,255261,"ct surface meshes to mapped system. /adding-forces-to-mechanical-objects; . /feed; ; [SOLVED] Adding Forces to Mechanical Objects – SOFA. SOFA - Topic: [SOLVED] Adding Forces to Mechanical Objects. /adding-initial-velocity-to-fixedconstraint; ; SOFA - Topic: Adding initial velocity to FixedConstraint. /adding-new-template-for-mechanicalobject; ; SOFA - Topic: Adding new template for MechanicalObject. /adding-nodes-at-runtime-with-sofapython3-and-changing-colors-of-mesh; ; SOFA - Topic: [SOLVED] Adding Nodes at Runtime with SofaPython3 and changing Colors of Mesh. /adding-sofagui-namespace; ; SOFA - Topic: Adding sofa/gui namespace. /adding-sofa-module-to-spyder; ; SOFA - Topic: [SOLVED] Adding SOFA module to Spyder. /adding-sofo-to-module; ; SOFA - Topic: Adding Sofo to module. /a-few-doubts-related-to-robotics-application-of-sofa; ; SOFA - Topic: A few doubts related to Robotics application of SOFA. /after-sofa-debug-mode-build-load-beamadapter-file-vector-access-failure; ; SOFA - Topic: [SOLVED] after sofa debug mode build, load BeamAdapter file, vector access failure. /aligning-camera-and-virtual-tool; . /feed; ; [SOLVED] Aligning camera and virtual tool – SOFA. SOFA - Topic: [SOLVED] Aligning camera and virtual tool. /alternative-for-articulatedhierarchycontroller; ; SOFA - Topic: Alternative for ArticulatedHierarchyController. /alternative-for-tetrahedronsettopologyalgorithms; ; SOFA - Topic: Alternative for TetrahedronSetTopologyAlgorithms?. /angularspring-problems; ; SOFA - Topic: [SOLVED] AngularSpring Problems. /animating-the-movement-of-scissors-with-omni; ; SOFA - Topic: [SOLVED] animating the movement of scissors with omni. /animation-issue-error-in-phase-3-of-mor-plugin-please-help; . /embed; ; SOFA - Topic: [SOLVED] Animation issue Error in phase 3 of MOR plugin. Please Help!. SOFA - Topic: [SOLVED] Animation issue Error in phase 3 of MOR plugin. Please Help!. /animationloop-visitors-and-tags; ; SOFA - Topic: [SOLVED] AnimationLoop, Visitors and Tags. ",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:255361,Security,access,access,255361,"ct surface meshes to mapped system. /adding-forces-to-mechanical-objects; . /feed; ; [SOLVED] Adding Forces to Mechanical Objects – SOFA. SOFA - Topic: [SOLVED] Adding Forces to Mechanical Objects. /adding-initial-velocity-to-fixedconstraint; ; SOFA - Topic: Adding initial velocity to FixedConstraint. /adding-new-template-for-mechanicalobject; ; SOFA - Topic: Adding new template for MechanicalObject. /adding-nodes-at-runtime-with-sofapython3-and-changing-colors-of-mesh; ; SOFA - Topic: [SOLVED] Adding Nodes at Runtime with SofaPython3 and changing Colors of Mesh. /adding-sofagui-namespace; ; SOFA - Topic: Adding sofa/gui namespace. /adding-sofa-module-to-spyder; ; SOFA - Topic: [SOLVED] Adding SOFA module to Spyder. /adding-sofo-to-module; ; SOFA - Topic: Adding Sofo to module. /a-few-doubts-related-to-robotics-application-of-sofa; ; SOFA - Topic: A few doubts related to Robotics application of SOFA. /after-sofa-debug-mode-build-load-beamadapter-file-vector-access-failure; ; SOFA - Topic: [SOLVED] after sofa debug mode build, load BeamAdapter file, vector access failure. /aligning-camera-and-virtual-tool; . /feed; ; [SOLVED] Aligning camera and virtual tool – SOFA. SOFA - Topic: [SOLVED] Aligning camera and virtual tool. /alternative-for-articulatedhierarchycontroller; ; SOFA - Topic: Alternative for ArticulatedHierarchyController. /alternative-for-tetrahedronsettopologyalgorithms; ; SOFA - Topic: Alternative for TetrahedronSetTopologyAlgorithms?. /angularspring-problems; ; SOFA - Topic: [SOLVED] AngularSpring Problems. /animating-the-movement-of-scissors-with-omni; ; SOFA - Topic: [SOLVED] animating the movement of scissors with omni. /animation-issue-error-in-phase-3-of-mor-plugin-please-help; . /embed; ; SOFA - Topic: [SOLVED] Animation issue Error in phase 3 of MOR plugin. Please Help!. SOFA - Topic: [SOLVED] Animation issue Error in phase 3 of MOR plugin. Please Help!. /animationloop-visitors-and-tags; ; SOFA - Topic: [SOLVED] AnimationLoop, Visitors and Tags. ",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:268445,Security,access,access-private-member-while-building-sofacore,268445,"and Qt 4.8.5 (64-bit). /3; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /build-with-qt-on-macos; . /page; . /2; ; SOFA - Topic: [SOLVED] build with Qt on MacOs. /7; ; SOFA - Topic: [SOLVED] build with Qt on MacOs. SOFA - Topic: [SOLVED] build with Qt on MacOs. /c11-flag-added-to-c-files-compilation; . /feed; ; [SOLVED] c++11 flag added to c files compilation – SOFA. SOFA - Topic: [SOLVED] c++11 flag added to c files compilation. /cable-driven-actuation; ; SOFA - Topic: [SOLVED] Cable-Driven Actuation. /call-for-papers-hmsim-healthcare-and-medical-simulation-barcelona; ; SOFA - Topic: Call for papers – HMSIM: Healthcare and Medical Simulation Barcelona. /calling-header-files-between-sofa-plugins; ; SOFA - Topic: [SOLVED] Calling header files between sofa plugins. /camera-position; ; SOFA - Topic: [SOLVED] Camera position. /cannot-access-private-member-while-building-sofacore; ; SOFA - Topic: [SOLVED] Cannot access private member while building SofaCore. /cannot-animate-geomagic; ; SOFA - Topic: Cannot animate Geomagic. /can-not-build-sofacuda-on-win10-vs2013-cuda8-0; . /feed; ; Can not Build SofaCUDA on win10 VS2013 cuda8.0 – SOFA. SOFA - Topic: Can not Build SofaCUDA on win10 VS2013 cuda8.0. /cannot-build-sofa-sln-with-visual-studio-2019; ; SOFA - Topic: [SOLVED] Cannot build sofa.sln with visual studio 2019. /cannot-compile-sofahapi-plugin; ; SOFA - Topic: [SOLVED] Cannot compile SofaHapi Plugin. /can-not-create-new-from-runsofa-window-filenew; ; SOFA - Topic: [SOLVED] Can not create ""New"" from RunSofa Window> File>New. /cannot-import-sofa-gui-in-python; ; SOFA - Topic: [SOLVED] Cannot import Sofa.Gui in python. /cannot-open-many-files; ; SOFA - Topic: cannot open many files. /can-not-open-the-editor-sofa-binaries-v19-04-on-win-10; ; SOFA - Topic: Can not open the editor Sofa BINARIES (v19.04) on win 10. /can-not-open-the-tutorials; . /feed; ; [SOLVED] Can not open ",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:268524,Security,access,access,268524,"and Qt 4.8.5 (64-bit). /3; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /build-with-qt-on-macos; . /page; . /2; ; SOFA - Topic: [SOLVED] build with Qt on MacOs. /7; ; SOFA - Topic: [SOLVED] build with Qt on MacOs. SOFA - Topic: [SOLVED] build with Qt on MacOs. /c11-flag-added-to-c-files-compilation; . /feed; ; [SOLVED] c++11 flag added to c files compilation – SOFA. SOFA - Topic: [SOLVED] c++11 flag added to c files compilation. /cable-driven-actuation; ; SOFA - Topic: [SOLVED] Cable-Driven Actuation. /call-for-papers-hmsim-healthcare-and-medical-simulation-barcelona; ; SOFA - Topic: Call for papers – HMSIM: Healthcare and Medical Simulation Barcelona. /calling-header-files-between-sofa-plugins; ; SOFA - Topic: [SOLVED] Calling header files between sofa plugins. /camera-position; ; SOFA - Topic: [SOLVED] Camera position. /cannot-access-private-member-while-building-sofacore; ; SOFA - Topic: [SOLVED] Cannot access private member while building SofaCore. /cannot-animate-geomagic; ; SOFA - Topic: Cannot animate Geomagic. /can-not-build-sofacuda-on-win10-vs2013-cuda8-0; . /feed; ; Can not Build SofaCUDA on win10 VS2013 cuda8.0 – SOFA. SOFA - Topic: Can not Build SofaCUDA on win10 VS2013 cuda8.0. /cannot-build-sofa-sln-with-visual-studio-2019; ; SOFA - Topic: [SOLVED] Cannot build sofa.sln with visual studio 2019. /cannot-compile-sofahapi-plugin; ; SOFA - Topic: [SOLVED] Cannot compile SofaHapi Plugin. /can-not-create-new-from-runsofa-window-filenew; ; SOFA - Topic: [SOLVED] Can not create ""New"" from RunSofa Window> File>New. /cannot-import-sofa-gui-in-python; ; SOFA - Topic: [SOLVED] Cannot import Sofa.Gui in python. /cannot-open-many-files; ; SOFA - Topic: cannot open many files. /can-not-open-the-editor-sofa-binaries-v19-04-on-win-10; ; SOFA - Topic: Can not open the editor Sofa BINARIES (v19.04) on win 10. /can-not-open-the-tutorials; . /feed; ; [SOLVED] Can not open ",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:322794,Security,access,access-to-the-indices-in-a-map,322794,tion?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to extract the surface of a volumeyric mesh. /how-to-figure-out-the-available-options-of-xml-tags; ; SOFA - Topic: [SOLVED] How to figure out the available options of xml tags?. /how-to-fix-the-orientation-of-the-instrument-dof-in-geomagic-plugin; ; SOFA - Topic: [SOLVED] How to fix the orientation of the instrument dof？. /how-to-generate-msh-file; ; SOFA - Topic: [SOLVED] How to generate .msh file?. /how-to-generate-one-specific-deformation-in-two-different-mesh-resolutions; ; SOFA - Topic: [SOLVED] How to generate one specific deformation in two different mesh resolutions?. /how-to-genuinely-increase-the-friction-in-a-frictioncontact-scene; ; SOFA - Topic: How to genuinely increase the friction in a frictionContact scene?. /how-to-get-access-to-the-indices-in-a-map; ; SOFA - Topic: [SOLVED] How to get access to the indices in a Map?. /how-to-get-indices-in-fixedconstraint; ; SOFA - Topic: [SOLVED] How to get indices in FixedConstraint. /how-to-get-strain-output-in-sofa; ; SOFA - Topic: How to get Strain output in SOFA. /how-to-get-stress-strain-on-surface; ; SOFA - Topic: How to get Stress strain on surface. /how-to-get-the-3d-position-of-mouse-interaction-in-sofapython; ; SOFA - Topic: How to get the 3d position of mouse interaction in SofaPython. /how-to-get-the-forcefeedback; ; SOFA - Topic: [SOLVED] How to get the ForceFeedback?. /how-to-give-multi-physical-properties-to-one-tetrahedron-object; ; SOFA - Topic: [SOLVED] How to give multi-physical properties to one tetrahedron object. /how-to-give-offset-distance-of-collision-in-geomagic-haptic-simulation; ; SOFA - Topic: [SOLVED] How to give offset distance of collision in geomagic haptic simulation. /how-to-implement-mechanical-resistance-in-a-simple-model; ; SOFA - Topic: [SOLVED] How to implement mechan,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:322862,Security,access,access,322862,tion?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to extract the surface of a volumeyric mesh. /how-to-figure-out-the-available-options-of-xml-tags; ; SOFA - Topic: [SOLVED] How to figure out the available options of xml tags?. /how-to-fix-the-orientation-of-the-instrument-dof-in-geomagic-plugin; ; SOFA - Topic: [SOLVED] How to fix the orientation of the instrument dof？. /how-to-generate-msh-file; ; SOFA - Topic: [SOLVED] How to generate .msh file?. /how-to-generate-one-specific-deformation-in-two-different-mesh-resolutions; ; SOFA - Topic: [SOLVED] How to generate one specific deformation in two different mesh resolutions?. /how-to-genuinely-increase-the-friction-in-a-frictioncontact-scene; ; SOFA - Topic: How to genuinely increase the friction in a frictionContact scene?. /how-to-get-access-to-the-indices-in-a-map; ; SOFA - Topic: [SOLVED] How to get access to the indices in a Map?. /how-to-get-indices-in-fixedconstraint; ; SOFA - Topic: [SOLVED] How to get indices in FixedConstraint. /how-to-get-strain-output-in-sofa; ; SOFA - Topic: How to get Strain output in SOFA. /how-to-get-stress-strain-on-surface; ; SOFA - Topic: How to get Stress strain on surface. /how-to-get-the-3d-position-of-mouse-interaction-in-sofapython; ; SOFA - Topic: How to get the 3d position of mouse interaction in SofaPython. /how-to-get-the-forcefeedback; ; SOFA - Topic: [SOLVED] How to get the ForceFeedback?. /how-to-give-multi-physical-properties-to-one-tetrahedron-object; ; SOFA - Topic: [SOLVED] How to give multi-physical properties to one tetrahedron object. /how-to-give-offset-distance-of-collision-in-geomagic-haptic-simulation; ; SOFA - Topic: [SOLVED] How to give offset distance of collision in geomagic haptic simulation. /how-to-implement-mechanical-resistance-in-a-simple-model; ; SOFA - Topic: [SOLVED] How to implement mechan,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:354205,Security,access,access-protected-member,354205," Tissue. /needle-insertion-simulation; ; SOFA - Topic: Needle Insertion Simulation. /needle-insertion-simulation-problem; ; SOFA - Topic: Needle insertion simulation problem. /need-very-old-version-of-sofa-to-use-flexible-plugin; ; SOFA - Topic: [SOLVED] Need (very) old version of SOFA to use ""Flexible"" plugin. /new-api-documentation; ; SOFA - Topic: New API documentation. /new-approaches-to-catheter-navigation-for-interventional-radiology-simulation; ; SOFA - Topic: New approaches to catheter navigation for interventional radiology simulation. /new-build-system; . /page; . /4; ; SOFA - Topic: New build system. SOFA - Topic: New build system. /new-forum-format; . /feed; ; New forum format! – SOFA. SOFA - Topic: New forum format!. /new-mouse-interaction; . /feed; ; [SOLVED] New Mouse Interaction – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] New Mouse Interaction. /4; ; SOFA - Topic: [SOLVED] New Mouse Interaction. SOFA - Topic: [SOLVED] New Mouse Interaction. /newomnidriver-gnode-cannot-access-protected-member; . /embed; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /page; . /3; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /4; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /new-online-support-sessions; ; SOFA - Topic: New: online support sessions!. /new-release-v16-08; . /feed; ; New Release v16.08! – SOFA. SOFA - Topic: New Release v16.08!. /new-release-v16-12; ; SOFA - Topic: New Release v16.12!. /new-release-v17-12; ; SOFA - Topic: New Release v17.12!. /new-release-v18-06; ; SOFA - Topic: New release v18.06!. /new-sofa-technical-member-amc; ; SOFA - Topic: New SOFA technical member: AMC!. /new-to-sofa-here-are-my-thoughts; ; SOFA - Topic: New to sofa. Here are my thoughts. /new-training-session-scheduled; ; SOFA - Topic: New training session scheduled!. /new-tutorials-for-sofa; ; SOFA - Topic: N",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:354293,Security,access,access,354293," Simulation. /needle-insertion-simulation-problem; ; SOFA - Topic: Needle insertion simulation problem. /need-very-old-version-of-sofa-to-use-flexible-plugin; ; SOFA - Topic: [SOLVED] Need (very) old version of SOFA to use ""Flexible"" plugin. /new-api-documentation; ; SOFA - Topic: New API documentation. /new-approaches-to-catheter-navigation-for-interventional-radiology-simulation; ; SOFA - Topic: New approaches to catheter navigation for interventional radiology simulation. /new-build-system; . /page; . /4; ; SOFA - Topic: New build system. SOFA - Topic: New build system. /new-forum-format; . /feed; ; New forum format! – SOFA. SOFA - Topic: New forum format!. /new-mouse-interaction; . /feed; ; [SOLVED] New Mouse Interaction – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] New Mouse Interaction. /4; ; SOFA - Topic: [SOLVED] New Mouse Interaction. SOFA - Topic: [SOLVED] New Mouse Interaction. /newomnidriver-gnode-cannot-access-protected-member; . /embed; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /page; . /3; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /4; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /new-online-support-sessions; ; SOFA - Topic: New: online support sessions!. /new-release-v16-08; . /feed; ; New Release v16.08! – SOFA. SOFA - Topic: New Release v16.08!. /new-release-v16-12; ; SOFA - Topic: New Release v16.12!. /new-release-v17-12; ; SOFA - Topic: New Release v17.12!. /new-release-v18-06; ; SOFA - Topic: New release v18.06!. /new-sofa-technical-member-amc; ; SOFA - Topic: New SOFA technical member: AMC!. /new-to-sofa-here-are-my-thoughts; ; SOFA - Topic: New to sofa. Here are my thoughts. /new-training-session-scheduled; ; SOFA - Topic: New training session scheduled!. /new-tutorials-for-sofa; ; SOFA - Topic: New tutorials for SOFA. /new-version-of-blender-sofa; . /page; . /4; ; ",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:354384,Security,access,access,354384,"n problem. /need-very-old-version-of-sofa-to-use-flexible-plugin; ; SOFA - Topic: [SOLVED] Need (very) old version of SOFA to use ""Flexible"" plugin. /new-api-documentation; ; SOFA - Topic: New API documentation. /new-approaches-to-catheter-navigation-for-interventional-radiology-simulation; ; SOFA - Topic: New approaches to catheter navigation for interventional radiology simulation. /new-build-system; . /page; . /4; ; SOFA - Topic: New build system. SOFA - Topic: New build system. /new-forum-format; . /feed; ; New forum format! – SOFA. SOFA - Topic: New forum format!. /new-mouse-interaction; . /feed; ; [SOLVED] New Mouse Interaction – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] New Mouse Interaction. /4; ; SOFA - Topic: [SOLVED] New Mouse Interaction. SOFA - Topic: [SOLVED] New Mouse Interaction. /newomnidriver-gnode-cannot-access-protected-member; . /embed; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /page; . /3; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /4; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /new-online-support-sessions; ; SOFA - Topic: New: online support sessions!. /new-release-v16-08; . /feed; ; New Release v16.08! – SOFA. SOFA - Topic: New Release v16.08!. /new-release-v16-12; ; SOFA - Topic: New Release v16.12!. /new-release-v17-12; ; SOFA - Topic: New Release v17.12!. /new-release-v18-06; ; SOFA - Topic: New release v18.06!. /new-sofa-technical-member-amc; ; SOFA - Topic: New SOFA technical member: AMC!. /new-to-sofa-here-are-my-thoughts; ; SOFA - Topic: New to sofa. Here are my thoughts. /new-training-session-scheduled; ; SOFA - Topic: New training session scheduled!. /new-tutorials-for-sofa; ; SOFA - Topic: New tutorials for SOFA. /new-version-of-blender-sofa; . /page; . /4; ; SOFA - Topic: New version of Blender SOFA. SOFA - Topic: New version of Blender SOFA. /new-vi",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:354466,Security,access,access,354466,"[SOLVED] Need (very) old version of SOFA to use ""Flexible"" plugin. /new-api-documentation; ; SOFA - Topic: New API documentation. /new-approaches-to-catheter-navigation-for-interventional-radiology-simulation; ; SOFA - Topic: New approaches to catheter navigation for interventional radiology simulation. /new-build-system; . /page; . /4; ; SOFA - Topic: New build system. SOFA - Topic: New build system. /new-forum-format; . /feed; ; New forum format! – SOFA. SOFA - Topic: New forum format!. /new-mouse-interaction; . /feed; ; [SOLVED] New Mouse Interaction – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] New Mouse Interaction. /4; ; SOFA - Topic: [SOLVED] New Mouse Interaction. SOFA - Topic: [SOLVED] New Mouse Interaction. /newomnidriver-gnode-cannot-access-protected-member; . /embed; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /page; . /3; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /4; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /new-online-support-sessions; ; SOFA - Topic: New: online support sessions!. /new-release-v16-08; . /feed; ; New Release v16.08! – SOFA. SOFA - Topic: New Release v16.08!. /new-release-v16-12; ; SOFA - Topic: New Release v16.12!. /new-release-v17-12; ; SOFA - Topic: New Release v17.12!. /new-release-v18-06; ; SOFA - Topic: New release v18.06!. /new-sofa-technical-member-amc; ; SOFA - Topic: New SOFA technical member: AMC!. /new-to-sofa-here-are-my-thoughts; ; SOFA - Topic: New to sofa. Here are my thoughts. /new-training-session-scheduled; ; SOFA - Topic: New training session scheduled!. /new-tutorials-for-sofa; ; SOFA - Topic: New tutorials for SOFA. /new-version-of-blender-sofa; . /page; . /4; ; SOFA - Topic: New version of Blender SOFA. SOFA - Topic: New version of Blender SOFA. /new-video-tutorial-howto-configure-and-install-on-linux; ; SOFA - Topic: New video tutor",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:354542,Security,access,access,354542,umentation; ; SOFA - Topic: New API documentation. /new-approaches-to-catheter-navigation-for-interventional-radiology-simulation; ; SOFA - Topic: New approaches to catheter navigation for interventional radiology simulation. /new-build-system; . /page; . /4; ; SOFA - Topic: New build system. SOFA - Topic: New build system. /new-forum-format; . /feed; ; New forum format! – SOFA. SOFA - Topic: New forum format!. /new-mouse-interaction; . /feed; ; [SOLVED] New Mouse Interaction – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] New Mouse Interaction. /4; ; SOFA - Topic: [SOLVED] New Mouse Interaction. SOFA - Topic: [SOLVED] New Mouse Interaction. /newomnidriver-gnode-cannot-access-protected-member; . /embed; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /page; . /3; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /4; ; SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. SOFA - Topic: [SOLVED] NewOmniDriver: GNode cannot access protected member. /new-online-support-sessions; ; SOFA - Topic: New: online support sessions!. /new-release-v16-08; . /feed; ; New Release v16.08! – SOFA. SOFA - Topic: New Release v16.08!. /new-release-v16-12; ; SOFA - Topic: New Release v16.12!. /new-release-v17-12; ; SOFA - Topic: New Release v17.12!. /new-release-v18-06; ; SOFA - Topic: New release v18.06!. /new-sofa-technical-member-amc; ; SOFA - Topic: New SOFA technical member: AMC!. /new-to-sofa-here-are-my-thoughts; ; SOFA - Topic: New to sofa. Here are my thoughts. /new-training-session-scheduled; ; SOFA - Topic: New training session scheduled!. /new-tutorials-for-sofa; ; SOFA - Topic: New tutorials for SOFA. /new-version-of-blender-sofa; . /page; . /4; ; SOFA - Topic: New version of Blender SOFA. SOFA - Topic: New version of Blender SOFA. /new-video-tutorial-howto-configure-and-install-on-linux; ; SOFA - Topic: New video tutorial: HowTo configure and install on Linux. /new-website; . /page; . /10; ; SOFA,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:371367,Security,access,accessible-in-sofa,371367,: [SOLVED] Proper way of removing points in a Topological Mapping. /putting-an-object-inside-another-one; ; SOFA - Topic: [SOLVED] Putting an object inside another one. /putting-histogram-on-view; . /page; . /3; ; SOFA - Topic: [SOLVED] putting histogram on view. /5; ; SOFA - Topic: [SOLVED] putting histogram on view. SOFA - Topic: [SOLVED] putting histogram on view. /pyscn-files-not-opening-despite-having-python-3-8; ; SOFA - Topic: PYSCN files not opening despite having python 3.8. /pyscn-file-softrobotics-plugin; ; SOFA - Topic: [SOLVED] .pyscn file (SoftRobotics Plugin). /python3-windows-build-controller-results-in-segfault; ; SOFA - Topic: Python3 Windows build – Controller results in segfault. /pythonlibs-not-found; ; SOFA - Topic: PythonLibs not found. /python-runtime-fatal-error-with-gil; ; SOFA - Topic: Python runtime fatal error with GIL. /python-scene-errors; . /embed; ; SOFA - Topic: Python scene errors. SOFA - Topic: Python scene errors. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa; . /feed; ; [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa – SOFA. SOFA - Topic: [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa-2; ; SOFA - Topic: QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qt5quick-directory-is-not-found-how-to-fix-this-error; . /feed; ; [SOLVED] Qt5Quick directory is not found. how to fix this error – SOFA. SOFA - Topic: [SOLVED] Qt5Quick directory is not found. how to fix this error. /qtableview-graph-linked-with-sofa-scene-file; ; SOFA - Topic: QTableView graph linked with SOFA scene file. /qtableview-saving-data-into-sqlite; ; SOFA - Topic: QTableView saving data into sqlite. /qt-version-issues-on-windows; . /page; . /13; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. /4; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. SOFA - Topic: [SOLVED] Qt version issues on,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:371456,Security,access,accessible,371456,ct-inside-another-one; ; SOFA - Topic: [SOLVED] Putting an object inside another one. /putting-histogram-on-view; . /page; . /3; ; SOFA - Topic: [SOLVED] putting histogram on view. /5; ; SOFA - Topic: [SOLVED] putting histogram on view. SOFA - Topic: [SOLVED] putting histogram on view. /pyscn-files-not-opening-despite-having-python-3-8; ; SOFA - Topic: PYSCN files not opening despite having python 3.8. /pyscn-file-softrobotics-plugin; ; SOFA - Topic: [SOLVED] .pyscn file (SoftRobotics Plugin). /python3-windows-build-controller-results-in-segfault; ; SOFA - Topic: Python3 Windows build – Controller results in segfault. /pythonlibs-not-found; ; SOFA - Topic: PythonLibs not found. /python-runtime-fatal-error-with-gil; ; SOFA - Topic: Python runtime fatal error with GIL. /python-scene-errors; . /embed; ; SOFA - Topic: Python scene errors. SOFA - Topic: Python scene errors. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa; . /feed; ; [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa – SOFA. SOFA - Topic: [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa-2; ; SOFA - Topic: QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qt5quick-directory-is-not-found-how-to-fix-this-error; . /feed; ; [SOLVED] Qt5Quick directory is not found. how to fix this error – SOFA. SOFA - Topic: [SOLVED] Qt5Quick directory is not found. how to fix this error. /qtableview-graph-linked-with-sofa-scene-file; ; SOFA - Topic: QTableView graph linked with SOFA scene file. /qtableview-saving-data-into-sqlite; ; SOFA - Topic: QTableView saving data into sqlite. /qt-version-issues-on-windows; . /page; . /13; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. /4; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. SOFA - Topic: [SOLVED] Qt version issues on Windows. /quarter-window-display-on-macos; ; SOFA - Topic: Quarter-window display ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:371555,Security,access,accessible,371555,g-histogram-on-view; . /page; . /3; ; SOFA - Topic: [SOLVED] putting histogram on view. /5; ; SOFA - Topic: [SOLVED] putting histogram on view. SOFA - Topic: [SOLVED] putting histogram on view. /pyscn-files-not-opening-despite-having-python-3-8; ; SOFA - Topic: PYSCN files not opening despite having python 3.8. /pyscn-file-softrobotics-plugin; ; SOFA - Topic: [SOLVED] .pyscn file (SoftRobotics Plugin). /python3-windows-build-controller-results-in-segfault; ; SOFA - Topic: Python3 Windows build – Controller results in segfault. /pythonlibs-not-found; ; SOFA - Topic: PythonLibs not found. /python-runtime-fatal-error-with-gil; ; SOFA - Topic: Python runtime fatal error with GIL. /python-scene-errors; . /embed; ; SOFA - Topic: Python scene errors. SOFA - Topic: Python scene errors. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa; . /feed; ; [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa – SOFA. SOFA - Topic: [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa-2; ; SOFA - Topic: QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qt5quick-directory-is-not-found-how-to-fix-this-error; . /feed; ; [SOLVED] Qt5Quick directory is not found. how to fix this error – SOFA. SOFA - Topic: [SOLVED] Qt5Quick directory is not found. how to fix this error. /qtableview-graph-linked-with-sofa-scene-file; ; SOFA - Topic: QTableView graph linked with SOFA scene file. /qtableview-saving-data-into-sqlite; ; SOFA - Topic: QTableView saving data into sqlite. /qt-version-issues-on-windows; . /page; . /13; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. /4; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. SOFA - Topic: [SOLVED] Qt version issues on Windows. /quarter-window-display-on-macos; ; SOFA - Topic: Quarter-window display on macOS. /quasi-static-simulation-without-dynamics; ; SOFA - Topic: [SOLVED] Quasi-static si,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:371625,Security,access,accessible-in-sofa-,371625," histogram on view. SOFA - Topic: [SOLVED] putting histogram on view. /pyscn-files-not-opening-despite-having-python-3-8; ; SOFA - Topic: PYSCN files not opening despite having python 3.8. /pyscn-file-softrobotics-plugin; ; SOFA - Topic: [SOLVED] .pyscn file (SoftRobotics Plugin). /python3-windows-build-controller-results-in-segfault; ; SOFA - Topic: Python3 Windows build – Controller results in segfault. /pythonlibs-not-found; ; SOFA - Topic: PythonLibs not found. /python-runtime-fatal-error-with-gil; ; SOFA - Topic: Python runtime fatal error with GIL. /python-scene-errors; . /embed; ; SOFA - Topic: Python scene errors. SOFA - Topic: Python scene errors. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa; . /feed; ; [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa – SOFA. SOFA - Topic: [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa-2; ; SOFA - Topic: QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qt5quick-directory-is-not-found-how-to-fix-this-error; . /feed; ; [SOLVED] Qt5Quick directory is not found. how to fix this error – SOFA. SOFA - Topic: [SOLVED] Qt5Quick directory is not found. how to fix this error. /qtableview-graph-linked-with-sofa-scene-file; ; SOFA - Topic: QTableView graph linked with SOFA scene file. /qtableview-saving-data-into-sqlite; ; SOFA - Topic: QTableView saving data into sqlite. /qt-version-issues-on-windows; . /page; . /13; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. /4; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. SOFA - Topic: [SOLVED] Qt version issues on Windows. /quarter-window-display-on-macos; ; SOFA - Topic: Quarter-window display on macOS. /quasi-static-simulation-without-dynamics; ; SOFA - Topic: [SOLVED] Quasi-static simulation, without dynamics. /queries-about-tetrahedralization-with-the-cgal-plugin; . /feed; ; [SOLVED] Queries about tetrahe",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:371712,Security,access,accessible,371712," histogram on view. SOFA - Topic: [SOLVED] putting histogram on view. /pyscn-files-not-opening-despite-having-python-3-8; ; SOFA - Topic: PYSCN files not opening despite having python 3.8. /pyscn-file-softrobotics-plugin; ; SOFA - Topic: [SOLVED] .pyscn file (SoftRobotics Plugin). /python3-windows-build-controller-results-in-segfault; ; SOFA - Topic: Python3 Windows build – Controller results in segfault. /pythonlibs-not-found; ; SOFA - Topic: PythonLibs not found. /python-runtime-fatal-error-with-gil; ; SOFA - Topic: Python runtime fatal error with GIL. /python-scene-errors; . /embed; ; SOFA - Topic: Python scene errors. SOFA - Topic: Python scene errors. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa; . /feed; ; [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa – SOFA. SOFA - Topic: [SOLVED] QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qsqltable-and-qsqldatabase-created-in-qt-are-not-accessible-in-sofa-2; ; SOFA - Topic: QSqlTable and QSqlDatabase created in QT are not accessible in sofa. /qt5quick-directory-is-not-found-how-to-fix-this-error; . /feed; ; [SOLVED] Qt5Quick directory is not found. how to fix this error – SOFA. SOFA - Topic: [SOLVED] Qt5Quick directory is not found. how to fix this error. /qtableview-graph-linked-with-sofa-scene-file; ; SOFA - Topic: QTableView graph linked with SOFA scene file. /qtableview-saving-data-into-sqlite; ; SOFA - Topic: QTableView saving data into sqlite. /qt-version-issues-on-windows; . /page; . /13; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. /4; ; SOFA - Topic: [SOLVED] Qt version issues on Windows. SOFA - Topic: [SOLVED] Qt version issues on Windows. /quarter-window-display-on-macos; ; SOFA - Topic: Quarter-window display on macOS. /quasi-static-simulation-without-dynamics; ; SOFA - Topic: [SOLVED] Quasi-static simulation, without dynamics. /queries-about-tetrahedralization-with-the-cgal-plugin; . /feed; ; [SOLVED] Queries about tetrahe",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:415574,Security,validat,validation-of-sofa,415574, SOFA in the context of reinforcement leaening. /using-sofa-to-build-pneumatic-actuated-robot-arm; ; SOFA - Topic: [SOLVED] Using SOFA to build pneumatic actuated robot arm. /using-sofa-to-simulate-viscoelastic-behaviour; ; SOFA - Topic: Using SOFA to simulate Viscoelastic Behaviour. /using-soft-robot-camera; ; SOFA - Topic: [SOLVED] Using Soft robot camera. /using-softrobots-sofapython3; . /embed; ; SOFA - Topic: [SOLVED] Using SoftRobots + SofaPython3. SOFA - Topic: [SOLVED] Using SoftRobots + SofaPython3. /using-two-topologies-in-a-scene; . /feed; ; [SOLVED] Using two topologies in a scene – SOFA. SOFA - Topic: [SOLVED] Using two topologies in a scene. /v16-12-building-errors-using-vs2015; ; SOFA - Topic: [SOLVED] v16.12 building Errors using VS2015. /v16-12-compilation-errors-on-win10-vs2013; ; SOFA - Topic: [SOLVED] v16.12 compilation errors on win10 VS2013. /v17-06-building-errors-in-win10-vs2015; ; SOFA - Topic: v17.06 building errors in win10 VS2015. /validation-of-sofa; ; SOFA - Topic: Validation of SOFA. /value-assignment-of-mechanicalstate-in-xml-fiels; ; SOFA - Topic: [SOLVED] value assignment of mechanicalState in xml fiels. /vec3d-forcefield-for-suface-mesh-model-with-skeleton-instead-of-rigid3d-beamfemf; ; SOFA - Topic: Vec3d forcefield for suface mesh model with skeleton instead of Rigid3d BeamFEMF. /vectordata-merge-function-question; ; SOFA - Topic: [SOLVED] VectorData merge function question. /vectorspringforcefield-not-working-with-articulatedsystemmapping; ; SOFA - Topic: VectorSpringForceField not working with ArticulatedSystemMapping. /vectorspringforcfield-is-not-stiff-enough; ; SOFA - Topic: [SOLVED] VectorSpringForcField is not stiff enough. /vertexmass-cannot-be-read-using-softpython; ; SOFA - Topic: vertexMass cannot be read using SoftPython. /vertices-from-obj-are-moved; ; SOFA - Topic: [SOLVED] Vertices from .obj are moved. /very-basic-doubts; ; SOFA - Topic: [SOLVED] very basic doubts. /video-recording-issue-wrong-path; ; SOFA - Topic: ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:489903,Security,validat,validation,489903,g. /unity3d-digital-trainers-blender-sofa; . /feed; ; Unity3d Digital-Trainers Blender-SOFA – SOFA. SOFA - Topic Tag: Unity3d Digital-Trainers Blender-SOFA. /unreal; . /feed; ; Unreal – SOFA. SOFA - Topic Tag: Unreal. /unreal-engine; . /feed; ; Unreal Engine – SOFA. SOFA - Topic Tag: Unreal Engine. /urdf; . /feed; ; urdf – SOFA. SOFA - Topic Tag: urdf. /using-sofa; . /feed; ; using sofa – SOFA. SOFA - Topic Tag: using sofa. /using-sofapython3; . /feed; ; using sofapython3 – SOFA. SOFA - Topic Tag: using sofapython3. /v16-08; . /feed; ; v16.08 – SOFA. SOFA - Topic Tag: v16.08. /v18-06; . /feed; ; v18.06 – SOFA. SOFA - Topic Tag: v18.06. /v19-06; . /feed; ; v19.06 – SOFA. SOFA - Topic Tag: v19.06. /v19-12-plugin-linking; . /feed; ; v19.12 plugin linking – SOFA. SOFA - Topic Tag: v19.12 plugin linking. /v20; . /feed; ; v20 – SOFA. SOFA - Topic Tag: v20. /v20-12; . /feed; ; v20.12 – SOFA. SOFA - Topic Tag: v20.12. /v20-12-02; . /feed; ; v20.12.02 – SOFA. SOFA - Topic Tag: v20.12.02. /validation; . /feed; ; validation – SOFA. SOFA - Topic Tag: validation. /vasculature; . /feed; ; vasculature – SOFA. SOFA - Topic Tag: vasculature. /vecid; . /feed; ; vecId – SOFA. SOFA - Topic Tag: vecId. /vectordata-data-merge-copy; . /feed; ; vectorData Data merge copy – SOFA. SOFA - Topic Tag: vectorData Data merge copy. /vectorspringforcefield; . /feed; ; VectorSpringForceField – SOFA. SOFA - Topic Tag: VectorSpringForceField. /verification; . /feed; ; verification – SOFA. SOFA - Topic Tag: verification. /vertex; . /feed; ; vertex – SOFA. SOFA - Topic Tag: vertex. /vessel; . /feed; ; vessel – SOFA. SOFA - Topic Tag: vessel. /vessels; . /feed; ; vessels – SOFA. SOFA - Topic Tag: vessels. /video; . /feed; ; video – SOFA. SOFA - Topic Tag: video. /view; . /feed; ; view – SOFA. SOFA - Topic Tag: view. /viewall; . /feed; ; viewall – SOFA. SOFA - Topic Tag: viewall. /viewport; . /feed; ; viewport – SOFA. SOFA - Topic Tag: viewport. /view-rotation; . /feed; ; View Rotation – SOFA. SOFA - Topic,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:489926,Security,validat,validation,489926,ainers-blender-sofa; . /feed; ; Unity3d Digital-Trainers Blender-SOFA – SOFA. SOFA - Topic Tag: Unity3d Digital-Trainers Blender-SOFA. /unreal; . /feed; ; Unreal – SOFA. SOFA - Topic Tag: Unreal. /unreal-engine; . /feed; ; Unreal Engine – SOFA. SOFA - Topic Tag: Unreal Engine. /urdf; . /feed; ; urdf – SOFA. SOFA - Topic Tag: urdf. /using-sofa; . /feed; ; using sofa – SOFA. SOFA - Topic Tag: using sofa. /using-sofapython3; . /feed; ; using sofapython3 – SOFA. SOFA - Topic Tag: using sofapython3. /v16-08; . /feed; ; v16.08 – SOFA. SOFA - Topic Tag: v16.08. /v18-06; . /feed; ; v18.06 – SOFA. SOFA - Topic Tag: v18.06. /v19-06; . /feed; ; v19.06 – SOFA. SOFA - Topic Tag: v19.06. /v19-12-plugin-linking; . /feed; ; v19.12 plugin linking – SOFA. SOFA - Topic Tag: v19.12 plugin linking. /v20; . /feed; ; v20 – SOFA. SOFA - Topic Tag: v20. /v20-12; . /feed; ; v20.12 – SOFA. SOFA - Topic Tag: v20.12. /v20-12-02; . /feed; ; v20.12.02 – SOFA. SOFA - Topic Tag: v20.12.02. /validation; . /feed; ; validation – SOFA. SOFA - Topic Tag: validation. /vasculature; . /feed; ; vasculature – SOFA. SOFA - Topic Tag: vasculature. /vecid; . /feed; ; vecId – SOFA. SOFA - Topic Tag: vecId. /vectordata-data-merge-copy; . /feed; ; vectorData Data merge copy – SOFA. SOFA - Topic Tag: vectorData Data merge copy. /vectorspringforcefield; . /feed; ; VectorSpringForceField – SOFA. SOFA - Topic Tag: VectorSpringForceField. /verification; . /feed; ; verification – SOFA. SOFA - Topic Tag: verification. /vertex; . /feed; ; vertex – SOFA. SOFA - Topic Tag: vertex. /vessel; . /feed; ; vessel – SOFA. SOFA - Topic Tag: vessel. /vessels; . /feed; ; vessels – SOFA. SOFA - Topic Tag: vessels. /video; . /feed; ; video – SOFA. SOFA - Topic Tag: video. /view; . /feed; ; view – SOFA. SOFA - Topic Tag: view. /viewall; . /feed; ; viewall – SOFA. SOFA - Topic Tag: viewall. /viewport; . /feed; ; viewport – SOFA. SOFA - Topic Tag: viewport. /view-rotation; . /feed; ; View Rotation – SOFA. SOFA - Topic Tag: View Rotation. ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:489963,Security,validat,validation,489963, ; Unity3d Digital-Trainers Blender-SOFA – SOFA. SOFA - Topic Tag: Unity3d Digital-Trainers Blender-SOFA. /unreal; . /feed; ; Unreal – SOFA. SOFA - Topic Tag: Unreal. /unreal-engine; . /feed; ; Unreal Engine – SOFA. SOFA - Topic Tag: Unreal Engine. /urdf; . /feed; ; urdf – SOFA. SOFA - Topic Tag: urdf. /using-sofa; . /feed; ; using sofa – SOFA. SOFA - Topic Tag: using sofa. /using-sofapython3; . /feed; ; using sofapython3 – SOFA. SOFA - Topic Tag: using sofapython3. /v16-08; . /feed; ; v16.08 – SOFA. SOFA - Topic Tag: v16.08. /v18-06; . /feed; ; v18.06 – SOFA. SOFA - Topic Tag: v18.06. /v19-06; . /feed; ; v19.06 – SOFA. SOFA - Topic Tag: v19.06. /v19-12-plugin-linking; . /feed; ; v19.12 plugin linking – SOFA. SOFA - Topic Tag: v19.12 plugin linking. /v20; . /feed; ; v20 – SOFA. SOFA - Topic Tag: v20. /v20-12; . /feed; ; v20.12 – SOFA. SOFA - Topic Tag: v20.12. /v20-12-02; . /feed; ; v20.12.02 – SOFA. SOFA - Topic Tag: v20.12.02. /validation; . /feed; ; validation – SOFA. SOFA - Topic Tag: validation. /vasculature; . /feed; ; vasculature – SOFA. SOFA - Topic Tag: vasculature. /vecid; . /feed; ; vecId – SOFA. SOFA - Topic Tag: vecId. /vectordata-data-merge-copy; . /feed; ; vectorData Data merge copy – SOFA. SOFA - Topic Tag: vectorData Data merge copy. /vectorspringforcefield; . /feed; ; VectorSpringForceField – SOFA. SOFA - Topic Tag: VectorSpringForceField. /verification; . /feed; ; verification – SOFA. SOFA - Topic Tag: verification. /vertex; . /feed; ; vertex – SOFA. SOFA - Topic Tag: vertex. /vessel; . /feed; ; vessel – SOFA. SOFA - Topic Tag: vessel. /vessels; . /feed; ; vessels – SOFA. SOFA - Topic Tag: vessels. /video; . /feed; ; video – SOFA. SOFA - Topic Tag: video. /view; . /feed; ; view – SOFA. SOFA - Topic Tag: view. /viewall; . /feed; ; viewall – SOFA. SOFA - Topic Tag: viewall. /viewport; . /feed; ; viewport – SOFA. SOFA - Topic Tag: viewport. /view-rotation; . /feed; ; View Rotation – SOFA. SOFA - Topic Tag: View Rotation. /virtualcommissioning; . /fee,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:485,Testability,test,tests-in-sofa,485,﻿. SOFA. about; . /features; ; SOFA – Features. /jobs; . /developer-of-3d-anatomical-applications; ; SOFA – Developer of 3D anatomical applications. /engineer-position-physics-based-simulation-for-robot-understanding; ; SOFA – Engineer position: physics-based simulation for robot understanding. /software-engineer-for-the-development-of-rf-ablation-simulator-of-cardiac-arrhythmia; ; SOFA – Software engineer for simulation of cardiac arrhythmia ablation. SOFA – Jobs. /news; . /1000-tests-in-sofa; ; SOFA – 1000 tests in SOFA!. /10-year-birthday; ; SOFA – 10 year birthday !. /2017-publications; ; SOFA – 2017 Publications !. /2018-highlights; ; SOFA – 2018 Highlights. /2nd-sofa-scientific-and-technical-committee; ; SOFA – 2nd SOFA Scientific and Technical Committee. /2-students-accepted-for-the-gsoc-with-sofa; ; SOFA – 2 students accepted for the GSoC. /4-sofa-papers-iros-2016; ; SOFA – 4 SOFA papers @ IROS 2016. /4th-meeting-simforhealth-in-paris; ; SOFA – 4th meeting SimForHealth in Paris. /5th-french-symposium-in-healthcare-simulation; ; SOFA – Participation at 5th French Symposium in Healthcare Simulation. /7-latest-papers-based-on-sofa; ; SOFA – 7 latest papers based on SOFA. /accepted-journal-at-tbme; ; SOFA – Accepted journal at TBME!. /already-experienced-sofa-give-us-some-feedback; ; SOFA – Already experienced SOFA? Give us some feedback!. /article-about-sofa-on-medtech; ; SOFA – Article about SOFA on MedTech. /article-in-science-vie-about-anatoscope; ; SOFA – Article in Science & Vie about Anatoscope. /asan-medical-center-joins-the-sofa-consortium; ; SOFA – Asan Medical Center joins the SOFA Consortium. /attend-the-sofa-week-2018; ; SOFA – Attend the SOFA week 2018. /author; . /guillaumeparan; . /feed; ; Guillaume – SOFA. SOFA – Guillaume. /hugo; . /feed; ; Hugo – SOFA. /page; . /10; ; SOFA – Hugo. /11; ; SOFA – Hugo. /12; ; SOFA – Hugo. /13; ; SOFA – Hugo. /14; ; SOFA – Hugo. /2; ; SOFA – Hugo. /3; ; SOFA – Hugo. /4; ; SOFA – Hugo. /5; ; SOFA – Hugo. /6; ; SOFA,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:514,Testability,test,tests,514,﻿. SOFA. about; . /features; ; SOFA – Features. /jobs; . /developer-of-3d-anatomical-applications; ; SOFA – Developer of 3D anatomical applications. /engineer-position-physics-based-simulation-for-robot-understanding; ; SOFA – Engineer position: physics-based simulation for robot understanding. /software-engineer-for-the-development-of-rf-ablation-simulator-of-cardiac-arrhythmia; ; SOFA – Software engineer for simulation of cardiac arrhythmia ablation. SOFA – Jobs. /news; . /1000-tests-in-sofa; ; SOFA – 1000 tests in SOFA!. /10-year-birthday; ; SOFA – 10 year birthday !. /2017-publications; ; SOFA – 2017 Publications !. /2018-highlights; ; SOFA – 2018 Highlights. /2nd-sofa-scientific-and-technical-committee; ; SOFA – 2nd SOFA Scientific and Technical Committee. /2-students-accepted-for-the-gsoc-with-sofa; ; SOFA – 2 students accepted for the GSoC. /4-sofa-papers-iros-2016; ; SOFA – 4 SOFA papers @ IROS 2016. /4th-meeting-simforhealth-in-paris; ; SOFA – 4th meeting SimForHealth in Paris. /5th-french-symposium-in-healthcare-simulation; ; SOFA – Participation at 5th French Symposium in Healthcare Simulation. /7-latest-papers-based-on-sofa; ; SOFA – 7 latest papers based on SOFA. /accepted-journal-at-tbme; ; SOFA – Accepted journal at TBME!. /already-experienced-sofa-give-us-some-feedback; ; SOFA – Already experienced SOFA? Give us some feedback!. /article-about-sofa-on-medtech; ; SOFA – Article about SOFA on MedTech. /article-in-science-vie-about-anatoscope; ; SOFA – Article in Science & Vie about Anatoscope. /asan-medical-center-joins-the-sofa-consortium; ; SOFA – Asan Medical Center joins the SOFA Consortium. /attend-the-sofa-week-2018; ; SOFA – Attend the SOFA week 2018. /author; . /guillaumeparan; . /feed; ; Guillaume – SOFA. SOFA – Guillaume. /hugo; . /feed; ; Hugo – SOFA. /page; . /10; ; SOFA – Hugo. /11; ; SOFA – Hugo. /12; ; SOFA – Hugo. /13; ; SOFA – Hugo. /14; ; SOFA – Hugo. /2; ; SOFA – Hugo. /3; ; SOFA – Hugo. /4; ; SOFA – Hugo. /5; ; SOFA – Hugo. /6; ; SOFA,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:67316,Testability,test,testing,67316,ofa::component::odesolver::backward::EulerImplicitSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::backward::NewmarkImplicitSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::backward::StaticSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::backward::VariationalSymplecticSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::CentralDifferenceSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::DampVelocitySolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::EulerExplicitSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::RungeKutta2Solver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::RungeKutta4Solver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::testing::GetAssembledSizeVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::testing::GetVectorVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::CompareState Class Reference; SOFA API: sofa::component::playback::CompareStateCreator Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::CompareStateResult Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::component::playback::CompareTopology Class Reference; SOFA API: sofa::component::playback::CompareTopologyCreator Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::CompareTopologyResult Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::component::playback::InputEventReader Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::ReadState Class Reference; SOFA API: sofa::component::playback::ReadStateActivator Class Reference; SOFA API: Member List,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:67427,Testability,test,testing,67427,::component::odesolver::backward::NewmarkImplicitSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::backward::StaticSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::backward::VariationalSymplecticSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::CentralDifferenceSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::DampVelocitySolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::EulerExplicitSolver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::RungeKutta2Solver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::forward::RungeKutta4Solver Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::testing::GetAssembledSizeVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::testing::GetVectorVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::CompareState Class Reference; SOFA API: sofa::component::playback::CompareStateCreator Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::CompareStateResult Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::component::playback::CompareTopology Class Reference; SOFA API: sofa::component::playback::CompareTopologyCreator Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::CompareTopologyResult Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::component::playback::InputEventReader Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::ReadState Class Reference; SOFA API: sofa::component::playback::ReadStateActivator Class Reference; SOFA API: Member List; SOFA API: sofa::component::playback::ReadStateCreator Class Reference; SOFA API: Member List; SOFA API: sofa:,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:161629,Testability,log,logging,161629,API: Member List; SOFA API: Member List; SOFA API: sofa::helper::io::TriangleLoader Class Reference; SOFA API: Member List; SOFA API: sofa::helper::io::XspLoader Class Reference; SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:161722,Testability,log,logging,161722,erence; SOFA API: Member List; SOFA API: sofa::helper::io::XspLoader Class Reference; SOFA API: sofa::helper::io::XspLoaderDataHook Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA A,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:161822,Testability,log,logging,161822,::helper::io::XspLoaderDataHook Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: M,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:161917,Testability,log,logging,161917,SOFA API: sofa::helper::kdTree< Coord > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162019,Testability,log,logging,162019,a::helper::lifecycle::ComponentChange Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA AP,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162116,Testability,log,logging,162116,per::lifecycle::Dealiased Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162208,Testability,log,logging,162208,fecycle::Deprecated Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Moved Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Referen,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162307,Testability,log,logging,162307,d Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Pluginized Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162404,Testability,log,logging,162404,erence; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162462,Testability,log,logging,162462,ecycle::Removed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingme,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162530,Testability,log,logging,162530,fa::helper::lifecycle::Renamed Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Memb,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162635,Testability,log,logging,162635,langMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ClangStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Refere,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162744,Testability,log,logging,162744,Formatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Referenc,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162862,Testability,log,logging,162862,ce; SOFA API: Member List; SOFA API: sofa::helper::logging::DefaultStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Referenc,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:162952,Testability,log,logging,162952,lass Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLogg,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163063,Testability,log,logging,163063,; SOFA API: Member List; SOFA API: sofa::helper::logging::FileMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingm,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163169,Testability,log,logging,163169,mber List; SOFA API: sofa::helper::logging::MainConsoleMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sof,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163263,Testability,log,logging,163263,I: Member List; SOFA API: sofa::helper::logging::MainTracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163354,Testability,log,logging,163354,OFA API: Member List; SOFA API: sofa::helper::logging::Message Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163447,Testability,log,logging,163447,a::helper::logging::MessageDispatcher Class Reference; SOFA API: sofa::helper::logging::MessageDispatcher::LoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::log,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163567,Testability,log,logging,163567,Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcher::NullLoggerStream Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_p,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163691,Testability,log,logging,163691,"; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163700,Testability,log,loggingmessagehandler,163700,"er List; SOFA API: sofa::helper::logging::MessageDispatcherImpl Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163798,Testability,log,logging,163798,"Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Ref",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163807,Testability,log,loggingmessagehandler,163807,"A API: Member List; SOFA API: sofa::helper::logging::MessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163916,Testability,log,logging,163916,"r List; SOFA API: sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: s",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:163925,Testability,log,loggingmessagehandler,163925,": sofa::helper::logging::MessageHandler Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:164038,Testability,log,logging,164038,"A API: sofa::helper::logging::RichConsoleStyleMessageFormatter Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SilentMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< std::pair< T *, T * > > Class Template Reference; SOFA API: Member List; SOFA API: sofa::",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:164184,Testability,log,logging,164184,"ageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::SofaComponentInfo Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< std::pair< T *, T * > > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_id< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::system::DynamicLibrary Class Reference; SOFA A",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:164326,Testability,log,logging,164326,"SOFA API: sofa::helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< std::pair< T *, T * > > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_id< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::system::DynamicLibrary Class Reference; SOFA API: sofa::helper::system::DynamicLibrary::Handle Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::system",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:164448,Testability,log,logging,164448,"ng::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< std::pair< T *, T * > > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_id< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::system::DynamicLibrary Class Reference; SOFA API: sofa::helper::system::DynamicLibrary::Handle Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::system::FileEventListener Class Reference; SOFA API: Member List; SOFA API: sofa::helper::system::FileMonitor Class Reference; S",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:177483,Testability,test,testing,177483,"IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< defaulttype::RigidDeriv< N, T >, IndexType > Class Template Reference; SOFA API: sofa::linearalgebra::matrix_bloc_traits< double, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< float, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< int, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< sofa::type::Vec< N, T >, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::matrix_bloc_traits< type::Mat< L, C, real >, IndexType > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexValueProduct< Scalar > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrix< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::type_selector< index, T0, T2 > Class Template Reference; SOFA API: sofa::linearalgebra::type_selector< 0, T0, T1 > Class Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::type_selector< 1, T0, T1 > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateBeginEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateEndEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::AnimateVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BaseMechanicalVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BehaviorUpdatePositionVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::BuildConstraintSystemEndEvent Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::CleanupVisitor Class Reference; SOFA API: Member List; SO",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:194201,Testability,test,testing,194201,: sofa::simulation::mechanicalvisitor::MechanicalVReallocVisitor< vtype > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVSizeVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::AttributeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseElement Class Reference; SOFA API: sofa::simulation::xml::BaseElement::child_iterator< Node > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseMultiMappingElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::DataElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Ref,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:194262,Testability,test,testing,194262,tor< vtype > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::mechanicalvisitor::MechanicalVSizeVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::AttributeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseElement Class Reference; SOFA API: sofa::simulation::xml::BaseElement::child_iterator< Node > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseMultiMappingElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::DataElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPriva,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:194384,Testability,test,testing,194384,zeVisitor Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::AttributeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseElement Class Reference; SOFA API: sofa::simulation::xml::BaseElement::child_iterator< Node > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseMultiMappingElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::DataElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Refe,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:194458,Testability,test,testing,194458,on::xml::AttributeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseElement Class Reference; SOFA API: sofa::simulation::xml::BaseElement::child_iterator< Node > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseMultiMappingElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::DataElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Refe,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:194537,Testability,test,testing,194537,a::simulation::xml::BaseElement Class Reference; SOFA API: sofa::simulation::xml::BaseElement::child_iterator< Node > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseMultiMappingElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::DataElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member Li,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:194597,Testability,test,testing,194597,ofa::simulation::xml::BaseElement::child_iterator< Node > Class Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseMultiMappingElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::DataElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOF,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:194664,Testability,test,testing,194664,plate Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::simulation::xml::BaseMultiMappingElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::DataElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CP,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:194788,Testability,test,testing,194788,s Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::DataElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA AP,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:194900,Testability,test,testing,194900,er List; SOFA API: sofa::simulation::xml::Element< Object > Class Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:194985,Testability,test,testing,194985," SOFA API: Member List; SOFA API: sofa::simulation::xml::NodeElement Class Reference; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L, C, real > Class Template Reference; SOFA API: sofa::type::MatNoInit< L, C, real > C",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:195064,Testability,test,testing,195064,"rence; SOFA API: Member List; SOFA API: sofa::simulation::xml::ObjectElement Class Reference; SOFA API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L, C, real > Class Template Reference; SOFA API: sofa::type::MatNoInit< L, C, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::MatSym< D",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:195163,Testability,test,testing,195163,"API: Member List; SOFA API: sofa::testing::BaseSimulationTest Class Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L, C, real > Class Template Reference; SOFA API: sofa::type::MatNoInit< L, C, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::MatSym< D, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Material Class Refe",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:195229,Testability,test,testing,195229,"s Reference; SOFA API: sofa::testing::BaseSimulationTest::SceneInstance Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L, C, real > Class Template Reference; SOFA API: sofa::type::MatNoInit< L, C, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::MatSym< D, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Material Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sof",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:195348,Testability,test,testing,195348,"I: Member List; SOFA API: sofa::testing::BaseTest Class Reference; SOFA API: Member List; SOFA API: sofa::testing::ExpectMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrame Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailure Class Reference; SOFA API: sofa::testing::GtestMessageFrameFailureWhenMissing Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageFrameIgnore Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::GtestMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::testing::IgnoreMessage Class Reference; SOFA API: Member List; SOFA API: sofa::testing::LinearCongruentialRandomGenerator Class Reference; SOFA API: Member List; SOFA API: sofa::testing::MainGtestMessageHandler Class Reference; SOFA API: sofa::testing::MainGtestMessageHandlerPrivate Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::testing::MessageAsTestFailure Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox Class Reference; SOFA API: sofa::type::BoundingBox1D Class Reference; SOFA API: Member List; SOFA API: sofa::type::BoundingBox2D Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::CPUMemoryManager< T > Class Template Reference; SOFA API: sofa::type::DualQuatCoord3< real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Frame Class Reference; SOFA API: Member List; SOFA API: sofa::type::Mat< L, C, real > Class Template Reference; SOFA API: sofa::type::MatNoInit< L, C, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::MatSym< D, real > Class Template Reference; SOFA API: Member List; SOFA API: sofa::type::Material Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::type::PrimitiveGroup Class Reference; SOFA API: Member List; SOFA API: sofa::type::Quat< Real > Class Template Refer",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:201104,Testability,test,testing,201104,rsolver::iterative Namespace Reference; SOFA API: sofa::component::linearsolver::ordering Namespace Reference; SOFA API: sofa::component::linearsolver::preconditioner Namespace Reference; SOFA API: sofa::component::linearsystem Namespace Reference; SOFA API: sofa::component::mapping Namespace Reference; SOFA API: sofa::component::mapping::linear Namespace Reference; SOFA API: sofa::component::mapping::linear::crtp Namespace Reference; SOFA API: sofa::component::mapping::mappedmatrix Namespace Reference; SOFA API: sofa::component::mapping::nonlinear Namespace Reference; SOFA API: sofa::component::mapping::nonlinear::impl Namespace Reference; SOFA API: sofa::component::mass Namespace Reference; SOFA API: sofa::component::mechanicalload Namespace Reference; SOFA API: sofa::component::odesolver Namespace Reference; SOFA API: sofa::component::odesolver::backward Namespace Reference; SOFA API: sofa::component::odesolver::forward Namespace Reference; SOFA API: sofa::component::odesolver::testing Namespace Reference; SOFA API: sofa::component::playback Namespace Reference; SOFA API: sofa::component::sceneutility Namespace Reference; SOFA API: sofa::component::sceneutility::infocomponent Namespace Reference; SOFA API: sofa::component::sceneutility::makealiascomponent Namespace Reference; SOFA API: sofa::component::sceneutility::makedataaliascomponent Namespace Reference; SOFA API: sofa::component::setting Namespace Reference; SOFA API: sofa::component::solidmechanics Namespace Reference; SOFA API: sofa::component::solidmechanics::fem Namespace Reference; SOFA API: sofa::component::solidmechanics::fem::elastic Namespace Reference; SOFA API: sofa::component::solidmechanics::fem::hyperelastic Namespace Reference; SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material Namespace Reference; SOFA API: sofa::component::solidmechanics::fem::nonuniform Namespace Reference; SOFA API: sofa::component::solidmechanics::spring Namespace Reference; SOFA API: sofa::component:,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:205094,Testability,log,logging,205094,fa::gl::component::shader Namespace Reference; SOFA API: sofa::gui Namespace Reference; SOFA API: sofa::gui::batch Namespace Reference; SOFA API: sofa::gui::common Namespace Reference; SOFA API: sofa::gui::component Namespace Reference; SOFA API: sofa::gui::component::performer Namespace Reference; SOFA API: sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Names,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:205147,Testability,log,logging,205147,PI: sofa::gui Namespace Reference; SOFA API: sofa::gui::batch Namespace Reference; SOFA API: sofa::gui::common Namespace Reference; SOFA API: sofa::gui::component Namespace Reference; SOFA API: sofa::gui::component::performer Namespace Reference; SOFA API: sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Na,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:205224,Testability,log,logging,205224,ence; SOFA API: sofa::gui::common Namespace Reference; SOFA API: sofa::gui::component Namespace Reference; SOFA API: sofa::gui::component::performer Namespace Reference; SOFA API: sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:205233,Testability,log,loggingmessagehandler,205233,sofa::gui::common Namespace Reference; SOFA API: sofa::gui::component Namespace Reference; SOFA API: sofa::gui::component::performer Namespace Reference; SOFA API: sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simu,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:205300,Testability,log,logging,205300,component Namespace Reference; SOFA API: sofa::gui::component::performer Namespace Reference; SOFA API: sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulatio,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:205388,Testability,log,logging,205388,ence; SOFA API: sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulation::mechanicalvisitor Namespace Reference; SOFA API: sofa::simulation::node Namespace Ref,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:205884,Testability,test,testing,205884,; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulation::mechanicalvisitor Namespace Reference; SOFA API: sofa::simulation::node Namespace Reference; SOFA API: sofa::simulation::xml Namespace Reference; SOFA API: sofa::testing Namespace Reference; SOFA API: sofa::topology Namespace Reference; SOFA API: sofa::type Namespace Reference; SOFA API: sofa::type::pairwise Namespace Reference; SOFA API: sofa::type::trait Namespace Reference; navtree.,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:206469,Testability,test,testing,206469,; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulation::mechanicalvisitor Namespace Reference; SOFA API: sofa::simulation::node Namespace Reference; SOFA API: sofa::simulation::xml Namespace Reference; SOFA API: sofa::testing Namespace Reference; SOFA API: sofa::topology Namespace Reference; SOFA API: sofa::type Namespace Reference; SOFA API: sofa::type::pairwise Namespace Reference; SOFA API: sofa::type::trait Namespace Reference; navtree.,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:217810,Testability,test,testing,217810,"mponent::mapping::nonlinear::RigidMappingMatrixHelper< 3, Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::component::mass::AddMToMatrixFunctor< Deriv, MassType, MatrixType > Struct Template Reference; SOFA API: sofa::component::mass::AddMToMatrixFunctor< defaulttype::RigidDeriv< N, Real >, defaulttype::RigidMass< N, Real >, MatrixType > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::component::mass::MassType< DataType > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::component::mass::MassType< defaulttype::StdVectorTypes< TCoord, TDeriv, TReal > > Struct Template Reference; SOFA API: sofa::component::mass::MassType< sofa::defaulttype::StdRigidTypes< N, real > > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::TempVars Struct Reference; SOFA API: Member List; SOFA API: sofa::component::odesolver::testing::ODESolverSpringTest Struct Reference; SOFA API: Member List; SOFA API: sofa::component::playback::input_event Struct Reference; SOFA API: sofa::component::solidmechanics::fem::elastic::_2DMaterials Struct Reference; SOFA API: sofa::component::solidmechanics::fem::elastic::_3DMaterials Struct Reference; SOFA API: sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::EdgeInformation::Spring Struct Reference; SOFA API: Member List; SOFA API: sofa::component::solidmechanics::spring::QuadularBendingSprings< DataTypes >::ForceOutput Struct Reference; SOFA API: Member List; SOFA API: sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForce Struct Reference; SOFA API: Member List; SOFA API: sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::Spring Struct Refere",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:236324,Testability,log,logging,236324,ember List; SOFA API: sofa::helper::IsEqual< is_integer > Struct Template Reference; SOFA API: sofa::helper::IsEqual< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::IsNull< is_integer > Struct Template Reference; SOFA API: sofa::helper::IsNull< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Background Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Foreground Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader Struct Reference; SOFA API: sofa::helper::io::DDSHeader::DDSCaps Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader::DDSPixelFormat Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord >::TREENODE Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ComponentInfo Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileInfo Struct Reference; SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::narrowing_error Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleComponentList Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleDescription Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleLicense Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleName Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleVersion Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::InitExternalModule St,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:236412,Testability,log,logging,236412,A API: sofa::helper::IsEqual< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::IsNull< is_integer > Struct Template Reference; SOFA API: sofa::helper::IsNull< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Background Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Foreground Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader Struct Reference; SOFA API: sofa::helper::io::DDSHeader::DDSCaps Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader::DDSPixelFormat Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord >::TREENODE Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ComponentInfo Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileInfo Struct Reference; SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::narrowing_error Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleComponentList Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleDescription Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleLicense Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleName Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleVersion Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::InitExternalModule Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::ModuleIsI,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:236533,Testability,log,logging,236533,er::IsNull< is_integer > Struct Template Reference; SOFA API: sofa::helper::IsNull< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Background Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Foreground Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader Struct Reference; SOFA API: sofa::helper::io::DDSHeader::DDSCaps Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader::DDSPixelFormat Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord >::TREENODE Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ComponentInfo Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileInfo Struct Reference; SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::narrowing_error Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleComponentList Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleDescription Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleLicense Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleName Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleVersion Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::InitExternalModule Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::ModuleIsInitialized Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::thread::AlignPow2< N > Struct Templat,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:236593,Testability,log,logging,236593,: sofa::helper::IsNull< true > Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::ScopedAdvancedTimer Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Background Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::console::Foreground Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader Struct Reference; SOFA API: sofa::helper::io::DDSHeader::DDSCaps Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::io::DDSHeader::DDSPixelFormat Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::kdTree< Coord >::TREENODE Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ComponentInfo Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::ExceptionMessageHandler::ErrorMessageException Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::FileInfo Struct Reference; SOFA API: sofa::helper::logging::FileInfoOwningFilename Struct Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::narrowing_error Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleComponentList Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleDescription Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleLicense Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleName Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::GetModuleVersion Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::InitExternalModule Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::Plugin::ModuleIsInitialized Struct Reference; SOFA API: Member List; SOFA API: sofa::helper::system::thread::AlignPow2< N > Struct Template Reference; SOFA API: sofa::helper::system::thread::AlignPo,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:240861,Testability,test,testing,240861,"eference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenOptions< const Eigen::Map< T, Options, StrideType > > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< TBlock > Struct Template Reference; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection Struct Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Re",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:240980,Testability,test,testing,240980,"> > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenOptions< const Eigen::Transpose< T > > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< TBlock > Struct Template Reference; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection Struct Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API:",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:241127,Testability,test,testing,241127,"ference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseMatrix< InDataTypes, OutDataTypes >::map_traits< VecType > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrix< TBlock > Struct Template Reference; SOFA API: sofa::linearalgebra::EigenSparseToCompressedRowSparseMatrixVec< TVec > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::SparseMatrixProduct< Lhs, Rhs, ResultType >::Intersection Struct Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< D",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:241716,Testability,test,testing,241716,":linearalgebra::sparsematrixproduct::IndexedValue< Scalar > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::t",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:241812,Testability,test,testing,241812," Member List; SOFA API: sofa::linearalgebra::testing::SparseMatrixProductInit< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struc",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:241913,Testability,test,testing,241913,"ference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestBaseMatrixTraits< TMatrix, TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struct Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, Enable > Struct Template Reference; SOFA A",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:242014,Testability,test,testing,242014,", TNbRows, TNbCols, TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struct Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, Enable > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:242106,Testability,test,testing,242106,"::linearalgebra::testing::TestSparseMatrixProduct< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struct Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, Enable > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: sofa::type::Rebind< _T, _Othe",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:242218,Testability,test,testing,242218,"I: sofa::mapping_test::Mapping_test< _Mapping > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struct Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, Enable > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: Memb",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:242329,Testability,test,testing,242329,"a::simulation::Range< InputIt > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::simulation::SceneLoader::Listener Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::common::VisitorExecuteFunc Struct Reference; SOFA API: Member List; SOFA API: sofa::simulation::graph::DAGNode::StatusStruct Struct Reference; SOFA API: Member List; SOFA API: sofa::testing::NumericTest< _Real > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::SparseMatrixTest< TReal > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::data_traits< _DataTypes > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, isVector > Struct Template Reference; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, false > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, N, true > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::testing::setRotWrapper< DataTypes, 2, false > Struct Template Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::topology::Element< GeometryElement > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, class > Struct Template Reference; SOFA API: sofa::type::HasRebindTypedef< T, OtherType, std::void_t< typename T::template rebind_to< OtherType > > > Struct Template Reference; SOFA API: sofa::type::NoInit Struct Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, Enable > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t< HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: sofa::type::Rebind< _T, _OtherType, std::enable_if_t<!HasRebindTypedef< _T, _OtherType >::value > > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::Rebind< _T< A >, _OtherType, std::enable_if_t<!HasRebindTypedef< _T< A >, _Other",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:245019,Testability,benchmark,benchmark-for-sofa,245019,n Reference; SOFA API: Member List. applications; . /plugins; . /4-wheel-summitxl-robot; ; SOFA – 4-Wheel SummitXL Robot. /bayesian-filtering; ; SOFA – Bayesian Filtering. /cardiac-electrophysiology-2; ; SOFA – Cardiac Electrophysiology. /cardiac-mechanics; ; SOFA – Cardiac Mechanics. /cgal-mesh-generation; ; SOFA – CGAL Mesh Generation. /condensed-fem-model-learning; ; SOFA – Condensed FEM Model Learning. /cosserat-beam-cable-needle; ; SOFA – Cosserat Beam: cable & needle. /cuda-gpu-computing; ; SOFA – CUDA GPU Computing. /cutting-mesh-refinement; ; SOFA – Cutting & Mesh Refinement. /deep-learning-framework; ; SOFA – Deep Learning Framework. /design-optimization; ; SOFA – Design Optimization. /endoscopic-robot; ; SOFA – Endoscopic Robot. /export-system-matrices; ; SOFA – Export System Matrices. /follou-avatar-haptics; ; SOFA – Follou Avatar Haptics. /force-dimension-haptics; ; SOFA – Force Dimension Haptics. /geomagic-haptics; ; SOFA – Geomagic Haptics. /google-benchmark-for-sofa; ; SOFA – Google Benchmark for SOFA. /gpu-cholesky-solver; ; SOFA – GPU Cholesky Solver. /heat-transfer-gpu-diffusion-reaction; ; SOFA – Heat Transfer: GPU diffusion reaction. /image-manipulation; ; SOFA – Image Manipulation. /image-registration; ; SOFA – Image Registration. /inverse-model-for-soft-robot-control; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA – LapGym. /mesh-skeletonization; ; SOFA – Mesh Skeletonization. /micro-parallel-robot; ; SOFA – Micro-Parallel Robot. /migribot-robot; ; SOFA – MiGriBot Robot. /model-order-reduction; ; SOFA – Model Order Reduction. /modern-gui-using-glfw; ; SOFA – Modern GUI using GLFW. /modular-fem-mechanics; ; SOFA – Modular FEM Mechanics. /multi-material-tool; ; SOFA – Multi-Material Tool. /multithreading; ; SOFA – Multithreading. /openigtlink; ; SOFA – OpenIGTLink. /pardiso-contact-solver; ; SOFA – Pardiso Contact Solver. /porous-visco-hyperelasticity; ; SOFA – Porous Visco-Hyperelasticity. /pyqt-widget-for-cameras; ; SOFA – PyQt ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:262161,Testability,assert,assertion-failed,262161,"th-caribou-solver; ; SOFA - Topic: BilateralInteractionConstraint with Caribou Solver. /binaries-generation; ; SOFA - Topic: Binaries generation. /binary-plugins; . /page; . /2; ; SOFA - Topic: [SOLVED] Binary Plugins. /7; ; SOFA - Topic: [SOLVED] Binary Plugins. SOFA - Topic: [SOLVED] Binary Plugins. /binary-release-linux-libs-libicui18n-so-55-missing; ; SOFA - Topic: [SOLVED] Binary release linux libs – libicui18n.so.55 missing. /bindings-python-for-new-data-types; . /feed; ; [SOLVED] Bindings python for new data types – SOFA. SOFA - Topic: [SOLVED] Bindings python for new data types. /biomechanical-modeling-and-surgical-simulation-research-and-development-engineer; . /page; . /4; ; SOFA - Topic: Biomechanical Modeling and Surgical Simulation Research and Development Engineer. SOFA - Topic: Biomechanical Modeling and Surgical Simulation Research and Development Engineer. /blood-flow-through-heart; ; SOFA - Topic: [SOLVED] Blood flow through heart. /boost-assertion-failed; ; SOFA - Topic: [SOLVED] Boost Assertion Failed. /boost-error; . /feed; ; [SOLVED] Boost error – SOFA. SOFA - Topic: [SOLVED] Boost error. /bounding-boxes-in-sofa; . /feed; ; [SOLVED] Bounding Boxes in SOFA – SOFA. SOFA - Topic: [SOLVED] Bounding Boxes in SOFA. /boxroi-doupdate; . /feed; ; [SOLVED] BoxROI doUpdate – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] BoxROI doUpdate. /12; ; SOFA - Topic: [SOLVED] BoxROI doUpdate. /3; ; SOFA - Topic: [SOLVED] BoxROI doUpdate. SOFA - Topic: [SOLVED] BoxROI doUpdate. /boxroi-in-cpp; ; SOFA - Topic: [SOLVED] BoxROI in cpp. /broadphase-narrow-phases-%EF%BC%8C-friction-contact-force; ; SOFA - Topic: broadphase , Narrow phases ， friction contact force?. /bubble-model-in-sofa; ; SOFA - Topic: [SOLVED] Bubble Model In SOFA. /bug-mismatch-between-image-plugin-obj-and-png-co-ordinate-systems; ; SOFA - Topic: Bug. Mismatch between image plugin .obj and .png co-ordinate systems. /bug-visualising-vtk-mesh-in-sofa; ; SOFA - Topic: [SOLVED] BUG-Visualising VTK Mesh in ",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:295353,Testability,test,testing,295353,"ersion; ; SOFA - Topic: Error in compiling softrobots plugin, cableConstraint in SOFA 21.06 version. /error-in-configuring-sofa; . /feed; ; [SOLVED] Error in configuring Sofa – SOFA. SOFA - Topic: [SOLVED] Error in configuring Sofa. /error-in-first-launch-of-sofa-after-installation; ; SOFA - Topic: [SOLVED] Error in first launch of sofa after installation. /error-in-rigidrigidmapping-v15-09; . /feed; ; [SOLVED] Error in RigidRigidMapping (v15.09) – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /3; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /8; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /9; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /error-in-running-sofapython3-in-conda-environemtn-with-python3-83; ; SOFA - Topic: Error In Running SofaPython3 in Conda Environemtn with Python3.83. /error-in-simulationanimate-while-testing; ; SOFA - Topic: [SOLVED] ERROR in Simulation::animate() while testing. /error-into-use-the-linearsolverconstraintcorrection-with-sofacuda-types; ; SOFA - Topic: Error into use the LinearSolverConstraintCorrection with SofaCUDA types. /error-message-libpng16-dll; ; SOFA - Topic: [SOLVED] Error message – libpng16.dll. /error-msg-in-the-pneunetgripper-tutorial; ; SOFA - Topic: Error msg in the PneuNetGripper tutorial. /error-on-fetching-subirectory-eigen3; ; SOFA - Topic: [SOLVED] Error on Fetching subirectory eigen3. /error-on-sofaguiqt5-dll; ; SOFA - Topic: Error on SofaGuiQt5.dll. /error-pluginmanager-plugin-not-found; ; SOFA - Topic: [SOLVED] [ERROR] [PluginManager] Plugin not found. /error-plugin-not-foundsofamiscforcefielddev; ; SOFA - Topic: [SOLVED] error: Plugin not found:""SofaMiscForceFieldDev"". /error-runsofa-exe-can-not-run-after-successfully-build-the-project-in-vs2019; ; SOFA - Topic: [SOLVED] error: runsofa.exe can not run after successfully build the project in VS2019. /errors-appeared",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:295424,Testability,test,testing,295424,"ersion; ; SOFA - Topic: Error in compiling softrobots plugin, cableConstraint in SOFA 21.06 version. /error-in-configuring-sofa; . /feed; ; [SOLVED] Error in configuring Sofa – SOFA. SOFA - Topic: [SOLVED] Error in configuring Sofa. /error-in-first-launch-of-sofa-after-installation; ; SOFA - Topic: [SOLVED] Error in first launch of sofa after installation. /error-in-rigidrigidmapping-v15-09; . /feed; ; [SOLVED] Error in RigidRigidMapping (v15.09) – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /3; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /8; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /9; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /error-in-running-sofapython3-in-conda-environemtn-with-python3-83; ; SOFA - Topic: Error In Running SofaPython3 in Conda Environemtn with Python3.83. /error-in-simulationanimate-while-testing; ; SOFA - Topic: [SOLVED] ERROR in Simulation::animate() while testing. /error-into-use-the-linearsolverconstraintcorrection-with-sofacuda-types; ; SOFA - Topic: Error into use the LinearSolverConstraintCorrection with SofaCUDA types. /error-message-libpng16-dll; ; SOFA - Topic: [SOLVED] Error message – libpng16.dll. /error-msg-in-the-pneunetgripper-tutorial; ; SOFA - Topic: Error msg in the PneuNetGripper tutorial. /error-on-fetching-subirectory-eigen3; ; SOFA - Topic: [SOLVED] Error on Fetching subirectory eigen3. /error-on-sofaguiqt5-dll; ; SOFA - Topic: Error on SofaGuiQt5.dll. /error-pluginmanager-plugin-not-found; ; SOFA - Topic: [SOLVED] [ERROR] [PluginManager] Plugin not found. /error-plugin-not-foundsofamiscforcefielddev; ; SOFA - Topic: [SOLVED] error: Plugin not found:""SofaMiscForceFieldDev"". /error-runsofa-exe-can-not-run-after-successfully-build-the-project-in-vs2019; ; SOFA - Topic: [SOLVED] error: runsofa.exe can not run after successfully build the project in VS2019. /errors-appeared",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:299505,Testability,test,test-scene-required-plugins-error,299505,"g-sofa-v2012-with-sofapython-3; ; SOFA - Topic: Error while compiling SOFA v2012 with Sofapython 3. /error-while-compiling-softrobots-and-stilib-plugin; ; SOFA - Topic: [SOLVED] Error while compiling Softrobots and STILIB plugin. /error-while-sofapython3-installation; ; SOFA - Topic: [SOLVED] Error while SofaPython3 installation. /error-while-use-sofa-c-template-in-tutorial; ; SOFA - Topic: Error while use Sofa c++ template in tutorial. /error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile; ; SOFA - Topic: [SOLVED] Error with CImg: plugin with dependency to skeleton.h does not compile. /error-with-global-bounding-box; . /feed; ; [SOLVED] Error with global bounding box – SOFA. SOFA - Topic: [SOLVED] Error with global bounding box. /error-with-plugin-flexible; ; SOFA - Topic: [SOLVED] Error with plugin Flexible. /error-with-plugins-with-sofarosconnector; ; SOFA - Topic: Error with plugins with ""SofaROSConnector"". /error-with-test-scene-required-plugins-error; ; SOFA - Topic: [SOLVED] Error with test scene, Required plugins error. /error-with-tetrahedraltensormassforcefield; ; SOFA - Topic: [SOLVED] error with TetrahedralTensorMassForceField. /estimate-pressure; ; SOFA - Topic: [SOLVED] Estimate Pressure. /estimating-external-force-on-a-vertex; ; SOFA - Topic: Estimating external force on a vertex. /evaluate-forces-whitout-using-visitors; ; SOFA - Topic: [SOLVED] Evaluate forces whitout using visitors. /examples-for-simulating-interacting-models; ; SOFA - Topic: Examples for simulating interacting models. /executation-time; ; SOFA - Topic: [SOLVED] execution time. /exploding-bunny; ; SOFA - Topic: Exploding bunny. /export-data-with-writestate; ; SOFA - Topic: [SOLVED] Export data with WriteState. /export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash; ; SOFA - Topic: [SOLVED] Export Graph Button causes runSofa to segfault (SIGSEGV) and crash. /exporting-files-using-monitor; ; SOFA - Topic: [SOLVED] Exporting files using Monitor. /exporting-fo",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:299576,Testability,test,test,299576,"g-sofa-v2012-with-sofapython-3; ; SOFA - Topic: Error while compiling SOFA v2012 with Sofapython 3. /error-while-compiling-softrobots-and-stilib-plugin; ; SOFA - Topic: [SOLVED] Error while compiling Softrobots and STILIB plugin. /error-while-sofapython3-installation; ; SOFA - Topic: [SOLVED] Error while SofaPython3 installation. /error-while-use-sofa-c-template-in-tutorial; ; SOFA - Topic: Error while use Sofa c++ template in tutorial. /error-with-cimg-plugin-with-dependancy-to-skeleton-h-does-not-compile; ; SOFA - Topic: [SOLVED] Error with CImg: plugin with dependency to skeleton.h does not compile. /error-with-global-bounding-box; . /feed; ; [SOLVED] Error with global bounding box – SOFA. SOFA - Topic: [SOLVED] Error with global bounding box. /error-with-plugin-flexible; ; SOFA - Topic: [SOLVED] Error with plugin Flexible. /error-with-plugins-with-sofarosconnector; ; SOFA - Topic: Error with plugins with ""SofaROSConnector"". /error-with-test-scene-required-plugins-error; ; SOFA - Topic: [SOLVED] Error with test scene, Required plugins error. /error-with-tetrahedraltensormassforcefield; ; SOFA - Topic: [SOLVED] error with TetrahedralTensorMassForceField. /estimate-pressure; ; SOFA - Topic: [SOLVED] Estimate Pressure. /estimating-external-force-on-a-vertex; ; SOFA - Topic: Estimating external force on a vertex. /evaluate-forces-whitout-using-visitors; ; SOFA - Topic: [SOLVED] Evaluate forces whitout using visitors. /examples-for-simulating-interacting-models; ; SOFA - Topic: Examples for simulating interacting models. /executation-time; ; SOFA - Topic: [SOLVED] execution time. /exploding-bunny; ; SOFA - Topic: Exploding bunny. /export-data-with-writestate; ; SOFA - Topic: [SOLVED] Export data with WriteState. /export-graph-button-causes-runsofa-to-segfault-sigsegv-and-crash; ; SOFA - Topic: [SOLVED] Export Graph Button causes runSofa to segfault (SIGSEGV) and crash. /exporting-files-using-monitor; ; SOFA - Topic: [SOLVED] Exporting files using Monitor. /exporting-fo",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:321265,Testability,test,test,321265,"10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to extract the surface of a volumeyric mesh. /how-to-figure-out-the-available-options-of-xml-tags; ; SOFA - Topic: [SOLVED] How to figure out the available options of xml tags?. /how-to-fix-the-orientation-of-the-instrument-dof-in-",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:321343,Testability,test,test,321343,"10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to extract the surface of a volumeyric mesh. /how-to-figure-out-the-available-options-of-xml-tags; ; SOFA - Topic: [SOLVED] How to figure out the available options of xml tags?. /how-to-fix-the-orientation-of-the-instrument-dof-in-",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:334110,Testability,test,test,334110,"ugin-in-cpp; ; SOFA - Topic: [SOLVED] Import plugin in cpp. /import-urdf-models; ; SOFA - Topic: Import urdf models. /imposing-velocity-and-position; ; SOFA - Topic: Imposing velocity and position. /incise-without-mouse; ; SOFA - Topic: [SOLVED] Incise without mouse. /indices-of-roi-in-python-scene; ; SOFA - Topic: [SOLVED] indices of ROI in python scene. /informations-about-the-calculated-actuation-forces; ; SOFA - Topic: Informations about the calculated actuation forces. /init-and-cleanup-methods-in-simulation-tree; ; SOFA - Topic: [SOLVED] init and cleanup methods in simulation tree. /initialize-and-read-a-data; ; SOFA - Topic: [SOLVED] Initialize and read a data. /initialize-degrees-of-freedom; ; SOFA - Topic: Initialize degrees of freedom. /initializing-plugins; ; SOFA - Topic: [SOLVED] Initializing plugins. /input-and-output-in-sofa-scn-file; ; SOFA - Topic: [SOLVED] Input and Output in SOFA .scn file. /inserting_membrame_between_two_tets_regions; . /feed; ; Inserting membrane between two test regions – SOFA. SOFA - Topic: Inserting membrane between two test regions. /insert-localstiffnessfactor-variable-in-tetrahedronhyperelasticfemforcefield; ; SOFA - Topic: Insert localstiffnessfactor variable in TetrahedronHyperelasticFEMForceField. /insert-strain-stress-curves-of-material-to-describe-mechanical-properties; ; SOFA - Topic: [SOLVED] Insert Strain – Stress Curves of Material to describe mechanical properties. /install-additional-libraries-for-visual-sudio-2019; ; SOFA - Topic: [SOLVED] Install ""Additional libraries"" for Visual Sudio 2019. /installing-cgal-plugin; ; SOFA - Topic: [SOLVED] Installing CGAL Plugin. /installing-plugin-sofapython3; ; SOFA - Topic: [SOLVED] Installing plugin.sofapython3. /installing-sofa-on-mac-osx; . /feed; ; [SOLVED] installing SOFA on mac OSX – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] installing SOFA on mac OSX. SOFA - Topic: [SOLVED] installing SOFA on mac OSX. /installing-v17-12-from-dmg-package-on-mac-os; ; SOFA - Topic: [",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:334176,Testability,test,test,334176,"/import-urdf-models; ; SOFA - Topic: Import urdf models. /imposing-velocity-and-position; ; SOFA - Topic: Imposing velocity and position. /incise-without-mouse; ; SOFA - Topic: [SOLVED] Incise without mouse. /indices-of-roi-in-python-scene; ; SOFA - Topic: [SOLVED] indices of ROI in python scene. /informations-about-the-calculated-actuation-forces; ; SOFA - Topic: Informations about the calculated actuation forces. /init-and-cleanup-methods-in-simulation-tree; ; SOFA - Topic: [SOLVED] init and cleanup methods in simulation tree. /initialize-and-read-a-data; ; SOFA - Topic: [SOLVED] Initialize and read a data. /initialize-degrees-of-freedom; ; SOFA - Topic: Initialize degrees of freedom. /initializing-plugins; ; SOFA - Topic: [SOLVED] Initializing plugins. /input-and-output-in-sofa-scn-file; ; SOFA - Topic: [SOLVED] Input and Output in SOFA .scn file. /inserting_membrame_between_two_tets_regions; . /feed; ; Inserting membrane between two test regions – SOFA. SOFA - Topic: Inserting membrane between two test regions. /insert-localstiffnessfactor-variable-in-tetrahedronhyperelasticfemforcefield; ; SOFA - Topic: Insert localstiffnessfactor variable in TetrahedronHyperelasticFEMForceField. /insert-strain-stress-curves-of-material-to-describe-mechanical-properties; ; SOFA - Topic: [SOLVED] Insert Strain – Stress Curves of Material to describe mechanical properties. /install-additional-libraries-for-visual-sudio-2019; ; SOFA - Topic: [SOLVED] Install ""Additional libraries"" for Visual Sudio 2019. /installing-cgal-plugin; ; SOFA - Topic: [SOLVED] Installing CGAL Plugin. /installing-plugin-sofapython3; ; SOFA - Topic: [SOLVED] Installing plugin.sofapython3. /installing-sofa-on-mac-osx; . /feed; ; [SOLVED] installing SOFA on mac OSX – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] installing SOFA on mac OSX. SOFA - Topic: [SOLVED] installing SOFA on mac OSX. /installing-v17-12-from-dmg-package-on-mac-os; ; SOFA - Topic: [SOLVED] Installing v17.12 from DMG package on Mac OS. /insta",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:342076,Testability,test,test,342076,Topic: Linking error with Xitact Plugin. /6; ; SOFA - Topic: Linking error with Xitact Plugin. /7; ; SOFA - Topic: Linking error with Xitact Plugin. SOFA - Topic: Linking error with Xitact Plugin. /linking-geomagicdevice-position-with-mechanicalobject3d-position-in-cpp; ; SOFA - Topic: [SOLVED] Linking GeomagicDevice.position with MechanicalObject3d.position in cpp. /linking-issues-with-plugin-when-loading-it; ; SOFA - Topic: Linking issues with plugin when loading it. /link-problems; ; SOFA - Topic: [SOLVED] [Solved] Link problems. /link-sofa-as-an-external-dependency-in-a-c-project; ; SOFA - Topic: Link SOFA as an external dependency in a c++ project. /list-of-all-available-fields-for-vtkexporter; ; SOFA - Topic: List of all available fields for VTKExporter?. /liver-fem-implementation; ; SOFA - Topic: Liver FEM implementation. /lmconstraints-with-flexible-simulation; ; SOFA - Topic: [SOLVED] LMConstraints with Flexible simulation. /load-a-python-scene-from-a-c-unit-test; ; SOFA - Topic: [SOLVED] Load a Python scene from a C++ unit test. /loading-off-files; ; SOFA - Topic: [SOLVED] Loading OFF files. /loading-sofas-dlls-for-python3-8-on-windows; ; SOFA - Topic: [SOLVED] Loading SOFA’s dlls for Python3.8+ on Windows. /load-model-built-by-solidworks; ; SOFA - Topic: load model built by solidworks. /load-msh-and-vtk-file-in-xml-and-read-with-sofa; . /feed; ; [SOLVED] Load msh and vtk file in XML and read with sofa – SOFA. SOFA - Topic: [SOLVED] Load msh and vtk file in XML and read with sofa. /local-pivot-points-for-obj-files; ; SOFA - Topic: local pivot points for .obj files. /looking-for-anatomy-transfer-code; ; SOFA - Topic: [SOLVED] Looking for Anatomy Transfer code. /looking-for-an-example-on-cutting-a-3d-volumetric-mesh; ; SOFA - Topic: Looking for an example on cutting a 3D volumetric mesh. /looking-for-sofa-xml-reference; ; SOFA - Topic: Looking for SOFA XML Reference. /lots-of-glew-errors-while-building-sofa; ; SOFA - Topic: [SOLVED] Lots of glew errors while,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:342143,Testability,test,test,342143,Topic: Linking error with Xitact Plugin. /6; ; SOFA - Topic: Linking error with Xitact Plugin. /7; ; SOFA - Topic: Linking error with Xitact Plugin. SOFA - Topic: Linking error with Xitact Plugin. /linking-geomagicdevice-position-with-mechanicalobject3d-position-in-cpp; ; SOFA - Topic: [SOLVED] Linking GeomagicDevice.position with MechanicalObject3d.position in cpp. /linking-issues-with-plugin-when-loading-it; ; SOFA - Topic: Linking issues with plugin when loading it. /link-problems; ; SOFA - Topic: [SOLVED] [Solved] Link problems. /link-sofa-as-an-external-dependency-in-a-c-project; ; SOFA - Topic: Link SOFA as an external dependency in a c++ project. /list-of-all-available-fields-for-vtkexporter; ; SOFA - Topic: List of all available fields for VTKExporter?. /liver-fem-implementation; ; SOFA - Topic: Liver FEM implementation. /lmconstraints-with-flexible-simulation; ; SOFA - Topic: [SOLVED] LMConstraints with Flexible simulation. /load-a-python-scene-from-a-c-unit-test; ; SOFA - Topic: [SOLVED] Load a Python scene from a C++ unit test. /loading-off-files; ; SOFA - Topic: [SOLVED] Loading OFF files. /loading-sofas-dlls-for-python3-8-on-windows; ; SOFA - Topic: [SOLVED] Loading SOFA’s dlls for Python3.8+ on Windows. /load-model-built-by-solidworks; ; SOFA - Topic: load model built by solidworks. /load-msh-and-vtk-file-in-xml-and-read-with-sofa; . /feed; ; [SOLVED] Load msh and vtk file in XML and read with sofa – SOFA. SOFA - Topic: [SOLVED] Load msh and vtk file in XML and read with sofa. /local-pivot-points-for-obj-files; ; SOFA - Topic: local pivot points for .obj files. /looking-for-anatomy-transfer-code; ; SOFA - Topic: [SOLVED] Looking for Anatomy Transfer code. /looking-for-an-example-on-cutting-a-3d-volumetric-mesh; ; SOFA - Topic: Looking for an example on cutting a 3D volumetric mesh. /looking-for-sofa-xml-reference; ; SOFA - Topic: Looking for SOFA XML Reference. /lots-of-glew-errors-while-building-sofa; ; SOFA - Topic: [SOLVED] Lots of glew errors while,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:344480,Testability,log,log-for-tetrahedronfemforcefield,344480,A - Topic: [SOLVED] Macro definition of snprintf conflicts. /3; ; SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. /6; ; SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. /main-clock-frequency-in-sofa; ; SOFA - Topic: [SOLVED] Main clock frequency in SOFA. /making-controlled-deformations-without-phantom; . /feed; ; [SOLVED] Making controlled deformations without Phantom – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /6; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /8; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /making-models-move-with-each-other-and-not-separate; ; SOFA - Topic: [SOLVED] making models move with each other and not separate. /many-nan-values-in-eulerimplicitsolver-log-for-tetrahedronfemforcefield; ; SOFA - Topic: [SOLVED] Many ‘nan’ values in EulerImplicitSolver log for TetrahedronFEMForceField. /mapping-2-states-to-one-state; ; SOFA - Topic: Mapping 2 states to one state. /mapping-between-beamfemforcefield-behavioral-model-and-oglmodel; . /embed; ; SOFA - Topic: [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel. /feed; ; [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel – SOFA. SOFA - Topic: [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel. /mapping-between-rigid-and-deformable-objects; ; SOFA - Topic: [SOLVED] Mapping between rigid and deformable objects. /mapping-between-the-haptic-device-and-a-deformable-instrument; ; SOFA - Topic: mapping between the haptic device and a deformable instrument. /mapping-different-meshes; ; SOFA - Topic: [SOLVED] Mapping different meshes. /mapping-from-grid-to-fem-triangle; ; SOFA - Topic: Mapping from Grid to FEM Triangle. /mapping-grid-to-fem; ; SOFA - Topic: [SOLVED] Mapping Grid to ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:344580,Testability,log,log,344580,A - Topic: [SOLVED] Macro definition of snprintf conflicts. /3; ; SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. /6; ; SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. SOFA - Topic: [SOLVED] Macro definition of snprintf conflicts. /main-clock-frequency-in-sofa; ; SOFA - Topic: [SOLVED] Main clock frequency in SOFA. /making-controlled-deformations-without-phantom; . /feed; ; [SOLVED] Making controlled deformations without Phantom – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /6; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /8; ; SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. SOFA - Topic: [SOLVED] Making controlled deformations without Phantom. /making-models-move-with-each-other-and-not-separate; ; SOFA - Topic: [SOLVED] making models move with each other and not separate. /many-nan-values-in-eulerimplicitsolver-log-for-tetrahedronfemforcefield; ; SOFA - Topic: [SOLVED] Many ‘nan’ values in EulerImplicitSolver log for TetrahedronFEMForceField. /mapping-2-states-to-one-state; ; SOFA - Topic: Mapping 2 states to one state. /mapping-between-beamfemforcefield-behavioral-model-and-oglmodel; . /embed; ; SOFA - Topic: [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel. /feed; ; [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel – SOFA. SOFA - Topic: [SOLVED] Mapping between BeamFEMForceField behavioral model and oglmodel. /mapping-between-rigid-and-deformable-objects; ; SOFA - Topic: [SOLVED] Mapping between rigid and deformable objects. /mapping-between-the-haptic-device-and-a-deformable-instrument; ; SOFA - Topic: mapping between the haptic device and a deformable instrument. /mapping-different-meshes; ; SOFA - Topic: [SOLVED] Mapping different meshes. /mapping-from-grid-to-fem-triangle; ; SOFA - Topic: Mapping from Grid to FEM Triangle. /mapping-grid-to-fem; ; SOFA - Topic: [SOLVED] Mapping Grid to ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:382510,Testability,log,logger,382510,ialization-failed; ; SOFA - Topic: SceneLoaderXML Node initialization failed. /scene-reset-in-sofa-python; ; SOFA - Topic: [SOLVED] Scene reset in SOFA Python. /scene-slowing-down-on-interaction-with-two-forcefeedback-devices; ; SOFA - Topic: scene slowing down on interaction with two forcefeedback devices. /scientistengineer-positions-in-ms-of-layered-tissue-structures; . /page; . /3; ; SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. /searching-sofa-nodes-plugins-inside-a-scene; ; SOFA - Topic: [SOLVED] Searching SOFA Nodes plugins inside a scene. /seeing-indices-and-vertices-of-elements-in-run-window; . /feed; ; [SOLVED] Showing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - T,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:382571,Testability,log,logger,382571,initialization failed. /scene-reset-in-sofa-python; ; SOFA - Topic: [SOLVED] Scene reset in SOFA Python. /scene-slowing-down-on-interaction-with-two-forcefeedback-devices; ; SOFA - Topic: scene slowing down on interaction with two forcefeedback devices. /scientistengineer-positions-in-ms-of-layered-tissue-structures; . /page; . /3; ; SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. /searching-sofa-nodes-plugins-inside-a-scene; ; SOFA - Topic: [SOLVED] Searching SOFA Nodes plugins inside a scene. /seeing-indices-and-vertices-of-elements-in-run-window; . /feed; ; [SOLVED] Showing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3ds,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:382658,Testability,log,logger,382658,Scene reset in SOFA Python. /scene-slowing-down-on-interaction-with-two-forcefeedback-devices; ; SOFA - Topic: scene slowing down on interaction with two forcefeedback devices. /scientistengineer-positions-in-ms-of-layered-tissue-structures; . /page; . /3; ; SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. /searching-sofa-nodes-plugins-inside-a-scene; ; SOFA - Topic: [SOLVED] Searching SOFA Nodes plugins inside a scene. /seeing-indices-and-vertices-of-elements-in-run-window; . /feed; ; [SOLVED] Showing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3dsystems-still-functioning; . /feed; ; [SOLVED] Sensable drivers – 3DSystems sti,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:382728,Testability,log,logger,382728,-forcefeedback-devices; ; SOFA - Topic: scene slowing down on interaction with two forcefeedback devices. /scientistengineer-positions-in-ms-of-layered-tissue-structures; . /page; . /3; ; SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. /searching-sofa-nodes-plugins-inside-a-scene; ; SOFA - Topic: [SOLVED] Searching SOFA Nodes plugins inside a scene. /seeing-indices-and-vertices-of-elements-in-run-window; . /feed; ; [SOLVED] Showing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3dsystems-still-functioning; . /feed; ; [SOLVED] Sensable drivers – 3DSystems still functioning? – SOFA. SOFA - Topic: [SOLVED] Sensable drivers – 3DSy,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:382792,Testability,log,logger,382792,action with two forcefeedback devices. /scientistengineer-positions-in-ms-of-layered-tissue-structures; . /page; . /3; ; SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. SOFA - Topic: Scientist/engineer positions in M&S of layered tissue structures. /searching-sofa-nodes-plugins-inside-a-scene; ; SOFA - Topic: [SOLVED] Searching SOFA Nodes plugins inside a scene. /seeing-indices-and-vertices-of-elements-in-run-window; . /feed; ; [SOLVED] Showing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3dsystems-still-functioning; . /feed; ; [SOLVED] Sensable drivers – 3DSystems still functioning? – SOFA. SOFA - Topic: [SOLVED] Sensable drivers – 3DSystems still functioning?. /sensable-plugin; . /feed; ; [SOLVED] Sen,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:404690,Testability,test,test,404690,vementConstraint in cpp language – SOFA. SOFA - Topic: surface mapping and PartialLinearMovementConstraint in cpp language. /surface-pressure-constraint-causes-unrealistic-sliding; ; SOFA - Topic: Surface Pressure Constraint causes unrealistic sliding. /suturing-simulaton-in-sofa; ; SOFA - Topic: Suturing simulaton in SOFA. /sw21-information-about-sofa-week-2021; ; SOFA - Topic: [SW21] Information about SOFA Week 2021. /system-requirement-for-sofa; ; SOFA - Topic: [SOLVED] System requirement for SOFA. /tactile-sensing-with-deformable-material-in-sofa; ; SOFA - Topic: Tactile sensing with deformable material in Sofa. /take-a-screenshot-automatically-with-sofapython; ; SOFA - Topic: [SOLVED] Take a screenshot automatically with SofaPython. /target-qt5xml-not-found-cmake-gui-win10-vs2017x64; ; SOFA - Topic: [SOLVED] Target “Qt5::Xml” not found (cmake-gui/Win10/VS2017x64). /tell-us-what-you-think-about-sofa; ; SOFA - Topic: Tell us what you think about SOFA!. /test; ; SOFA - Topic: add element to tetra mesh sim problem. /testing-of-program-iauatoc13; ; SOFA - Topic: Testing of program iauAtoc13. /tetmeshing-with-cgal-and-sofa; . /feed; ; [SOLVED] Tetmeshing with CGAL and SOFA – SOFA. SOFA - Topic: [SOLVED] Tetmeshing with CGAL and SOFA. /tetrahedralcorotationalfemforcefeild-used-with-surfaceregistration; . /feed; ; [SOLVED] TetrahedralCorotationalFEMForcefeild used with SurfaceRegistration – SOFA. SOFA - Topic: [SOLVED] TetrahedralCorotationalFEMForcefeild used with SurfaceRegistration. /tetrahedralcorotationalfemforcefield-scn; ; SOFA - Topic: [SOLVED] TetrahedralCorotationalFEMForceField.scn. /tetrahedral-mesh-generation; ; SOFA - Topic: [SOLVED] Tetrahedral mesh generation. /tetrahedrondiffusionfemforcefield-example; ; SOFA - Topic: TetrahedronDiffusionFEMForceField example. /tetrahedronfemforcefield; ; SOFA - Topic: [SOLVED] TetrahedronFEMforcefield. /tetra-self-collisions; ; SOFA - Topic: [SOLVED] tetra self collisions?. /tex-coords-in-oglmodel; ; SOFA - Topic: Tex,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:404752,Testability,test,testing-of-program-,404752,g and PartialLinearMovementConstraint in cpp language. /surface-pressure-constraint-causes-unrealistic-sliding; ; SOFA - Topic: Surface Pressure Constraint causes unrealistic sliding. /suturing-simulaton-in-sofa; ; SOFA - Topic: Suturing simulaton in SOFA. /sw21-information-about-sofa-week-2021; ; SOFA - Topic: [SW21] Information about SOFA Week 2021. /system-requirement-for-sofa; ; SOFA - Topic: [SOLVED] System requirement for SOFA. /tactile-sensing-with-deformable-material-in-sofa; ; SOFA - Topic: Tactile sensing with deformable material in Sofa. /take-a-screenshot-automatically-with-sofapython; ; SOFA - Topic: [SOLVED] Take a screenshot automatically with SofaPython. /target-qt5xml-not-found-cmake-gui-win10-vs2017x64; ; SOFA - Topic: [SOLVED] Target “Qt5::Xml” not found (cmake-gui/Win10/VS2017x64). /tell-us-what-you-think-about-sofa; ; SOFA - Topic: Tell us what you think about SOFA!. /test; ; SOFA - Topic: add element to tetra mesh sim problem. /testing-of-program-iauatoc13; ; SOFA - Topic: Testing of program iauAtoc13. /tetmeshing-with-cgal-and-sofa; . /feed; ; [SOLVED] Tetmeshing with CGAL and SOFA – SOFA. SOFA - Topic: [SOLVED] Tetmeshing with CGAL and SOFA. /tetrahedralcorotationalfemforcefeild-used-with-surfaceregistration; . /feed; ; [SOLVED] TetrahedralCorotationalFEMForcefeild used with SurfaceRegistration – SOFA. SOFA - Topic: [SOLVED] TetrahedralCorotationalFEMForcefeild used with SurfaceRegistration. /tetrahedralcorotationalfemforcefield-scn; ; SOFA - Topic: [SOLVED] TetrahedralCorotationalFEMForceField.scn. /tetrahedral-mesh-generation; ; SOFA - Topic: [SOLVED] Tetrahedral mesh generation. /tetrahedrondiffusionfemforcefield-example; ; SOFA - Topic: TetrahedronDiffusionFEMForceField example. /tetrahedronfemforcefield; ; SOFA - Topic: [SOLVED] TetrahedronFEMforcefield. /tetra-self-collisions; ; SOFA - Topic: [SOLVED] tetra self collisions?. /tex-coords-in-oglmodel; ; SOFA - Topic: Tex coords in OglModel. /textures-of-model-are-messed-up-when-using-sofa-,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:438420,Testability,benchmark,benchmark,438420,eam-adaptater-constraints; . /feed; ; continuum robots; beam adaptater; constraints – SOFA. SOFA - Topic Tag: continuum robots; beam adaptater; constraints. /control; . /feed; ; control – SOFA. SOFA - Topic Tag: control. /controller; . /feed; ; Controller – SOFA. SOFA - Topic Tag: Controller. /control-xml-variables-in-c-or-python; . /feed; ; Control xml variables in C++ or Python. – SOFA. SOFA - Topic Tag: Control xml variables in C++ or Python. /coulomb; . /feed; ; coulomb – SOFA. SOFA - Topic Tag: coulomb. /cpp-controller; . /feed; ; Cpp controller – SOFA. SOFA - Topic Tag: Cpp controller. /cpp-make-error; . /feed; ; cpp make error – SOFA. SOFA - Topic Tag: cpp make error. /cpp-plugins; . /feed; ; cpp plugins – SOFA. SOFA - Topic Tag: cpp plugins. /crash; . /feed; ; crash – SOFA. SOFA - Topic Tag: crash. /crevice; . /feed; ; crevice – SOFA. SOFA - Topic Tag: crevice. /cube; . /feed; ; cube – SOFA. SOFA - Topic Tag: cube. /cuda; . /feed; ; Cuda – SOFA. SOFA - Topic Tag: Cuda. /cuda-benchmark; . /feed; ; CUDA Benchmark – SOFA. SOFA - Topic Tag: CUDA Benchmark. /cutfem; . /feed; ; cutFEM – SOFA. SOFA - Topic Tag: cutFEM. /cut-soft-body; . /feed; ; cut soft body – SOFA. SOFA - Topic Tag: cut soft body. /cutting; . /feed; ; cutting – SOFA. SOFA - Topic Tag: cutting. /cutting-simulation; . /feed; ; Cutting Simulation – SOFA. SOFA - Topic Tag: Cutting Simulation. /damping; . /feed; ; damping – SOFA. SOFA - Topic Tag: damping. /damping-force-field-integration; . /feed; ; damping force field integration – SOFA. SOFA - Topic Tag: damping force field integration. /damping-gravity-fallspeed-eulerimplicitsolver-constantforcefield; . /feed; ; Damping Gravity fallspeed EulerImplicitSolver ConstantForceField – SOFA. SOFA - Topic Tag: Damping Gravity fallspeed EulerImplicitSolver ConstantForceField. /data; . /feed; ; Data – SOFA. SOFA - Topic Tag: Data. /data-component; . /feed; ; Data Component – SOFA. SOFA - Topic Tag: Data Component. /datadisplay-pointdata-c; . /feed; ; DataDisp,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:448658,Testability,test,testing,448658, SOFA - Topic Tag: HDMI. /headers; . /feed; ; headers – SOFA. SOFA - Topic Tag: headers. /heat-diffusion; . /feed; ; Heat diffusion – SOFA. SOFA - Topic Tag: Heat diffusion. /heat-diffusion-fem-tetrahedra; . /feed; ; heat diffusion fem tetrahedra – SOFA. SOFA - Topic Tag: heat diffusion fem tetrahedra. /help-with-bilateralinteractionconstraint; . /feed; ; Help with BilateralInteractionConstraint – SOFA. SOFA - Topic Tag: Help with BilateralInteractionConstraint. /hexahedral; . /feed; ; hexahedral – SOFA. SOFA - Topic Tag: hexahedral. /hexahedron; . /feed; ; hexahedron – SOFA. SOFA - Topic Tag: hexahedron. /histogram; . /feed; ; histogram – SOFA. SOFA - Topic Tag: histogram. /hmsim-conference; . /feed; ; HMSIM conference – SOFA. SOFA - Topic Tag: HMSIM conference. /how-to-solve-this-problem; . /feed; ; how to solve this problem? – SOFA. SOFA - Topic Tag: how to solve this problem?. /hyperelastic; . /feed; ; hyperelastic – SOFA. SOFA - Topic Tag: hyperelastic. /hyper-elastic-mass-links-method-performance-testing; . /feed; ; Hyper-Elastic Mass Links method; performance testing – SOFA. SOFA - Topic Tag: Hyper-Elastic Mass Links method; performance testing. /hyper-elastic-material; . /feed; ; Hyper-elastic Material – SOFA. SOFA - Topic Tag: Hyper-elastic Material. /i; . /feed; ; I – SOFA. SOFA - Topic Tag: I. /ide-operating-system-development-environment; . /feed; ; IDE; Operating System; Development Environment; – SOFA. SOFA - Topic Tag: IDE; Operating System; Development Environment;. /iga-xfem-cad; . /feed; ; IGA XFEM CAD – SOFA. SOFA - Topic Tag: IGA XFEM CAD. /image; . /feed; ; Image – SOFA. SOFA - Topic Tag: Image. /image-viewer; . /feed; ; Image Viewer – SOFA. SOFA - Topic Tag: Image Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. S,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:448723,Testability,test,testing,448723,OFA - Topic Tag: headers. /heat-diffusion; . /feed; ; Heat diffusion – SOFA. SOFA - Topic Tag: Heat diffusion. /heat-diffusion-fem-tetrahedra; . /feed; ; heat diffusion fem tetrahedra – SOFA. SOFA - Topic Tag: heat diffusion fem tetrahedra. /help-with-bilateralinteractionconstraint; . /feed; ; Help with BilateralInteractionConstraint – SOFA. SOFA - Topic Tag: Help with BilateralInteractionConstraint. /hexahedral; . /feed; ; hexahedral – SOFA. SOFA - Topic Tag: hexahedral. /hexahedron; . /feed; ; hexahedron – SOFA. SOFA - Topic Tag: hexahedron. /histogram; . /feed; ; histogram – SOFA. SOFA - Topic Tag: histogram. /hmsim-conference; . /feed; ; HMSIM conference – SOFA. SOFA - Topic Tag: HMSIM conference. /how-to-solve-this-problem; . /feed; ; how to solve this problem? – SOFA. SOFA - Topic Tag: how to solve this problem?. /hyperelastic; . /feed; ; hyperelastic – SOFA. SOFA - Topic Tag: hyperelastic. /hyper-elastic-mass-links-method-performance-testing; . /feed; ; Hyper-Elastic Mass Links method; performance testing – SOFA. SOFA - Topic Tag: Hyper-Elastic Mass Links method; performance testing. /hyper-elastic-material; . /feed; ; Hyper-elastic Material – SOFA. SOFA - Topic Tag: Hyper-elastic Material. /i; . /feed; ; I – SOFA. SOFA - Topic Tag: I. /ide-operating-system-development-environment; . /feed; ; IDE; Operating System; Development Environment; – SOFA. SOFA - Topic Tag: IDE; Operating System; Development Environment;. /iga-xfem-cad; . /feed; ; IGA XFEM CAD – SOFA. SOFA - Topic Tag: IGA XFEM CAD. /image; . /feed; ; Image – SOFA. SOFA - Topic Tag: Image. /image-viewer; . /feed; ; Image Viewer – SOFA. SOFA - Topic Tag: Image Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. SOFA - Topic Tag: import mesh. /incision; . /feed; ; incision – ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:448802,Testability,test,testing,448802,SOFA. SOFA - Topic Tag: Heat diffusion. /heat-diffusion-fem-tetrahedra; . /feed; ; heat diffusion fem tetrahedra – SOFA. SOFA - Topic Tag: heat diffusion fem tetrahedra. /help-with-bilateralinteractionconstraint; . /feed; ; Help with BilateralInteractionConstraint – SOFA. SOFA - Topic Tag: Help with BilateralInteractionConstraint. /hexahedral; . /feed; ; hexahedral – SOFA. SOFA - Topic Tag: hexahedral. /hexahedron; . /feed; ; hexahedron – SOFA. SOFA - Topic Tag: hexahedron. /histogram; . /feed; ; histogram – SOFA. SOFA - Topic Tag: histogram. /hmsim-conference; . /feed; ; HMSIM conference – SOFA. SOFA - Topic Tag: HMSIM conference. /how-to-solve-this-problem; . /feed; ; how to solve this problem? – SOFA. SOFA - Topic Tag: how to solve this problem?. /hyperelastic; . /feed; ; hyperelastic – SOFA. SOFA - Topic Tag: hyperelastic. /hyper-elastic-mass-links-method-performance-testing; . /feed; ; Hyper-Elastic Mass Links method; performance testing – SOFA. SOFA - Topic Tag: Hyper-Elastic Mass Links method; performance testing. /hyper-elastic-material; . /feed; ; Hyper-elastic Material – SOFA. SOFA - Topic Tag: Hyper-elastic Material. /i; . /feed; ; I – SOFA. SOFA - Topic Tag: I. /ide-operating-system-development-environment; . /feed; ; IDE; Operating System; Development Environment; – SOFA. SOFA - Topic Tag: IDE; Operating System; Development Environment;. /iga-xfem-cad; . /feed; ; IGA XFEM CAD – SOFA. SOFA - Topic Tag: IGA XFEM CAD. /image; . /feed; ; Image – SOFA. SOFA - Topic Tag: Image. /image-viewer; . /feed; ; Image Viewer – SOFA. SOFA - Topic Tag: Image Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. SOFA - Topic Tag: import mesh. /incision; . /feed; ; incision – SOFA. SOFA - Topic Tag: incision. /incision2d; . /feed; ; Incision2D – ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:485574,Testability,test,test,485574,riction; . /feed; ; SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction – SOFA. SOFA - Topic Tag: SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction. /surgerysimulation; . /feed; ; #surgerysimulation – SOFA. SOFA - Topic Tag: #surgerysimulation. /suture-simulaion; . /feed; ; suture simulaion – SOFA. SOFA - Topic Tag: suture simulaion. /suturing; . /feed; ; Suturing – SOFA. SOFA - Topic Tag: Suturing. /system; . /feed; ; system – SOFA. SOFA - Topic Tag: system. /tactile; . /feed; ; Tactile – SOFA. SOFA - Topic Tag: Tactile. /tags; . /feed; ; tags – SOFA. SOFA - Topic Tag: tags. /target-points; . /feed; ; target points – SOFA. SOFA - Topic Tag: target points. /teaching; . /feed; ; teaching – SOFA. SOFA - Topic Tag: teaching. /tearing; . /feed; ; tearing – SOFA. SOFA - Topic Tag: tearing. /template; . /feed; ; template – SOFA. SOFA - Topic Tag: template. /tendonrobot; . /feed; ; TendonRobot – SOFA. SOFA - Topic Tag: TendonRobot. /test; . /feed; ; test – SOFA. SOFA - Topic Tag: test. /test-animate; . /feed; ; test animate – SOFA. SOFA - Topic Tag: test animate. /tetrahedra; . /feed; ; tetrahedra – SOFA. SOFA - Topic Tag: tetrahedra. /tetrahedralcorotationalfemforcefield; . /feed; ; TetrahedralCorotationalFEMForceField – SOFA. SOFA - Topic Tag: TetrahedralCorotationalFEMForceField. /tetrahedralfem; . /feed; ; TetrahedralFEM – SOFA. SOFA - Topic Tag: TetrahedralFEM. /tetrahedraltensormassforcefield; . /feed; ; TetrahedralTensorMassForceField – SOFA. SOFA - Topic Tag: TetrahedralTensorMassForceField. /tetrahedron; . /feed; ; Tetrahedron – SOFA. SOFA - Topic Tag: Tetrahedron. /tetrahedronsettopologyalgorithms; . /feed; ; TetrahedronSetTopologyAlgorithms – SOFA. SOFA - Topic Tag: TetrahedronSetTopologyAlgorithms. /textile; . /feed; ; textile – SOFA. SOFA - Topic Tag: textile. /texture; . /feed; ; texture – SOFA. SOFA - Topic Tag: texture. /the-legged-robot-with-flexible-passive-trunk; . /feed; ; The Legged Robot with Fl,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:485591,Testability,test,test,485591,; ; SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction – SOFA. SOFA - Topic Tag: SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction. /surgerysimulation; . /feed; ; #surgerysimulation – SOFA. SOFA - Topic Tag: #surgerysimulation. /suture-simulaion; . /feed; ; suture simulaion – SOFA. SOFA - Topic Tag: suture simulaion. /suturing; . /feed; ; Suturing – SOFA. SOFA - Topic Tag: Suturing. /system; . /feed; ; system – SOFA. SOFA - Topic Tag: system. /tactile; . /feed; ; Tactile – SOFA. SOFA - Topic Tag: Tactile. /tags; . /feed; ; tags – SOFA. SOFA - Topic Tag: tags. /target-points; . /feed; ; target points – SOFA. SOFA - Topic Tag: target points. /teaching; . /feed; ; teaching – SOFA. SOFA - Topic Tag: teaching. /tearing; . /feed; ; tearing – SOFA. SOFA - Topic Tag: tearing. /template; . /feed; ; template – SOFA. SOFA - Topic Tag: template. /tendonrobot; . /feed; ; TendonRobot – SOFA. SOFA - Topic Tag: TendonRobot. /test; . /feed; ; test – SOFA. SOFA - Topic Tag: test. /test-animate; . /feed; ; test animate – SOFA. SOFA - Topic Tag: test animate. /tetrahedra; . /feed; ; tetrahedra – SOFA. SOFA - Topic Tag: tetrahedra. /tetrahedralcorotationalfemforcefield; . /feed; ; TetrahedralCorotationalFEMForceField – SOFA. SOFA - Topic Tag: TetrahedralCorotationalFEMForceField. /tetrahedralfem; . /feed; ; TetrahedralFEM – SOFA. SOFA - Topic Tag: TetrahedralFEM. /tetrahedraltensormassforcefield; . /feed; ; TetrahedralTensorMassForceField – SOFA. SOFA - Topic Tag: TetrahedralTensorMassForceField. /tetrahedron; . /feed; ; Tetrahedron – SOFA. SOFA - Topic Tag: Tetrahedron. /tetrahedronsettopologyalgorithms; . /feed; ; TetrahedronSetTopologyAlgorithms – SOFA. SOFA - Topic Tag: TetrahedronSetTopologyAlgorithms. /textile; . /feed; ; textile – SOFA. SOFA - Topic Tag: textile. /texture; . /feed; ; texture – SOFA. SOFA - Topic Tag: texture. /the-legged-robot-with-flexible-passive-trunk; . /feed; ; The Legged Robot with Flexible Passive ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:485622,Testability,test,test,485622,tarint SurfacePressureForcefield SoftRobots Sliding Friction – SOFA. SOFA - Topic Tag: SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction. /surgerysimulation; . /feed; ; #surgerysimulation – SOFA. SOFA - Topic Tag: #surgerysimulation. /suture-simulaion; . /feed; ; suture simulaion – SOFA. SOFA - Topic Tag: suture simulaion. /suturing; . /feed; ; Suturing – SOFA. SOFA - Topic Tag: Suturing. /system; . /feed; ; system – SOFA. SOFA - Topic Tag: system. /tactile; . /feed; ; Tactile – SOFA. SOFA - Topic Tag: Tactile. /tags; . /feed; ; tags – SOFA. SOFA - Topic Tag: tags. /target-points; . /feed; ; target points – SOFA. SOFA - Topic Tag: target points. /teaching; . /feed; ; teaching – SOFA. SOFA - Topic Tag: teaching. /tearing; . /feed; ; tearing – SOFA. SOFA - Topic Tag: tearing. /template; . /feed; ; template – SOFA. SOFA - Topic Tag: template. /tendonrobot; . /feed; ; TendonRobot – SOFA. SOFA - Topic Tag: TendonRobot. /test; . /feed; ; test – SOFA. SOFA - Topic Tag: test. /test-animate; . /feed; ; test animate – SOFA. SOFA - Topic Tag: test animate. /tetrahedra; . /feed; ; tetrahedra – SOFA. SOFA - Topic Tag: tetrahedra. /tetrahedralcorotationalfemforcefield; . /feed; ; TetrahedralCorotationalFEMForceField – SOFA. SOFA - Topic Tag: TetrahedralCorotationalFEMForceField. /tetrahedralfem; . /feed; ; TetrahedralFEM – SOFA. SOFA - Topic Tag: TetrahedralFEM. /tetrahedraltensormassforcefield; . /feed; ; TetrahedralTensorMassForceField – SOFA. SOFA - Topic Tag: TetrahedralTensorMassForceField. /tetrahedron; . /feed; ; Tetrahedron – SOFA. SOFA - Topic Tag: Tetrahedron. /tetrahedronsettopologyalgorithms; . /feed; ; TetrahedronSetTopologyAlgorithms – SOFA. SOFA - Topic Tag: TetrahedronSetTopologyAlgorithms. /textile; . /feed; ; textile – SOFA. SOFA - Topic Tag: textile. /texture; . /feed; ; texture – SOFA. SOFA - Topic Tag: texture. /the-legged-robot-with-flexible-passive-trunk; . /feed; ; The Legged Robot with Flexible Passive Trunk. – SOFA. SOFA - T,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:485629,Testability,test,test-animate,485629,reForcefield SoftRobots Sliding Friction – SOFA. SOFA - Topic Tag: SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction. /surgerysimulation; . /feed; ; #surgerysimulation – SOFA. SOFA - Topic Tag: #surgerysimulation. /suture-simulaion; . /feed; ; suture simulaion – SOFA. SOFA - Topic Tag: suture simulaion. /suturing; . /feed; ; Suturing – SOFA. SOFA - Topic Tag: Suturing. /system; . /feed; ; system – SOFA. SOFA - Topic Tag: system. /tactile; . /feed; ; Tactile – SOFA. SOFA - Topic Tag: Tactile. /tags; . /feed; ; tags – SOFA. SOFA - Topic Tag: tags. /target-points; . /feed; ; target points – SOFA. SOFA - Topic Tag: target points. /teaching; . /feed; ; teaching – SOFA. SOFA - Topic Tag: teaching. /tearing; . /feed; ; tearing – SOFA. SOFA - Topic Tag: tearing. /template; . /feed; ; template – SOFA. SOFA - Topic Tag: template. /tendonrobot; . /feed; ; TendonRobot – SOFA. SOFA - Topic Tag: TendonRobot. /test; . /feed; ; test – SOFA. SOFA - Topic Tag: test. /test-animate; . /feed; ; test animate – SOFA. SOFA - Topic Tag: test animate. /tetrahedra; . /feed; ; tetrahedra – SOFA. SOFA - Topic Tag: tetrahedra. /tetrahedralcorotationalfemforcefield; . /feed; ; TetrahedralCorotationalFEMForceField – SOFA. SOFA - Topic Tag: TetrahedralCorotationalFEMForceField. /tetrahedralfem; . /feed; ; TetrahedralFEM – SOFA. SOFA - Topic Tag: TetrahedralFEM. /tetrahedraltensormassforcefield; . /feed; ; TetrahedralTensorMassForceField – SOFA. SOFA - Topic Tag: TetrahedralTensorMassForceField. /tetrahedron; . /feed; ; Tetrahedron – SOFA. SOFA - Topic Tag: Tetrahedron. /tetrahedronsettopologyalgorithms; . /feed; ; TetrahedronSetTopologyAlgorithms – SOFA. SOFA - Topic Tag: TetrahedronSetTopologyAlgorithms. /textile; . /feed; ; textile – SOFA. SOFA - Topic Tag: textile. /texture; . /feed; ; texture – SOFA. SOFA - Topic Tag: texture. /the-legged-robot-with-flexible-passive-trunk; . /feed; ; The Legged Robot with Flexible Passive Trunk. – SOFA. SOFA - Topic Tag: The Legged ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:485654,Testability,test,test,485654,Sliding Friction – SOFA. SOFA - Topic Tag: SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction. /surgerysimulation; . /feed; ; #surgerysimulation – SOFA. SOFA - Topic Tag: #surgerysimulation. /suture-simulaion; . /feed; ; suture simulaion – SOFA. SOFA - Topic Tag: suture simulaion. /suturing; . /feed; ; Suturing – SOFA. SOFA - Topic Tag: Suturing. /system; . /feed; ; system – SOFA. SOFA - Topic Tag: system. /tactile; . /feed; ; Tactile – SOFA. SOFA - Topic Tag: Tactile. /tags; . /feed; ; tags – SOFA. SOFA - Topic Tag: tags. /target-points; . /feed; ; target points – SOFA. SOFA - Topic Tag: target points. /teaching; . /feed; ; teaching – SOFA. SOFA - Topic Tag: teaching. /tearing; . /feed; ; tearing – SOFA. SOFA - Topic Tag: tearing. /template; . /feed; ; template – SOFA. SOFA - Topic Tag: template. /tendonrobot; . /feed; ; TendonRobot – SOFA. SOFA - Topic Tag: TendonRobot. /test; . /feed; ; test – SOFA. SOFA - Topic Tag: test. /test-animate; . /feed; ; test animate – SOFA. SOFA - Topic Tag: test animate. /tetrahedra; . /feed; ; tetrahedra – SOFA. SOFA - Topic Tag: tetrahedra. /tetrahedralcorotationalfemforcefield; . /feed; ; TetrahedralCorotationalFEMForceField – SOFA. SOFA - Topic Tag: TetrahedralCorotationalFEMForceField. /tetrahedralfem; . /feed; ; TetrahedralFEM – SOFA. SOFA - Topic Tag: TetrahedralFEM. /tetrahedraltensormassforcefield; . /feed; ; TetrahedralTensorMassForceField – SOFA. SOFA - Topic Tag: TetrahedralTensorMassForceField. /tetrahedron; . /feed; ; Tetrahedron – SOFA. SOFA - Topic Tag: Tetrahedron. /tetrahedronsettopologyalgorithms; . /feed; ; TetrahedronSetTopologyAlgorithms – SOFA. SOFA - Topic Tag: TetrahedronSetTopologyAlgorithms. /textile; . /feed; ; textile – SOFA. SOFA - Topic Tag: textile. /texture; . /feed; ; texture – SOFA. SOFA - Topic Tag: texture. /the-legged-robot-with-flexible-passive-trunk; . /feed; ; The Legged Robot with Flexible Passive Trunk. – SOFA. SOFA - Topic Tag: The Legged Robot with Flexible Pas,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:485693,Testability,test,test,485693, Topic Tag: SurfacePressureConstarint SurfacePressureForcefield SoftRobots Sliding Friction. /surgerysimulation; . /feed; ; #surgerysimulation – SOFA. SOFA - Topic Tag: #surgerysimulation. /suture-simulaion; . /feed; ; suture simulaion – SOFA. SOFA - Topic Tag: suture simulaion. /suturing; . /feed; ; Suturing – SOFA. SOFA - Topic Tag: Suturing. /system; . /feed; ; system – SOFA. SOFA - Topic Tag: system. /tactile; . /feed; ; Tactile – SOFA. SOFA - Topic Tag: Tactile. /tags; . /feed; ; tags – SOFA. SOFA - Topic Tag: tags. /target-points; . /feed; ; target points – SOFA. SOFA - Topic Tag: target points. /teaching; . /feed; ; teaching – SOFA. SOFA - Topic Tag: teaching. /tearing; . /feed; ; tearing – SOFA. SOFA - Topic Tag: tearing. /template; . /feed; ; template – SOFA. SOFA - Topic Tag: template. /tendonrobot; . /feed; ; TendonRobot – SOFA. SOFA - Topic Tag: TendonRobot. /test; . /feed; ; test – SOFA. SOFA - Topic Tag: test. /test-animate; . /feed; ; test animate – SOFA. SOFA - Topic Tag: test animate. /tetrahedra; . /feed; ; tetrahedra – SOFA. SOFA - Topic Tag: tetrahedra. /tetrahedralcorotationalfemforcefield; . /feed; ; TetrahedralCorotationalFEMForceField – SOFA. SOFA - Topic Tag: TetrahedralCorotationalFEMForceField. /tetrahedralfem; . /feed; ; TetrahedralFEM – SOFA. SOFA - Topic Tag: TetrahedralFEM. /tetrahedraltensormassforcefield; . /feed; ; TetrahedralTensorMassForceField – SOFA. SOFA - Topic Tag: TetrahedralTensorMassForceField. /tetrahedron; . /feed; ; Tetrahedron – SOFA. SOFA - Topic Tag: Tetrahedron. /tetrahedronsettopologyalgorithms; . /feed; ; TetrahedronSetTopologyAlgorithms – SOFA. SOFA - Topic Tag: TetrahedronSetTopologyAlgorithms. /textile; . /feed; ; textile – SOFA. SOFA - Topic Tag: textile. /texture; . /feed; ; texture – SOFA. SOFA - Topic Tag: texture. /the-legged-robot-with-flexible-passive-trunk; . /feed; ; The Legged Robot with Flexible Passive Trunk. – SOFA. SOFA - Topic Tag: The Legged Robot with Flexible Passive Trunk. /theory; . /feed; ;,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:488838,Testability,test,testing,488838, Topic Tag: transform. /tree; . /feed; ; tree – SOFA. SOFA - Topic Tag: tree. /triangles; . /feed; ; triangles – SOFA. SOFA - Topic Tag: triangles. /triangularfem; . /feed; ; TriangularFEM – SOFA. SOFA - Topic Tag: TriangularFEM. /tutorials; . /feed; ; tutorials – SOFA. SOFA - Topic Tag: tutorials. /two-haptic-devices; . /feed; ; two haptic devices – SOFA. SOFA - Topic Tag: two haptic devices. /two-haptic-forcefeedback; . /feed; ; two haptic forcefeedback – SOFA. SOFA - Topic Tag: two haptic forcefeedback. /two-rigid-parts; . /feed; ; two rigid parts – SOFA. SOFA - Topic Tag: two rigid parts. /ubuntu; . /feed; ; ubuntu – SOFA. SOFA - Topic Tag: ubuntu. /ubuntu16-04-lts; . /feed; ; UBUNTU(16.04 LTS) – SOFA. SOFA - Topic Tag: UBUNTU(16.04 LTS). /unable-to-determine-the-path; . /feed; ; Unable to determine the path – SOFA. SOFA - Topic Tag: Unable to determine the path. /unit; . /feed; ; unit – SOFA. SOFA - Topic Tag: unit. /units; . /feed; ; units – SOFA. SOFA - Topic Tag: units. /unit-testing; . /feed; ; unit testing – SOFA. SOFA - Topic Tag: unit testing. /unity3d-digital-trainers-blender-sofa; . /feed; ; Unity3d Digital-Trainers Blender-SOFA – SOFA. SOFA - Topic Tag: Unity3d Digital-Trainers Blender-SOFA. /unreal; . /feed; ; Unreal – SOFA. SOFA - Topic Tag: Unreal. /unreal-engine; . /feed; ; Unreal Engine – SOFA. SOFA - Topic Tag: Unreal Engine. /urdf; . /feed; ; urdf – SOFA. SOFA - Topic Tag: urdf. /using-sofa; . /feed; ; using sofa – SOFA. SOFA - Topic Tag: using sofa. /using-sofapython3; . /feed; ; using sofapython3 – SOFA. SOFA - Topic Tag: using sofapython3. /v16-08; . /feed; ; v16.08 – SOFA. SOFA - Topic Tag: v16.08. /v18-06; . /feed; ; v18.06 – SOFA. SOFA - Topic Tag: v18.06. /v19-06; . /feed; ; v19.06 – SOFA. SOFA - Topic Tag: v19.06. /v19-12-plugin-linking; . /feed; ; v19.12 plugin linking – SOFA. SOFA - Topic Tag: v19.12 plugin linking. /v20; . /feed; ; v20 – SOFA. SOFA - Topic Tag: v20. /v20-12; . /feed; ; v20.12 – SOFA. SOFA - Topic Tag: v20.12. /v20-12-,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:488863,Testability,test,testing,488863,tree; . /feed; ; tree – SOFA. SOFA - Topic Tag: tree. /triangles; . /feed; ; triangles – SOFA. SOFA - Topic Tag: triangles. /triangularfem; . /feed; ; TriangularFEM – SOFA. SOFA - Topic Tag: TriangularFEM. /tutorials; . /feed; ; tutorials – SOFA. SOFA - Topic Tag: tutorials. /two-haptic-devices; . /feed; ; two haptic devices – SOFA. SOFA - Topic Tag: two haptic devices. /two-haptic-forcefeedback; . /feed; ; two haptic forcefeedback – SOFA. SOFA - Topic Tag: two haptic forcefeedback. /two-rigid-parts; . /feed; ; two rigid parts – SOFA. SOFA - Topic Tag: two rigid parts. /ubuntu; . /feed; ; ubuntu – SOFA. SOFA - Topic Tag: ubuntu. /ubuntu16-04-lts; . /feed; ; UBUNTU(16.04 LTS) – SOFA. SOFA - Topic Tag: UBUNTU(16.04 LTS). /unable-to-determine-the-path; . /feed; ; Unable to determine the path – SOFA. SOFA - Topic Tag: Unable to determine the path. /unit; . /feed; ; unit – SOFA. SOFA - Topic Tag: unit. /units; . /feed; ; units – SOFA. SOFA - Topic Tag: units. /unit-testing; . /feed; ; unit testing – SOFA. SOFA - Topic Tag: unit testing. /unity3d-digital-trainers-blender-sofa; . /feed; ; Unity3d Digital-Trainers Blender-SOFA – SOFA. SOFA - Topic Tag: Unity3d Digital-Trainers Blender-SOFA. /unreal; . /feed; ; Unreal – SOFA. SOFA - Topic Tag: Unreal. /unreal-engine; . /feed; ; Unreal Engine – SOFA. SOFA - Topic Tag: Unreal Engine. /urdf; . /feed; ; urdf – SOFA. SOFA - Topic Tag: urdf. /using-sofa; . /feed; ; using sofa – SOFA. SOFA - Topic Tag: using sofa. /using-sofapython3; . /feed; ; using sofapython3 – SOFA. SOFA - Topic Tag: using sofapython3. /v16-08; . /feed; ; v16.08 – SOFA. SOFA - Topic Tag: v16.08. /v18-06; . /feed; ; v18.06 – SOFA. SOFA - Topic Tag: v18.06. /v19-06; . /feed; ; v19.06 – SOFA. SOFA - Topic Tag: v19.06. /v19-12-plugin-linking; . /feed; ; v19.12 plugin linking – SOFA. SOFA - Topic Tag: v19.12 plugin linking. /v20; . /feed; ; v20 – SOFA. SOFA - Topic Tag: v20. /v20-12; . /feed; ; v20.12 – SOFA. SOFA - Topic Tag: v20.12. /v20-12-02; . /feed; ; v20.12.0,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:488902,Testability,test,testing,488902,OFA - Topic Tag: tree. /triangles; . /feed; ; triangles – SOFA. SOFA - Topic Tag: triangles. /triangularfem; . /feed; ; TriangularFEM – SOFA. SOFA - Topic Tag: TriangularFEM. /tutorials; . /feed; ; tutorials – SOFA. SOFA - Topic Tag: tutorials. /two-haptic-devices; . /feed; ; two haptic devices – SOFA. SOFA - Topic Tag: two haptic devices. /two-haptic-forcefeedback; . /feed; ; two haptic forcefeedback – SOFA. SOFA - Topic Tag: two haptic forcefeedback. /two-rigid-parts; . /feed; ; two rigid parts – SOFA. SOFA - Topic Tag: two rigid parts. /ubuntu; . /feed; ; ubuntu – SOFA. SOFA - Topic Tag: ubuntu. /ubuntu16-04-lts; . /feed; ; UBUNTU(16.04 LTS) – SOFA. SOFA - Topic Tag: UBUNTU(16.04 LTS). /unable-to-determine-the-path; . /feed; ; Unable to determine the path – SOFA. SOFA - Topic Tag: Unable to determine the path. /unit; . /feed; ; unit – SOFA. SOFA - Topic Tag: unit. /units; . /feed; ; units – SOFA. SOFA - Topic Tag: units. /unit-testing; . /feed; ; unit testing – SOFA. SOFA - Topic Tag: unit testing. /unity3d-digital-trainers-blender-sofa; . /feed; ; Unity3d Digital-Trainers Blender-SOFA – SOFA. SOFA - Topic Tag: Unity3d Digital-Trainers Blender-SOFA. /unreal; . /feed; ; Unreal – SOFA. SOFA - Topic Tag: Unreal. /unreal-engine; . /feed; ; Unreal Engine – SOFA. SOFA - Topic Tag: Unreal Engine. /urdf; . /feed; ; urdf – SOFA. SOFA - Topic Tag: urdf. /using-sofa; . /feed; ; using sofa – SOFA. SOFA - Topic Tag: using sofa. /using-sofapython3; . /feed; ; using sofapython3 – SOFA. SOFA - Topic Tag: using sofapython3. /v16-08; . /feed; ; v16.08 – SOFA. SOFA - Topic Tag: v16.08. /v18-06; . /feed; ; v18.06 – SOFA. SOFA - Topic Tag: v18.06. /v19-06; . /feed; ; v19.06 – SOFA. SOFA - Topic Tag: v19.06. /v19-12-plugin-linking; . /feed; ; v19.12 plugin linking – SOFA. SOFA - Topic Tag: v19.12 plugin linking. /v20; . /feed; ; v20 – SOFA. SOFA - Topic Tag: v20. /v20-12; . /feed; ; v20.12 – SOFA. SOFA - Topic Tag: v20.12. /v20-12-02; . /feed; ; v20.12.02 – SOFA. SOFA - Topic Tag: v20,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:580858,Testability,log,logos,580858,t2; . /engagements; ; SOFA - LHWlen's Profile. /replies; ; SOFA - LHWlen's Replies. /topics; ; SOFA - LHWlen's Topics. SOFA - LHWlen's Profile. /xutian; . /engagements; ; SOFA - Fishuser's Profile. /replies; ; SOFA - Fishuser's Replies. /topics; ; SOFA - Fishuser's Topics. SOFA - Fishuser's Profile. /yangsen; . /engagements; . /page; . /2; ; SOFA - Sen's Profile. SOFA - Sen's Profile. /replies; ; SOFA - Sen's Replies. /topics; . /page; . /2; ; SOFA - Sen's Topics. SOFA - Sen's Topics. SOFA - Sen's Profile. /yannie; . /engagements; ; SOFA - Yannie's Profile. /replies; ; SOFA - Yannie's Replies. /topics; ; SOFA - Yannie's Topics. SOFA - Yannie's Profile. /yaookyiegmail-com; . /engagements; ; SOFA - wowsofa's Profile. /replies; ; SOFA - wowsofa's Replies. /topics; ; SOFA - wowsofa's Topics. SOFA - wowsofa's Profile. /yashchitalia; . /engagements; ; SOFA - Yash's Profile. /replies; ; SOFA - Yash's Replies. /topics; ; SOFA - Yash's Topics. SOFA - Yash's Profile. /ying; . /engagements; ; SOFA - logos's Profile. /replies; ; SOFA - logos's Replies. /topics; ; SOFA - logos's Topics. SOFA - logos's Profile. /yitian; . /engagements; ; SOFA - yitian's Profile. /replies; ; SOFA - yitian's Replies. /topics; ; SOFA - yitian's Topics. SOFA - yitian's Profile. /yordan-kyosev; . /engagements; ; SOFA - yo's Profile. /replies; ; SOFA - yo's Replies. /topics; ; SOFA - yo's Topics. SOFA - yo's Profile. /younesssss; . /engagements; ; SOFA - younesssss's Profile. /replies; ; SOFA - younesssss's Replies. /topics; ; SOFA - younesssss's Topics. SOFA - younesssss's Profile. /ypszilon; . /engagements; ; SOFA - Vizvary's Profile. /replies; ; SOFA - Vizvary's Replies. /topics; ; SOFA - Vizvary's Topics. SOFA - Vizvary's Profile. /yul131; . /engagements; ; SOFA - yul131's Profile. /replies; ; SOFA - yul131's Replies. /topics; ; SOFA - yul131's Topics. SOFA - yul131's Profile. /yummymushroom; . /engagements; ; SOFA - YummyMushroom's Profile. /replies; ; SOFA - YummyMushroom's Replies. /topics; ; SO,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:580894,Testability,log,logos,580894,Profile. /replies; ; SOFA - LHWlen's Replies. /topics; ; SOFA - LHWlen's Topics. SOFA - LHWlen's Profile. /xutian; . /engagements; ; SOFA - Fishuser's Profile. /replies; ; SOFA - Fishuser's Replies. /topics; ; SOFA - Fishuser's Topics. SOFA - Fishuser's Profile. /yangsen; . /engagements; . /page; . /2; ; SOFA - Sen's Profile. SOFA - Sen's Profile. /replies; ; SOFA - Sen's Replies. /topics; . /page; . /2; ; SOFA - Sen's Topics. SOFA - Sen's Topics. SOFA - Sen's Profile. /yannie; . /engagements; ; SOFA - Yannie's Profile. /replies; ; SOFA - Yannie's Replies. /topics; ; SOFA - Yannie's Topics. SOFA - Yannie's Profile. /yaookyiegmail-com; . /engagements; ; SOFA - wowsofa's Profile. /replies; ; SOFA - wowsofa's Replies. /topics; ; SOFA - wowsofa's Topics. SOFA - wowsofa's Profile. /yashchitalia; . /engagements; ; SOFA - Yash's Profile. /replies; ; SOFA - Yash's Replies. /topics; ; SOFA - Yash's Topics. SOFA - Yash's Profile. /ying; . /engagements; ; SOFA - logos's Profile. /replies; ; SOFA - logos's Replies. /topics; ; SOFA - logos's Topics. SOFA - logos's Profile. /yitian; . /engagements; ; SOFA - yitian's Profile. /replies; ; SOFA - yitian's Replies. /topics; ; SOFA - yitian's Topics. SOFA - yitian's Profile. /yordan-kyosev; . /engagements; ; SOFA - yo's Profile. /replies; ; SOFA - yo's Replies. /topics; ; SOFA - yo's Topics. SOFA - yo's Profile. /younesssss; . /engagements; ; SOFA - younesssss's Profile. /replies; ; SOFA - younesssss's Replies. /topics; ; SOFA - younesssss's Topics. SOFA - younesssss's Profile. /ypszilon; . /engagements; ; SOFA - Vizvary's Profile. /replies; ; SOFA - Vizvary's Replies. /topics; ; SOFA - Vizvary's Topics. SOFA - Vizvary's Profile. /yul131; . /engagements; ; SOFA - yul131's Profile. /replies; ; SOFA - yul131's Replies. /topics; ; SOFA - yul131's Topics. SOFA - yul131's Profile. /yummymushroom; . /engagements; ; SOFA - YummyMushroom's Profile. /replies; ; SOFA - YummyMushroom's Replies. /topics; ; SOFA - YummyMushroom's Topics. SOFA - Yu,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:580929,Testability,log,logos,580929,s Replies. /topics; ; SOFA - LHWlen's Topics. SOFA - LHWlen's Profile. /xutian; . /engagements; ; SOFA - Fishuser's Profile. /replies; ; SOFA - Fishuser's Replies. /topics; ; SOFA - Fishuser's Topics. SOFA - Fishuser's Profile. /yangsen; . /engagements; . /page; . /2; ; SOFA - Sen's Profile. SOFA - Sen's Profile. /replies; ; SOFA - Sen's Replies. /topics; . /page; . /2; ; SOFA - Sen's Topics. SOFA - Sen's Topics. SOFA - Sen's Profile. /yannie; . /engagements; ; SOFA - Yannie's Profile. /replies; ; SOFA - Yannie's Replies. /topics; ; SOFA - Yannie's Topics. SOFA - Yannie's Profile. /yaookyiegmail-com; . /engagements; ; SOFA - wowsofa's Profile. /replies; ; SOFA - wowsofa's Replies. /topics; ; SOFA - wowsofa's Topics. SOFA - wowsofa's Profile. /yashchitalia; . /engagements; ; SOFA - Yash's Profile. /replies; ; SOFA - Yash's Replies. /topics; ; SOFA - Yash's Topics. SOFA - Yash's Profile. /ying; . /engagements; ; SOFA - logos's Profile. /replies; ; SOFA - logos's Replies. /topics; ; SOFA - logos's Topics. SOFA - logos's Profile. /yitian; . /engagements; ; SOFA - yitian's Profile. /replies; ; SOFA - yitian's Replies. /topics; ; SOFA - yitian's Topics. SOFA - yitian's Profile. /yordan-kyosev; . /engagements; ; SOFA - yo's Profile. /replies; ; SOFA - yo's Replies. /topics; ; SOFA - yo's Topics. SOFA - yo's Profile. /younesssss; . /engagements; ; SOFA - younesssss's Profile. /replies; ; SOFA - younesssss's Replies. /topics; ; SOFA - younesssss's Topics. SOFA - younesssss's Profile. /ypszilon; . /engagements; ; SOFA - Vizvary's Profile. /replies; ; SOFA - Vizvary's Replies. /topics; ; SOFA - Vizvary's Topics. SOFA - Vizvary's Profile. /yul131; . /engagements; ; SOFA - yul131's Profile. /replies; ; SOFA - yul131's Replies. /topics; ; SOFA - yul131's Topics. SOFA - yul131's Profile. /yummymushroom; . /engagements; ; SOFA - YummyMushroom's Profile. /replies; ; SOFA - YummyMushroom's Replies. /topics; ; SOFA - YummyMushroom's Topics. SOFA - YummyMushroom's Profile. /yupeng; . /,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:580952,Testability,log,logos,580952,LHWlen's Topics. SOFA - LHWlen's Profile. /xutian; . /engagements; ; SOFA - Fishuser's Profile. /replies; ; SOFA - Fishuser's Replies. /topics; ; SOFA - Fishuser's Topics. SOFA - Fishuser's Profile. /yangsen; . /engagements; . /page; . /2; ; SOFA - Sen's Profile. SOFA - Sen's Profile. /replies; ; SOFA - Sen's Replies. /topics; . /page; . /2; ; SOFA - Sen's Topics. SOFA - Sen's Topics. SOFA - Sen's Profile. /yannie; . /engagements; ; SOFA - Yannie's Profile. /replies; ; SOFA - Yannie's Replies. /topics; ; SOFA - Yannie's Topics. SOFA - Yannie's Profile. /yaookyiegmail-com; . /engagements; ; SOFA - wowsofa's Profile. /replies; ; SOFA - wowsofa's Replies. /topics; ; SOFA - wowsofa's Topics. SOFA - wowsofa's Profile. /yashchitalia; . /engagements; ; SOFA - Yash's Profile. /replies; ; SOFA - Yash's Replies. /topics; ; SOFA - Yash's Topics. SOFA - Yash's Profile. /ying; . /engagements; ; SOFA - logos's Profile. /replies; ; SOFA - logos's Replies. /topics; ; SOFA - logos's Topics. SOFA - logos's Profile. /yitian; . /engagements; ; SOFA - yitian's Profile. /replies; ; SOFA - yitian's Replies. /topics; ; SOFA - yitian's Topics. SOFA - yitian's Profile. /yordan-kyosev; . /engagements; ; SOFA - yo's Profile. /replies; ; SOFA - yo's Replies. /topics; ; SOFA - yo's Topics. SOFA - yo's Profile. /younesssss; . /engagements; ; SOFA - younesssss's Profile. /replies; ; SOFA - younesssss's Replies. /topics; ; SOFA - younesssss's Topics. SOFA - younesssss's Profile. /ypszilon; . /engagements; ; SOFA - Vizvary's Profile. /replies; ; SOFA - Vizvary's Replies. /topics; ; SOFA - Vizvary's Topics. SOFA - Vizvary's Profile. /yul131; . /engagements; ; SOFA - yul131's Profile. /replies; ; SOFA - yul131's Replies. /topics; ; SOFA - yul131's Topics. SOFA - yul131's Profile. /yummymushroom; . /engagements; ; SOFA - YummyMushroom's Profile. /replies; ; SOFA - YummyMushroom's Replies. /topics; ; SOFA - YummyMushroom's Topics. SOFA - YummyMushroom's Profile. /yupeng; . /engagements; ; SOFA - yupeng',MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:587318,Testability,log,logo-showcase-responsive-slider-slider,587318,A – Registration. SOFA – SOFA Week 2024. /technical-committee-7; ; SOFA – Technical Committee #7. /technical-committees; . /registration; ; SOFA – Registration. SOFA – Technical Committees. stc11; ; SOFA – STC#11. stc9; . /live; ; SOFA – Live. SOFA – STC#9 meeting. wp-content; . /plugins; . /bbpress; . /templates; . /default; . /css; ; bbpress.min.css. /js; ; editor.min.js; engagements.min.js. /cf7-conditional-fields; . /js; ; scripts.js. style.css. /cleantalk-spam-protect; . /css; . /images; ; bad_email.svg; good_email.svg. cleantalk-email-decoder.min.css; cleantalk-public.min.css. /js; ; apbct-public-bundle.min.js. /contact-form-7; . /includes; . /css; ; styles.css. /js; ; index.js. /swv; . /js; ; index.js. /revslider; . /rs-plugin; . /css; ; settings.css. /font; ; revicons.eot; revicons.svg; revicons.ttf; revicons.woff. /js; ; jquery.themepunch.revolution.min.js; jquery.themepunch.tools.min.js. /wpcf7-recaptcha; . /assets; . /js; ; wpcf7-recaptcha-controls.js. /wp-logo-showcase-responsive-slider-slider; . /assets; . /css; ; slick.css; wpls-public.css. /js; ; slick.min.js; wpls-public.js. /sofaGraph; ; controller.js; functions.js; style.css. /themes; . /inovado; . /framework; . /css; . /font; ; fontawesome-webfont-1.eot; fontawesome-webfont.eot; fontawesome-webfont.ttf; fontawesome-webfont.woff. custom_script.css; flexslider.css; headers.css; prettyPhoto.css; responsive.css; retina.css; shortcodes.css. /js; . /twitter; ; jquery.tweet.js. bootstrap.js; easing.js; fitvids.js; flexslider.js; functions.js; isotope.js; mobilemenu.js; prettyPhoto.js; shortcodes.js; superfish.js; waypoints.js; waypoints-sticky.js. style.css. /inovado_child; ; style.css. /uploads; . /2016; . /08; ; 2-Tutorial.pdf. /2017; . /04; ; STC3-Report.pdf. /2018; . /07; ; STC1-Report.pdf; STC2-Report.pdf; STC4-Report.pdf; STC5-Report.pdf. /11; ; SOFA-SymposiumProgram-2018.pdf. /12; ; STC6-Report.pdf. /2019; . /06; ; STC7-Report.pdf. /11; ; FrenchTechCentral_Plan_FR.pdf; SOFA-SymposiumProgram-2019.p,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:1297,Usability,feedback,feedback,1297,eer-for-the-development-of-rf-ablation-simulator-of-cardiac-arrhythmia; ; SOFA – Software engineer for simulation of cardiac arrhythmia ablation. SOFA – Jobs. /news; . /1000-tests-in-sofa; ; SOFA – 1000 tests in SOFA!. /10-year-birthday; ; SOFA – 10 year birthday !. /2017-publications; ; SOFA – 2017 Publications !. /2018-highlights; ; SOFA – 2018 Highlights. /2nd-sofa-scientific-and-technical-committee; ; SOFA – 2nd SOFA Scientific and Technical Committee. /2-students-accepted-for-the-gsoc-with-sofa; ; SOFA – 2 students accepted for the GSoC. /4-sofa-papers-iros-2016; ; SOFA – 4 SOFA papers @ IROS 2016. /4th-meeting-simforhealth-in-paris; ; SOFA – 4th meeting SimForHealth in Paris. /5th-french-symposium-in-healthcare-simulation; ; SOFA – Participation at 5th French Symposium in Healthcare Simulation. /7-latest-papers-based-on-sofa; ; SOFA – 7 latest papers based on SOFA. /accepted-journal-at-tbme; ; SOFA – Accepted journal at TBME!. /already-experienced-sofa-give-us-some-feedback; ; SOFA – Already experienced SOFA? Give us some feedback!. /article-about-sofa-on-medtech; ; SOFA – Article about SOFA on MedTech. /article-in-science-vie-about-anatoscope; ; SOFA – Article in Science & Vie about Anatoscope. /asan-medical-center-joins-the-sofa-consortium; ; SOFA – Asan Medical Center joins the SOFA Consortium. /attend-the-sofa-week-2018; ; SOFA – Attend the SOFA week 2018. /author; . /guillaumeparan; . /feed; ; Guillaume – SOFA. SOFA – Guillaume. /hugo; . /feed; ; Hugo – SOFA. /page; . /10; ; SOFA – Hugo. /11; ; SOFA – Hugo. /12; ; SOFA – Hugo. /13; ; SOFA – Hugo. /14; ; SOFA – Hugo. /2; ; SOFA – Hugo. /3; ; SOFA – Hugo. /4; ; SOFA – Hugo. /5; ; SOFA – Hugo. /6; ; SOFA – Hugo. /7; ; SOFA – Hugo. /8; ; SOFA – Hugo. /9; ; SOFA – Hugo. SOFA – Hugo. /binaries-for-macos-now-available; ; SOFA – Binaries for MacOS now available!. /binaries-of-sofa; ; SOFA – Beta version of SOFA binaries. /booth-at-i-novia-2016; ; SOFA – Booth at I-Novia 2016. /caeml-a-community-first-cae-model-sh,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:1355,Usability,feedback,feedback,1355,eer-for-the-development-of-rf-ablation-simulator-of-cardiac-arrhythmia; ; SOFA – Software engineer for simulation of cardiac arrhythmia ablation. SOFA – Jobs. /news; . /1000-tests-in-sofa; ; SOFA – 1000 tests in SOFA!. /10-year-birthday; ; SOFA – 10 year birthday !. /2017-publications; ; SOFA – 2017 Publications !. /2018-highlights; ; SOFA – 2018 Highlights. /2nd-sofa-scientific-and-technical-committee; ; SOFA – 2nd SOFA Scientific and Technical Committee. /2-students-accepted-for-the-gsoc-with-sofa; ; SOFA – 2 students accepted for the GSoC. /4-sofa-papers-iros-2016; ; SOFA – 4 SOFA papers @ IROS 2016. /4th-meeting-simforhealth-in-paris; ; SOFA – 4th meeting SimForHealth in Paris. /5th-french-symposium-in-healthcare-simulation; ; SOFA – Participation at 5th French Symposium in Healthcare Simulation. /7-latest-papers-based-on-sofa; ; SOFA – 7 latest papers based on SOFA. /accepted-journal-at-tbme; ; SOFA – Accepted journal at TBME!. /already-experienced-sofa-give-us-some-feedback; ; SOFA – Already experienced SOFA? Give us some feedback!. /article-about-sofa-on-medtech; ; SOFA – Article about SOFA on MedTech. /article-in-science-vie-about-anatoscope; ; SOFA – Article in Science & Vie about Anatoscope. /asan-medical-center-joins-the-sofa-consortium; ; SOFA – Asan Medical Center joins the SOFA Consortium. /attend-the-sofa-week-2018; ; SOFA – Attend the SOFA week 2018. /author; . /guillaumeparan; . /feed; ; Guillaume – SOFA. SOFA – Guillaume. /hugo; . /feed; ; Hugo – SOFA. /page; . /10; ; SOFA – Hugo. /11; ; SOFA – Hugo. /12; ; SOFA – Hugo. /13; ; SOFA – Hugo. /14; ; SOFA – Hugo. /2; ; SOFA – Hugo. /3; ; SOFA – Hugo. /4; ; SOFA – Hugo. /5; ; SOFA – Hugo. /6; ; SOFA – Hugo. /7; ; SOFA – Hugo. /8; ; SOFA – Hugo. /9; ; SOFA – Hugo. SOFA – Hugo. /binaries-for-macos-now-available; ; SOFA – Binaries for MacOS now available!. /binaries-of-sofa; ; SOFA – Beta version of SOFA binaries. /booth-at-i-novia-2016; ; SOFA – Booth at I-Novia 2016. /caeml-a-community-first-cae-model-sh,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:8439,Usability,learn,learning-day-in-paris,8439,tegrated in Unity3D. /sofa-day-2016-in-strasbourg; ; SOFA – SOFA Day 2016 in Strasbourg. /sofa-gets-a-brand-new-design; . /feed; . 	Comments on: SOFA gets a brand-new design !	. SOFA – SOFA gets a brand-new design !. /sofa-in-robotics-2021-6-new-papers; ; SOFA – SOFA in Robotics 2021: 6 new papers. /sofa-in-the-jfr-2015; ; SOFA – SOFA in the JFR 2015. /sofa-is-on-twitter; ; SOFA – SOFA is on twitter !. /sofa-partner-of-medfit-2019; ; SOFA – SOFA partner of MedFIT 2019. /sofa-presented-at-medteq-2018-in-montreal; ; SOFA – SOFA presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning-day-in-paris; ; SOFA – SOFA technologies exhibited @ AMD Learning Day in Paris. /sofa-training-discover-and-learn-sofa-at-ismar2017; ; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-be,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:8556,Usability,learn,learn-sofa-at-,8556, . /feed; . 	Comments on: SOFA gets a brand-new design !	. SOFA – SOFA gets a brand-new design !. /sofa-in-robotics-2021-6-new-papers; ; SOFA – SOFA in Robotics 2021: 6 new papers. /sofa-in-the-jfr-2015; ; SOFA – SOFA in the JFR 2015. /sofa-is-on-twitter; ; SOFA – SOFA is on twitter !. /sofa-partner-of-medfit-2019; ; SOFA – SOFA partner of MedFIT 2019. /sofa-presented-at-medteq-2018-in-montreal; ; SOFA – SOFA presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning-day-in-paris; ; SOFA – SOFA technologies exhibited @ AMD Learning Day in Paris. /sofa-training-discover-and-learn-sofa-at-ismar2017; ; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been rel,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:8618,Usability,learn,learn,8618, . /feed; . 	Comments on: SOFA gets a brand-new design !	. SOFA – SOFA gets a brand-new design !. /sofa-in-robotics-2021-6-new-papers; ; SOFA – SOFA in Robotics 2021: 6 new papers. /sofa-in-the-jfr-2015; ; SOFA – SOFA in the JFR 2015. /sofa-is-on-twitter; ; SOFA – SOFA is on twitter !. /sofa-partner-of-medfit-2019; ; SOFA – SOFA partner of MedFIT 2019. /sofa-presented-at-medteq-2018-in-montreal; ; SOFA – SOFA presented at MedTeq 2018 in Montreal. /sofa-presented-in-webinar-radiologie-numerique-french; ; SOFA – SOFA presented in webinar “Radiologie Numérique” [French]. /sofa-soon-on-github; ; SOFA – SOFA soon on GitHub. /sofa-stc5-coming-soon; ; SOFA – SOFA STC#5 in Strasbourg. /sofa-technical-committee-3-upcoming-raise-your-expectations; ; SOFA – SOFA Technical Committee #3 upcoming: raise your expectations!. /sofa-technologies-exhibited-amd-learning-day-in-paris; ; SOFA – SOFA technologies exhibited @ AMD Learning Day in Paris. /sofa-training-discover-and-learn-sofa-at-ismar2017; ; SOFA – SOFA training: discover and learn SOFA at ISMAR 2017. /sofa-v16-12-has-been-released; ; SOFA – SOFA v16.12 has been released!. /sofa-v17-06-has-been-released; ; SOFA – SOFA v17.06 has been released!. /sofa-v17-12-has-been-released; ; SOFA – SOFA v17.12 has been released!. /sofa-v18-06-has-been-released; ; SOFA – SOFA v18.06 has been released!. /sofa-v18-12-has-been-released; ; SOFA – SOFA v18.12 has been released!. /sofa-v19-06-has-been-released; ; SOFA – SOFA v19.06 has been released!. /sofa-v19-12-has-been-released; ; SOFA – SOFA v19.12 has been released!. /sofa-v20-06-has-been-released; ; SOFA – SOFA v20.06 has been released!. /sofa-v20-12-has-been-released; ; SOFA – SOFA v20.12 has been released!. /sofa-v21-06-has-been-released; ; SOFA – SOFA v21.06 has been released!. /sofa-v21-12-has-been-released; ; SOFA – SOFA v21.12 has been released!. /sofa-v22-06-has-been-released; ; SOFA – SOFA v22.06 has been released!. /sofa-v22-12-has-been-released; ; SOFA – SOFA v22.12 has been rel,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:205979,Usability,simpl,simpleapi,205979,; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulation::mechanicalvisitor Namespace Reference; SOFA API: sofa::simulation::node Namespace Reference; SOFA API: sofa::simulation::xml Namespace Reference; SOFA API: sofa::testing Namespace Reference; SOFA API: sofa::topology Namespace Reference; SOFA API: sofa::type Namespace Reference; SOFA API: sofa::type::pairwise Namespace Reference; SOFA API: sofa::type::trait Namespace Reference; navtree.,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:244403,Usability,learn,learning,244403,", class, typename > Struct Template Reference; SOFA API: sofa::type::detect< T, Op, void_t< Op< T > > > Struct Template Reference; SOFA API: sofa::type::qNoInit Struct Reference; SOFA API: sofa::type::trait::is_container< T > Struct Template Reference; SOFA API: Member List; SOFA API: sofa::type::trait::is_specialization_of< T, Template > Struct Template Reference; SOFA API: sofa::type::trait::is_specialization_of< Template< Args... >, Template > Struct Template Reference; SOFA API: sofa::type::trait::is_vector< T > Struct Template Reference; SOFA API: Member List; tabs.css; SOFA API: sofa::gui::qt::ObjectModelPtr Union Reference; SOFA API: Member List. applications; . /plugins; . /4-wheel-summitxl-robot; ; SOFA – 4-Wheel SummitXL Robot. /bayesian-filtering; ; SOFA – Bayesian Filtering. /cardiac-electrophysiology-2; ; SOFA – Cardiac Electrophysiology. /cardiac-mechanics; ; SOFA – Cardiac Mechanics. /cgal-mesh-generation; ; SOFA – CGAL Mesh Generation. /condensed-fem-model-learning; ; SOFA – Condensed FEM Model Learning. /cosserat-beam-cable-needle; ; SOFA – Cosserat Beam: cable & needle. /cuda-gpu-computing; ; SOFA – CUDA GPU Computing. /cutting-mesh-refinement; ; SOFA – Cutting & Mesh Refinement. /deep-learning-framework; ; SOFA – Deep Learning Framework. /design-optimization; ; SOFA – Design Optimization. /endoscopic-robot; ; SOFA – Endoscopic Robot. /export-system-matrices; ; SOFA – Export System Matrices. /follou-avatar-haptics; ; SOFA – Follou Avatar Haptics. /force-dimension-haptics; ; SOFA – Force Dimension Haptics. /geomagic-haptics; ; SOFA – Geomagic Haptics. /google-benchmark-for-sofa; ; SOFA – Google Benchmark for SOFA. /gpu-cholesky-solver; ; SOFA – GPU Cholesky Solver. /heat-transfer-gpu-diffusion-reaction; ; SOFA – Heat Transfer: GPU diffusion reaction. /image-manipulation; ; SOFA – Image Manipulation. /image-registration; ; SOFA – Image Registration. /inverse-model-for-soft-robot-control; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA ",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:244639,Usability,learn,learning-framework,244639,"rence; SOFA API: Member List; SOFA API: sofa::type::trait::is_specialization_of< T, Template > Struct Template Reference; SOFA API: sofa::type::trait::is_specialization_of< Template< Args... >, Template > Struct Template Reference; SOFA API: sofa::type::trait::is_vector< T > Struct Template Reference; SOFA API: Member List; tabs.css; SOFA API: sofa::gui::qt::ObjectModelPtr Union Reference; SOFA API: Member List. applications; . /plugins; . /4-wheel-summitxl-robot; ; SOFA – 4-Wheel SummitXL Robot. /bayesian-filtering; ; SOFA – Bayesian Filtering. /cardiac-electrophysiology-2; ; SOFA – Cardiac Electrophysiology. /cardiac-mechanics; ; SOFA – Cardiac Mechanics. /cgal-mesh-generation; ; SOFA – CGAL Mesh Generation. /condensed-fem-model-learning; ; SOFA – Condensed FEM Model Learning. /cosserat-beam-cable-needle; ; SOFA – Cosserat Beam: cable & needle. /cuda-gpu-computing; ; SOFA – CUDA GPU Computing. /cutting-mesh-refinement; ; SOFA – Cutting & Mesh Refinement. /deep-learning-framework; ; SOFA – Deep Learning Framework. /design-optimization; ; SOFA – Design Optimization. /endoscopic-robot; ; SOFA – Endoscopic Robot. /export-system-matrices; ; SOFA – Export System Matrices. /follou-avatar-haptics; ; SOFA – Follou Avatar Haptics. /force-dimension-haptics; ; SOFA – Force Dimension Haptics. /geomagic-haptics; ; SOFA – Geomagic Haptics. /google-benchmark-for-sofa; ; SOFA – Google Benchmark for SOFA. /gpu-cholesky-solver; ; SOFA – GPU Cholesky Solver. /heat-transfer-gpu-diffusion-reaction; ; SOFA – Heat Transfer: GPU diffusion reaction. /image-manipulation; ; SOFA – Image Manipulation. /image-registration; ; SOFA – Image Registration. /inverse-model-for-soft-robot-control; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA – LapGym. /mesh-skeletonization; ; SOFA – Mesh Skeletonization. /micro-parallel-robot; ; SOFA – Micro-Parallel Robot. /migribot-robot; ; SOFA – MiGriBot Robot. /model-order-reduction; ; SOFA – Model Order Reduction. /modern-gui-using-glfw; ; SOFA",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:246135,Usability,learn,learning-framework,246135,action; ; SOFA – Heat Transfer: GPU diffusion reaction. /image-manipulation; ; SOFA – Image Manipulation. /image-registration; ; SOFA – Image Registration. /inverse-model-for-soft-robot-control; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA – LapGym. /mesh-skeletonization; ; SOFA – Mesh Skeletonization. /micro-parallel-robot; ; SOFA – Micro-Parallel Robot. /migribot-robot; ; SOFA – MiGriBot Robot. /model-order-reduction; ; SOFA – Model Order Reduction. /modern-gui-using-glfw; ; SOFA – Modern GUI using GLFW. /modular-fem-mechanics; ; SOFA – Modular FEM Mechanics. /multi-material-tool; ; SOFA – Multi-Material Tool. /multithreading; ; SOFA – Multithreading. /openigtlink; ; SOFA – OpenIGTLink. /pardiso-contact-solver; ; SOFA – Pardiso Contact Solver. /porous-visco-hyperelasticity; ; SOFA – Porous Visco-Hyperelasticity. /pyqt-widget-for-cameras; ; SOFA – PyQt Widget for Cameras. /python-template-scenes; ; SOFA – Python Template Scenes. /reinforcement-learning-framework; ; SOFA – Reinforcement Learning Framework. /reinforcement-learning-with-domain-randomization; ; SOFA – Reinforcement Learning with Domain Randomization. /rendering-hardware-interface-rhi; ; SOFA – Rendering Hardware Interface (RHI). /shape-matching; ; SOFA – Shape Matching. /shell-elastic-fem; ; SOFA – Shell Elastic FEM. /sofa-godot-basic-renderer; ; SOFA – SOFA & Godot – Basic Renderer. /sofa-unity3d-basic-renderer; ; SOFA – SOFA & Unity3D – Basic Renderer. /sofa-unity3d-full-integration; ; SOFA – SOFA & Unity3D – Full Integration. /sofa-unrealengine-5-basic-renderer; ; SOFA – SOFA & UnrealEngine 5 – Basic Renderer. /soft-rigid-hybrid-arms; ; SOFA – Soft-Rigid Hybrid Arms. /softrobots; ; SOFA – Models and Actuators for Soft-Robots. /tearing; ; SOFA – Tearing. /tetrahedral-mesh-tool; ; SOFA – Tetrahedral Mesh Tool. /timoshenko-beam-catheters; ; SOFA – Timoshenko Beam: catheters. /tutorial-probe-tissue-interaction; ; SOFA – Tutorial: probe-tissue interaction. /ultra-sound-rendering; . /emb,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:246213,Usability,learn,learning-with-domain-randomization,246213,nipulation. /image-registration; ; SOFA – Image Registration. /inverse-model-for-soft-robot-control; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA – LapGym. /mesh-skeletonization; ; SOFA – Mesh Skeletonization. /micro-parallel-robot; ; SOFA – Micro-Parallel Robot. /migribot-robot; ; SOFA – MiGriBot Robot. /model-order-reduction; ; SOFA – Model Order Reduction. /modern-gui-using-glfw; ; SOFA – Modern GUI using GLFW. /modular-fem-mechanics; ; SOFA – Modular FEM Mechanics. /multi-material-tool; ; SOFA – Multi-Material Tool. /multithreading; ; SOFA – Multithreading. /openigtlink; ; SOFA – OpenIGTLink. /pardiso-contact-solver; ; SOFA – Pardiso Contact Solver. /porous-visco-hyperelasticity; ; SOFA – Porous Visco-Hyperelasticity. /pyqt-widget-for-cameras; ; SOFA – PyQt Widget for Cameras. /python-template-scenes; ; SOFA – Python Template Scenes. /reinforcement-learning-framework; ; SOFA – Reinforcement Learning Framework. /reinforcement-learning-with-domain-randomization; ; SOFA – Reinforcement Learning with Domain Randomization. /rendering-hardware-interface-rhi; ; SOFA – Rendering Hardware Interface (RHI). /shape-matching; ; SOFA – Shape Matching. /shell-elastic-fem; ; SOFA – Shell Elastic FEM. /sofa-godot-basic-renderer; ; SOFA – SOFA & Godot – Basic Renderer. /sofa-unity3d-basic-renderer; ; SOFA – SOFA & Unity3D – Basic Renderer. /sofa-unity3d-full-integration; ; SOFA – SOFA & Unity3D – Full Integration. /sofa-unrealengine-5-basic-renderer; ; SOFA – SOFA & UnrealEngine 5 – Basic Renderer. /soft-rigid-hybrid-arms; ; SOFA – Soft-Rigid Hybrid Arms. /softrobots; ; SOFA – Models and Actuators for Soft-Robots. /tearing; ; SOFA – Tearing. /tetrahedral-mesh-tool; ; SOFA – Tetrahedral Mesh Tool. /timoshenko-beam-catheters; ; SOFA – Timoshenko Beam: catheters. /tutorial-probe-tissue-interaction; ; SOFA – Tutorial: probe-tissue interaction. /ultra-sound-rendering; . /embed; ; Ultra-Sound Rendering – SOFA. SOFA – Ultra-Sound Rendering. /visco-elasticity; ; SOFA – ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:247597,Usability,feedback,feedback,247597,"erer. /sofa-unity3d-full-integration; ; SOFA – SOFA & Unity3D – Full Integration. /sofa-unrealengine-5-basic-renderer; ; SOFA – SOFA & UnrealEngine 5 – Basic Renderer. /soft-rigid-hybrid-arms; ; SOFA – Soft-Rigid Hybrid Arms. /softrobots; ; SOFA – Models and Actuators for Soft-Robots. /tearing; ; SOFA – Tearing. /tetrahedral-mesh-tool; ; SOFA – Tetrahedral Mesh Tool. /timoshenko-beam-catheters; ; SOFA – Timoshenko Beam: catheters. /tutorial-probe-tissue-interaction; ; SOFA – Tutorial: probe-tissue interaction. /ultra-sound-rendering; . /embed; ; Ultra-Sound Rendering – SOFA. SOFA – Ultra-Sound Rendering. /visco-elasticity; ; SOFA – Visco-Elasticity. /x-ray-rendering; ; SOFA – X-Ray Rendering. /xxl-robot; ; SOFA – XXL Robot. SOFA – Plugins. /publications; . /add-a-publication-with-hal; ; SOFA – Add a publication with HAL. /feed; . 	Comments on: Publications	. SOFA – Publications. /submit; ; SOFA – Submit your asset. comments; . /feed; . 	Comments for SOFA	. community; . /feedback; ; SOFA – Feedback Form. /forum; . /feed; ; SOFA » All Posts. /reply; . /15772; ; SOFA - Reply To: CGAL Configuration. /3279; ; SOFA - Reply To: [SOLVED] Obj Files, Msh Files. /section; . /announcements-infos; . /feed; ; SOFA » All Posts. /page; . /2; ; SOFA - Forum: Announcements / Infos. /3; ; SOFA - Forum: Announcements / Infos. /4; ; SOFA - Forum: Announcements / Infos. /5; ; SOFA - Forum: Announcements / Infos. SOFA - Forum: Announcements / Infos. /sofa; . /building-sofa; . /feed; ; SOFA » All Posts. /page; . /10; ; SOFA - Forum: Building SOFA. /11; ; SOFA - Forum: Building SOFA. /12; ; SOFA - Forum: Building SOFA. /13; ; SOFA - Forum: Building SOFA. /2; ; SOFA - Forum: Building SOFA. /3; ; SOFA - Forum: Building SOFA. /4; ; SOFA - Forum: Building SOFA. /5; ; SOFA - Forum: Building SOFA. /6; ; SOFA - Forum: Building SOFA. /7; ; SOFA - Forum: Building SOFA. /8; ; SOFA - Forum: Building SOFA. /9; ; SOFA - Forum: Building SOFA. SOFA - Forum: Building SOFA. /feed; ; SOFA » All Posts. /gettin",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:270875,Usability,guid,guide-wire-modelling,270875, my system python as part of a larger tool chain?. /can-sofa-cut-the-volume-eg-liver; ; SOFA - Topic: Can Sofa cut the volume (eg liver)?. /cant-build-pluginexample; . /feed; ; [SOLVED] Can’t build PluginExample – SOFA. SOFA - Topic: [SOLVED] Can’t build PluginExample. /cant-build-sofa-with-the-stlib-and-soft-robots-plugin; ; SOFA - Topic: Cant build sofa with the STLIB and soft robots plugin. /cant-find-runsofa-in-bin-directory; . /feed; ; [SOLVED] can’t find runsofa in bin directory – SOFA. SOFA - Topic: [SOLVED] can’t find runsofa in bin directory. /cant-find-the-file-sofapython3_d-lib; ; SOFA - Topic: cant find the file SofaPython3_d.lib. /cant-launch-runsofa; . /feed; ; [SOLVED] Can’t launch runSofa – SOFA. SOFA - Topic: [SOLVED] Can’t launch runSofa. /cant-launch-runsofa-exe; ; SOFA - Topic: [SOLVED] can't launch runSofa.exe. /cant-load-my-off-file-using-meshoffloader; ; SOFA - Topic: [SOLVED] Can't load my .off file using MeshOffLoader. /cardiac-guide-wire-modelling; ; SOFA - Topic: [SOLVED] Cardiac Guide-Wire Modelling. /carving-algorithm; ; SOFA - Topic: Carving algorithm ?. /carving-grid-topology; ; SOFA - Topic: Carving Grid topology. /carving-into-model-does-not-work-when-using-another-model; ; SOFA - Topic: Carving into model does not work when using another model. /carvingmanager-omnievent-applications-who-wrote-these-can-we-chat; . /page; . /3; ; SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. /4; ; SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. /5; ; SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. SOFA - Topic: CarvingManager & OmniEvent applications: who wrote these? Can we chat?. /c-code-in-tetrahedralcorotationalfemforcefield-cpp-h-inl; ; SOFA - Topic: [SOLVED] C++ code in TetrahedralCorotationalFEMForceField.cpp/.h/.inl. /cgal-configuration; ; SOFA - Topic: CGAL Configuration. /cgal-plugin-4-7-v21-06; ; SOFA - Topic: [SOLVED] CGAL pl,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:276180,Usability,feedback,feedback-force,276180,"OFA : cannot find Eigen3. /cmake-error-install-files-given-directory; ; SOFA - Topic: [SOLVED] CMake error install FILES given directory. /cmake-errors-while-configuring; ; SOFA - Topic: [SOLVED] CMake Errors while configuring. /cmake-error-while-configuring-sofapyhon3-build-script; . /feed; ; CMake Error while configuring SofaPyhon3 build script – SOFA. SOFA - Topic: CMake Error while configuring SofaPyhon3 build script. /cmake-gui-error; ; SOFA - Topic: CMake-gui error. /coding; ; SOFA - Topic: Coding. /coding-2; ; SOFA - Topic: Coding. /collision-algorithm-in-sofa; . /feed; ; [SOLVED] collision algorithm in sofa – SOFA. SOFA - Topic: [SOLVED] collision algorithm in sofa. /collision-between-rigid-and-deformable-object; ; SOFA - Topic: [SOLVED] Collision between rigid and deformable object. /collision-callback-function-in-python; ; SOFA - Topic: [SOLVED] Collision Callback function in python. /collision-detection-algorithm-and-the-algorithm-to-calculate-the-feedback-force; ; SOFA - Topic: [SOLVED] Collision detection algorithm and the algorithm to calculate the feedback force. /collision-detection-for-deformable-objects; . /feed; ; [SOLVED] Collision detection for deformable objects – SOFA. SOFA - Topic: [SOLVED] Collision detection for deformable objects. /collision-detection-of-interactive-training-system-for-interventional; ; SOFA - Topic: [SOLVED] Collision detection of ""Interactive Training System for Interventional…."". /collision-detection-problem; ; SOFA - Topic: [SOLVED] Collision detection problem. /collision-groups; ; SOFA - Topic: [SOLVED] Collision groups. /collision-in-cuda; ; SOFA - Topic: Collision in CUDA. /collision-not-work-through-python; ; SOFA - Topic: [SOLVED] Collision not work through python. /collision-problems-in-grasping-using-phantom-omni; ; SOFA - Topic: [SOLVED] Collision problems in grasping using Phantom omni. /collision-response-between-two-objects; ; SOFA - Topic: Collision response between two objects. /collision-response-with-ben",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:276286,Usability,feedback,feedback,276286,"OFA : cannot find Eigen3. /cmake-error-install-files-given-directory; ; SOFA - Topic: [SOLVED] CMake error install FILES given directory. /cmake-errors-while-configuring; ; SOFA - Topic: [SOLVED] CMake Errors while configuring. /cmake-error-while-configuring-sofapyhon3-build-script; . /feed; ; CMake Error while configuring SofaPyhon3 build script – SOFA. SOFA - Topic: CMake Error while configuring SofaPyhon3 build script. /cmake-gui-error; ; SOFA - Topic: CMake-gui error. /coding; ; SOFA - Topic: Coding. /coding-2; ; SOFA - Topic: Coding. /collision-algorithm-in-sofa; . /feed; ; [SOLVED] collision algorithm in sofa – SOFA. SOFA - Topic: [SOLVED] collision algorithm in sofa. /collision-between-rigid-and-deformable-object; ; SOFA - Topic: [SOLVED] Collision between rigid and deformable object. /collision-callback-function-in-python; ; SOFA - Topic: [SOLVED] Collision Callback function in python. /collision-detection-algorithm-and-the-algorithm-to-calculate-the-feedback-force; ; SOFA - Topic: [SOLVED] Collision detection algorithm and the algorithm to calculate the feedback force. /collision-detection-for-deformable-objects; . /feed; ; [SOLVED] Collision detection for deformable objects – SOFA. SOFA - Topic: [SOLVED] Collision detection for deformable objects. /collision-detection-of-interactive-training-system-for-interventional; ; SOFA - Topic: [SOLVED] Collision detection of ""Interactive Training System for Interventional…."". /collision-detection-problem; ; SOFA - Topic: [SOLVED] Collision detection problem. /collision-groups; ; SOFA - Topic: [SOLVED] Collision groups. /collision-in-cuda; ; SOFA - Topic: Collision in CUDA. /collision-not-work-through-python; ; SOFA - Topic: [SOLVED] Collision not work through python. /collision-problems-in-grasping-using-phantom-omni; ; SOFA - Topic: [SOLVED] Collision problems in grasping using Phantom omni. /collision-response-between-two-objects; ; SOFA - Topic: Collision response between two objects. /collision-response-with-ben",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:305846,Usability,feedback,feedback-not-working-correctly-when-using-two-haptic-devices,305846,"OFA - Topic: [SOLVED] Fixed constraints not so fixed with GenericConstraintSolver. /fixedrotationconstraint-and-linearmovementconstraint-not-working; ; SOFA - Topic: [SOLVED] FixedRotationConstraint and LinearMovementConstraint not working. /fixing-collision-for-a-static-floor; ; SOFA - Topic: [SOLVED] Fixing Collision for a static floor. /flexible-plugin-fails-to-compile-in-v17-12; ; SOFA - Topic: [SOLVED] Flexible plugin fails to compile in v17.12. /flexible-plugin-or-core; . /feed; ; [SOLVED] Flexible plugin or core? – SOFA. SOFA - Topic: [SOLVED] Flexible plugin or core?. /floating-behaviour-in-soft-actuators-with-bilateralinteractionconstraint; ; SOFA - Topic: Floating behaviour in soft actuators with BilateralInteractionConstraint. /floating-point-exception; ; SOFA - Topic: [SOLVED] Floating point exception. /floor-as-a-projective-constraint; ; SOFA - Topic: [SOLVED] Floor as a projective constraint. /force-feedback-not-working-correctly-when-using-two-haptic-devices; ; SOFA - Topic: [SOLVED] Force feedback not working correctly when using two haptic devices. /forcefields-adddforce; . /feed; ; [SOLVED] Forcefield’s addDForce – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /12; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /3; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. SOFA - Topic: [SOLVED] Forcefield’s addDForce. /forcefields-collisions-and-integration; . /feed; ; [SOLVED] Forcefields, collisions and integration – SOFA. SOFA - Topic: [SOLVED] Forcefields, collisions and integration. /forcefield-with-implicit-iterative-solver; ; SOFA - Topic: [SOLVED] ForceField with implicit iterative solver. /forcefield-with-python-controller; ; SOFA - Topic: ForceField with Python controller. /force-induced-topoligical-modification-of-triangular-mesh; ; SOFA - Topic: [SOLVED] Force Induced Topological Modification of Triangular Mesh. /forceps-assembly; . /feed; ; [SOLVED] Forceps assembly – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] Forceps",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:305939,Usability,feedback,feedback,305939,"OFA - Topic: [SOLVED] Fixed constraints not so fixed with GenericConstraintSolver. /fixedrotationconstraint-and-linearmovementconstraint-not-working; ; SOFA - Topic: [SOLVED] FixedRotationConstraint and LinearMovementConstraint not working. /fixing-collision-for-a-static-floor; ; SOFA - Topic: [SOLVED] Fixing Collision for a static floor. /flexible-plugin-fails-to-compile-in-v17-12; ; SOFA - Topic: [SOLVED] Flexible plugin fails to compile in v17.12. /flexible-plugin-or-core; . /feed; ; [SOLVED] Flexible plugin or core? – SOFA. SOFA - Topic: [SOLVED] Flexible plugin or core?. /floating-behaviour-in-soft-actuators-with-bilateralinteractionconstraint; ; SOFA - Topic: Floating behaviour in soft actuators with BilateralInteractionConstraint. /floating-point-exception; ; SOFA - Topic: [SOLVED] Floating point exception. /floor-as-a-projective-constraint; ; SOFA - Topic: [SOLVED] Floor as a projective constraint. /force-feedback-not-working-correctly-when-using-two-haptic-devices; ; SOFA - Topic: [SOLVED] Force feedback not working correctly when using two haptic devices. /forcefields-adddforce; . /feed; ; [SOLVED] Forcefield’s addDForce – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /12; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /3; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. SOFA - Topic: [SOLVED] Forcefield’s addDForce. /forcefields-collisions-and-integration; . /feed; ; [SOLVED] Forcefields, collisions and integration – SOFA. SOFA - Topic: [SOLVED] Forcefields, collisions and integration. /forcefield-with-implicit-iterative-solver; ; SOFA - Topic: [SOLVED] ForceField with implicit iterative solver. /forcefield-with-python-controller; ; SOFA - Topic: ForceField with Python controller. /force-induced-topoligical-modification-of-triangular-mesh; ; SOFA - Topic: [SOLVED] Force Induced Topological Modification of Triangular Mesh. /forceps-assembly; . /feed; ; [SOLVED] Forceps assembly – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] Forceps",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:316212,Usability,feedback,feedback-of-the-soft-tissue-deformation,316212,ieve-simulation-of-liver-deformation-using-sofa-framework%EF%BC%9F; ; SOFA - Topic: [SOLVED] How to achieve simulation of liver deformation using SOFA framework？. /how-to-add-flexible-plugin-to-sofa; ; SOFA - Topic: How to add Flexible plugin to SOFA. /how-to-add-points-into-a-container; ; SOFA - Topic: [SOLVED] How to add points into a container?. /how-to-add-python-script-to-c-code; ; SOFA - Topic: [SOLVED] How to add python script to c++ code. /how-to-add-qt-and-boost-to-the-path; ; SOFA - Topic: How to add qt and boost to the PATH?. /how-to-add-value-in-a-item-of-a-section; . /embed; ; SOFA - Topic: [SOLVED] How to add value in a item of a section. SOFA - Topic: [SOLVED] How to add value in a item of a section. /how-to-add-vr-functionality-in-sofa-framework; . /feed; ; [SOLVED] How to add VR functionality in SOFA framework? – SOFA. SOFA - Topic: [SOLVED] How to add VR functionality in SOFA framework?. /how-to-apply-a-force-and-get-the-feedback-of-the-soft-tissue-deformation; ; SOFA - Topic: How to apply a force and get the feedback of the soft tissue deformation. /how-to-apply-an-orientation-dependent-pure-torque-to-rigid-body; ; SOFA - Topic: How to apply an orientation-dependent pure torque to Rigid body?. /how-to-apply-displacement-on-object; ; SOFA - Topic: How to apply Displacement on object. /how-to-attach-a-beam-with-a-rigid-body; ; SOFA - Topic: How to attach a beam with a rigid body. /how-to-begin-to-use-sofa-for-medical-simulations; . /feed; ; [SOLVED] How to begin to use sofa for medical simulations? – SOFA. SOFA - Topic: [SOLVED] How to begin to use sofa for medical simulations?. /how-to-break-the-spring-between-mesh; ; SOFA - Topic: [SOLVED] How to break the spring between mesh?. /how-to-build-qtsofa; ; SOFA - Topic: [SOLVED] How to build 'qtSofa'. /how-to-build-sofa-without-opengl-support; ; SOFA - Topic: [SOLVED] How to build SOFA without OpenGL support. /how-to-carving-by-phantom-device; ; SOFA - Topic: [SOLVED] HOW TO carving by phantom device ?.,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:316302,Usability,feedback,feedback,316302,ieve-simulation-of-liver-deformation-using-sofa-framework%EF%BC%9F; ; SOFA - Topic: [SOLVED] How to achieve simulation of liver deformation using SOFA framework？. /how-to-add-flexible-plugin-to-sofa; ; SOFA - Topic: How to add Flexible plugin to SOFA. /how-to-add-points-into-a-container; ; SOFA - Topic: [SOLVED] How to add points into a container?. /how-to-add-python-script-to-c-code; ; SOFA - Topic: [SOLVED] How to add python script to c++ code. /how-to-add-qt-and-boost-to-the-path; ; SOFA - Topic: How to add qt and boost to the PATH?. /how-to-add-value-in-a-item-of-a-section; . /embed; ; SOFA - Topic: [SOLVED] How to add value in a item of a section. SOFA - Topic: [SOLVED] How to add value in a item of a section. /how-to-add-vr-functionality-in-sofa-framework; . /feed; ; [SOLVED] How to add VR functionality in SOFA framework? – SOFA. SOFA - Topic: [SOLVED] How to add VR functionality in SOFA framework?. /how-to-apply-a-force-and-get-the-feedback-of-the-soft-tissue-deformation; ; SOFA - Topic: How to apply a force and get the feedback of the soft tissue deformation. /how-to-apply-an-orientation-dependent-pure-torque-to-rigid-body; ; SOFA - Topic: How to apply an orientation-dependent pure torque to Rigid body?. /how-to-apply-displacement-on-object; ; SOFA - Topic: How to apply Displacement on object. /how-to-attach-a-beam-with-a-rigid-body; ; SOFA - Topic: How to attach a beam with a rigid body. /how-to-begin-to-use-sofa-for-medical-simulations; . /feed; ; [SOLVED] How to begin to use sofa for medical simulations? – SOFA. SOFA - Topic: [SOLVED] How to begin to use sofa for medical simulations?. /how-to-break-the-spring-between-mesh; ; SOFA - Topic: [SOLVED] How to break the spring between mesh?. /how-to-build-qtsofa; ; SOFA - Topic: [SOLVED] How to build 'qtSofa'. /how-to-build-sofa-without-opengl-support; ; SOFA - Topic: [SOLVED] How to build SOFA without OpenGL support. /how-to-carving-by-phantom-device; ; SOFA - Topic: [SOLVED] HOW TO carving by phantom device ?.,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:318071,Usability,feedback,feedback,318071, /how-to-build-sofa-without-opengl-support; ; SOFA - Topic: [SOLVED] How to build SOFA without OpenGL support. /how-to-carving-by-phantom-device; ; SOFA - Topic: [SOLVED] HOW TO carving by phantom device ?. /how-to-change-the-texture-of-oglmodel-at-runtime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-window-reinitialize-it-in-python; ; SOFA - Topic: [SOLVED] How to close the runSofa window/reinitialize it in python?. /how-to-completely-prevent-penetration-when-collision-occurs; ; SOFA - Topic: How to completely prevent penetration when collision occurs?. /how-to-connect-two-rigid-parts-while-one-would-separate-from-the-other-halfway; ; SOFA - Topic: How to connect two rigid parts while one would separate from the other halfway?. /how-to-constraint-objects-inside-a-closed-mesh-without-using-collision-models; ; SOFA - Topic: How to constraint objects inside a closed mesh without using collision models?. /how-to-construct-a-grasper-scenewith-force-feedback; . /page; . /15; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /4; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /how-to-control-cable-length-in-cable-driven-manipulator; ; SOFA - Topic: How to control cable length in cable-driven manipulator. /how-to-convert-arbitrary-triangular-surface-mesh-to-tetrahedron-mesh; ; SOFA - Topic: [SOLVED] How to convert arbitrary triangular surface mesh to tetrahedron mesh?. /how-to-convert-obj-to-msh-format-file; . /feed; ; [SOLVED] How to convert obj to msh format file? – SOFA. SOFA - Topic: [SOLVED] How to convert obj to msh format file?. /how-to-create-a-coaxial-contraints-between-part-a-and-b; . /feed; ; [SOLVED] How to create a coaxial contraints between part A and B – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /5;,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:318166,Usability,feedback,feedback,318166,d SOFA without OpenGL support. /how-to-carving-by-phantom-device; ; SOFA - Topic: [SOLVED] HOW TO carving by phantom device ?. /how-to-change-the-texture-of-oglmodel-at-runtime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-window-reinitialize-it-in-python; ; SOFA - Topic: [SOLVED] How to close the runSofa window/reinitialize it in python?. /how-to-completely-prevent-penetration-when-collision-occurs; ; SOFA - Topic: How to completely prevent penetration when collision occurs?. /how-to-connect-two-rigid-parts-while-one-would-separate-from-the-other-halfway; ; SOFA - Topic: How to connect two rigid parts while one would separate from the other halfway?. /how-to-constraint-objects-inside-a-closed-mesh-without-using-collision-models; ; SOFA - Topic: How to constraint objects inside a closed mesh without using collision models?. /how-to-construct-a-grasper-scenewith-force-feedback; . /page; . /15; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /4; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /how-to-control-cable-length-in-cable-driven-manipulator; ; SOFA - Topic: How to control cable length in cable-driven manipulator. /how-to-convert-arbitrary-triangular-surface-mesh-to-tetrahedron-mesh; ; SOFA - Topic: [SOLVED] How to convert arbitrary triangular surface mesh to tetrahedron mesh?. /how-to-convert-obj-to-msh-format-file; . /feed; ; [SOLVED] How to convert obj to msh format file? – SOFA. SOFA - Topic: [SOLVED] How to convert obj to msh format file?. /how-to-create-a-coaxial-contraints-between-part-a-and-b; . /feed; ; [SOLVED] How to create a coaxial contraints between part A and B – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /5; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:318252,Usability,feedback,feedback,318252,ED] HOW TO carving by phantom device ?. /how-to-change-the-texture-of-oglmodel-at-runtime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-window-reinitialize-it-in-python; ; SOFA - Topic: [SOLVED] How to close the runSofa window/reinitialize it in python?. /how-to-completely-prevent-penetration-when-collision-occurs; ; SOFA - Topic: How to completely prevent penetration when collision occurs?. /how-to-connect-two-rigid-parts-while-one-would-separate-from-the-other-halfway; ; SOFA - Topic: How to connect two rigid parts while one would separate from the other halfway?. /how-to-constraint-objects-inside-a-closed-mesh-without-using-collision-models; ; SOFA - Topic: How to constraint objects inside a closed mesh without using collision models?. /how-to-construct-a-grasper-scenewith-force-feedback; . /page; . /15; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /4; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /how-to-control-cable-length-in-cable-driven-manipulator; ; SOFA - Topic: How to control cable length in cable-driven manipulator. /how-to-convert-arbitrary-triangular-surface-mesh-to-tetrahedron-mesh; ; SOFA - Topic: [SOLVED] How to convert arbitrary triangular surface mesh to tetrahedron mesh?. /how-to-convert-obj-to-msh-format-file; . /feed; ; [SOLVED] How to convert obj to msh format file? – SOFA. SOFA - Topic: [SOLVED] How to convert obj to msh format file?. /how-to-create-a-coaxial-contraints-between-part-a-and-b; . /feed; ; [SOLVED] How to create a coaxial contraints between part A and B – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /5; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /how,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:318332,Usability,feedback,feedback,318332,untime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-window-reinitialize-it-in-python; ; SOFA - Topic: [SOLVED] How to close the runSofa window/reinitialize it in python?. /how-to-completely-prevent-penetration-when-collision-occurs; ; SOFA - Topic: How to completely prevent penetration when collision occurs?. /how-to-connect-two-rigid-parts-while-one-would-separate-from-the-other-halfway; ; SOFA - Topic: How to connect two rigid parts while one would separate from the other halfway?. /how-to-constraint-objects-inside-a-closed-mesh-without-using-collision-models; ; SOFA - Topic: How to constraint objects inside a closed mesh without using collision models?. /how-to-construct-a-grasper-scenewith-force-feedback; . /page; . /15; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /4; ; SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. SOFA - Topic: [SOLVED] How to construct a grasper scene(with force feedback) ?. /how-to-control-cable-length-in-cable-driven-manipulator; ; SOFA - Topic: How to control cable length in cable-driven manipulator. /how-to-convert-arbitrary-triangular-surface-mesh-to-tetrahedron-mesh; ; SOFA - Topic: [SOLVED] How to convert arbitrary triangular surface mesh to tetrahedron mesh?. /how-to-convert-obj-to-msh-format-file; . /feed; ; [SOLVED] How to convert obj to msh format file? – SOFA. SOFA - Topic: [SOLVED] How to convert obj to msh format file?. /how-to-create-a-coaxial-contraints-between-part-a-and-b; . /feed; ; [SOLVED] How to create a coaxial contraints between part A and B – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /5; ; SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. SOFA - Topic: [SOLVED] How to create a coaxial contraints between part A and B. /how-to-create-an-advanced-simulation-in-c; ; SOFA - Topic: [SOLVED] How to create an a,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:320973,Usability,feedback,feedback-scene,320973,"ED] How to define an animation path?. /how-to-determine-the-source-of-an-error; ; SOFA - Topic: [SOLVED] How to determine the source of an stress sigularity?. /how-to-develop-collision-model-that-support-different-proximity; . /feed; ; [SOLVED] How to develop collision model that support different proximity? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force f",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:321090,Usability,feedback,feedback,321090,"D] How to determine the source of an stress sigularity?. /how-to-develop-collision-model-that-support-different-proximity; . /feed; ; [SOLVED] How to develop collision model that support different proximity? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to ext",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:321191,Usability,feedback,feedback,321191,"fferent-proximity; . /feed; ; [SOLVED] How to develop collision model that support different proximity? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-extract-reaction-force-for-certain-nodes; ; SOFA - Topic: [SOLVED] How to extract reaction force for certain nodes. /how-to-extract-the-surface-of-a-volumeyric-mesh; ; SOFA - Topic: [SOLVED] How to extract the surface of a volumeyric mesh. /how-to-figure-out-the-available-options-of-xml-tags; ; SOFA - To",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:323776,Usability,simpl,simple-model,323776,to-the-indices-in-a-map; ; SOFA - Topic: [SOLVED] How to get access to the indices in a Map?. /how-to-get-indices-in-fixedconstraint; ; SOFA - Topic: [SOLVED] How to get indices in FixedConstraint. /how-to-get-strain-output-in-sofa; ; SOFA - Topic: How to get Strain output in SOFA. /how-to-get-stress-strain-on-surface; ; SOFA - Topic: How to get Stress strain on surface. /how-to-get-the-3d-position-of-mouse-interaction-in-sofapython; ; SOFA - Topic: How to get the 3d position of mouse interaction in SofaPython. /how-to-get-the-forcefeedback; ; SOFA - Topic: [SOLVED] How to get the ForceFeedback?. /how-to-give-multi-physical-properties-to-one-tetrahedron-object; ; SOFA - Topic: [SOLVED] How to give multi-physical properties to one tetrahedron object. /how-to-give-offset-distance-of-collision-in-geomagic-haptic-simulation; ; SOFA - Topic: [SOLVED] How to give offset distance of collision in geomagic haptic simulation. /how-to-implement-mechanical-resistance-in-a-simple-model; ; SOFA - Topic: [SOLVED] How to implement mechanical resistance in a simple model. /how-to-import-numpy-is-python-scripting-of-sofa; ; SOFA - Topic: [SOLVED] How to import numpy in python scripting of SOFA?. /how-to-import-sofa-in-softrobot; ; SOFA - Topic: How to import sofa in SoftRobot. /how-to-import-volume-mesh-from-matlab-iso2mesh-toolkit; ; SOFA - Topic: [SOLVED] How to import volume mesh from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM m,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:323859,Usability,simpl,simple,323859,to-the-indices-in-a-map; ; SOFA - Topic: [SOLVED] How to get access to the indices in a Map?. /how-to-get-indices-in-fixedconstraint; ; SOFA - Topic: [SOLVED] How to get indices in FixedConstraint. /how-to-get-strain-output-in-sofa; ; SOFA - Topic: How to get Strain output in SOFA. /how-to-get-stress-strain-on-surface; ; SOFA - Topic: How to get Stress strain on surface. /how-to-get-the-3d-position-of-mouse-interaction-in-sofapython; ; SOFA - Topic: How to get the 3d position of mouse interaction in SofaPython. /how-to-get-the-forcefeedback; ; SOFA - Topic: [SOLVED] How to get the ForceFeedback?. /how-to-give-multi-physical-properties-to-one-tetrahedron-object; ; SOFA - Topic: [SOLVED] How to give multi-physical properties to one tetrahedron object. /how-to-give-offset-distance-of-collision-in-geomagic-haptic-simulation; ; SOFA - Topic: [SOLVED] How to give offset distance of collision in geomagic haptic simulation. /how-to-implement-mechanical-resistance-in-a-simple-model; ; SOFA - Topic: [SOLVED] How to implement mechanical resistance in a simple model. /how-to-import-numpy-is-python-scripting-of-sofa; ; SOFA - Topic: [SOLVED] How to import numpy in python scripting of SOFA?. /how-to-import-sofa-in-softrobot; ; SOFA - Topic: How to import sofa in SoftRobot. /how-to-import-volume-mesh-from-matlab-iso2mesh-toolkit; ; SOFA - Topic: [SOLVED] How to import volume mesh from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM m,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:325058,Usability,learn,learn-mesh-editing-programming,325058,SoftRobot. /how-to-import-volume-mesh-from-matlab-iso2mesh-toolkit; ; SOFA - Topic: [SOLVED] How to import volume mesh from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-t,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:325117,Usability,learn,learn,325117,2mesh-toolkit; ; SOFA - Topic: [SOLVED] How to import volume mesh from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:325187,Usability,learn,learn,325187,h from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SO,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:325228,Usability,learn,learn-using-sofa,325228,e; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SOFA - Topic: how to make tetrahedron msh file with meshlab?. /how-,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:325269,Usability,learn,learn,325269,e; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SOFA - Topic: how to make tetrahedron msh file with meshlab?. /how-,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:326281,Usability,feedback,feedback-in-the-two-object-is-not-the-same,326281,; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SOFA - Topic: how to make tetrahedron msh file with meshlab?. /how-to-make-the-size-or-type-of-feedback-in-the-two-object-is-not-the-same; ; SOFA - Topic: [SOLVED] HOW to make the size or type of feedback in the two object is not the same?. /how-to-map-pointdata-in-a-datadisplay-using-c; ; SOFA - Topic: How to map pointData in a DataDisplay using C++. /how-to-mark-a-node-of-a-mesh; ; SOFA - Topic: [SOLVED] How to mark a node of a mesh?. /how-to-model-a-curved-slack-soft-rope-at-the-start; ; SOFA - Topic: How to model a curved slack soft rope at the start?. /how-to-model-a-deformable-object-with-a-deep-crevice; . /embed; ; SOFA - Topic: [SOLVED] How to model a deformable object with a deep crevice?. SOFA - Topic: [SOLVED] How to model a deformable object with a deep crevice?. /how-to-modify-and-object-in-the-scene-and-restart-simulation; ; SOFA - Topic: How to modify and object in the scene and restart simulation. /how-to-move-objects-with-keyboard-and-mouse; . /feed; ; [SOLVED] How to move objects with keyboard and mouse? – SOFA. SOFA - Topic: [SOLVED] How to move objects with keyboard and mouse?. /how-to-not-check-some-collisions; ;,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:326382,Usability,feedback,feedback,326382,; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make a PythonScript controller with SofaPython3. /how-to-make-local-refined-tetrahedral-mesh; ; SOFA - Topic: How to make local refined tetrahedral mesh?. /how-to-make-some-part-of-an-object-elastic-and-other-part-plastic; ; SOFA - Topic: How to make some part of an object elastic and other part plastic. /how-to-make-tetrahedron-msh-file-with-meshlab; . /embed; ; SOFA - Topic: how to make tetrahedron msh file with meshlab?. SOFA - Topic: how to make tetrahedron msh file with meshlab?. /how-to-make-the-size-or-type-of-feedback-in-the-two-object-is-not-the-same; ; SOFA - Topic: [SOLVED] HOW to make the size or type of feedback in the two object is not the same?. /how-to-map-pointdata-in-a-datadisplay-using-c; ; SOFA - Topic: How to map pointData in a DataDisplay using C++. /how-to-mark-a-node-of-a-mesh; ; SOFA - Topic: [SOLVED] How to mark a node of a mesh?. /how-to-model-a-curved-slack-soft-rope-at-the-start; ; SOFA - Topic: How to model a curved slack soft rope at the start?. /how-to-model-a-deformable-object-with-a-deep-crevice; . /embed; ; SOFA - Topic: [SOLVED] How to model a deformable object with a deep crevice?. SOFA - Topic: [SOLVED] How to model a deformable object with a deep crevice?. /how-to-modify-and-object-in-the-scene-and-restart-simulation; ; SOFA - Topic: How to modify and object in the scene and restart simulation. /how-to-move-objects-with-keyboard-and-mouse; . /feed; ; [SOLVED] How to move objects with keyboard and mouse? – SOFA. SOFA - Topic: [SOLVED] How to move objects with keyboard and mouse?. /how-to-not-check-some-collisions; ;,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:347008,Usability,simpl,simple-app-using-sofa-as-lib,347008,models using GeoMagic Plugin and centring. /mass-below-a-multimap; ; SOFA - Topic: [SOLVED] Mass below a multimap. /mass-spring-model; ; SOFA - Topic: Mass-Spring Model. /mass-spring-modelling; ; SOFA - Topic: Mass-Spring Modelling. /materials-with-directionally-asymetric-friction; ; SOFA - Topic: [SOLVED] materials with directionally asymetric friction. /meaning-of-parameters-in-jointspringforcefield; ; SOFA - Topic: Meaning of parameters in JointSpringForceField. /measuring-contact-pressure; ; SOFA - Topic: [SOLVED] Measuring contact pressure. /mechanicalobject-and-articulationcenter-classes; ; SOFA - Topic: [SOLVED] MechanicalObject and ArticulationCenter classes. /mechanicalobject-rotation; ; SOFA - Topic: [SOLVED] MechanicalObject rotation. /memory-leaks; ; SOFA - Topic: Memory Leaks. /memory-leak-when-using-localmindistance; . /feed; ; [SOLVED] Memory leak when using LocalMinDistance – SOFA. SOFA - Topic: [SOLVED] Memory leak when using LocalMinDistance. /memory-problems-in-simple-app-using-sofa-as-lib; . /feed; ; [SOLVED] Memory problems in simple app using Sofa as lib – SOFA. SOFA - Topic: [SOLVED] Memory problems in simple app using Sofa as lib. /mergemeshes-remove-duplicated-vertices; ; SOFA - Topic: [SOLVED] MergeMeshes remove duplicated vertices. /mesh-explodes-when-using-the-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Mesh explodes when using the surfacepressureconstraint. /mesh-generation-in-sofa; ; SOFA - Topic: Mesh Generation in SOFA. /meshing-a-sphere; ; SOFA - Topic: [SOLVED] Meshing a Sphere. /mesh-object-does-not-visible; ; SOFA - Topic: [SOLVED] Mesh Object does not visible. /mesh-optimizatiation-for-deformable-objects; ; SOFA - Topic: Mesh-optimizatiation for deformable objects. /meshspringforcefield-on-rigid3d; ; SOFA - Topic: MeshSpringForceField on Rigid3d. /meshsteploader-plugin-loading-failed; ; SOFA - Topic: [SOLVED] MeshSTEPLoader plugin loading failed. /metal-forging-simulation; ; SOFA - Topic: Metal Forging Simulation. /missin,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:347077,Usability,simpl,simple,347077,ap; ; SOFA - Topic: [SOLVED] Mass below a multimap. /mass-spring-model; ; SOFA - Topic: Mass-Spring Model. /mass-spring-modelling; ; SOFA - Topic: Mass-Spring Modelling. /materials-with-directionally-asymetric-friction; ; SOFA - Topic: [SOLVED] materials with directionally asymetric friction. /meaning-of-parameters-in-jointspringforcefield; ; SOFA - Topic: Meaning of parameters in JointSpringForceField. /measuring-contact-pressure; ; SOFA - Topic: [SOLVED] Measuring contact pressure. /mechanicalobject-and-articulationcenter-classes; ; SOFA - Topic: [SOLVED] MechanicalObject and ArticulationCenter classes. /mechanicalobject-rotation; ; SOFA - Topic: [SOLVED] MechanicalObject rotation. /memory-leaks; ; SOFA - Topic: Memory Leaks. /memory-leak-when-using-localmindistance; . /feed; ; [SOLVED] Memory leak when using LocalMinDistance – SOFA. SOFA - Topic: [SOLVED] Memory leak when using LocalMinDistance. /memory-problems-in-simple-app-using-sofa-as-lib; . /feed; ; [SOLVED] Memory problems in simple app using Sofa as lib – SOFA. SOFA - Topic: [SOLVED] Memory problems in simple app using Sofa as lib. /mergemeshes-remove-duplicated-vertices; ; SOFA - Topic: [SOLVED] MergeMeshes remove duplicated vertices. /mesh-explodes-when-using-the-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Mesh explodes when using the surfacepressureconstraint. /mesh-generation-in-sofa; ; SOFA - Topic: Mesh Generation in SOFA. /meshing-a-sphere; ; SOFA - Topic: [SOLVED] Meshing a Sphere. /mesh-object-does-not-visible; ; SOFA - Topic: [SOLVED] Mesh Object does not visible. /mesh-optimizatiation-for-deformable-objects; ; SOFA - Topic: Mesh-optimizatiation for deformable objects. /meshspringforcefield-on-rigid3d; ; SOFA - Topic: MeshSpringForceField on Rigid3d. /meshsteploader-plugin-loading-failed; ; SOFA - Topic: [SOLVED] MeshSTEPLoader plugin loading failed. /metal-forging-simulation; ; SOFA - Topic: Metal Forging Simulation. /missing-attribute-getobject; ; SOFA - Topic: Missing attribute: getOb,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:347156,Usability,simpl,simple,347156, SOFA - Topic: Mass-Spring Model. /mass-spring-modelling; ; SOFA - Topic: Mass-Spring Modelling. /materials-with-directionally-asymetric-friction; ; SOFA - Topic: [SOLVED] materials with directionally asymetric friction. /meaning-of-parameters-in-jointspringforcefield; ; SOFA - Topic: Meaning of parameters in JointSpringForceField. /measuring-contact-pressure; ; SOFA - Topic: [SOLVED] Measuring contact pressure. /mechanicalobject-and-articulationcenter-classes; ; SOFA - Topic: [SOLVED] MechanicalObject and ArticulationCenter classes. /mechanicalobject-rotation; ; SOFA - Topic: [SOLVED] MechanicalObject rotation. /memory-leaks; ; SOFA - Topic: Memory Leaks. /memory-leak-when-using-localmindistance; . /feed; ; [SOLVED] Memory leak when using LocalMinDistance – SOFA. SOFA - Topic: [SOLVED] Memory leak when using LocalMinDistance. /memory-problems-in-simple-app-using-sofa-as-lib; . /feed; ; [SOLVED] Memory problems in simple app using Sofa as lib – SOFA. SOFA - Topic: [SOLVED] Memory problems in simple app using Sofa as lib. /mergemeshes-remove-duplicated-vertices; ; SOFA - Topic: [SOLVED] MergeMeshes remove duplicated vertices. /mesh-explodes-when-using-the-surfacepressureconstraint; ; SOFA - Topic: [SOLVED] Mesh explodes when using the surfacepressureconstraint. /mesh-generation-in-sofa; ; SOFA - Topic: Mesh Generation in SOFA. /meshing-a-sphere; ; SOFA - Topic: [SOLVED] Meshing a Sphere. /mesh-object-does-not-visible; ; SOFA - Topic: [SOLVED] Mesh Object does not visible. /mesh-optimizatiation-for-deformable-objects; ; SOFA - Topic: Mesh-optimizatiation for deformable objects. /meshspringforcefield-on-rigid3d; ; SOFA - Topic: MeshSpringForceField on Rigid3d. /meshsteploader-plugin-loading-failed; ; SOFA - Topic: [SOLVED] MeshSTEPLoader plugin loading failed. /metal-forging-simulation; ; SOFA - Topic: Metal Forging Simulation. /missing-attribute-getobject; ; SOFA - Topic: Missing attribute: getObject. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /mi,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:348968,Usability,simpl,simple-grasper,348968, - Topic: Metal Forging Simulation. /missing-attribute-getobject; ; SOFA - Topic: Missing attribute: getObject. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in ru,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:349015,Usability,simpl,simple,349015,ing-attribute-getobject; ; SOFA - Topic: Missing attribute: getObject. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in runsofa – SOFA. SOFA - Topic: [SOLVED] mode,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:349087,Usability,simpl,simple,349087,Object. /missing-lib-files; ; SOFA - Topic: [SOLVED] Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in runsofa – SOFA. SOFA - Topic: [SOLVED] model not visible in runsofa. /model-order-reduction-phase-3-animat,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:349137,Usability,simpl,simple,349137,Missing lib files. /missing-libraries-stlib-and-libsofapython; . /embed; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. /page; . /2; ; SOFA - Topic: Missing libraries: STLIB and libSofaPython. SOFA - Topic: Missing libraries: STLIB and libSofaPython. /missing-pybind11config-cmake; ; SOFA - Topic: Missing pybind11Config.cmake. /missing-sosfsphfluid-dll; ; SOFA - Topic: [SOLVED] Missing SosfSphFluid dll. /model-collapse-with-force-of-gravity; ; SOFA - Topic: Model collapse with force of gravity. /modeler-exe-error; ; SOFA - Topic: Modeler.exe error. /modeler-in-sofa; ; SOFA - Topic: Modeler in SOFA. /modeler-in-sofa-binaries-18-06; . /feed; ; [SOLVED] Modeler in SOFA Binaries 18.06 – SOFA. SOFA - Topic: [SOLVED] Modeler in SOFA Binaries 18.06. /modeler-in-v18-06; ; SOFA - Topic: [SOLVED] Modeler in v18.06. /modeling-a-simple-grasper; . /feed; ; [SOLVED] Modeling a simple grasper – SOFA. /page; . /3; ; SOFA - Topic: [SOLVED] Modeling a simple grasper. SOFA - Topic: [SOLVED] Modeling a simple grasper. /modeling-hyper-elastic-material; ; SOFA - Topic: Modeling Hyper-elastic Material. /modeling-suction-force; . /feed; ; [SOLVED] Modeling suction force – SOFA. /page; . /13; ; SOFA - Topic: [SOLVED] Modeling suction force. /4; ; SOFA - Topic: [SOLVED] Modeling suction force. SOFA - Topic: [SOLVED] Modeling suction force. /modelling-flexible-inelastic-materials; ; SOFA - Topic: Modelling flexible inelastic materials. /modelling-skin-attached-to-tissue; ; SOFA - Topic: Modelling skin attached to tissue. /modelling-superelastic-material-nitinol; ; SOFA - Topic: Modelling SuperElastic Material (Nitinol). /modelling-tissue-deformation-in-needle-insertion-case; ; SOFA - Topic: [SOLVED] Modelling tissue deformation in needle insertion case. /model-not-visible-in-runsofa; . /feed; ; [SOLVED] model not visible in runsofa – SOFA. SOFA - Topic: [SOLVED] model not visible in runsofa. /model-order-reduction-phase-3-animation-issue; ; SOFA - Topic: Model Order Reduction Phas,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:360384,Usability,pause,pauseanimation,360384, ; [SOLVED] Open .OBJ or .STL files – SOFA. SOFA - Topic: [SOLVED] Open .OBJ or .STL files. /open-position-for-an-engineer-in-computer-science; . /page; . /4; ; SOFA - Topic: Open position for an Engineer in Computer Science. SOFA - Topic: Open position for an Engineer in Computer Science. /optimization-integrator; . /feed; ; [SOLVED] Optimization integrator – SOFA. SOFA - Topic: [SOLVED] Optimization integrator. /order-independent-transparency; ; SOFA - Topic: [SOLVED] Order Independent Transparency. /orientantion-in-end-effector; ; SOFA - Topic: Orientantion in End-Effector. /oriented-sliding-constraint-actuator; ; SOFA - Topic: Oriented Sliding Constraint/Actuator. /parameter-value-update; . /embed; ; SOFA - Topic: Parameter value update. SOFA - Topic: Parameter value update. /paraview-and-sofa-working-together; ; SOFA - Topic: Paraview and SOFA working together. /parse-error; ; SOFA - Topic: Parse error. /particlemask-in-sofa; ; SOFA - Topic: [SOLVED] ParticleMask in SOFA. /pauseanimation; . /feed; ; [SOLVED] PauseAnimation – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] PauseAnimation. /4; ; SOFA - Topic: [SOLVED] PauseAnimation. SOFA - Topic: [SOLVED] PauseAnimation. /penetration-depth; ; SOFA - Topic: Penetration depth?. /performance-issues-with-haptics-and-deformable-objects; . /feed; ; [SOLVED] Performance issues with haptics and deformable objects – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /3; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /8; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /9; ; SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. SOFA - Topic: [SOLVED] Performance issues with haptics and deformable objects. /permission-denied-in-video-recording; ; SOFA - Topic: Permission denied in Video recording. /persistent-contact-plugin-compile-fail; . /feed; ; [SOLVED] Persistent Contact Plugin Compi,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:375609,Usability,feedback,feedback-in-batch-mode,375609,OFA dedicated to? How to use it as physics engine?. /questions-regarding-the-installation-of-sofapython3-plugin; ; SOFA - Topic: [SOLVED] Questions regarding the installation of SofaPython3 plugin. /random-linear-force-field; ; SOFA - Topic: [SOLVED] Random Linear Force Field. /rayleigh-numerical-damping; . /feed; ; Rayleigh/Numerical damping – SOFA. SOFA - Topic: Rayleigh/Numerical damping. /read-data-from-external-file; ; SOFA - Topic: [SOLVED] Read data from external file. /reading-indices-of-fixedconstraint-from-an-ascii-file; ; SOFA - Topic: [SOLVED] Reading indices of FixedConstraint from an ascii file. /reading-stl-file-vertices-from-my-own-component; ; SOFA - Topic: [SOLVED] reading STL file vertices from my own component. /realistic-behavior-of-a-liver-and-its-skin; ; SOFA - Topic: [SOLVED] Realistic behavior of a liver and its skin. /realtime-fea-visualization-with-ros; ; SOFA - Topic: Realtime FEA visualization with ROS. /receive-realtime-force-feedback-in-batch-mode; ; SOFA - Topic: Receive realtime force feedback in batch mode. /recommendation-of-the-versions-for-sofa-dependencies; ; SOFA - Topic: Recommendation of the Versions for SOFA Dependencies. /recordedcamera-in-sofapython; ; SOFA - Topic: [SOLVED] RecordedCamera in SofaPython ?. /recording-images-of-scenes; . /page; . /2; ; SOFA - Topic: Recording images of scenes. SOFA - Topic: Recording images of scenes. /regarding-modeler; ; SOFA - Topic: Regarding Modeler. /register-for-the-sofa-week-2019-now; . /feed; ; Register for the SOFA Week 2019 now! – SOFA. SOFA - Topic: Register for the SOFA Week 2019 now!. /register-for-the-sofa-week-2020-now; . /feed; ; Register for the SOFA Week 2020 now! – SOFA. SOFA - Topic: Register for the SOFA Week 2020 now!. /removing-and-adding-compliance-nodes-in-simulation-compliant-module; ; SOFA - Topic: [SOLVED] Error while Adding Compliance nodes in the simulation (Compliant module). /rendering-a-scene-in-stereoscopic-3d; ; SOFA - Topic: [SOLVED] Rendering a scene in ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:375672,Usability,feedback,feedback,375672,OFA dedicated to? How to use it as physics engine?. /questions-regarding-the-installation-of-sofapython3-plugin; ; SOFA - Topic: [SOLVED] Questions regarding the installation of SofaPython3 plugin. /random-linear-force-field; ; SOFA - Topic: [SOLVED] Random Linear Force Field. /rayleigh-numerical-damping; . /feed; ; Rayleigh/Numerical damping – SOFA. SOFA - Topic: Rayleigh/Numerical damping. /read-data-from-external-file; ; SOFA - Topic: [SOLVED] Read data from external file. /reading-indices-of-fixedconstraint-from-an-ascii-file; ; SOFA - Topic: [SOLVED] Reading indices of FixedConstraint from an ascii file. /reading-stl-file-vertices-from-my-own-component; ; SOFA - Topic: [SOLVED] reading STL file vertices from my own component. /realistic-behavior-of-a-liver-and-its-skin; ; SOFA - Topic: [SOLVED] Realistic behavior of a liver and its skin. /realtime-fea-visualization-with-ros; ; SOFA - Topic: Realtime FEA visualization with ROS. /receive-realtime-force-feedback-in-batch-mode; ; SOFA - Topic: Receive realtime force feedback in batch mode. /recommendation-of-the-versions-for-sofa-dependencies; ; SOFA - Topic: Recommendation of the Versions for SOFA Dependencies. /recordedcamera-in-sofapython; ; SOFA - Topic: [SOLVED] RecordedCamera in SofaPython ?. /recording-images-of-scenes; . /page; . /2; ; SOFA - Topic: Recording images of scenes. SOFA - Topic: Recording images of scenes. /regarding-modeler; ; SOFA - Topic: Regarding Modeler. /register-for-the-sofa-week-2019-now; . /feed; ; Register for the SOFA Week 2019 now! – SOFA. SOFA - Topic: Register for the SOFA Week 2019 now!. /register-for-the-sofa-week-2020-now; . /feed; ; Register for the SOFA Week 2020 now! – SOFA. SOFA - Topic: Register for the SOFA Week 2020 now!. /removing-and-adding-compliance-nodes-in-simulation-compliant-module; ; SOFA - Topic: [SOLVED] Error while Adding Compliance nodes in the simulation (Compliant module). /rendering-a-scene-in-stereoscopic-3d; ; SOFA - Topic: [SOLVED] Rendering a scene in ,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:383212,Usability,learn,learning-this-framework,383212,wing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3dsystems-still-functioning; . /feed; ; [SOLVED] Sensable drivers – 3DSystems still functioning? – SOFA. SOFA - Topic: [SOLVED] Sensable drivers – 3DSystems still functioning?. /sensable-plugin; . /feed; ; [SOLVED] Sensable Plugin – SOFA. SOFA - Topic: [SOLVED] Sensable Plugin. /sensable-plugin-cannot-be-added-into-plugin-manager; ; SOFA - Topic: [SOLVED] Sensable plugin cannot be added into plugin manager. /sensable-plugins-example-problems; . /feed; ; [SOLVED] Sensable Plugin Example Problems – SOFA. SOFA - Topic: [SOLVED] Sensable Plugin Example Problems. /sensible-pluginrunning-examples-in-sensible-folder; . /feed; ; [SOLVED] Running examples in sensible folder (Sensible Plugin) – S,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:383258,Usability,learn,learning,383258,wing indices and vertices of elements in run window – SOFA. /page; . /5; ; SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. SOFA - Topic: [SOLVED] Showing indices and vertices of elements in run window. /segfault-at-runsofa-start-in-the-logger; . /feed; ; [SOLVED] Segfault at runSofa start in the logger – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /3; ; SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. SOFA - Topic: [SOLVED] Segfault at runSofa start in the logger. /segfault-with-meshmatrixmass; ; SOFA - Topic: Segfault with MeshMatrixMass. /segmentation-fault-core-dumped-when-opening-simulation; ; SOFA - Topic: Segmentation fault (core dumped) when opening simulation. /segmentation-fault-when-addings-shadows; ; SOFA - Topic: Segmentation Fault when addings Shadows. /segmentation-fault-with-clang-and-libc; ; SOFA - Topic: Segmentation fault with clang and libc++. /self-learning-this-framework; ; SOFA - Topic: Self learning this framework. /send-component-data-via-zmq-socket; ; SOFA - Topic: Send component data via zmq socket. /sending-speech-input-to-sofa; ; SOFA - Topic: [SOLVED] Sending Speech Input to Sofa. /sensable-compilation-error; ; SOFA - Topic: Sensable Compilation Error. /sensable-drivers-3dsystems-still-functioning; . /feed; ; [SOLVED] Sensable drivers – 3DSystems still functioning? – SOFA. SOFA - Topic: [SOLVED] Sensable drivers – 3DSystems still functioning?. /sensable-plugin; . /feed; ; [SOLVED] Sensable Plugin – SOFA. SOFA - Topic: [SOLVED] Sensable Plugin. /sensable-plugin-cannot-be-added-into-plugin-manager; ; SOFA - Topic: [SOLVED] Sensable plugin cannot be added into plugin manager. /sensable-plugins-example-problems; . /feed; ; [SOLVED] Sensable Plugin Example Problems – SOFA. SOFA - Topic: [SOLVED] Sensable Plugin Example Problems. /sensible-pluginrunning-examples-in-sensible-folder; . /feed; ; [SOLVED] Running examples in sensible folder (Sensible Plugin) – S,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:387005,Usability,simpl,simple-set-of-beams-via-beamfemforcefield,387005,gsegv-segfault-segmentation-fault-core-dumped; . /embed; ; SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). /simulate-a-carbon-fibre-textile-for-handling-processes; ; SOFA - Topic: Simulate a carbon fibre textile for handling processes. /simulate-an-embedded-object; ; SOFA - Topic: Simulate an embedded object. /simulate-liquid-environment; ; SOFA - Topic: simulate liquid environment. /simulate-pivot-liaison-using-rigidmapping-and-articulatedsystem; ; SOFA - Topic: Simulate pivot liaison using RigidMapping and ArticulatedSystem. /simulating-blood-vessels-using-centerline-and-beamfemforcefield; ; SOFA - Topic: Simulating Blood Vessels using Centerline and BeamFEMForceField. /simulating-contracting-actuator; . /embed; ; SOFA - Topic: Simulating contracting actuator. SOFA - Topic: Simulating contracting actuator. /simulating-deformation-of-a-simple-set-of-beams-via-beamfemforcefield; ; SOFA - Topic: Simulating deformation of a simple set of beams via BeamFEMForceField. /simulating-elastic-material-in-sofa; ; SOFA - Topic: Simulating Elastic Material in SOFA. /simulating-geomagic-touch; ; SOFA - Topic: Simulating Geomagic Touch. /simulating-the-internal-stress-distribution-of-an-object-with-certain-load; ; SOFA - Topic: Simulating the internal stress distribution of an object with certain load. /simulation-incredibly-slow; ; SOFA - Topic: Simulation incredibly slow. /simulation-of-tearing-a-part-on-the-lens-capsule; . /feed; ; [SOLVED] Simulation of tearing a part on the lens capsule – SOFA. SOFA - Topic: [SOLVED] Simulation of tearing a part on the lens capsule. /simulationstepdt-does-not-update-the-visuals; ; SOFA - Topic: simulationStep(dt) does not update the visuals. /simulation-trend; ; SOFA - Topic: #Simulation trend!. /skeletonplugin-error-in-cgal; ; SOFA - Topic: SkeletonPlugin: Error in CGAL. /skeletonplugin-install-cmake; ; SOFA - Topic: [SOLVED] CGALPlugin inst,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:387092,Usability,simpl,simple,387092,gsegv-segfault-segmentation-fault-core-dumped; . /embed; ; SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). /simulate-a-carbon-fibre-textile-for-handling-processes; ; SOFA - Topic: Simulate a carbon fibre textile for handling processes. /simulate-an-embedded-object; ; SOFA - Topic: Simulate an embedded object. /simulate-liquid-environment; ; SOFA - Topic: simulate liquid environment. /simulate-pivot-liaison-using-rigidmapping-and-articulatedsystem; ; SOFA - Topic: Simulate pivot liaison using RigidMapping and ArticulatedSystem. /simulating-blood-vessels-using-centerline-and-beamfemforcefield; ; SOFA - Topic: Simulating Blood Vessels using Centerline and BeamFEMForceField. /simulating-contracting-actuator; . /embed; ; SOFA - Topic: Simulating contracting actuator. SOFA - Topic: Simulating contracting actuator. /simulating-deformation-of-a-simple-set-of-beams-via-beamfemforcefield; ; SOFA - Topic: Simulating deformation of a simple set of beams via BeamFEMForceField. /simulating-elastic-material-in-sofa; ; SOFA - Topic: Simulating Elastic Material in SOFA. /simulating-geomagic-touch; ; SOFA - Topic: Simulating Geomagic Touch. /simulating-the-internal-stress-distribution-of-an-object-with-certain-load; ; SOFA - Topic: Simulating the internal stress distribution of an object with certain load. /simulation-incredibly-slow; ; SOFA - Topic: Simulation incredibly slow. /simulation-of-tearing-a-part-on-the-lens-capsule; . /feed; ; [SOLVED] Simulation of tearing a part on the lens capsule – SOFA. SOFA - Topic: [SOLVED] Simulation of tearing a part on the lens capsule. /simulationstepdt-does-not-update-the-visuals; ; SOFA - Topic: simulationStep(dt) does not update the visuals. /simulation-trend; ; SOFA - Topic: #Simulation trend!. /skeletonplugin-error-in-cgal; ; SOFA - Topic: SkeletonPlugin: Error in CGAL. /skeletonplugin-install-cmake; ; SOFA - Topic: [SOLVED] CGALPlugin inst,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:422280,Usability,simpl,simple-suturing-with-suturepointperformer,422280,"oth FEM and PDE/ODE Solvers?. /why-no-one-answered-my-question%EF%BC%9F; . /feed; ; [SOLVED] Why no one answered my question？ – SOFA. SOFA - Topic: [SOLVED] Why no one answered my question？. /windows-10-gtx-970-download-install-execute-crash-wtf; . /feed; ; windows 10, gtx 970, download, install, execute, crash, wtf ? – SOFA. SOFA - Topic: windows 10, gtx 970, download, install, execute, crash, wtf ?. /windows-compile-error-msbuild-exe-sofa-17-12; ; SOFA - Topic: Windows compile error – MSBuild.exe (sofa 17.12). /windows-dependency-pack-for-vs-2019; ; SOFA - Topic: [SOLVED] Windows Dependency Pack for VS 2019. /windows-documentation-still-up-to-date; . /feed; ; [SOLVED] Windows documentation – still up to date? – SOFA. SOFA - Topic: [SOLVED] Windows documentation – still up to date?. /wonder-about-fem-model-for-bending-flat-element; ; SOFA - Topic: [SOLVED] Wonder about FEM model for REISSNER-MINDLIN FLAT SHELL. /working-example-on-simple-suturing-with-suturepointperformer; ; SOFA - Topic: [SOLVED] Working example on simple suturing with SuturePointPerformer. /working-with-obj-files-in-sofa; ; SOFA - Topic: [SOLVED] Working with .obj-files in SOFA. /write-an-xml-file-with-sofa; ; SOFA - Topic: Write an XML file with SOFA. /writing-a-scene-in-cpp-fails; ; SOFA - Topic: Writing a scene in cpp fails. /wrong-msh-file; ; SOFA - Topic: Wrong msh file. /topic-tag; . /16-12-compilation; . /feed; ; 16.12 compilation – SOFA. SOFA - Topic Tag: 16.12 compilation. /2012_beta; . /feed; ; 2012_beta – SOFA. SOFA - Topic Tag: 2012_beta. /2d; . /feed; ; 2D – SOFA. SOFA - Topic Tag: 2D. /32_bits; . /feed; ; 32_bits – SOFA. /page; . /2; ; SOFA - Topic Tag: 32_bits. /3; ; SOFA - Topic Tag: 32_bits. /4; ; SOFA - Topic Tag: 32_bits. SOFA - Topic Tag: 32_bits. /3d; . /feed; ; 3D – SOFA. SOFA - Topic Tag: 3D. /3d-mesh; . /feed; ; 3D mesh – SOFA. SOFA - Topic Tag: 3D mesh. /3d-model; . /feed; ; 3d Model – SOFA. SOFA - Topic Tag: 3d Model. /3d-printing; . /feed; ; 3D printing – SOFA. SOFA - T",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:422367,Usability,simpl,simple,422367,"oth FEM and PDE/ODE Solvers?. /why-no-one-answered-my-question%EF%BC%9F; . /feed; ; [SOLVED] Why no one answered my question？ – SOFA. SOFA - Topic: [SOLVED] Why no one answered my question？. /windows-10-gtx-970-download-install-execute-crash-wtf; . /feed; ; windows 10, gtx 970, download, install, execute, crash, wtf ? – SOFA. SOFA - Topic: windows 10, gtx 970, download, install, execute, crash, wtf ?. /windows-compile-error-msbuild-exe-sofa-17-12; ; SOFA - Topic: Windows compile error – MSBuild.exe (sofa 17.12). /windows-dependency-pack-for-vs-2019; ; SOFA - Topic: [SOLVED] Windows Dependency Pack for VS 2019. /windows-documentation-still-up-to-date; . /feed; ; [SOLVED] Windows documentation – still up to date? – SOFA. SOFA - Topic: [SOLVED] Windows documentation – still up to date?. /wonder-about-fem-model-for-bending-flat-element; ; SOFA - Topic: [SOLVED] Wonder about FEM model for REISSNER-MINDLIN FLAT SHELL. /working-example-on-simple-suturing-with-suturepointperformer; ; SOFA - Topic: [SOLVED] Working example on simple suturing with SuturePointPerformer. /working-with-obj-files-in-sofa; ; SOFA - Topic: [SOLVED] Working with .obj-files in SOFA. /write-an-xml-file-with-sofa; ; SOFA - Topic: Write an XML file with SOFA. /writing-a-scene-in-cpp-fails; ; SOFA - Topic: Writing a scene in cpp fails. /wrong-msh-file; ; SOFA - Topic: Wrong msh file. /topic-tag; . /16-12-compilation; . /feed; ; 16.12 compilation – SOFA. SOFA - Topic Tag: 16.12 compilation. /2012_beta; . /feed; ; 2012_beta – SOFA. SOFA - Topic Tag: 2012_beta. /2d; . /feed; ; 2D – SOFA. SOFA - Topic Tag: 2D. /32_bits; . /feed; ; 32_bits – SOFA. /page; . /2; ; SOFA - Topic Tag: 32_bits. /3; ; SOFA - Topic Tag: 32_bits. /4; ; SOFA - Topic Tag: 32_bits. SOFA - Topic Tag: 32_bits. /3d; . /feed; ; 3D – SOFA. SOFA - Topic Tag: 3D. /3d-mesh; . /feed; ; 3D mesh – SOFA. SOFA - Topic Tag: 3D mesh. /3d-model; . /feed; ; 3d Model – SOFA. SOFA - Topic Tag: 3d Model. /3d-printing; . /feed; ; 3D printing – SOFA. SOFA - T",MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:442803,Usability,feedback,feedback,442803,A. SOFA - Topic Tag: event. /events; . /feed; ; events – SOFA. SOFA - Topic Tag: events. /execution-time; . /feed; ; Execution time – SOFA. SOFA - Topic Tag: Execution time. /experience; . /feed; ; experience – SOFA. SOFA - Topic Tag: experience. /export; . /feed; ; export – SOFA. SOFA - Topic Tag: export. /exporter-obj-files-normals-estimation; . /feed; ; exporter ; OBJ files ; normals estimation – SOFA. SOFA - Topic Tag: exporter ; OBJ files ; normals estimation. /export-mesh; . /feed; ; export mesh – SOFA. SOFA - Topic Tag: export mesh. /external; . /feed; ; external – SOFA. SOFA - Topic Tag: external. /external-data-com-port; . /feed; ; external data COM port – SOFA. SOFA - Topic Tag: external data COM port. /extraction-of-the-equation; . /feed; ; Extraction of the equation – SOFA. SOFA - Topic Tag: Extraction of the equation. /features; . /feed; ; Features – SOFA. SOFA - Topic Tag: Features. /fedora-64-bits; . /feed; ; Fedora 64 bits – SOFA. SOFA - Topic Tag: Fedora 64 bits. /feedback; . /feed; ; Feedback – SOFA. SOFA - Topic Tag: Feedback. /fem; . /feed; ; FEM – SOFA. SOFA - Topic Tag: FEM. /fem-model-for-flat-element; . /feed; ; FEM model for flat element – SOFA. SOFA - Topic Tag: FEM model for flat element. /ffmpeg; . /feed; ; FFMPEG – SOFA. SOFA - Topic Tag: FFMPEG. /fibers; . /feed; ; fibers – SOFA. SOFA - Topic Tag: fibers. /final; . /feed; ; final – SOFA. SOFA - Topic Tag: final. /finite-element-method; . /feed; ; finite element method – SOFA. SOFA - Topic Tag: finite element method. /fisheye-camera; . /feed; ; fisheye camera – SOFA. SOFA - Topic Tag: fisheye camera. /fix; . /feed; ; fix – SOFA. SOFA - Topic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fix,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:444391,Usability,feedback,feedback,444391,Tag: fisheye camera. /fix; . /feed; ; fix – SOFA. SOFA - Topic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fixedtranslationconstraint; . /feed; ; FixedTranslationConstraint – SOFA. SOFA - Topic Tag: FixedTranslationConstraint. /flexible; . /feed; ; Flexible – SOFA. SOFA - Topic Tag: Flexible. /flexible-manipulator; . /feed; ; flexible manipulator – SOFA. SOFA - Topic Tag: flexible manipulator. /fluid; . /feed; ; Fluid – SOFA. SOFA - Topic Tag: Fluid. /fluid-simulation; . /feed; ; fluid simulation – SOFA. SOFA - Topic Tag: fluid simulation. /force; . /feed; ; force – SOFA. SOFA - Topic Tag: force. /forcefeedback; . /feed; ; ForceFeedback – SOFA. SOFA - Topic Tag: ForceFeedback. /force-feedback; . /feed; ; force feedback – SOFA. SOFA - Topic Tag: force feedback. /forcefield; . /feed; ; Forcefield – SOFA. SOFA - Topic Tag: Forcefield. /force-field; . /feed; ; force field – SOFA. SOFA - Topic Tag: force field. /forcefields; . /feed; ; Forcefields – SOFA. SOFA - Topic Tag: Forcefields. /forcefiled; . /feed; ; forcefiled – SOFA. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA. SOFA - Topic Tag: Frame plugin. /freemotionanimationloop; . /feed; ; FreeMotionAnimationLoop – SOFA. SOFA - Topic Tag: FreeMotionAnimationLoop. /friction; . /feed; ; friction – SOFA. SOFA - Topic Tag: friction. /gamepad; . /feed; ; Gamepad – SOFA. SOFA - Topic Tag: Gamepad. /gcc; . /feed; ; GCC – SOFA. /page; . /2; ; SOFA - Topic Tag: GCC. /3; ; SOFA - Topic Tag: GCC. /4; ; SOFA - Topic Tag: GCC. /5; ; SOFA - Topic Tag: GCC. /6; ; SOFA - Topic Tag: GCC. SO,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:444418,Usability,feedback,feedback,444418, . /feed; ; fix – SOFA. SOFA - Topic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fixedtranslationconstraint; . /feed; ; FixedTranslationConstraint – SOFA. SOFA - Topic Tag: FixedTranslationConstraint. /flexible; . /feed; ; Flexible – SOFA. SOFA - Topic Tag: Flexible. /flexible-manipulator; . /feed; ; flexible manipulator – SOFA. SOFA - Topic Tag: flexible manipulator. /fluid; . /feed; ; Fluid – SOFA. SOFA - Topic Tag: Fluid. /fluid-simulation; . /feed; ; fluid simulation – SOFA. SOFA - Topic Tag: fluid simulation. /force; . /feed; ; force – SOFA. SOFA - Topic Tag: force. /forcefeedback; . /feed; ; ForceFeedback – SOFA. SOFA - Topic Tag: ForceFeedback. /force-feedback; . /feed; ; force feedback – SOFA. SOFA - Topic Tag: force feedback. /forcefield; . /feed; ; Forcefield – SOFA. SOFA - Topic Tag: Forcefield. /force-field; . /feed; ; force field – SOFA. SOFA - Topic Tag: force field. /forcefields; . /feed; ; Forcefields – SOFA. SOFA - Topic Tag: Forcefields. /forcefiled; . /feed; ; forcefiled – SOFA. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA. SOFA - Topic Tag: Frame plugin. /freemotionanimationloop; . /feed; ; FreeMotionAnimationLoop – SOFA. SOFA - Topic Tag: FreeMotionAnimationLoop. /friction; . /feed; ; friction – SOFA. SOFA - Topic Tag: friction. /gamepad; . /feed; ; Gamepad – SOFA. SOFA - Topic Tag: Gamepad. /gcc; . /feed; ; GCC – SOFA. /page; . /2; ; SOFA - Topic Tag: GCC. /3; ; SOFA - Topic Tag: GCC. /4; ; SOFA - Topic Tag: GCC. /5; ; SOFA - Topic Tag: GCC. /6; ; SOFA - Topic Tag: GCC. SOFA - Topic Tag: GCC. /gcc,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:444459,Usability,feedback,feedback,444459,pic Tag: fix. /fixedconstraint; . /feed; ; FixedConstraint – SOFA. SOFA - Topic Tag: FixedConstraint. /fixed-constraint; . /feed; ; fixed constraint – SOFA. SOFA - Topic Tag: fixed constraint. /fixedconstraint-genericconstraintsolver; . /feed; ; fixedconstraint GenericConstraintSolver – SOFA. SOFA - Topic Tag: fixedconstraint GenericConstraintSolver. /fixedtranslationconstraint; . /feed; ; FixedTranslationConstraint – SOFA. SOFA - Topic Tag: FixedTranslationConstraint. /flexible; . /feed; ; Flexible – SOFA. SOFA - Topic Tag: Flexible. /flexible-manipulator; . /feed; ; flexible manipulator – SOFA. SOFA - Topic Tag: flexible manipulator. /fluid; . /feed; ; Fluid – SOFA. SOFA - Topic Tag: Fluid. /fluid-simulation; . /feed; ; fluid simulation – SOFA. SOFA - Topic Tag: fluid simulation. /force; . /feed; ; force – SOFA. SOFA - Topic Tag: force. /forcefeedback; . /feed; ; ForceFeedback – SOFA. SOFA - Topic Tag: ForceFeedback. /force-feedback; . /feed; ; force feedback – SOFA. SOFA - Topic Tag: force feedback. /forcefield; . /feed; ; Forcefield – SOFA. SOFA - Topic Tag: Forcefield. /force-field; . /feed; ; force field – SOFA. SOFA - Topic Tag: force field. /forcefields; . /feed; ; Forcefields – SOFA. SOFA - Topic Tag: Forcefields. /forcefiled; . /feed; ; forcefiled – SOFA. SOFA - Topic Tag: forcefiled. /forces; . /feed; ; forces – SOFA. SOFA - Topic Tag: forces. /forum; . /feed; ; forum – SOFA. SOFA - Topic Tag: forum. /frame-plugin; . /feed; ; Frame plugin – SOFA. SOFA - Topic Tag: Frame plugin. /freemotionanimationloop; . /feed; ; FreeMotionAnimationLoop – SOFA. SOFA - Topic Tag: FreeMotionAnimationLoop. /friction; . /feed; ; friction – SOFA. SOFA - Topic Tag: friction. /gamepad; . /feed; ; Gamepad – SOFA. SOFA - Topic Tag: Gamepad. /gcc; . /feed; ; GCC – SOFA. /page; . /2; ; SOFA - Topic Tag: GCC. /3; ; SOFA - Topic Tag: GCC. /4; ; SOFA - Topic Tag: GCC. /5; ; SOFA - Topic Tag: GCC. /6; ; SOFA - Topic Tag: GCC. SOFA - Topic Tag: GCC. /gcc-4-8-5; . /feed; ; Gcc 4.8.5 – SO,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:462303,Usability,pause,pauseanimation-solver-event,462303,sedevent; . /feed; ; onKeypressedEvent – SOFA. SOFA - Topic Tag: onKeypressedEvent. /opengl; . /feed; ; OpenGL – SOFA. SOFA - Topic Tag: OpenGL. /opengl-ogllabel-memory-leak; . /feed; ; opengl OglLabel memory leak – SOFA. SOFA - Topic Tag: opengl OglLabel memory leak. /opengl-visual-transparaceny-translucency-alpha; . /feed; ; opengl visual transparaceny translucency alpha – SOFA. SOFA - Topic Tag: opengl visual transparaceny translucency alpha. /orientation; . /feed; ; orientation – SOFA. SOFA - Topic Tag: orientation. /other; . /feed; ; Other – SOFA. SOFA - Topic Tag: Other. /parameter; . /feed; ; parameter – SOFA. SOFA - Topic Tag: parameter. /parameters; . /feed; ; parameters – SOFA. SOFA - Topic Tag: parameters. /paraview; . /feed; ; Paraview – SOFA. SOFA - Topic Tag: Paraview. /partiallinearmovementconstraint; . /feed; ; PartialLinearMovementConstraint – SOFA. SOFA - Topic Tag: PartialLinearMovementConstraint. /path; . /feed; ; path – SOFA. SOFA - Topic Tag: path. /pauseanimation-solver-event; . /feed; ; PauseAnimation; Solver; Event – SOFA. SOFA - Topic Tag: PauseAnimation; Solver; Event. /penetration; . /feed; ; penetration – SOFA. SOFA - Topic Tag: penetration. /persisting-contact; . /feed; ; persisting contact – SOFA. SOFA - Topic Tag: persisting contact. /phantom; . /feed; ; phantom – SOFA. SOFA - Topic Tag: phantom. /physical-acceleration; . /feed; ; physical acceleration – SOFA. SOFA - Topic Tag: physical acceleration. /plastic; . /feed; ; Plastic – SOFA. SOFA - Topic Tag: Plastic. /plots; . /feed; ; plots – SOFA. SOFA - Topic Tag: plots. /plugin; . /feed; ; plugin – SOFA. SOFA - Topic Tag: plugin. /plugin_cuda; . /feed; ; Plugin_CUDA – SOFA. SOFA - Topic Tag: Plugin_CUDA. /plugin_geomagic; . /feed; ; Plugin_Geomagic – SOFA. SOFA - Topic Tag: Plugin_Geomagic. /plugin_image; . /feed; ; Plugin_Image – SOFA. SOFA - Topic Tag: Plugin_Image. /plugin_multithreading; . /feed; ; Plugin_Multithreading – SOFA. SOFA - Topic Tag: Plugin_Multithreading. /plugin_othe,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:467956,Usability,learn,learning,467956,-creator-issues; . /feed; ; qt creator issues – SOFA. SOFA - Topic Tag: qt creator issues. /qtsofa; . /feed; ; qtSofa – SOFA. SOFA - Topic Tag: qtSofa. /raleigh-damping; . /feed; ; raleigh damping – SOFA. SOFA - Topic Tag: raleigh damping. /rayleigh-damping; . /feed; ; Rayleigh damping – SOFA. SOFA - Topic Tag: Rayleigh damping. /reaction-force; . /feed; ; reaction force – SOFA. SOFA - Topic Tag: reaction force. /realistic; . /feed; ; realistic – SOFA. SOFA - Topic Tag: realistic. /realtime; . /feed; ; realtime – SOFA. SOFA - Topic Tag: realtime. /real-time; . /feed; ; real-time – SOFA. SOFA - Topic Tag: real-time. /record; . /feed; ; record – SOFA. SOFA - Topic Tag: record. /recordedcamera; . /feed; ; RecordedCamera – SOFA. SOFA - Topic Tag: RecordedCamera. /recording; . /feed; ; Recording – SOFA. SOFA - Topic Tag: Recording. /refine-coarse; . /feed; ; refine coarse – SOFA. SOFA - Topic Tag: refine coarse. /registry; . /feed; ; Registry – SOFA. SOFA - Topic Tag: Registry. /reinforcement-learning; . /feed; ; Reinforcement learning – SOFA. SOFA - Topic Tag: Reinforcement learning. /release; . /feed; ; Release – SOFA. SOFA - Topic Tag: Release. /removed-object; . /feed; ; removed object – SOFA. SOFA - Topic Tag: removed object. /removetrianglespostprocessing; . /feed; ; removeTrianglesPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; r,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:467991,Usability,learn,learning,467991,ator issues – SOFA. SOFA - Topic Tag: qt creator issues. /qtsofa; . /feed; ; qtSofa – SOFA. SOFA - Topic Tag: qtSofa. /raleigh-damping; . /feed; ; raleigh damping – SOFA. SOFA - Topic Tag: raleigh damping. /rayleigh-damping; . /feed; ; Rayleigh damping – SOFA. SOFA - Topic Tag: Rayleigh damping. /reaction-force; . /feed; ; reaction force – SOFA. SOFA - Topic Tag: reaction force. /realistic; . /feed; ; realistic – SOFA. SOFA - Topic Tag: realistic. /realtime; . /feed; ; realtime – SOFA. SOFA - Topic Tag: realtime. /real-time; . /feed; ; real-time – SOFA. SOFA - Topic Tag: real-time. /record; . /feed; ; record – SOFA. SOFA - Topic Tag: record. /recordedcamera; . /feed; ; RecordedCamera – SOFA. SOFA - Topic Tag: RecordedCamera. /recording; . /feed; ; Recording – SOFA. SOFA - Topic Tag: Recording. /refine-coarse; . /feed; ; refine coarse – SOFA. SOFA - Topic Tag: refine coarse. /registry; . /feed; ; Registry – SOFA. SOFA - Topic Tag: Registry. /reinforcement-learning; . /feed; ; Reinforcement learning – SOFA. SOFA - Topic Tag: Reinforcement learning. /release; . /feed; ; Release – SOFA. SOFA - Topic Tag: Release. /removed-object; . /feed; ; removed object – SOFA. SOFA - Topic Tag: removed object. /removetrianglespostprocessing; . /feed; ; removeTrianglesPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; rigif – SOFA. SOFA - Topic Tag: ri,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:468040,Usability,learn,learning,468040,creator issues. /qtsofa; . /feed; ; qtSofa – SOFA. SOFA - Topic Tag: qtSofa. /raleigh-damping; . /feed; ; raleigh damping – SOFA. SOFA - Topic Tag: raleigh damping. /rayleigh-damping; . /feed; ; Rayleigh damping – SOFA. SOFA - Topic Tag: Rayleigh damping. /reaction-force; . /feed; ; reaction force – SOFA. SOFA - Topic Tag: reaction force. /realistic; . /feed; ; realistic – SOFA. SOFA - Topic Tag: realistic. /realtime; . /feed; ; realtime – SOFA. SOFA - Topic Tag: realtime. /real-time; . /feed; ; real-time – SOFA. SOFA - Topic Tag: real-time. /record; . /feed; ; record – SOFA. SOFA - Topic Tag: record. /recordedcamera; . /feed; ; RecordedCamera – SOFA. SOFA - Topic Tag: RecordedCamera. /recording; . /feed; ; Recording – SOFA. SOFA - Topic Tag: Recording. /refine-coarse; . /feed; ; refine coarse – SOFA. SOFA - Topic Tag: refine coarse. /registry; . /feed; ; Registry – SOFA. SOFA - Topic Tag: Registry. /reinforcement-learning; . /feed; ; Reinforcement learning – SOFA. SOFA - Topic Tag: Reinforcement learning. /release; . /feed; ; Release – SOFA. SOFA - Topic Tag: Release. /removed-object; . /feed; ; removed object – SOFA. SOFA - Topic Tag: removed object. /removetrianglespostprocessing; . /feed; ; removeTrianglesPostProcessing – SOFA. SOFA - Topic Tag: removeTrianglesPostProcessing. /rendering; . /feed; ; rendering – SOFA. SOFA - Topic Tag: rendering. /rep; . /feed; ; Rep – SOFA. SOFA - Topic Tag: Rep. /reset-sofa-using-code; . /feed; ; Reset SOFA using code. – SOFA. SOFA - Topic Tag: Reset SOFA using code. /rigid; . /feed; ; rigid – SOFA. SOFA - Topic Tag: rigid. /rigid-body; . /feed; ; rigid body – SOFA. SOFA - Topic Tag: rigid body. /rigidify; . /feed; ; rigidify – SOFA. SOFA - Topic Tag: rigidify. /rigidmapping-beamfemforcefield-geomagicdevice; . /feed; ; Rigidmapping BeamFEMForceField GeomagicDevice – SOFA. SOFA - Topic Tag: Rigidmapping BeamFEMForceField GeomagicDevice. /rigif; . /feed; ; rigif – SOFA. SOFA - Topic Tag: rigif. /robots; . /feed; ; Robots – SOFA. S,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:587332,Usability,responsiv,responsive-slider-slider,587332,A – Registration. SOFA – SOFA Week 2024. /technical-committee-7; ; SOFA – Technical Committee #7. /technical-committees; . /registration; ; SOFA – Registration. SOFA – Technical Committees. stc11; ; SOFA – STC#11. stc9; . /live; ; SOFA – Live. SOFA – STC#9 meeting. wp-content; . /plugins; . /bbpress; . /templates; . /default; . /css; ; bbpress.min.css. /js; ; editor.min.js; engagements.min.js. /cf7-conditional-fields; . /js; ; scripts.js. style.css. /cleantalk-spam-protect; . /css; . /images; ; bad_email.svg; good_email.svg. cleantalk-email-decoder.min.css; cleantalk-public.min.css. /js; ; apbct-public-bundle.min.js. /contact-form-7; . /includes; . /css; ; styles.css. /js; ; index.js. /swv; . /js; ; index.js. /revslider; . /rs-plugin; . /css; ; settings.css. /font; ; revicons.eot; revicons.svg; revicons.ttf; revicons.woff. /js; ; jquery.themepunch.revolution.min.js; jquery.themepunch.tools.min.js. /wpcf7-recaptcha; . /assets; . /js; ; wpcf7-recaptcha-controls.js. /wp-logo-showcase-responsive-slider-slider; . /assets; . /css; ; slick.css; wpls-public.css. /js; ; slick.min.js; wpls-public.js. /sofaGraph; ; controller.js; functions.js; style.css. /themes; . /inovado; . /framework; . /css; . /font; ; fontawesome-webfont-1.eot; fontawesome-webfont.eot; fontawesome-webfont.ttf; fontawesome-webfont.woff. custom_script.css; flexslider.css; headers.css; prettyPhoto.css; responsive.css; retina.css; shortcodes.css. /js; . /twitter; ; jquery.tweet.js. bootstrap.js; easing.js; fitvids.js; flexslider.js; functions.js; isotope.js; mobilemenu.js; prettyPhoto.js; shortcodes.js; superfish.js; waypoints.js; waypoints-sticky.js. style.css. /inovado_child; ; style.css. /uploads; . /2016; . /08; ; 2-Tutorial.pdf. /2017; . /04; ; STC3-Report.pdf. /2018; . /07; ; STC1-Report.pdf; STC2-Report.pdf; STC4-Report.pdf; STC5-Report.pdf. /11; ; SOFA-SymposiumProgram-2018.pdf. /12; ; STC6-Report.pdf. /2019; . /06; ; STC7-Report.pdf. /11; ; FrenchTechCentral_Plan_FR.pdf; SOFA-SymposiumProgram-2019.p,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/index-wcopy.html:587720,Usability,responsiv,responsive,587720,s.min.js. /cf7-conditional-fields; . /js; ; scripts.js. style.css. /cleantalk-spam-protect; . /css; . /images; ; bad_email.svg; good_email.svg. cleantalk-email-decoder.min.css; cleantalk-public.min.css. /js; ; apbct-public-bundle.min.js. /contact-form-7; . /includes; . /css; ; styles.css. /js; ; index.js. /swv; . /js; ; index.js. /revslider; . /rs-plugin; . /css; ; settings.css. /font; ; revicons.eot; revicons.svg; revicons.ttf; revicons.woff. /js; ; jquery.themepunch.revolution.min.js; jquery.themepunch.tools.min.js. /wpcf7-recaptcha; . /assets; . /js; ; wpcf7-recaptcha-controls.js. /wp-logo-showcase-responsive-slider-slider; . /assets; . /css; ; slick.css; wpls-public.css. /js; ; slick.min.js; wpls-public.js. /sofaGraph; ; controller.js; functions.js; style.css. /themes; . /inovado; . /framework; . /css; . /font; ; fontawesome-webfont-1.eot; fontawesome-webfont.eot; fontawesome-webfont.ttf; fontawesome-webfont.woff. custom_script.css; flexslider.css; headers.css; prettyPhoto.css; responsive.css; retina.css; shortcodes.css. /js; . /twitter; ; jquery.tweet.js. bootstrap.js; easing.js; fitvids.js; flexslider.js; functions.js; isotope.js; mobilemenu.js; prettyPhoto.js; shortcodes.js; superfish.js; waypoints.js; waypoints-sticky.js. style.css. /inovado_child; ; style.css. /uploads; . /2016; . /08; ; 2-Tutorial.pdf. /2017; . /04; ; STC3-Report.pdf. /2018; . /07; ; STC1-Report.pdf; STC2-Report.pdf; STC4-Report.pdf; STC5-Report.pdf. /11; ; SOFA-SymposiumProgram-2018.pdf. /12; ; STC6-Report.pdf. /2019; . /06; ; STC7-Report.pdf. /11; ; FrenchTechCentral_Plan_FR.pdf; SOFA-SymposiumProgram-2019.pdf. /12; ; STC8-Report.pdf. /2020; . /05; ; STC9-Agenda-public.pdf; STC9-Report-corrected.pdf. /11; ; 20201118-SOFA-Symposium-2020-Program.pdf. /2021; . /04; ; STC10-Report.pdf. /2022; . /01; ; STC11-Report.pdf; STC12-Report.pdf. /06; ; STC13-Report.pdf. /2023; . /01; ; STC14-Report.pdf. /02; ; interpolated.mp4; Screencast-2023-02-22-154742.mp4; TorusFall__r60_0002.mp4. /06; ; STC15-R,MatchSource.WIKI,index-wcopy.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:10103,Deployability,integrat,integrate,10103,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; iterationTimesofa::component::animationloop::ConstraintAnimationLoopprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; launchCollisionDetection(const core::ExecParams *params)sofa::component::animationloop::ConstraintAnimationLoopprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:14883,Deployability,update,updateInternal,14883,"ore::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(ConstraintAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::ConstraintAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const core::ExecParams *params, SReal dt) overridesofa::component::animationloop::ConstraintAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; timesofa::component::animationloop::ConstraintAnimationLoopprotected; timersofa::component::animationloop::ConstraintAnimationLoopprotected; timeScalesofa::component::animationloop::ConstraintAnimationLoopprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeAndAccumulateAndCountConstraintDirections(const core::ExecParams *params, simulation::Node *context, unsigned int &numConstraints)sofa::component::animationloop::ConstraintAnimationLoopprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~ConstraintAnimationLoop() overridesofa::component::animationloop::Const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:14936,Deployability,update,updateLinks,14936,"static; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(ConstraintAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::ConstraintAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const core::ExecParams *params, SReal dt) overridesofa::component::animationloop::ConstraintAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; timesofa::component::animationloop::ConstraintAnimationLoopprotected; timersofa::component::animationloop::ConstraintAnimationLoopprotected; timeScalesofa::component::animationloop::ConstraintAnimationLoopprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeAndAccumulateAndCountConstraintDirections(const core::ExecParams *params, simulation::Node *context, unsigned int &numConstraints)sofa::component::animationloop::ConstraintAnimationLoopprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~ConstraintAnimationLoop() overridesofa::component::animationloop::ConstraintAnimationLoopprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:10103,Integrability,integrat,integrate,10103,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; iterationTimesofa::component::animationloop::ConstraintAnimationLoopprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; launchCollisionDetection(const core::ExecParams *params)sofa::component::animationloop::ConstraintAnimationLoopprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:282,Modifiability,inherit,inherited,282,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::animationloop::ConstraintAnimationLoop Member List . This is the complete list of members for sofa::component::animationloop::ConstraintAnimationLoop, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bufCP1sofa::component::animationloop::ConstraintAnimationLoopprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:13724,Performance,load,loader,13724,"rridesofa::core::behavior::BaseAnimationLoopvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setConstraintEquations(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(ConstraintAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::ConstraintAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const core::ExecParams *params, SReal dt) overridesofa::component::animationloop::ConstraintAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; timesofa::component::animationloop::ConstraintAnimationLoopprotected; timersofa::component::animationloop::ConstraintAnimationLoopprotected; timeS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:750,Testability,log,logging,750," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bufCP1sofa::component::animationloop::ConstraintAnimationLoopprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseOb",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:3279,Testability,log,logging,3279,"a::simulation::CollisionAnimationLoopprotected; compTimesofa::component::animationloop::ConstraintAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeComplianceInConstraintSpace()sofa::component::animationloop::ConstraintAnimationLoopprotectedvirtual; computePredictiveForce(int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res)sofa::component::animationloop::ConstraintAnimationLoopprotected; ConstraintAnimationLoop()sofa::component::animationloop::ConstraintAnimationLoopprotected; constraintCorrectionssofa::component::animationloop::ConstraintAnimationLoopprotected; correctiveMotion(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activateSubGraphsofa::component::animationloop::ConstraintAnimationLoop; d_allVerifiedsofa::component::animationloop::ConstraintAnimationLoop; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_displayTimesofa::component::animationloop::ConstraintAnimationLoop; d_doCollisionsFirstsofa::component::animationloop::ConstraintAnimationLoop; d_doubleBuffersofa::component::animationloop::ConstraintAnimationLoop; d_graphConstraintssofa::component::animationloop::ConstraintAnimationLoop; d_graphErrorssofa::component::animationloop::ConstraintAnimationLoop; d_graphForcessofa::component::animationloop::ConstraintAnimationLoop; d_maxItsofa::component::animationloop::ConstraintAnimationLoop; d_messageLogCountsofa::core::objectmode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:3321,Testability,log,logging,3321,"cted; compTimesofa::component::animationloop::ConstraintAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeComplianceInConstraintSpace()sofa::component::animationloop::ConstraintAnimationLoopprotectedvirtual; computePredictiveForce(int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res)sofa::component::animationloop::ConstraintAnimationLoopprotected; ConstraintAnimationLoop()sofa::component::animationloop::ConstraintAnimationLoopprotected; constraintCorrectionssofa::component::animationloop::ConstraintAnimationLoopprotected; correctiveMotion(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_activateSubGraphsofa::component::animationloop::ConstraintAnimationLoop; d_allVerifiedsofa::component::animationloop::ConstraintAnimationLoop; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_displayTimesofa::component::animationloop::ConstraintAnimationLoop; d_doCollisionsFirstsofa::component::animationloop::ConstraintAnimationLoop; d_doubleBuffersofa::component::animationloop::ConstraintAnimationLoop; d_graphConstraintssofa::component::animationloop::ConstraintAnimationLoop; d_graphErrorssofa::component::animationloop::ConstraintAnimationLoop; d_graphForcessofa::component::animationloop::ConstraintAnimationLoop; d_maxItsofa::component::animationloop::ConstraintAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; d_realTimeCompensationsofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:7507,Testability,log,logging,7507,"t; getCP()sofa::component::animationloop::ConstraintAnimationLoopprotectedvirtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getIndividualConstraintSolvingProcess(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; getIndividualConstraintViolations(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:7549,Testability,log,logging,7549,"ConstraintAnimationLoopprotectedvirtual; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getIndividualConstraintSolvingProcess(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; getIndividualConstraintViolations(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloop::ConstraintAnimationLoopprotected; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:14953,Testability,log,logErrors,14953,"static; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(ConstraintAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::ConstraintAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const core::ExecParams *params, SReal dt) overridesofa::component::animationloop::ConstraintAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; timesofa::component::animationloop::ConstraintAnimationLoopprotected; timersofa::component::animationloop::ConstraintAnimationLoopprotected; timeScalesofa::component::animationloop::ConstraintAnimationLoopprotected; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeAndAccumulateAndCountConstraintDirections(const core::ExecParams *params, simulation::Node *context, unsigned int &numConstraints)sofa::component::animationloop::ConstraintAnimationLoopprotected; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~ConstraintAnimationLoop() overridesofa::component::animationloop::ConstraintAnimationLoopprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:2198,Usability,clear,clearLoggedMessages,2198,"function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bufCP1sofa::component::animationloop::ConstraintAnimationLoopprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; compTimesofa::component::animationloop::ConstraintAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeComplianceInConstraintSpace()sofa::component::animationloop::ConstraintAnimationLoopprotectedvirtual; computePredictiveForce(int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res)sofa::component::animationloop::ConstraintAnimationLoopprotected; ConstraintAnimationLoop()sofa::component::animationloop::ConstraintAnimationLoopprotected; constraintCorrectionssofa::component::animationloop::ConstraintAnimationLoopprotected; correctiveMotion(const core::ExecParams *params, simulation::Node *context)sofa::component::animationloo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:1054,Availability,error,error,1054,"tAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::ConstraintAnimationLoop Class Reference . #include <ConstraintAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::ConstraintAnimationLoop:. [legend]. Public Attributes; Data< bool > d_displayTime;  Display time for each important step of ConstraintAnimationLoop. More...;  ; Data< SReal > d_tol;  Tolerance of the Gauss-Seidel. More...;  ; Data< int > d_maxIt;  Maximum number of iterations of the Gauss-Seidel. More...;  ; Data< bool > d_doCollisionsFirst;  Compute the collisions first (to support penality-based contacts) More...;  ; Data< bool > d_doubleBuffer;  Double the buffer dedicated to the constraint problem to make it accessible to another thread. More...;  ; Data< bool > d_scaleTolerance;  Scale the error tolerance with the number of constraints. More...;  ; Data< bool > d_allVerified;  All constraints must be verified (each constraint's error < tolerance) More...;  ; Data< SReal > d_sor;  Successive Over Relaxation parameter (0-2) More...;  ; Data< bool > d_schemeCorrection;  Apply new scheme where compliance is progressively corrected. More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:1060,Availability,toler,tolerance,1060,"tAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::ConstraintAnimationLoop Class Reference . #include <ConstraintAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::ConstraintAnimationLoop:. [legend]. Public Attributes; Data< bool > d_displayTime;  Display time for each important step of ConstraintAnimationLoop. More...;  ; Data< SReal > d_tol;  Tolerance of the Gauss-Seidel. More...;  ; Data< int > d_maxIt;  Maximum number of iterations of the Gauss-Seidel. More...;  ; Data< bool > d_doCollisionsFirst;  Compute the collisions first (to support penality-based contacts) More...;  ; Data< bool > d_doubleBuffer;  Double the buffer dedicated to the constraint problem to make it accessible to another thread. More...;  ; Data< bool > d_scaleTolerance;  Scale the error tolerance with the number of constraints. More...;  ; Data< bool > d_allVerified;  All constraints must be verified (each constraint's error < tolerance) More...;  ; Data< SReal > d_sor;  Successive Over Relaxation parameter (0-2) More...;  ; Data< bool > d_schemeCorrection;  Apply new scheme where compliance is progressively corrected. More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:1195,Availability,error,error,1195,"ic Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::ConstraintAnimationLoop Class Reference . #include <ConstraintAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::ConstraintAnimationLoop:. [legend]. Public Attributes; Data< bool > d_displayTime;  Display time for each important step of ConstraintAnimationLoop. More...;  ; Data< SReal > d_tol;  Tolerance of the Gauss-Seidel. More...;  ; Data< int > d_maxIt;  Maximum number of iterations of the Gauss-Seidel. More...;  ; Data< bool > d_doCollisionsFirst;  Compute the collisions first (to support penality-based contacts) More...;  ; Data< bool > d_doubleBuffer;  Double the buffer dedicated to the constraint problem to make it accessible to another thread. More...;  ; Data< bool > d_scaleTolerance;  Scale the error tolerance with the number of constraints. More...;  ; Data< bool > d_allVerified;  All constraints must be verified (each constraint's error < tolerance) More...;  ; Data< SReal > d_sor;  Successive Over Relaxation parameter (0-2) More...;  ; Data< bool > d_schemeCorrection;  Apply new scheme where compliance is progressively corrected. More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_n",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:1203,Availability,toler,tolerance,1203,"ic Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::ConstraintAnimationLoop Class Reference . #include <ConstraintAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::ConstraintAnimationLoop:. [legend]. Public Attributes; Data< bool > d_displayTime;  Display time for each important step of ConstraintAnimationLoop. More...;  ; Data< SReal > d_tol;  Tolerance of the Gauss-Seidel. More...;  ; Data< int > d_maxIt;  Maximum number of iterations of the Gauss-Seidel. More...;  ; Data< bool > d_doCollisionsFirst;  Compute the collisions first (to support penality-based contacts) More...;  ; Data< bool > d_doubleBuffer;  Double the buffer dedicated to the constraint problem to make it accessible to another thread. More...;  ; Data< bool > d_scaleTolerance;  Scale the error tolerance with the number of constraints. More...;  ; Data< bool > d_allVerified;  All constraints must be verified (each constraint's error < tolerance) More...;  ; Data< SReal > d_sor;  Successive Over Relaxation parameter (0-2) More...;  ; Data< bool > d_schemeCorrection;  Apply new scheme where compliance is progressively corrected. More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_n",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:1650,Availability,error,errors,1650,"tionLoop. More...;  ; Data< SReal > d_tol;  Tolerance of the Gauss-Seidel. More...;  ; Data< int > d_maxIt;  Maximum number of iterations of the Gauss-Seidel. More...;  ; Data< bool > d_doCollisionsFirst;  Compute the collisions first (to support penality-based contacts) More...;  ; Data< bool > d_doubleBuffer;  Double the buffer dedicated to the constraint problem to make it accessible to another thread. More...;  ; Data< bool > d_scaleTolerance;  Scale the error tolerance with the number of constraints. More...;  ; Data< bool > d_allVerified;  All constraints must be verified (each constraint's error < tolerance) More...;  ; Data< SReal > d_sor;  Successive Over Relaxation parameter (0-2) More...;  ; Data< bool > d_schemeCorrection;  Apply new scheme where compliance is progressively corrected. More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:1797,Availability,error,error,1797,";  ; Data< bool > d_doCollisionsFirst;  Compute the collisions first (to support penality-based contacts) More...;  ; Data< bool > d_doubleBuffer;  Double the buffer dedicated to the constraint problem to make it accessible to another thread. More...;  ; Data< bool > d_scaleTolerance;  Scale the error tolerance with the number of constraints. More...;  ; Data< bool > d_allVerified;  All constraints must be verified (each constraint's error < tolerance) More...;  ; Data< SReal > d_sor;  Successive Over Relaxation parameter (0-2) More...;  ; Data< bool > d_schemeCorrection;  Apply new scheme where compliance is progressively corrected. More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra mess",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:4693,Availability,down,down,4693,"Real iterationTime;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ConstraintAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ConstraintProblem * getConstraintProblem ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:5020,Availability,down,down,5020,"_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ConstraintAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ConstraintProblem * getConstraintProblem ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:18927,Availability,error,error,18927,"ss T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ bufCP1. bool sofa::component::animationloop::ConstraintAnimationLoop::bufCP1. protected . ◆ compTime. SReal sofa::component::animationloop::ConstraintAnimationLoop::compTime. protected . ◆ constraintCorrections. std::vector<core::behavior::BaseConstraintCorrection*> sofa::component::animationloop::ConstraintAnimationLoop::constraintCorrections. protected . ◆ d_activateSubGraph. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_activateSubGraph. ◆ d_allVerified. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_allVerified. All constraints must be verified (each constraint's error < tolerance) . ◆ d_displayTime. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_displayTime. Display time for each important step of ConstraintAnimationLoop. . ◆ d_doCollisionsFirst. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doCollisionsFirst. Compute the collisions first (to support penality-based contacts) . ◆ d_doubleBuffer. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doubleBuffer. Double the buffer dedicated to the constraint problem to make it accessible to another thread. . ◆ d_graphConstraints. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphConstraints. Graph of each constraint's error at the end of the resolution. . ◆ d_graphErrors. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphErrors. Sum of the constraints' errors at each iterati",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:18935,Availability,toler,tolerance,18935,"ss T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ bufCP1. bool sofa::component::animationloop::ConstraintAnimationLoop::bufCP1. protected . ◆ compTime. SReal sofa::component::animationloop::ConstraintAnimationLoop::compTime. protected . ◆ constraintCorrections. std::vector<core::behavior::BaseConstraintCorrection*> sofa::component::animationloop::ConstraintAnimationLoop::constraintCorrections. protected . ◆ d_activateSubGraph. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_activateSubGraph. ◆ d_allVerified. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_allVerified. All constraints must be verified (each constraint's error < tolerance) . ◆ d_displayTime. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_displayTime. Display time for each important step of ConstraintAnimationLoop. . ◆ d_doCollisionsFirst. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doCollisionsFirst. Compute the collisions first (to support penality-based contacts) . ◆ d_doubleBuffer. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doubleBuffer. Double the buffer dedicated to the constraint problem to make it accessible to another thread. . ◆ d_graphConstraints. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphConstraints. Graph of each constraint's error at the end of the resolution. . ◆ d_graphErrors. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphErrors. Sum of the constraints' errors at each iterati",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:19679,Availability,error,error,19679,"aph. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_activateSubGraph. ◆ d_allVerified. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_allVerified. All constraints must be verified (each constraint's error < tolerance) . ◆ d_displayTime. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_displayTime. Display time for each important step of ConstraintAnimationLoop. . ◆ d_doCollisionsFirst. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doCollisionsFirst. Compute the collisions first (to support penality-based contacts) . ◆ d_doubleBuffer. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doubleBuffer. Double the buffer dedicated to the constraint problem to make it accessible to another thread. . ◆ d_graphConstraints. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphConstraints. Graph of each constraint's error at the end of the resolution. . ◆ d_graphErrors. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphErrors. Sum of the constraints' errors at each iteration. . ◆ d_graphForces. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphForces. Graph of each constraint's force at each step of the resolution. . ◆ d_maxIt. Data<int> sofa::component::animationloop::ConstraintAnimationLoop::d_maxIt. Maximum number of iterations of the Gauss-Seidel. . ◆ d_realTimeCompensation. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_realTimeCompensation. If the total computational time T < dt, sleep(dt-T) . ◆ d_scaleTolerance. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_scaleTolerance. Scale the error tolerance with the number of constraints. . ◆ d_schemeCorrection. Data<bool> sofa::component::animationloop::Constrain",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:19889,Availability,error,errors,19889,"s must be verified (each constraint's error < tolerance) . ◆ d_displayTime. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_displayTime. Display time for each important step of ConstraintAnimationLoop. . ◆ d_doCollisionsFirst. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doCollisionsFirst. Compute the collisions first (to support penality-based contacts) . ◆ d_doubleBuffer. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doubleBuffer. Double the buffer dedicated to the constraint problem to make it accessible to another thread. . ◆ d_graphConstraints. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphConstraints. Graph of each constraint's error at the end of the resolution. . ◆ d_graphErrors. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphErrors. Sum of the constraints' errors at each iteration. . ◆ d_graphForces. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphForces. Graph of each constraint's force at each step of the resolution. . ◆ d_maxIt. Data<int> sofa::component::animationloop::ConstraintAnimationLoop::d_maxIt. Maximum number of iterations of the Gauss-Seidel. . ◆ d_realTimeCompensation. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_realTimeCompensation. If the total computational time T < dt, sleep(dt-T) . ◆ d_scaleTolerance. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_scaleTolerance. Scale the error tolerance with the number of constraints. . ◆ d_schemeCorrection. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_schemeCorrection. Apply new scheme where compliance is progressively corrected. . ◆ d_sor. Data<SReal> sofa::component::animationloop::ConstraintAnimationLoop::d_sor. Successive Over Relax",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:20559,Availability,error,error,20559,"fa::component::animationloop::ConstraintAnimationLoop::d_graphConstraints. Graph of each constraint's error at the end of the resolution. . ◆ d_graphErrors. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphErrors. Sum of the constraints' errors at each iteration. . ◆ d_graphForces. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphForces. Graph of each constraint's force at each step of the resolution. . ◆ d_maxIt. Data<int> sofa::component::animationloop::ConstraintAnimationLoop::d_maxIt. Maximum number of iterations of the Gauss-Seidel. . ◆ d_realTimeCompensation. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_realTimeCompensation. If the total computational time T < dt, sleep(dt-T) . ◆ d_scaleTolerance. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_scaleTolerance. Scale the error tolerance with the number of constraints. . ◆ d_schemeCorrection. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_schemeCorrection. Apply new scheme where compliance is progressively corrected. . ◆ d_sor. Data<SReal> sofa::component::animationloop::ConstraintAnimationLoop::d_sor. Successive Over Relaxation parameter (0-2) . ◆ d_tol. Data<SReal> sofa::component::animationloop::ConstraintAnimationLoop::d_tol. Tolerance of the Gauss-Seidel. . ◆ iterationTime. SReal sofa::component::animationloop::ConstraintAnimationLoop::iterationTime. protected . ◆ numConstraints. unsigned int sofa::component::animationloop::ConstraintAnimationLoop::numConstraints. protected . ◆ time. SReal sofa::component::animationloop::ConstraintAnimationLoop::time. protected . ◆ timer. sofa::helper::system::thread::CTime* sofa::component::animationloop::ConstraintAnimationLoop::timer. protected . ◆ timeScale. SReal sofa::component::animationloop::ConstraintAnimationLoop::timeScale. protected . Constructor d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:20565,Availability,toler,tolerance,20565,"fa::component::animationloop::ConstraintAnimationLoop::d_graphConstraints. Graph of each constraint's error at the end of the resolution. . ◆ d_graphErrors. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphErrors. Sum of the constraints' errors at each iteration. . ◆ d_graphForces. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphForces. Graph of each constraint's force at each step of the resolution. . ◆ d_maxIt. Data<int> sofa::component::animationloop::ConstraintAnimationLoop::d_maxIt. Maximum number of iterations of the Gauss-Seidel. . ◆ d_realTimeCompensation. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_realTimeCompensation. If the total computational time T < dt, sleep(dt-T) . ◆ d_scaleTolerance. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_scaleTolerance. Scale the error tolerance with the number of constraints. . ◆ d_schemeCorrection. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_schemeCorrection. Apply new scheme where compliance is progressively corrected. . ◆ d_sor. Data<SReal> sofa::component::animationloop::ConstraintAnimationLoop::d_sor. Successive Over Relaxation parameter (0-2) . ◆ d_tol. Data<SReal> sofa::component::animationloop::ConstraintAnimationLoop::d_tol. Tolerance of the Gauss-Seidel. . ◆ iterationTime. SReal sofa::component::animationloop::ConstraintAnimationLoop::iterationTime. protected . ◆ numConstraints. unsigned int sofa::component::animationloop::ConstraintAnimationLoop::numConstraints. protected . ◆ time. SReal sofa::component::animationloop::ConstraintAnimationLoop::time. protected . ◆ timer. sofa::helper::system::thread::CTime* sofa::component::animationloop::ConstraintAnimationLoop::timer. protected . ◆ timeScale. SReal sofa::component::animationloop::ConstraintAnimationLoop::timeScale. protected . Constructor d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:24437,Availability,down,down,24437,"ofa::component::animationloop::ConstraintAnimationLoop::getCP ; (; ). protectedvirtual . ◆ getIndividualConstraintSolvingProcess(). void sofa::component::animationloop::ConstraintAnimationLoop::getIndividualConstraintSolvingProcess ; (; const core::ExecParams * ; params, . simulation::Node * ; context . ). protected . 3.calling getConstraintResolution: each constraint provides a method that is used to solve it during GS iterations . ◆ getIndividualConstraintViolations(). void sofa::component::animationloop::ConstraintAnimationLoop::getIndividualConstraintViolations ; (; const core::ExecParams * ; params, . simulation::Node * ; context . ). protected . 2.calling GetConstraintViolationVisitor: each constraint provides its present violation for a given state (by default: free_position TODO: add VecId to make this method more generic) . ◆ init(). void sofa::component::animationloop::ConstraintAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ launchCollisionDetection(). void sofa::component::animationloop::ConstraintAnimationLoop::launchCollisionDetection ; (; const core::ExecParams * ; params). protected . ◆ setConstraintEquations(). void sofa::component::animationloop::ConstraintAnimationLoop::setConstraintEquations ; (; const core::ExecParams * ; params, . simulation::Node * ; context . ). protected . ◆ SOFA_CLASS(). sofa::component::animationloop::ConstraintAnimationLoop::SOFA_CLASS ; (; ConstraintAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::ConstraintAnimationLoop::step ; (; const core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. ◆ wr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:7042,Deployability,update,updateInternal,7042,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:11442,Deployability,update,updateLinks,11442,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:15787,Deployability,pipeline,pipeline,15787,"e scheme: More...;  ; void gaussSeidelConstraint (int dim, SReal *dfree, SReal **w, SReal *force, SReal *d, std::vector< core::behavior::ConstraintResolution * > &res, SReal *df);  ; virtual ConstraintProblem * getCP ();  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:15822,Deployability,integrat,integrate,15822,"core::behavior::ConstraintResolution * > &res, SReal *df);  ; virtual ConstraintProblem * getCP ();  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:16387,Deployability,update,update,16387,"...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:25327,Deployability,integrat,integrations,25327,"xecParams * ; params, . simulation::Node * ; context . ). protected . 2.calling GetConstraintViolationVisitor: each constraint provides its present violation for a given state (by default: free_position TODO: add VecId to make this method more generic) . ◆ init(). void sofa::component::animationloop::ConstraintAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ launchCollisionDetection(). void sofa::component::animationloop::ConstraintAnimationLoop::launchCollisionDetection ; (; const core::ExecParams * ; params). protected . ◆ setConstraintEquations(). void sofa::component::animationloop::ConstraintAnimationLoop::setConstraintEquations ; (; const core::ExecParams * ; params, . simulation::Node * ; context . ). protected . ◆ SOFA_CLASS(). sofa::component::animationloop::ConstraintAnimationLoop::SOFA_CLASS ; (; ConstraintAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::ConstraintAnimationLoop::step ; (; const core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. ◆ writeAndAccumulateAndCountConstraintDirections(). void sofa::component::animationloop::ConstraintAnimationLoop::writeAndAccumulateAndCountConstraintDirections ; (; const core::ExecParams * ; params, . simulation::Node * ; context, . unsigned int & ; numConstraints . ). protected . Specific procedures that are called for setting the constraints: ; 1.calling resetConstraint & setConstraint & accumulateConstraint visitors and resize the constraint problem that will be solved . sofacomponentanimationloopConstraintAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:2754,Integrability,message,messages,2754,"Real > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::vector< core::behavior::BaseConstraintCorrection * > constraintCorrections;  ; sofa::helper::system::thread::CTime * timer;  ; SReal timeScale;  ; SReal time;  ; unsigned int numConstraints;  ; bool bufCP1;  ; SReal compTime;  ; SReal iterationTime;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:5697,Integrability,depend,dependent,5697,"t () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ConstraintProblem * getConstraintProblem ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:15822,Integrability,integrat,integrate,15822,"core::behavior::ConstraintResolution * > &res, SReal *df);  ; virtual ConstraintProblem * getCP ();  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:25327,Integrability,integrat,integrations,25327,"xecParams * ; params, . simulation::Node * ; context . ). protected . 2.calling GetConstraintViolationVisitor: each constraint provides its present violation for a given state (by default: free_position TODO: add VecId to make this method more generic) . ◆ init(). void sofa::component::animationloop::ConstraintAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ launchCollisionDetection(). void sofa::component::animationloop::ConstraintAnimationLoop::launchCollisionDetection ; (; const core::ExecParams * ; params). protected . ◆ setConstraintEquations(). void sofa::component::animationloop::ConstraintAnimationLoop::setConstraintEquations ; (; const core::ExecParams * ; params, . simulation::Node * ; context . ). protected . ◆ SOFA_CLASS(). sofa::component::animationloop::ConstraintAnimationLoop::SOFA_CLASS ; (; ConstraintAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::ConstraintAnimationLoop::step ; (; const core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. ◆ writeAndAccumulateAndCountConstraintDirections(). void sofa::component::animationloop::ConstraintAnimationLoop::writeAndAccumulateAndCountConstraintDirections ; (; const core::ExecParams * ; params, . simulation::Node * ; context, . unsigned int & ; numConstraints . ). protected . Specific procedures that are called for setting the constraints: ; 1.calling resetConstraint & setConstraint & accumulateConstraint visitors and resize the constraint problem that will be solved . sofacomponentanimationloopConstraintAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:2018,Modifiability,inherit,inherited,2018,"ied;  All constraints must be verified (each constraint's error < tolerance) More...;  ; Data< SReal > d_sor;  Successive Over Relaxation parameter (0-2) More...;  ; Data< bool > d_schemeCorrection;  Apply new scheme where compliance is progressively corrected. More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:2339,Modifiability,inherit,inherited,2339,". More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::vector< core::behavior::BaseConstraintCorrection * > constraintCo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:2505,Modifiability,inherit,inherited,2505,"e::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::vector< core::behavior::BaseConstraintCorrection * > constraintCorrections;  ; sofa::helper::system::thread::CTime * timer;  ; SReal timeScale;  ; SReal time;  ; unsigned int numConstraints;  ; bool bufCP1;  ; SReal compTime;  ; SReal iterationTime;  ;  Pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:3607,Modifiability,inherit,inherited,3607,"d from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::vector< core::behavior::BaseConstraintCorrection * > constraintCorrections;  ; sofa::helper::system::thread::CTime * timer;  ; SReal timeScale;  ; SReal time;  ; unsigned int numConstraints;  ; bool bufCP1;  ; SReal compTime;  ; SReal iterationTime;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ConstraintAnimationLoop, sofa::simulation::CollisionAnima",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:3757,Modifiability,inherit,inherited,3757,"..;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::vector< core::behavior::BaseConstraintCorrection * > constraintCorrections;  ; sofa::helper::system::thread::CTime * timer;  ; SReal timeScale;  ; SReal time;  ; unsigned int numConstraints;  ; bool bufCP1;  ; SReal compTime;  ; SReal iterationTime;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ConstraintAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ConstraintProblem * getConstraintProblem ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization me",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:4011,Modifiability,inherit,inherited,4011,"..;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::vector< core::behavior::BaseConstraintCorrection * > constraintCorrections;  ; sofa::helper::system::thread::CTime * timer;  ; SReal timeScale;  ; SReal time;  ; unsigned int numConstraints;  ; bool bufCP1;  ; SReal compTime;  ; SReal iterationTime;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ConstraintAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ConstraintProblem * getConstraintProblem ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization me",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:4794,Modifiability,inherit,inherited,4794,"_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ConstraintAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ConstraintProblem * getConstraintProblem ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:5278,Modifiability,inherit,inherited,5278," List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (ConstraintAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ConstraintProblem * getConstraintProblem ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:6978,Modifiability,variab,variables,6978," getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:7088,Modifiability,variab,variables,7088,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:7130,Modifiability,variab,variables,7130,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:7280,Modifiability,inherit,inherited,7280,"d handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:14981,Modifiability,inherit,inherited,14981,"ic procedures that are called for setting the constraints: More...;  ; void getIndividualConstraintViolations (const core::ExecParams *params, simulation::Node *context);  ; void getIndividualConstraintSolvingProcess (const core::ExecParams *params, simulation::Node *context);  3.calling getConstraintResolution: each constraint provides a method that is used to solve it during GS iterations More...;  ; virtual void computeComplianceInConstraintSpace ();  4.calling addComplianceInConstraintSpace projected in the contact space => getDelassusOperator(_W) = H*C*Ht More...;  ; void computePredictiveForce (int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res);  method for predictive scheme: More...;  ; void gaussSeidelConstraint (int dim, SReal *dfree, SReal **w, SReal *force, SReal *d, std::vector< core::behavior::ConstraintResolution * > &res, SReal *df);  ; virtual ConstraintProblem * getCP ();  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:15979,Modifiability,inherit,inherited,15979,"ionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:16221,Modifiability,inherit,inherited,16221,"...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:16944,Modifiability,inherit,inherited,16944,";  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:17688,Modifiability,inherit,inherited,17688,"ata to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ bufCP1. bool sofa::component::animationloop::ConstraintAnimationLoop::bufCP1. protected . ◆ compTime. SReal sofa::component::animationloop::ConstraintAnimationLoop::compTime. protected . ◆ constraintCorrections. std::vector<core::behavior::BaseConstraintCorrection*> sofa::component::animationloop::ConstraintAnimationLoop::constraintCorrections. protected . ◆ d_activateSubGraph. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:18088,Modifiability,inherit,inherited,18088,";  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ bufCP1. bool sofa::component::animationloop::ConstraintAnimationLoop::bufCP1. protected . ◆ compTime. SReal sofa::component::animationloop::ConstraintAnimationLoop::compTime. protected . ◆ constraintCorrections. std::vector<core::behavior::BaseConstraintCorrection*> sofa::component::animationloop::ConstraintAnimationLoop::constraintCorrections. protected . ◆ d_activateSubGraph. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_activateSubGraph. ◆ d_allVerified. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_allVerified. All constraints must be verified (each constraint's error < tolerance) . ◆ d_displayTime. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_displayTime. Display time for each important step of ConstraintAnimationLoop. . ◆ d_doCollisionsFirst. Data<bool> sofa::component::an",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:5778,Performance,load,loader,5778,"onLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:15421,Performance,perform,performing,15421," solve it during GS iterations More...;  ; virtual void computeComplianceInConstraintSpace ();  4.calling addComplianceInConstraintSpace projected in the contact space => getDelassusOperator(_W) = H*C*Ht More...;  ; void computePredictiveForce (int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res);  method for predictive scheme: More...;  ; void gaussSeidelConstraint (int dim, SReal *dfree, SReal **w, SReal *force, SReal *d, std::vector< core::behavior::ConstraintResolution * > &res, SReal *df);  ; virtual ConstraintProblem * getCP ();  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:14720,Safety,predict,predictive,14720,"s (const core::ExecParams *params, simulation::Node *context);  ; void correctiveMotion (const core::ExecParams *params, simulation::Node *context);  ; void debugWithContact (int numConstraints);  ; void writeAndAccumulateAndCountConstraintDirections (const core::ExecParams *params, simulation::Node *context, unsigned int &numConstraints);  Specific procedures that are called for setting the constraints: More...;  ; void getIndividualConstraintViolations (const core::ExecParams *params, simulation::Node *context);  ; void getIndividualConstraintSolvingProcess (const core::ExecParams *params, simulation::Node *context);  3.calling getConstraintResolution: each constraint provides a method that is used to solve it during GS iterations More...;  ; virtual void computeComplianceInConstraintSpace ();  4.calling addComplianceInConstraintSpace projected in the contact space => getDelassusOperator(_W) = H*C*Ht More...;  ; void computePredictiveForce (int dim, SReal *force, std::vector< core::behavior::ConstraintResolution * > &res);  method for predictive scheme: More...;  ; void gaussSeidelConstraint (int dim, SReal *dfree, SReal **w, SReal *force, SReal *d, std::vector< core::behavior::ConstraintResolution * > &res, SReal *df);  ; virtual ConstraintProblem * getCP ();  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:22387,Safety,predict,predictive,22387,"fa::component::animationloop::ConstraintAnimationLoop::timer. protected . ◆ timeScale. SReal sofa::component::animationloop::ConstraintAnimationLoop::timeScale. protected . Constructor details. ◆ ConstraintAnimationLoop(). sofa::component::animationloop::ConstraintAnimationLoop::ConstraintAnimationLoop ; (; ). protected . ◆ ~ConstraintAnimationLoop(). sofa::component::animationloop::ConstraintAnimationLoop::~ConstraintAnimationLoop ; (; ). overrideprotected . Function details. ◆ computeComplianceInConstraintSpace(). void sofa::component::animationloop::ConstraintAnimationLoop::computeComplianceInConstraintSpace ; (; ). protectedvirtual . 4.calling addComplianceInConstraintSpace projected in the contact space => getDelassusOperator(_W) = H*C*Ht . ◆ computePredictiveForce(). void sofa::component::animationloop::ConstraintAnimationLoop::computePredictiveForce ; (; int ; dim, . SReal * ; force, . std::vector< core::behavior::ConstraintResolution * > & ; res . ). protected . method for predictive scheme: . ◆ correctiveMotion(). void sofa::component::animationloop::ConstraintAnimationLoop::correctiveMotion ; (; const core::ExecParams * ; params, . simulation::Node * ; context . ). protected . ◆ debugWithContact(). void sofa::component::animationloop::ConstraintAnimationLoop::debugWithContact ; (; int ; numConstraints). protected . ◆ freeMotion(). void sofa::component::animationloop::ConstraintAnimationLoop::freeMotion ; (; const core::ExecParams * ; params, . simulation::Node * ; context, . SReal & ; dt . ). protected . ◆ gaussSeidelConstraint(). void sofa::component::animationloop::ConstraintAnimationLoop::gaussSeidelConstraint ; (; int ; dim, . SReal * ; dfree, . SReal ** ; w, . SReal * ; force, . SReal * ; d, . std::vector< core::behavior::ConstraintResolution * > & ; res, . SReal * ; df = nullptr . ). protected . ◆ getConstraintProblem(). ConstraintProblem* sofa::component::animationloop::ConstraintAnimationLoop::getConstraintProblem ; (; ). inline . ◆ getCP(). Constr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:970,Security,access,accessible,970,"﻿. SOFA API: sofa::component::animationloop::ConstraintAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::ConstraintAnimationLoop Class Reference . #include <ConstraintAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::ConstraintAnimationLoop:. [legend]. Public Attributes; Data< bool > d_displayTime;  Display time for each important step of ConstraintAnimationLoop. More...;  ; Data< SReal > d_tol;  Tolerance of the Gauss-Seidel. More...;  ; Data< int > d_maxIt;  Maximum number of iterations of the Gauss-Seidel. More...;  ; Data< bool > d_doCollisionsFirst;  Compute the collisions first (to support penality-based contacts) More...;  ; Data< bool > d_doubleBuffer;  Double the buffer dedicated to the constraint problem to make it accessible to another thread. More...;  ; Data< bool > d_scaleTolerance;  Scale the error tolerance with the number of constraints. More...;  ; Data< bool > d_allVerified;  All constraints must be verified (each constraint's error < tolerance) More...;  ; Data< SReal > d_sor;  Successive Over Relaxation parameter (0-2) More...;  ; Data< bool > d_schemeCorrection;  Apply new scheme where compliance is progressively corrected. More...;  ; Data< bool > d_realTimeCompensation;  If the total computational time T < dt, sleep(dt-T) More...;  ; Data< bool > d_activateSubGraph;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphErrors;  Sum of the constraints' errors at each iteration. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  P",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:19462,Security,access,accessible,19462,"p::ConstraintAnimationLoop::compTime. protected . ◆ constraintCorrections. std::vector<core::behavior::BaseConstraintCorrection*> sofa::component::animationloop::ConstraintAnimationLoop::constraintCorrections. protected . ◆ d_activateSubGraph. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_activateSubGraph. ◆ d_allVerified. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_allVerified. All constraints must be verified (each constraint's error < tolerance) . ◆ d_displayTime. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_displayTime. Display time for each important step of ConstraintAnimationLoop. . ◆ d_doCollisionsFirst. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doCollisionsFirst. Compute the collisions first (to support penality-based contacts) . ◆ d_doubleBuffer. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_doubleBuffer. Double the buffer dedicated to the constraint problem to make it accessible to another thread. . ◆ d_graphConstraints. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphConstraints. Graph of each constraint's error at the end of the resolution. . ◆ d_graphErrors. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphErrors. Sum of the constraints' errors at each iteration. . ◆ d_graphForces. Data<std::map < std::string, sofa::type::vector<SReal> > > sofa::component::animationloop::ConstraintAnimationLoop::d_graphForces. Graph of each constraint's force at each step of the resolution. . ◆ d_maxIt. Data<int> sofa::component::animationloop::ConstraintAnimationLoop::d_maxIt. Maximum number of iterations of the Gauss-Seidel. . ◆ d_realTimeCompensation. Data<bool> sofa::component::animationloop::ConstraintAnimationLoop::d_realTimeCompensation. If the total computational time T < dt, sleep(dt-T) . ◆",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:9298,Testability,log,logging,9298," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:9371,Testability,log,logging,9371," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:9413,Testability,log,logging,9413," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:9483,Testability,log,logging,9483," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:9594,Testability,log,logging,9594," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:9636,Testability,log,logging,9636," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:11460,Testability,log,logErrors,11460,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:9679,Usability,clear,clearLoggedMessages,9679," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html:270,Modifiability,inherit,inherited,270,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::animationloop::ConstraintProblem Member List . This is the complete list of members for sofa::component::animationloop::ConstraintProblem, including all inherited members. _constraintsResolutionssofa::component::animationloop::ConstraintProblemprotected; _dsofa::component::animationloop::ConstraintProblemprotected; _dfsofa::component::animationloop::ConstraintProblemprotected; _dFreesofa::component::animationloop::ConstraintProblemprotected; _dimsofa::component::animationloop::ConstraintProblemprotected; _forcesofa::component::animationloop::ConstraintProblemprotected; _timersofa::component::animationloop::ConstraintProblemprotected; _tolsofa::component::animationloop::ConstraintProblemprotected; _Wsofa::component::animationloop::ConstraintProblemprotected; clear(int dim, const SReal &tol)sofa::component::animationloop::ConstraintProblemvirtual; ConstraintProblem(bool printLog=false)sofa::component::animationloop::ConstraintProblem; gaussSeidelConstraintTimed(SReal &timeout, int numItMax)sofa::component::animationloop::ConstraintProblem; getConstraintResolutions(void)sofa::component::animationloop::ConstraintProbleminline; getD(void)sofa::component::animationloop::ConstraintProbleminline; getdF(void)sofa::component::animationloop::ConstraintProbleminline; getDfree(void)sofa::component::animationloop::ConstraintProbleminline; getF(void)sofa::component::animationloop::ConstraintProbleminline; getSize(void)sofa::component::animationloop::ConstraintProbleminline; getTolerance(void)sofa::component::animationloop::ConstraintProbleminline; getW(void)sofa::component::animationloop::ConstraintProbleminline; ~ConstraintProblem()sofa::component::animationloop::ConstraintProblemvirtual. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html:1098,Safety,timeout,timeout,1098,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::animationloop::ConstraintProblem Member List . This is the complete list of members for sofa::component::animationloop::ConstraintProblem, including all inherited members. _constraintsResolutionssofa::component::animationloop::ConstraintProblemprotected; _dsofa::component::animationloop::ConstraintProblemprotected; _dfsofa::component::animationloop::ConstraintProblemprotected; _dFreesofa::component::animationloop::ConstraintProblemprotected; _dimsofa::component::animationloop::ConstraintProblemprotected; _forcesofa::component::animationloop::ConstraintProblemprotected; _timersofa::component::animationloop::ConstraintProblemprotected; _tolsofa::component::animationloop::ConstraintProblemprotected; _Wsofa::component::animationloop::ConstraintProblemprotected; clear(int dim, const SReal &tol)sofa::component::animationloop::ConstraintProblemvirtual; ConstraintProblem(bool printLog=false)sofa::component::animationloop::ConstraintProblem; gaussSeidelConstraintTimed(SReal &timeout, int numItMax)sofa::component::animationloop::ConstraintProblem; getConstraintResolutions(void)sofa::component::animationloop::ConstraintProbleminline; getD(void)sofa::component::animationloop::ConstraintProbleminline; getdF(void)sofa::component::animationloop::ConstraintProbleminline; getDfree(void)sofa::component::animationloop::ConstraintProbleminline; getF(void)sofa::component::animationloop::ConstraintProbleminline; getSize(void)sofa::component::animationloop::ConstraintProbleminline; getTolerance(void)sofa::component::animationloop::ConstraintProbleminline; getW(void)sofa::component::animationloop::ConstraintProbleminline; ~ConstraintProblem()sofa::component::animationloop::ConstraintProblemvirtual. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html:885,Usability,clear,clear,885,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::animationloop::ConstraintProblem Member List . This is the complete list of members for sofa::component::animationloop::ConstraintProblem, including all inherited members. _constraintsResolutionssofa::component::animationloop::ConstraintProblemprotected; _dsofa::component::animationloop::ConstraintProblemprotected; _dfsofa::component::animationloop::ConstraintProblemprotected; _dFreesofa::component::animationloop::ConstraintProblemprotected; _dimsofa::component::animationloop::ConstraintProblemprotected; _forcesofa::component::animationloop::ConstraintProblemprotected; _timersofa::component::animationloop::ConstraintProblemprotected; _tolsofa::component::animationloop::ConstraintProblemprotected; _Wsofa::component::animationloop::ConstraintProblemprotected; clear(int dim, const SReal &tol)sofa::component::animationloop::ConstraintProblemvirtual; ConstraintProblem(bool printLog=false)sofa::component::animationloop::ConstraintProblem; gaussSeidelConstraintTimed(SReal &timeout, int numItMax)sofa::component::animationloop::ConstraintProblem; getConstraintResolutions(void)sofa::component::animationloop::ConstraintProbleminline; getD(void)sofa::component::animationloop::ConstraintProbleminline; getdF(void)sofa::component::animationloop::ConstraintProbleminline; getDfree(void)sofa::component::animationloop::ConstraintProbleminline; getF(void)sofa::component::animationloop::ConstraintProbleminline; getSize(void)sofa::component::animationloop::ConstraintProbleminline; getTolerance(void)sofa::component::animationloop::ConstraintProbleminline; getW(void)sofa::component::animationloop::ConstraintProbleminline; ~ConstraintProblem()sofa::component::animationloop::ConstraintProblemvirtual. Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html:1413,Safety,timeout,timeout,1413," Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::animationloop::ConstraintProblem Class Reference . #include <ConstraintAnimationLoop.h>. Protected Attributes; sofa::linearalgebra::LPtrFullMatrix< SReal > _W;  ; sofa::linearalgebra::FullVector< SReal > _dFree;  ; sofa::linearalgebra::FullVector< SReal > _force;  ; sofa::linearalgebra::FullVector< SReal > _d;  ; sofa::linearalgebra::FullVector< SReal > _df;  ; std::vector< core::behavior::ConstraintResolution * > _constraintsResolutions;  ; SReal _tol;  ; int _dim;  ; sofa::helper::system::thread::CTime * _timer;  . Public Member Functions;  ConstraintProblem (bool printLog=false);  ; virtual ~ConstraintProblem ();  ; virtual void clear (int dim, const SReal &tol);  ; int getSize (void);  ; sofa::linearalgebra::LPtrFullMatrix< SReal > * getW (void);  ; sofa::linearalgebra::FullVector< SReal > * getDfree (void);  ; sofa::linearalgebra::FullVector< SReal > * getD (void);  ; sofa::linearalgebra::FullVector< SReal > * getF (void);  ; sofa::linearalgebra::FullVector< SReal > * getdF (void);  ; std::vector< core::behavior::ConstraintResolution * > & getConstraintResolutions (void);  ; SReal * getTolerance (void);  ; void gaussSeidelConstraintTimed (SReal &timeout, int numItMax);  . Attribute details. ◆ _constraintsResolutions. std::vector<core::behavior::ConstraintResolution*> sofa::component::animationloop::ConstraintProblem::_constraintsResolutions. protected . ◆ _d. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_d. protected . ◆ _df. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_df. protected . ◆ _dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_dFree. protected . ◆ _dim. int sofa::component::animationloop::ConstraintProblem::_dim. protected . ◆ _force. sofa::linearalgebra::FullVector<SReal> so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html:3019,Safety,timeout,timeout,3019,"dim. int sofa::component::animationloop::ConstraintProblem::_dim. protected . ◆ _force. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_force. protected . ◆ _timer. sofa::helper::system::thread::CTime* sofa::component::animationloop::ConstraintProblem::_timer. protected . ◆ _tol. SReal sofa::component::animationloop::ConstraintProblem::_tol. protected . ◆ _W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::animationloop::ConstraintProblem::_W. protected . Constructor details. ◆ ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::ConstraintProblem ; (; bool ; printLog = false). ◆ ~ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::~ConstraintProblem ; (; ). virtual . Function details. ◆ clear(). void sofa::component::animationloop::ConstraintProblem::clear ; (; int ; dim, . const SReal & ; tol . ). virtual . ◆ gaussSeidelConstraintTimed(). void sofa::component::animationloop::ConstraintProblem::gaussSeidelConstraintTimed ; (; SReal & ; timeout, . int ; numItMax . ). ◆ getConstraintResolutions(). std::vector<core::behavior::ConstraintResolution*>& sofa::component::animationloop::ConstraintProblem::getConstraintResolutions ; (; void ; ). inline . ◆ getD(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getD ; (; void ; ). inline . ◆ getdF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getdF ; (; void ; ). inline . ◆ getDfree(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getDfree ; (; void ; ). inline . ◆ getF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getF ; (; void ; ). inline . ◆ getSize(). int sofa::component::animationloop::ConstraintProblem::getSize ; (; void ; ). inline . ◆ getTolerance(). SReal* sofa::component::animationloop::ConstraintProblem::getTolerance ; (; void ; ). inline . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html:884,Usability,clear,clear,884," Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::animationloop::ConstraintProblem Class Reference . #include <ConstraintAnimationLoop.h>. Protected Attributes; sofa::linearalgebra::LPtrFullMatrix< SReal > _W;  ; sofa::linearalgebra::FullVector< SReal > _dFree;  ; sofa::linearalgebra::FullVector< SReal > _force;  ; sofa::linearalgebra::FullVector< SReal > _d;  ; sofa::linearalgebra::FullVector< SReal > _df;  ; std::vector< core::behavior::ConstraintResolution * > _constraintsResolutions;  ; SReal _tol;  ; int _dim;  ; sofa::helper::system::thread::CTime * _timer;  . Public Member Functions;  ConstraintProblem (bool printLog=false);  ; virtual ~ConstraintProblem ();  ; virtual void clear (int dim, const SReal &tol);  ; int getSize (void);  ; sofa::linearalgebra::LPtrFullMatrix< SReal > * getW (void);  ; sofa::linearalgebra::FullVector< SReal > * getDfree (void);  ; sofa::linearalgebra::FullVector< SReal > * getD (void);  ; sofa::linearalgebra::FullVector< SReal > * getF (void);  ; sofa::linearalgebra::FullVector< SReal > * getdF (void);  ; std::vector< core::behavior::ConstraintResolution * > & getConstraintResolutions (void);  ; SReal * getTolerance (void);  ; void gaussSeidelConstraintTimed (SReal &timeout, int numItMax);  . Attribute details. ◆ _constraintsResolutions. std::vector<core::behavior::ConstraintResolution*> sofa::component::animationloop::ConstraintProblem::_constraintsResolutions. protected . ◆ _d. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_d. protected . ◆ _df. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_df. protected . ◆ _dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_dFree. protected . ◆ _dim. int sofa::component::animationloop::ConstraintProblem::_dim. protected . ◆ _force. sofa::linearalgebra::FullVector<SReal> so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html:2765,Usability,clear,clear,2765,"llVector<SReal> sofa::component::animationloop::ConstraintProblem::_df. protected . ◆ _dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_dFree. protected . ◆ _dim. int sofa::component::animationloop::ConstraintProblem::_dim. protected . ◆ _force. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_force. protected . ◆ _timer. sofa::helper::system::thread::CTime* sofa::component::animationloop::ConstraintProblem::_timer. protected . ◆ _tol. SReal sofa::component::animationloop::ConstraintProblem::_tol. protected . ◆ _W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::animationloop::ConstraintProblem::_W. protected . Constructor details. ◆ ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::ConstraintProblem ; (; bool ; printLog = false). ◆ ~ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::~ConstraintProblem ; (; ). virtual . Function details. ◆ clear(). void sofa::component::animationloop::ConstraintProblem::clear ; (; int ; dim, . const SReal & ; tol . ). virtual . ◆ gaussSeidelConstraintTimed(). void sofa::component::animationloop::ConstraintProblem::gaussSeidelConstraintTimed ; (; SReal & ; timeout, . int ; numItMax . ). ◆ getConstraintResolutions(). std::vector<core::behavior::ConstraintResolution*>& sofa::component::animationloop::ConstraintProblem::getConstraintResolutions ; (; void ; ). inline . ◆ getD(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getD ; (; void ; ). inline . ◆ getdF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getdF ; (; void ; ). inline . ◆ getDfree(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getDfree ; (; void ; ). inline . ◆ getF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getF ; (; void ; ). inline . ◆ getS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html:2830,Usability,clear,clear,2830,"::ConstraintProblem::_df. protected . ◆ _dFree. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_dFree. protected . ◆ _dim. int sofa::component::animationloop::ConstraintProblem::_dim. protected . ◆ _force. sofa::linearalgebra::FullVector<SReal> sofa::component::animationloop::ConstraintProblem::_force. protected . ◆ _timer. sofa::helper::system::thread::CTime* sofa::component::animationloop::ConstraintProblem::_timer. protected . ◆ _tol. SReal sofa::component::animationloop::ConstraintProblem::_tol. protected . ◆ _W. sofa::linearalgebra::LPtrFullMatrix<SReal> sofa::component::animationloop::ConstraintProblem::_W. protected . Constructor details. ◆ ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::ConstraintProblem ; (; bool ; printLog = false). ◆ ~ConstraintProblem(). sofa::component::animationloop::ConstraintProblem::~ConstraintProblem ; (; ). virtual . Function details. ◆ clear(). void sofa::component::animationloop::ConstraintProblem::clear ; (; int ; dim, . const SReal & ; tol . ). virtual . ◆ gaussSeidelConstraintTimed(). void sofa::component::animationloop::ConstraintProblem::gaussSeidelConstraintTimed ; (; SReal & ; timeout, . int ; numItMax . ). ◆ getConstraintResolutions(). std::vector<core::behavior::ConstraintResolution*>& sofa::component::animationloop::ConstraintProblem::getConstraintResolutions ; (; void ; ). inline . ◆ getD(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getD ; (; void ; ). inline . ◆ getdF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getdF ; (; void ; ). inline . ◆ getDfree(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getDfree ; (; void ; ). inline . ◆ getF(). sofa::linearalgebra::FullVector<SReal>* sofa::component::animationloop::ConstraintProblem::getF ; (; void ; ). inline . ◆ getSize(). int sofa::component::animationloop::Co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_problem.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:8480,Deployability,integrat,integrate,8480,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_constraintSolversofa::component::animationloop::FreeMotionAnimationLoopprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:12793,Deployability,update,updateInternal,12793,"string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::FreeMotionAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::FreeMotionAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~FreeMotionAnimationLoop() overridesofa::component::animationloop::FreeMotionAnimationLoopprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:12846,Deployability,update,updateLinks,12846,"string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::FreeMotionAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::FreeMotionAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~FreeMotionAnimationLoop() overridesofa::component::animationloop::FreeMotionAnimationLoopprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:8480,Integrability,integrat,integrate,8480,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_constraintSolversofa::component::animationloop::FreeMotionAnimationLoopprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:282,Modifiability,inherit,inherited,282,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::animationloop::FreeMotionAnimationLoop Member List . This is the complete list of members for sofa::component::animationloop::FreeMotionAnimationLoop, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:11844,Performance,load,loader,11844,"it()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::FreeMotionAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::FreeMotionAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; up",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:750,Testability,log,logging,750," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:3183,Testability,log,logging,3183,"lisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeFreeMotion(const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop)sofa::component::animationloop::FreeMotionAnimationLoopprotected; computeFreeMotionAndCollisionDetection(const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop)sofa::component::animationloop::FreeMotionAnimationLoopprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; d_parallelCollisionDetectionAndFreeMotionsofa::component::animationloop::FreeMotionAnimationLoop; d_parallelODESolvingsofa::component::animationloop::FreeMotionAnimationLoop; d_solveVelocityConstraintFirstsofa::component::animationloop::FreeMotionAnimationLoop; d_threadSafeVisitorsofa::component::animationloop::FreeMotionAnimationLoop; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:3225,Testability,log,logging,3225,"lisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeFreeMotion(const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop)sofa::component::animationloop::FreeMotionAnimationLoopprotected; computeFreeMotionAndCollisionDetection(const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop)sofa::component::animationloop::FreeMotionAnimationLoopprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; d_parallelCollisionDetectionAndFreeMotionsofa::component::animationloop::FreeMotionAnimationLoop; d_parallelODESolvingsofa::component::animationloop::FreeMotionAnimationLoop; d_solveVelocityConstraintFirstsofa::component::animationloop::FreeMotionAnimationLoop; d_threadSafeVisitorsofa::component::animationloop::FreeMotionAnimationLoop; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:5899,Testability,log,logging,5899,sofa::component::animationloop::FreeMotionAnimationLoopprotected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:5941,Testability,log,logging,5941,AnimationLoopprotected; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topo,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:12863,Testability,log,logErrors,12863,"string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::FreeMotionAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::FreeMotionAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~FreeMotionAnimationLoop() overridesofa::component::animationloop::FreeMotionAnimationLoopprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:2126,Usability,clear,clearLoggedMessages,2126,"function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; computeFreeMotion(const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop)sofa::component::animationloop::FreeMotionAnimationLoopprotected; computeFreeMotionAndCollisionDetection(const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop)sofa::component::animationloop::FreeMotionAnimationLo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:3712,Availability,down,down,3712,"onstraintSolver;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vecto",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:3991,Availability,down,down,3991,"LAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:19018,Availability,down,down,19018,"::FreeMotionAnimationLoop::FreeMotionAnimationLoop ; (; ). protected . ◆ ~FreeMotionAnimationLoop(). sofa::component::animationloop::FreeMotionAnimationLoop::~FreeMotionAnimationLoop ; (; ). overrideprotected . The ConstraintSolver used in this animation loop (required) . Function details. ◆ computeFreeMotion(). void sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotion ; (; const sofa::core::ExecParams * ; params, . const core::ConstraintParams & ; cparams, . SReal ; dt, . sofa::core::MultiVecId ; pos, . sofa::core::MultiVecId ; freePos, . sofa::core::MultiVecDerivId ; freeVel, . simulation::common::MechanicalOperations * ; mop . ). protected . ◆ computeFreeMotionAndCollisionDetection(). void sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotionAndCollisionDetection ; (; const sofa::core::ExecParams * ; params, . const core::ConstraintParams & ; cparams, . SReal ; dt, . sofa::core::MultiVecId ; pos, . sofa::core::MultiVecId ; freePos, . sofa::core::MultiVecDerivId ; freeVel, . simulation::common::MechanicalOperations * ; mop . ). protected . ◆ init(). void sofa::component::animationloop::FreeMotionAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::FreeMotionAnimationLoop::SOFA_CLASS ; (; FreeMotionAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::FreeMotionAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopFreeMotionAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:6013,Deployability,update,updateInternal,6013,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:10413,Deployability,update,updateLinks,10413,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:13897,Deployability,pipeline,pipeline,13897,":core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:13932,Deployability,integrat,integrate,13932,"VecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:14497,Deployability,update,update,14497,"...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:19543,Deployability,integrat,integrations,19543,"::FreeMotionAnimationLoop::FreeMotionAnimationLoop ; (; ). protected . ◆ ~FreeMotionAnimationLoop(). sofa::component::animationloop::FreeMotionAnimationLoop::~FreeMotionAnimationLoop ; (; ). overrideprotected . The ConstraintSolver used in this animation loop (required) . Function details. ◆ computeFreeMotion(). void sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotion ; (; const sofa::core::ExecParams * ; params, . const core::ConstraintParams & ; cparams, . SReal ; dt, . sofa::core::MultiVecId ; pos, . sofa::core::MultiVecId ; freePos, . sofa::core::MultiVecDerivId ; freeVel, . simulation::common::MechanicalOperations * ; mop . ). protected . ◆ computeFreeMotionAndCollisionDetection(). void sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotionAndCollisionDetection ; (; const sofa::core::ExecParams * ; params, . const core::ConstraintParams & ; cparams, . SReal ; dt, . sofa::core::MultiVecId ; pos, . sofa::core::MultiVecId ; freePos, . sofa::core::MultiVecDerivId ; freeVel, . simulation::common::MechanicalOperations * ; mop . ). protected . ◆ init(). void sofa::component::animationloop::FreeMotionAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::FreeMotionAnimationLoop::SOFA_CLASS ; (; FreeMotionAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::FreeMotionAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopFreeMotionAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:1872,Integrability,message,messages,1872,"a< bool > d_parallelCollisionDetectionAndFreeMotion;  If true, executes free motion step and collision detection step in parallel. More...;  ; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel during the free motion step. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< FreeMotionAnimationLoop, sofa::core::behavior::ConstraintSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_constraintSolver;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:4668,Integrability,depend,dependent,4668,"cParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:13932,Integrability,integrat,integrate,13932,"VecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:19543,Integrability,integrat,integrations,19543,"::FreeMotionAnimationLoop::FreeMotionAnimationLoop ; (; ). protected . ◆ ~FreeMotionAnimationLoop(). sofa::component::animationloop::FreeMotionAnimationLoop::~FreeMotionAnimationLoop ; (; ). overrideprotected . The ConstraintSolver used in this animation loop (required) . Function details. ◆ computeFreeMotion(). void sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotion ; (; const sofa::core::ExecParams * ; params, . const core::ConstraintParams & ; cparams, . SReal ; dt, . sofa::core::MultiVecId ; pos, . sofa::core::MultiVecId ; freePos, . sofa::core::MultiVecDerivId ; freeVel, . simulation::common::MechanicalOperations * ; mop . ). protected . ◆ computeFreeMotionAndCollisionDetection(). void sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotionAndCollisionDetection ; (; const sofa::core::ExecParams * ; params, . const core::ConstraintParams & ; cparams, . SReal ; dt, . sofa::core::MultiVecId ; pos, . sofa::core::MultiVecId ; freePos, . sofa::core::MultiVecDerivId ; freeVel, . simulation::common::MechanicalOperations * ; mop . ). protected . ◆ init(). void sofa::component::animationloop::FreeMotionAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::FreeMotionAnimationLoop::SOFA_CLASS ; (; FreeMotionAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::FreeMotionAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopFreeMotionAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:1136,Modifiability,inherit,inherited,1136,"ons |; List of all members . sofa::component::animationloop::FreeMotionAnimationLoop Class Reference . #include <FreeMotionAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::FreeMotionAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > m_solveVelocityConstraintFirst;  ; Data< bool > d_solveVelocityConstraintFirst;  solve separately velocity constraint violations before position constraint violations More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ; Data< bool > d_parallelCollisionDetectionAndFreeMotion;  If true, executes free motion step and collision detection step in parallel. More...;  ; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel during the free motion step. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:1457,Modifiability,inherit,inherited,1457,"re::objectmodel::RenamedData< bool > m_solveVelocityConstraintFirst;  ; Data< bool > d_solveVelocityConstraintFirst;  solve separately velocity constraint violations before position constraint violations More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ; Data< bool > d_parallelCollisionDetectionAndFreeMotion;  If true, executes free motion step and collision detection step in parallel. More...;  ; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel during the free motion step. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< FreeMotionAnimationLoop, sofa::core::behavior::ConstraintS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:1623,Modifiability,inherit,inherited,1623,"nt violations More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ; Data< bool > d_parallelCollisionDetectionAndFreeMotion;  If true, executes free motion step and collision detection step in parallel. More...;  ; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel during the free motion step. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< FreeMotionAnimationLoop, sofa::core::behavior::ConstraintSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_constraintSolver;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:2620,Modifiability,inherit,inherited,2620,"re the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< FreeMotionAnimationLoop, sofa::core::behavior::ConstraintSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_constraintSolver;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:2770,Modifiability,inherit,inherited,2770,"the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< FreeMotionAnimationLoop, sofa::core::behavior::ConstraintSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_constraintSolver;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modifica",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:3024,Modifiability,inherit,inherited,3024,"the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< FreeMotionAnimationLoop, sofa::core::behavior::ConstraintSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_constraintSolver;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modifica",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:3765,Modifiability,inherit,inherited,3765,"LAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:4249,Modifiability,inherit,inherited,4249,"d aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (FreeMotionAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:5949,Modifiability,variab,variables,5949," getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:6059,Modifiability,variab,variables,6059,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:6101,Modifiability,variab,variables,6101,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:6251,Modifiability,inherit,inherited,6251,"d handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:13091,Modifiability,inherit,inherited,13091,";  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  FreeMotionAnimationLoop ();  ;  ~FreeMotionAnimationLoop () override;  The ConstraintSolver used in this animation loop (required) More...;  ; void computeFreeMotionAndCollisionDetection (const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop);  ; void computeFreeMotion (const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::Exe",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:14089,Modifiability,inherit,inherited,14089,"ionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:14331,Modifiability,inherit,inherited,14331,"...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:15054,Modifiability,inherit,inherited,15054,";  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:15798,Modifiability,inherit,inherited,15798,"ata to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_parallelCollisionDetectionAndFreeMotion. Data<bool> sofa::component::animationloop::FreeMotionAnimationLoop::d_parallelCollisionDetectionAndFreeMotion. If true, executes free motion step and collision detection step in parallel. . ◆ d_parallelODESolving. Data<bool> sofa::component::animationloop::FreeMotionAnimationLoop::d_parallelODESolving. If true, solves all the ODEs in parallel during the free motion step. . ◆ d_solveVelocityConstraintFir",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:16198,Modifiability,inherit,inherited,16198,";  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_parallelCollisionDetectionAndFreeMotion. Data<bool> sofa::component::animationloop::FreeMotionAnimationLoop::d_parallelCollisionDetectionAndFreeMotion. If true, executes free motion step and collision detection step in parallel. . ◆ d_parallelODESolving. Data<bool> sofa::component::animationloop::FreeMotionAnimationLoop::d_parallelODESolving. If true, solves all the ODEs in parallel during the free motion step. . ◆ d_solveVelocityConstraintFirst. Data<bool> sofa::component::animationloop::FreeMotionAnimationLoop::d_solveVelocityConstraintFirst. solve separately velocity constraint violations before position constraint violations . ◆ d_threadSafeVisitor. Data<bool> sofa::component::animationloop::FreeMotionAnimationLoop::d_threadSafeVisitor. If true, do not use realloc and free visitors in fwdInteractionForceField. . ◆ l_constraintSolver. SingleLink",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:4749,Performance,load,loader,4749,"onLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:13531,Performance,perform,performing,13531,"mation loop (required) More...;  ; void computeFreeMotionAndCollisionDetection (const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop);  ; void computeFreeMotion (const sofa::core::ExecParams *params, const core::ConstraintParams &cparams, SReal dt, sofa::core::MultiVecId pos, sofa::core::MultiVecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:959,Safety,detect,detection,959,"﻿. SOFA API: sofa::component::animationloop::FreeMotionAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::FreeMotionAnimationLoop Class Reference . #include <FreeMotionAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::FreeMotionAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > m_solveVelocityConstraintFirst;  ; Data< bool > d_solveVelocityConstraintFirst;  solve separately velocity constraint violations before position constraint violations More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ; Data< bool > d_parallelCollisionDetectionAndFreeMotion;  If true, executes free motion step and collision detection step in parallel. More...;  ; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel during the free motion step. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:16619,Safety,detect,detection,16619,"const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_parallelCollisionDetectionAndFreeMotion. Data<bool> sofa::component::animationloop::FreeMotionAnimationLoop::d_parallelCollisionDetectionAndFreeMotion. If true, executes free motion step and collision detection step in parallel. . ◆ d_parallelODESolving. Data<bool> sofa::component::animationloop::FreeMotionAnimationLoop::d_parallelODESolving. If true, solves all the ODEs in parallel during the free motion step. . ◆ d_solveVelocityConstraintFirst. Data<bool> sofa::component::animationloop::FreeMotionAnimationLoop::d_solveVelocityConstraintFirst. solve separately velocity constraint violations before position constraint violations . ◆ d_threadSafeVisitor. Data<bool> sofa::component::animationloop::FreeMotionAnimationLoop::d_threadSafeVisitor. If true, do not use realloc and free visitors in fwdInteractionForceField. . ◆ l_constraintSolver. SingleLink<FreeMotionAnimationLoop, sofa::core::behavior::ConstraintSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK> sofa::component::animationloop::FreeMotionAnimationLoop::l_constraintSolver. protected . ◆ m_solveVelocityConstraintFirst. sofa::core::objectmodel::RenamedData<bool> sofa::component::animationloop::FreeMotionAnim",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:8269,Testability,log,logging,8269," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:8342,Testability,log,logging,8342," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:8384,Testability,log,logging,8384," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:8454,Testability,log,logging,8454," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:8565,Testability,log,logging,8565," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:8607,Testability,log,logging,8607," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:10431,Testability,log,logErrors,10431,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:8650,Usability,clear,clearLoggedMessages,8650," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:7614,Deployability,integrat,integrate,7614,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; integrationStepssofa::component::animationloop::MultiStepAnimationLoop; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:7723,Deployability,integrat,integrationStepssofa,7723,"isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; integrationStepssofa::component::animationloop::MultiStepAnimationLoop; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_resetTimesofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:11914,Deployability,update,updateInternal,11914,"std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::MultiStepAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::MultiStepAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~MultiStepAnimationLoop() overridesofa::component::animationloop::MultiStepAnimationLoopprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:11967,Deployability,update,updateLinks,11967,"std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::MultiStepAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::MultiStepAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~MultiStepAnimationLoop() overridesofa::component::animationloop::MultiStepAnimationLoopprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:7614,Integrability,integrat,integrate,7614,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; integrationStepssofa::component::animationloop::MultiStepAnimationLoop; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:7723,Integrability,integrat,integrationStepssofa,7723,"isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; integrationStepssofa::component::animationloop::MultiStepAnimationLoop; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_resetTimesofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:280,Modifiability,inherit,inherited,280,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::animationloop::MultiStepAnimationLoop Member List . This is the complete list of members for sofa::component::animationloop::MultiStepAnimationLoop, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:10968,Performance,load,loader,10968,"it()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::MultiStepAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::MultiStepAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:748,Testability,log,logging,748," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:2602,Testability,log,logging,2602,"ypedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; collisionStepssofa::component::animationloop::MultiStepAnimationLoop; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_collisionStepssofa::component::animationloop::MultiStepAnimationLoop; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_integrationStepssofa::component::animationloop::MultiStepAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:2644,Testability,log,logging,2644,"it()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; collisionStepssofa::component::animationloop::MultiStepAnimationLoop; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_collisionStepssofa::component::animationloop::MultiStepAnimationLoop; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_integrationStepssofa::component::animationloop::MultiStepAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobal",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:5035,Testability,log,logging,5035,inks(const std::string &name) constsofa::core::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:5077,Testability,log,logging,5077,ore::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topo,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:11984,Testability,log,logErrors,11984,"std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::MultiStepAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::MultiStepAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~MultiStepAnimationLoop() overridesofa::component::animationloop::MultiStepAnimationLoopprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:2124,Usability,clear,clearLoggedMessages,2124,"function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; collisionStepssofa::component::animationloop::MultiStepAnimationLoop; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_collisionStepssofa::component::animationloop::MultiStepAnimationLoop; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_integrationStepssofa::component::animationloop::MultiStepAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:2548,Availability,down,down,2548,"ore::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:586,Deployability,integrat,integrationSteps,586,"﻿. SOFA API: sofa::component::animationloop::MultiStepAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::MultiStepAnimationLoop Class Reference . #include <MultiStepAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiStepAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< int > collisionSteps;  ; sofa::core::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definition",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:748,Deployability,integrat,integration,748,"﻿. SOFA API: sofa::component::animationloop::MultiStepAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::MultiStepAnimationLoop Class Reference . #include <MultiStepAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiStepAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< int > collisionSteps;  ; sofa::core::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definition",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:4570,Deployability,update,updateInternal,4570,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:8970,Deployability,update,updateLinks,8970,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:11843,Deployability,pipeline,pipeline,11843,"nst BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MultiStepAnimationLoop ();  ;  ~MultiStepAnimationLoop () override;  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:11878,Deployability,integrat,integrate,11878," . Protected Member Functions;  MultiStepAnimationLoop ();  ;  ~MultiStepAnimationLoop () override;  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:12443,Deployability,update,update,12443,"...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:15604,Deployability,integrat,integration,15604,"ect; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofaco",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:15659,Deployability,integrat,integrationSteps,15659,"reate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiStepAnimationLoo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:15775,Deployability,integrat,integrationSteps,15775,"ction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiStepAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:16544,Deployability,integrat,integrations,16544,"ction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiStepAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:586,Integrability,integrat,integrationSteps,586,"﻿. SOFA API: sofa::component::animationloop::MultiStepAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::MultiStepAnimationLoop Class Reference . #include <MultiStepAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiStepAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< int > collisionSteps;  ; sofa::core::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definition",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:748,Integrability,integrat,integration,748,"﻿. SOFA API: sofa::component::animationloop::MultiStepAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::MultiStepAnimationLoop Class Reference . #include <MultiStepAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiStepAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< int > collisionSteps;  ; sofa::core::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definition",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:1566,Integrability,message,messages,1566,"re::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-do",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:3225,Integrability,depend,dependent,3225,"r Functions;  SOFA_CLASS (MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:11878,Integrability,integrat,integrate,11878," . Protected Member Functions;  MultiStepAnimationLoop ();  ;  ~MultiStepAnimationLoop () override;  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:15604,Integrability,integrat,integration,15604,"ect; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofaco",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:15659,Integrability,integrat,integrationSteps,15659,"reate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiStepAnimationLoo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:15775,Integrability,integrat,integrationSteps,15775,"ction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiStepAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:16544,Integrability,integrat,integrations,16544,"ction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiStepAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:830,Modifiability,inherit,inherited,830,"﻿. SOFA API: sofa::component::animationloop::MultiStepAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::MultiStepAnimationLoop Class Reference . #include <MultiStepAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiStepAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< int > collisionSteps;  ; sofa::core::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definition",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:1151,Modifiability,inherit,inherited,1151,"otected Member Functions |; List of all members . sofa::component::animationloop::MultiStepAnimationLoop Class Reference . #include <MultiStepAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiStepAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< int > collisionSteps;  ; sofa::core::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MultiStepAnimationLoop, sofa::simulation::CollisionAni",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:1317,Modifiability,inherit,inherited,1317,"component::animationloop::MultiStepAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< int > collisionSteps;  ; sofa::core::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:2322,Modifiability,inherit,inherited,2322,"ore::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string >",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:2806,Modifiability,inherit,inherited,2806,"mponentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:4506,Modifiability,variab,variables,4506," getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:4616,Modifiability,variab,variables,4616,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:4658,Modifiability,variab,variables,4658,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:4808,Modifiability,inherit,inherited,4808,"d handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:11037,Modifiability,inherit,inherited,11037,"nk *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MultiStepAnimationLoop ();  ;  ~MultiStepAnimationLoop () override;  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAn",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:12035,Modifiability,inherit,inherited,12035,"ionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:12277,Modifiability,inherit,inherited,12277,"...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:13000,Modifiability,inherit,inherited,13000,";  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:13734,Modifiability,inherit,inherited,13734,"add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by Objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:13884,Modifiability,inherit,inherited,13884,"tData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:14138,Modifiability,inherit,inherited,14138,"tData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:14577,Modifiability,inherit,inherited,14577,"y initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:14977,Modifiability,inherit,inherited,14977,"bject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ).",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:3306,Performance,load,loader,3306,"onLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:11477,Performance,perform,performing,11477,"g all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  MultiStepAnimationLoop ();  ;  ~MultiStepAnimationLoop () override;  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:789,Safety,detect,detection,789,"﻿. SOFA API: sofa::component::animationloop::MultiStepAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::MultiStepAnimationLoop Class Reference . #include <MultiStepAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiStepAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< int > collisionSteps;  ; sofa::core::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definition",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:15645,Safety,detect,detection,15645,"ect; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofaco",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:6826,Testability,log,logging,6826," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:6899,Testability,log,logging,6899," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:6941,Testability,log,logging,6941," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:7011,Testability,log,logging,7011," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:7122,Testability,log,logging,7122," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:7164,Testability,log,logging,7164," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:8988,Testability,log,logErrors,8988,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:7207,Usability,clear,clearLoggedMessages,7207," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:7478,Deployability,integrat,integrate,7478,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:11692,Deployability,update,updateInternal,11692,"setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::MultiTagAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::MultiTagAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~MultiTagAnimationLoop() overridesofa::component::animationloop::MultiTagAnimationLoop.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:11745,Deployability,update,updateLinks,11745,"setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::MultiTagAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::MultiTagAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~MultiTagAnimationLoop() overridesofa::component::animationloop::MultiTagAnimationLoop.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:7478,Integrability,integrat,integrate,7478,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:278,Modifiability,inherit,inherited,278,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::animationloop::MultiTagAnimationLoop Member List . This is the complete list of members for sofa::component::animationloop::MultiTagAnimationLoop, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:10749,Performance,load,loader,10749,"it()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::MultiTagAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::MultiTagAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:746,Testability,log,logging,746," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:2599,Testability,log,logging,2599,"typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::animationloop::MultiTagAnimationLoopvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:2641,Testability,log,logging,2641,"nit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::animationloop::MultiTagAnimationLoopvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:4886,Testability,log,logging,4886,inks(const std::string &name) constsofa::core::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual;,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:4928,Testability,log,logging,4928,ore::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResetTime() constsofa::core::behavior::BaseAnimationLoop; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getSolverSequence()sofa::simulation::CollisionAnimationLoopprotected; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topo,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:11762,Testability,log,logErrors,11762,"setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BaseAnimationLoop, objectmodel::BaseObject)sofa::core::behavior::BaseAnimationLoop; SOFA_CLASS(MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop)sofa::component::animationloop::MultiTagAnimationLoop; sofa::simulation::CollisionAnimationLoop::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; Solvers typedefsofa::simulation::CollisionAnimationLoopprotected; SPtr typedefsofa::core::objectmodel::Base; step(const sofa::core::ExecParams *params, SReal dt) overridesofa::component::animationloop::MultiTagAnimationLoopvirtual; storeResetState() overridesofa::core::behavior::BaseAnimationLoopprotectedvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseAnimationLoop() overridesofa::core::behavior::BaseAnimationLoopprotected; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~CollisionAnimationLoop() overridesofa::simulation::CollisionAnimationLoopprotected; ~MultiTagAnimationLoop() overridesofa::component::animationloop::MultiTagAnimationLoop.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:2122,Usability,clear,clear,2122,", std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::animationloop::MultiTagAnimationLoopvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:2191,Usability,clear,clearLoggedMessages,2191,")> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseAnimationLoop()sofa::core::behavior::BaseAnimationLoopprotected; BaseContext typedefsofa::simulation::CollisionAnimationLoop; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseObjectDescription typedefsofa::simulation::CollisionAnimationLoop; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear()sofa::component::animationloop::MultiTagAnimationLoopvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAnimationLoop()sofa::simulation::CollisionAnimationLoopprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollision(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_computeBoundingBoxsofa::core::behavior::BaseAnimationLoop; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::ob",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:756,Availability,down,down,756,"﻿. SOFA API: sofa::component::animationloop::MultiTagAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::animationloop::MultiTagAnimationLoop Class Reference . #include <MultiTagAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiTagAnimationLoop:. [legend]; Detailed Description; Simple animation loop that given a list of tags, animate the graph one tag after another. . Public Member Functions;  SOFA_CLASS (MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ;  MultiTagAnimationLoop ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void clear ();  ;  ~MultiTagAnimationLoop () override;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:1173,Availability,down,down,1173,"﻿. SOFA API: sofa::component::animationloop::MultiTagAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::animationloop::MultiTagAnimationLoop Class Reference . #include <MultiTagAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiTagAnimationLoop:. [legend]; Detailed Description; Simple animation loop that given a list of tags, animate the graph one tag after another. . Public Member Functions;  SOFA_CLASS (MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ;  MultiTagAnimationLoop ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void clear ();  ;  ~MultiTagAnimationLoop () override;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:15560,Availability,down,down,15560,"Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Constructor details. ◆ MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::MultiTagAnimationLoop ; (; ). ◆ ~MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::~MultiTagAnimationLoop ; (; ). override . Function details. ◆ clear(). void sofa::component::animationloop::MultiTagAnimationLoop::clear ; (; ). virtual . ◆ init(). void sofa::component::animationloop::MultiTagAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiTagAnimationLoop::SOFA_CLASS ; (; MultiTagAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiTagAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiTagAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:3195,Deployability,update,updateInternal,3195,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:7595,Deployability,update,updateLinks,7595,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:13166,Deployability,pipeline,pipeline,13166,"ic Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:13201,Deployability,integrat,integrate,13201,"e<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:13766,Deployability,update,update,13766,"...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:16079,Deployability,integrat,integrations,16079,"Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Constructor details. ◆ MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::MultiTagAnimationLoop ; (; ). ◆ ~MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::~MultiTagAnimationLoop ; (; ). override . Function details. ◆ clear(). void sofa::component::animationloop::MultiTagAnimationLoop::clear ; (; ). virtual . ◆ init(). void sofa::component::animationloop::MultiTagAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiTagAnimationLoop::SOFA_CLASS ; (; MultiTagAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiTagAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiTagAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:1850,Integrability,depend,dependent,1850,"p-down traversal. More...;  ; virtual void clear ();  ;  ~MultiTagAnimationLoop () override;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:10319,Integrability,message,messages,10319,"ases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:13201,Integrability,integrat,integrate,13201,"e<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:16079,Integrability,integrat,integrations,16079,"Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Constructor details. ◆ MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::MultiTagAnimationLoop ; (; ). ◆ ~MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::~MultiTagAnimationLoop ; (; ). override . Function details. ◆ clear(). void sofa::component::animationloop::MultiTagAnimationLoop::clear ; (; ). virtual . ◆ init(). void sofa::component::animationloop::MultiTagAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiTagAnimationLoop::SOFA_CLASS ; (; MultiTagAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiTagAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiTagAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:947,Modifiability,inherit,inherited,947,"﻿. SOFA API: sofa::component::animationloop::MultiTagAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::animationloop::MultiTagAnimationLoop Class Reference . #include <MultiTagAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiTagAnimationLoop:. [legend]; Detailed Description; Simple animation loop that given a list of tags, animate the graph one tag after another. . Public Member Functions;  SOFA_CLASS (MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ;  MultiTagAnimationLoop ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void clear ();  ;  ~MultiTagAnimationLoop () override;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:1431,Modifiability,inherit,inherited,1431,"en a list of tags, animate the graph one tag after another. . Public Member Functions;  SOFA_CLASS (MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ;  MultiTagAnimationLoop ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void clear ();  ;  ~MultiTagAnimationLoop () override;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:3131,Modifiability,variab,variables,3131," getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:3241,Modifiability,variab,variables,3241,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:3283,Modifiability,variab,variables,3283,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:3433,Modifiability,inherit,inherited,3433,"d handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:9583,Modifiability,inherit,inherited,9583,"s);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:9904,Modifiability,inherit,inherited,9904,"f this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetT",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:10070,Modifiability,inherit,inherited,10070,"o the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLEL",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:10892,Modifiability,inherit,inherited,10892,"Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:11042,Modifiability,inherit,inherited,11042,"f the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:11296,Modifiability,inherit,inherited,11296,"f the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:11735,Modifiability,inherit,inherited,11735,"ame {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:12135,Modifiability,inherit,inherited,12135,"TrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:12360,Modifiability,inherit,inherited,12360,"TrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:13358,Modifiability,inherit,inherited,13358,"ionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:13600,Modifiability,inherit,inherited,13600,"...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:14323,Modifiability,inherit,inherited,14323,";  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Constructor details. ◆ MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::MultiTagAnimationLoop ; (; ). ◆ ~MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::~MultiTagAnimationLoop ; (; ). override . Function details. ◆ clear(). void sofa::component::animationloop::MultiTagAnimationLoop::clear ; (; ). virtual . ◆ init(). void sofa::component::animationloop::MultiTagAnimatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:1931,Performance,load,loader,1931,"onLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:12800,Performance,perform,performing,12800,"re::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the in",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:5451,Testability,log,logging,5451," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:5524,Testability,log,logging,5524," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:5566,Testability,log,logging,5566," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:5636,Testability,log,logging,5636," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:5747,Testability,log,logging,5747," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:5789,Testability,log,logging,5789," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:7613,Testability,log,logErrors,7613,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:797,Usability,clear,clear,797,"﻿. SOFA API: sofa::component::animationloop::MultiTagAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::animationloop::MultiTagAnimationLoop Class Reference . #include <MultiTagAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiTagAnimationLoop:. [legend]; Detailed Description; Simple animation loop that given a list of tags, animate the graph one tag after another. . Public Member Functions;  SOFA_CLASS (MultiTagAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ;  MultiTagAnimationLoop ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void clear ();  ;  ~MultiTagAnimationLoop () override;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:5832,Usability,clear,clearLoggedMessages,5832," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:15283,Usability,clear,clear,15283,"Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Constructor details. ◆ MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::MultiTagAnimationLoop ; (; ). ◆ ~MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::~MultiTagAnimationLoop ; (; ). override . Function details. ◆ clear(). void sofa::component::animationloop::MultiTagAnimationLoop::clear ; (; ). virtual . ◆ init(). void sofa::component::animationloop::MultiTagAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiTagAnimationLoop::SOFA_CLASS ; (; MultiTagAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiTagAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiTagAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:15352,Usability,clear,clear,15352,"Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Constructor details. ◆ MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::MultiTagAnimationLoop ; (; ). ◆ ~MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::~MultiTagAnimationLoop ; (; ). override . Function details. ◆ clear(). void sofa::component::animationloop::MultiTagAnimationLoop::clear ; (; ). virtual . ◆ init(). void sofa::component::animationloop::MultiTagAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiTagAnimationLoop::SOFA_CLASS ; (; MultiTagAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiTagAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiTagAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:12716,Deployability,update,updateInternal,12716,"lptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BroadPhaseDetection, Detection)sofa::core::collision::BroadPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BruteForceBroadPhase, core::collision::BroadPhaseDetection)sofa::component::collision::detection::algorithm::BruteForceBroadPhase; sofa::core::collision::BroadPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedCmPairssofa::core::collision::BroadPhaseDetectionprotected; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BroadPhaseDetection() override=defaultsofa::core::collision::BroadPhaseDetectionprotected; ~BruteForceBroadPhase() override=defaultsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:12769,Deployability,update,updateLinks,12769,"lptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BroadPhaseDetection, Detection)sofa::core::collision::BroadPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BruteForceBroadPhase, core::collision::BroadPhaseDetection)sofa::component::collision::detection::algorithm::BruteForceBroadPhase; sofa::core::collision::BroadPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedCmPairssofa::core::collision::BroadPhaseDetectionprotected; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BroadPhaseDetection() override=defaultsofa::core::collision::BroadPhaseDetectionprotected; ~BruteForceBroadPhase() override=defaultsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:312,Modifiability,inherit,inherited,312,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionModel(core::CollisionModel *cm) overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; addCollisionModels(const sofa::type::vector< core::CollisionModel * > &v)sofa::core::collision::BroadPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:11587,Performance,load,loader,11587,"tmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BroadPhaseDetection, Detection)sofa::core::collision::BroadPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BruteForceBroadPhase, core::collision::BroadPhaseDetection)sofa::component::collision::detection::algorithm::BruteForceBroadPhase; sofa::core::collision::BroadPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedCmPairssofa::core::collision::BroadPhaseDetectionprotected; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionModel(core::CollisionModel *cm) overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; addCollisionModels(const sofa::type::vector< core::CollisionModel * > &v)sofa::core::collision::BroadPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:254,Safety,detect,detection,254,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceBroadPhase Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceBroadPhase, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionModel(core::CollisionModel *cm) overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; addCollisionModels(const sofa::type::vector< core::CollisionModel * > &v)sofa::core::collision::BroadPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:560,Safety,detect,detection,560," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionModel(core::CollisionModel *cm) overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; addCollisionModels(const sofa::type::vector< core::CollisionModel * > &v)sofa::core::collision::BroadPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:1783,Safety,detect,detection,1783,"re::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clear",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:1870,Safety,detect,detection,1870,"Attribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::Broa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:1973,Safety,detect,detection,1973,":core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:3635,Safety,detect,detection,3635,"ctmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionModelPair typedefsofa::core::collision::BroadPhaseDetection; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doesSelfCollide(core::CollisionModel *cm) constsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::BroadPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:7097,Safety,detect,detection,7097,"core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; init() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDis",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:8518,Safety,detect,detection,8518,"st char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Instance typedefsofa::core::collision::CollisionAlgorithm; instancesofa::core::collision::CollisionAlgorithmprotected; intersectionMethodsofa::core::collision::Detectionprotected; intersectWithBoxModel(core::CollisionModel *cm) constsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; keepCollisionBetween(core::CollisionModel *cm1, core::CollisionModel *cm2)sofa::component::collision::detection::algorithm::BruteForceBroadPhasestatic; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_collisionModelssofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:8739,Safety,detect,detection,8739,"ed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Instance typedefsofa::core::collision::CollisionAlgorithm; instancesofa::core::collision::CollisionAlgorithmprotected; intersectionMethodsofa::core::collision::Detectionprotected; intersectWithBoxModel(core::CollisionModel *cm) constsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; keepCollisionBetween(core::CollisionModel *cm1, core::CollisionModel *cm2)sofa::component::collision::detection::algorithm::BruteForceBroadPhasestatic; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_collisionModelssofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typed",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:9154,Safety,detect,detection,9154,"l::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Instance typedefsofa::core::collision::CollisionAlgorithm; instancesofa::core::collision::CollisionAlgorithmprotected; intersectionMethodsofa::core::collision::Detectionprotected; intersectWithBoxModel(core::CollisionModel *cm) constsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; keepCollisionBetween(core::CollisionModel *cm1, core::CollisionModel *cm2)sofa::component::collision::detection::algorithm::BruteForceBroadPhasestatic; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_collisionModelssofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; needsDeepBoundingTree() const overridesofa::component::collision::detection::algorithm::BruteForceBroadPhaseinlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:9878,Safety,detect,detection,9878,"jectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_collisionModelssofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; needsDeepBoundingTree() const overridesofa::component::collision::detection::algorithm::BruteForceBroadPhaseinlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:10444,Safety,detect,detection,10444,"Enginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; needsDeepBoundingTree() const overridesofa::component::collision::detection::algorithm::BruteForceBroadPhaseinlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:12123,Safety,detect,detection,12123,":Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BroadPhaseDetection, Detection)sofa::core::collision::BroadPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BruteForceBroadPhase, core::collision::BroadPhaseDetection)sofa::component::collision::detection::algorithm::BruteForceBroadPhase; sofa::core::collision::BroadPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedCmPairssofa::core::collision::BroadPhaseDetectionprotected; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separato",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:13447,Safety,detect,detection,13447,"lptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BroadPhaseDetection, Detection)sofa::core::collision::BroadPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BruteForceBroadPhase, core::collision::BroadPhaseDetection)sofa::component::collision::detection::algorithm::BruteForceBroadPhase; sofa::core::collision::BroadPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedCmPairssofa::core::collision::BroadPhaseDetectionprotected; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BroadPhaseDetection() override=defaultsofa::core::collision::BroadPhaseDetectionprotected; ~BruteForceBroadPhase() override=defaultsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:1035,Testability,log,logging,1035," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionModel(core::CollisionModel *cm) overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; addCollisionModels(const sofa::type::vector< core::CollisionModel * > &v)sofa::core::collision::BroadPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginBroadPhase() overridesofa::component::collision::detection::algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteF",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:3182,Testability,log,logging,3182,"geContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionModelPair typedefsofa::core::collision::BroadPhaseDetection; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doesSelfCollide(core::CollisionModel *cm) constsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::BroadPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:3224,Testability,log,logging,3224,"text *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionModelPair typedefsofa::core::collision::BroadPhaseDetection; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doesSelfCollide(core::CollisionModel *cm) constsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; endBroadPhase()sofa::core::collision::BroadPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:5873,Testability,log,logging,5873,objectmodel::Basevirtual; getCollisionModelPairs()sofa::core::collision::BroadPhaseDetection; getCollisionModelPairs() constsofa::core::collision::BroadPhaseDetection; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::Detectioninline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:5915,Testability,log,logging,5915,lPairs()sofa::core::collision::BroadPhaseDetection; getCollisionModelPairs() constsofa::core::collision::BroadPhaseDetection; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::Detectioninline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:12786,Testability,log,logErrors,12786,"lptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(BroadPhaseDetection, Detection)sofa::core::collision::BroadPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BruteForceBroadPhase, core::collision::BroadPhaseDetection)sofa::component::collision::detection::algorithm::BruteForceBroadPhase; sofa::core::collision::BroadPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedCmPairssofa::core::collision::BroadPhaseDetectionprotected; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BroadPhaseDetection() override=defaultsofa::core::collision::BroadPhaseDetectionprotected; ~BruteForceBroadPhase() override=defaultsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html:2783,Usability,clear,clearLoggedMessages,2783,":algorithm::BruteForceBroadPhasevirtual; boxModelsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; BruteForceBroadPhase()sofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance inst) overridesofa::core::collision::BroadPhaseDetectionprotectedvirtual; changeInstanceNP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; cmPairssofa::core::collision::BroadPhaseDetectionprotected; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; CollisionModelPair typedefsofa::core::collision::BroadPhaseDetection; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; doesSelfCollide(core::CollisionModel *cm) constsofa::component::collision::detection::algorithm::BruteForceBroadPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualPar",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:3101,Availability,down,down,3101,". More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void beginBroadPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionModel (core::CollisionModel *cm) override;  In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  SOFA_ABSTRACT_CLASS (BroadPhaseDetection, Detection);  ; virtual void addCollisionModels (const sofa::type::vector< core::CollisionModel * > &v);  Add a list of collision models to the set of root collision models managed ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:19697,Availability,down,down,19697,"lision model to be investigated in the narrow phase in case of self collision. Check intersection with already added collision models. If it can intersect another collision model, the pair is added to be further investigated in the narrow phase. ; Implements sofa::core::collision::BroadPhaseDetection. ◆ beginBroadPhase(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::beginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionBetween ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). static . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reinit(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::reinit ; (; ). overridevirtual . Update method called when va",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:2140,Deployability,pipeline,pipeline,2140,"m, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down trav",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:4967,Deployability,pipeline,pipeline,4967,"aseDetection, Detection);  ; virtual void addCollisionModels (const sofa::type::vector< core::CollisionModel * > &v);  Add a list of collision models to the set of root collision models managed by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:6765,Deployability,update,updateInternal,6765,"ool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:11260,Deployability,update,updateLinks,11260,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:15048,Deployability,update,update,15048,":core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceBroadPhase ();  ;  ~BruteForceBroadPhase () override=default;  ; bool doesSelfCollide (core::CollisionModel *cm) const;  Return true if the provided CollisionModel can collide with itself. More...;  ; bool intersectWithBoxModel (core::CollisionModel *cm) const;  Return true if the provided CollisionModel intersect boxModel, false otherwise. More...;  ;  Protected Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  ~BroadPhaseDetection () override=default;  Destructor. More...;  ; void changeInstanceBP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceNP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:17699,Deployability,pipeline,pipeline,17699,"messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ boxModel. collision::geometry::CubeCollisionModel::SPtr sofa::component::collision::detection::algorithm::BruteForceBroadPhase::boxModel. protected . ◆ m_collisionModels. sofa::type::vector<FirstLastCollisionModel> sofa::component::collision::detection::algorithm::BruteForceBroadPhase::m_collisionModels. protected . vector of accumulated CollisionModel's when the collision pipeline asks to add a CollisionModel in BruteForceBroadPhase::addCollisionModel This vector is emptied at each time step in BruteForceBroadPhase::beginBroadPhase . Constructor details. ◆ BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::BruteForceBroadPhase ; (; ). protected . ◆ ~BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::~BruteForceBroadPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionModel(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::addCollisionModel ; (; core::CollisionModel * ; cm). overridevirtual . In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. ; Ignore the collision with the provided collision model if it does not intersect with the box defined in the Data box when it is defined. Add the provided collision model to be investigated in the narrow phase in case of self collision. Check i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:5444,Integrability,depend,dependent,5444,"delPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:16751,Integrability,message,messages,16751,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ boxModel. collision::geometry::CubeCollisionModel::SPtr sofa::component::collision::detection::algorithm::BruteForceBroadPhase::boxModel. protected . ◆ m_collisionModels. sofa::type::vector<FirstLastCollisionModel> sofa::component::collision::detection::algorithm::BruteForceBroadPhase::m_collisionModels. protected . vector of accumulated CollisionModel's when the collision pipeline asks to add a CollisionMode",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:1539,Modifiability,inherit,inherited,1539,"of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:1793,Modifiability,inherit,inherited,1793,"is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of li",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:2043,Modifiability,inherit,inherited,2043,"m, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down trav",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:2238,Modifiability,inherit,inherited,2238,"el;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void beginBroadPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionModel (core::CollisionModel *cm) override;  In the bro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:2492,Modifiability,inherit,inherited,2492,"el;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void beginBroadPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionModel (core::CollisionModel *cm) override;  In the bro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:3181,Modifiability,variab,variables,3181,"re multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void beginBroadPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionModel (core::CollisionModel *cm) override;  In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  SOFA_ABSTRACT_CLASS (BroadPhaseDetection, Detection);  ; virtual void addCollisionModels (const sofa::type::vector< core::CollisionModel * > &v);  Add a list of collision models to the set of root collision models managed by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:3725,Modifiability,inherit,inherited,3725,"(includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void beginBroadPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionModel (core::CollisionModel *cm) override;  In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  SOFA_ABSTRACT_CLASS (BroadPhaseDetection, Detection);  ; virtual void addCollisionModels (const sofa::type::vector< core::CollisionModel * > &v);  Add a list of collision models to the set of root collision models managed by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual vo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:4395,Modifiability,inherit,inherited,4395,"s collision with the provided collision model if possible and add pairs of collision models if in intersection. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  SOFA_ABSTRACT_CLASS (BroadPhaseDetection, Detection);  ; virtual void addCollisionModels (const sofa::type::vector< core::CollisionModel * > &v);  Add a list of collision models to the set of root collision models managed by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:4719,Modifiability,inherit,inherited,4719,"aseDetection, Detection);  ; virtual void addCollisionModels (const sofa::type::vector< core::CollisionModel * > &v);  Add a list of collision models to the set of root collision models managed by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:5025,Modifiability,inherit,inherited,5025,"inished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & ge",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:6811,Modifiability,variab,variables,6811,"ool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:6853,Modifiability,variab,variables,6853,"ool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:7098,Modifiability,inherit,inherited,7098,"  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:13355,Modifiability,inherit,inherited,13355,"a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static bool keepCollisionBetween (core::CollisionModel *cm1, core::CollisionModel *cm2);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceBroadPhase ();  ;  ~BruteForceBroadPhase () override=default;  ; bool doesSelfCollide (core::CollisionModel *cm) const;  Return true if the provided CollisionModel can collide with itself. More...;  ; bool intersectWithBoxModel (core::CollisionModel *cm) const;  Return true if the provided CollisionModel intersect boxModel, false otherwise. More...;  ;  Protected Member Functions i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:13755,Modifiability,inherit,inherited,13755,"aining all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static bool keepCollisionBetween (core::CollisionModel *cm1, core::CollisionModel *cm2);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceBroadPhase ();  ;  ~BruteForceBroadPhase () override=default;  ; bool doesSelfCollide (core::CollisionModel *cm) const;  Return true if the provided CollisionModel can collide with itself. More...;  ; bool intersectWithBoxModel (core::CollisionModel *cm) const;  Return true if the provided CollisionModel intersect boxModel, false otherwise. More...;  ;  Protected Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  ~BroadPhaseDetection () override=default;  Destructor. More...;  ; void changeInstanceBP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceNP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  Collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:14374,Modifiability,inherit,inherited,14374,"e<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceBroadPhase ();  ;  ~BruteForceBroadPhase () override=default;  ; bool doesSelfCollide (core::CollisionModel *cm) const;  Return true if the provided CollisionModel can collide with itself. More...;  ; bool intersectWithBoxModel (core::CollisionModel *cm) const;  Return true if the provided CollisionModel intersect boxModel, false otherwise. More...;  ;  Protected Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  ~BroadPhaseDetection () override=default;  Destructor. More...;  ; void changeInstanceBP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceNP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:14580,Modifiability,inherit,inherited,14580,":core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceBroadPhase ();  ;  ~BruteForceBroadPhase () override=default;  ; bool doesSelfCollide (core::CollisionModel *cm) const;  Return true if the provided CollisionModel can collide with itself. More...;  ; bool intersectWithBoxModel (core::CollisionModel *cm) const;  Return true if the provided CollisionModel intersect boxModel, false otherwise. More...;  ;  Protected Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  ~BroadPhaseDetection () override=default;  Destructor. More...;  ; void changeInstanceBP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceNP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:14769,Modifiability,inherit,inherited,14769,":core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceBroadPhase ();  ;  ~BruteForceBroadPhase () override=default;  ; bool doesSelfCollide (core::CollisionModel *cm) const;  Return true if the provided CollisionModel can collide with itself. More...;  ; bool intersectWithBoxModel (core::CollisionModel *cm) const;  Return true if the provided CollisionModel intersect boxModel, false otherwise. More...;  ;  Protected Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  ~BroadPhaseDetection () override=default;  Destructor. More...;  ; void changeInstanceBP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceNP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:14882,Modifiability,inherit,inherited,14882,":core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceBroadPhase ();  ;  ~BruteForceBroadPhase () override=default;  ; bool doesSelfCollide (core::CollisionModel *cm) const;  Return true if the provided CollisionModel can collide with itself. More...;  ; bool intersectWithBoxModel (core::CollisionModel *cm) const;  Return true if the provided CollisionModel intersect boxModel, false otherwise. More...;  ;  Protected Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  ~BroadPhaseDetection () override=default;  Destructor. More...;  ; void changeInstanceBP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceNP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:15605,Modifiability,inherit,inherited,15605,"e inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:16336,Modifiability,inherit,inherited,16336,"a to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ boxModel. collision::geometry::CubeCollisionModel::SPtr so",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:16502,Modifiability,inherit,inherited,16502,"ted Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ boxModel. collision::geometry::CubeCollisionModel::SPtr sofa::component::collision::detection::algorithm::BruteForceBroadPhase::boxModel. protected . ◆ m_collisionModels. sofa::type::vector<FirstLastCollisionModel> sofa::component::collision::detection::algorith",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:20664,Modifiability,variab,variables,20664,"ginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionBetween ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). static . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reinit(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::SOFA_CLASS ; (; BruteForceBroadPhase ; , . core::collision::BroadPhaseDetection ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceBroadPhase; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:5525,Performance,load,loader,5525,"s More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:351,Safety,detect,detection,351,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:605,Safety,detect,detection,605,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:844,Safety,detect,detection,844,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:3317,Safety,detect,detected,3317,"Link< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void beginBroadPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionModel (core::CollisionModel *cm) override;  In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  SOFA_ABSTRACT_CLASS (BroadPhaseDetection, Detection);  ; virtual void addCollisionModels (const sofa::type::vector< core::CollisionModel * > &v);  Add a list of collision models to the set of root collision models managed by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:3667,Safety,detect,detection,3667,"a;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BruteForceBroadPhase, core::collision::BroadPhaseDetection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void beginBroadPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionModel (core::CollisionModel *cm) override;  In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  SOFA_ABSTRACT_CLASS (BroadPhaseDetection, Detection);  ; virtual void addCollisionModels (const sofa::type::vector< core::CollisionModel * > &v);  Add a list of collision models to the set of root collision models managed by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:4263,Safety,detect,detected,4263,"on are modified. More...;  ; void beginBroadPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionModel (core::CollisionModel *cm) override;  In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::BroadPhaseDetection;  SOFA_ABSTRACT_CLASS (BroadPhaseDetection, Detection);  ; virtual void addCollisionModels (const sofa::type::vector< core::CollisionModel * > &v);  Add a list of collision models to the set of root collision models managed by this class. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; sofa::type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for de",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:17407,Safety,detect,detection,17407,"ol > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ boxModel. collision::geometry::CubeCollisionModel::SPtr sofa::component::collision::detection::algorithm::BruteForceBroadPhase::boxModel. protected . ◆ m_collisionModels. sofa::type::vector<FirstLastCollisionModel> sofa::component::collision::detection::algorithm::BruteForceBroadPhase::m_collisionModels. protected . vector of accumulated CollisionModel's when the collision pipeline asks to add a CollisionModel in BruteForceBroadPhase::addCollisionModel This vector is emptied at each time step in BruteForceBroadPhase::beginBroadPhase . Constructor details. ◆ BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::BruteForceBroadPhase ; (; ). protected . ◆ ~BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::~BruteForceBroadPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionModel(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::addCollisionModel ; (; core::CollisionModel * ; cm). overridevirtual . In the broad phase, ignores",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:17566,Safety,detect,detection,17566," lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ boxModel. collision::geometry::CubeCollisionModel::SPtr sofa::component::collision::detection::algorithm::BruteForceBroadPhase::boxModel. protected . ◆ m_collisionModels. sofa::type::vector<FirstLastCollisionModel> sofa::component::collision::detection::algorithm::BruteForceBroadPhase::m_collisionModels. protected . vector of accumulated CollisionModel's when the collision pipeline asks to add a CollisionModel in BruteForceBroadPhase::addCollisionModel This vector is emptied at each time step in BruteForceBroadPhase::beginBroadPhase . Constructor details. ◆ BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::BruteForceBroadPhase ; (; ). protected . ◆ ~BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::~BruteForceBroadPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionModel(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::addCollisionModel ; (; core::CollisionModel * ; cm). overridevirtual . In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. ; Ignore the collision with the provided collision mod",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:17939,Safety,detect,detection,17939,";  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ boxModel. collision::geometry::CubeCollisionModel::SPtr sofa::component::collision::detection::algorithm::BruteForceBroadPhase::boxModel. protected . ◆ m_collisionModels. sofa::type::vector<FirstLastCollisionModel> sofa::component::collision::detection::algorithm::BruteForceBroadPhase::m_collisionModels. protected . vector of accumulated CollisionModel's when the collision pipeline asks to add a CollisionModel in BruteForceBroadPhase::addCollisionModel This vector is emptied at each time step in BruteForceBroadPhase::beginBroadPhase . Constructor details. ◆ BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::BruteForceBroadPhase ; (; ). protected . ◆ ~BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::~BruteForceBroadPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionModel(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::addCollisionModel ; (; core::CollisionModel * ; cm). overridevirtual . In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. ; Ignore the collision with the provided collision model if it does not intersect with the box defined in the Data box when it is defined. Add the provided collision model to be investigated in the narrow phase in case of self collision. Check intersection with already added collision models. If it can intersect another collision model, the pair is added to be further investigated in the narrow phase. ; Implements sofa::core::collision::BroadPhaseDet",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:18079,Safety,detect,detection,18079,"nvalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ boxModel. collision::geometry::CubeCollisionModel::SPtr sofa::component::collision::detection::algorithm::BruteForceBroadPhase::boxModel. protected . ◆ m_collisionModels. sofa::type::vector<FirstLastCollisionModel> sofa::component::collision::detection::algorithm::BruteForceBroadPhase::m_collisionModels. protected . vector of accumulated CollisionModel's when the collision pipeline asks to add a CollisionModel in BruteForceBroadPhase::addCollisionModel This vector is emptied at each time step in BruteForceBroadPhase::beginBroadPhase . Constructor details. ◆ BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::BruteForceBroadPhase ; (; ). protected . ◆ ~BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::~BruteForceBroadPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionModel(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::addCollisionModel ; (; core::CollisionModel * ; cm). overridevirtual . In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. ; Ignore the collision with the provided collision model if it does not intersect with the box defined in the Data box when it is defined. Add the provided collision model to be investigated in the narrow phase in case of self collision. Check intersection with already added collision models. If it can intersect another collision model, the pair is added to be further investigated in the narrow phase. ; Implements sofa::core::collision::BroadPhaseDetection. ◆ beginBroadPhase(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::beginBroadPhase ; (; ). overridevi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:18254,Safety,detect,detection,18254,"FilePos {-1};  . Attribute details. ◆ boxModel. collision::geometry::CubeCollisionModel::SPtr sofa::component::collision::detection::algorithm::BruteForceBroadPhase::boxModel. protected . ◆ m_collisionModels. sofa::type::vector<FirstLastCollisionModel> sofa::component::collision::detection::algorithm::BruteForceBroadPhase::m_collisionModels. protected . vector of accumulated CollisionModel's when the collision pipeline asks to add a CollisionModel in BruteForceBroadPhase::addCollisionModel This vector is emptied at each time step in BruteForceBroadPhase::beginBroadPhase . Constructor details. ◆ BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::BruteForceBroadPhase ; (; ). protected . ◆ ~BruteForceBroadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::~BruteForceBroadPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionModel(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::addCollisionModel ; (; core::CollisionModel * ; cm). overridevirtual . In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. ; Ignore the collision with the provided collision model if it does not intersect with the box defined in the Data box when it is defined. Add the provided collision model to be investigated in the narrow phase in case of self collision. Check intersection with already added collision models. If it can intersect another collision model, the pair is added to be further investigated in the narrow phase. ; Implements sofa::core::collision::BroadPhaseDetection. ◆ beginBroadPhase(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::beginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:19023,Safety,detect,detection,19023,"oadPhase(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::~BruteForceBroadPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionModel(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::addCollisionModel ; (; core::CollisionModel * ; cm). overridevirtual . In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. ; Ignore the collision with the provided collision model if it does not intersect with the box defined in the Data box when it is defined. Add the provided collision model to be investigated in the narrow phase in case of self collision. Check intersection with already added collision models. If it can intersect another collision model, the pair is added to be further investigated in the narrow phase. ; Implements sofa::core::collision::BroadPhaseDetection. ◆ beginBroadPhase(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::beginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:19151,Safety,detect,detected,19151,"). overrideprotecteddefault . Function details. ◆ addCollisionModel(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::addCollisionModel ; (; core::CollisionModel * ; cm). overridevirtual . In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. ; Ignore the collision with the provided collision model if it does not intersect with the box defined in the Data box when it is defined. Add the provided collision model to be investigated in the narrow phase in case of self collision. Check intersection with already added collision models. If it can intersect another collision model, the pair is added to be further investigated in the narrow phase. ; Implements sofa::core::collision::BroadPhaseDetection. ◆ beginBroadPhase(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::beginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionB",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:19312,Safety,detect,detection,19312," cm). overridevirtual . In the broad phase, ignores collision with the provided collision model if possible and add pairs of collision models if in intersection. ; Ignore the collision with the provided collision model if it does not intersect with the box defined in the Data box when it is defined. Add the provided collision model to be investigated in the narrow phase in case of self collision. Check intersection with already added collision models. If it can intersect another collision model, the pair is added to be further investigated in the narrow phase. ; Implements sofa::core::collision::BroadPhaseDetection. ◆ beginBroadPhase(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::beginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionBetween ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). static . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::needs",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:19539,Safety,detect,detection,19539,"sion model if it does not intersect with the box defined in the Data box when it is defined. Add the provided collision model to be investigated in the narrow phase in case of self collision. Check intersection with already added collision models. If it can intersect another collision model, the pair is added to be further investigated in the narrow phase. ; Implements sofa::core::collision::BroadPhaseDetection. ◆ beginBroadPhase(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::beginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionBetween ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). static . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reinit(). void sofa::component::coll",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:19831,Safety,detect,detection,19831,"be further investigated in the narrow phase. ; Implements sofa::core::collision::BroadPhaseDetection. ◆ beginBroadPhase(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::beginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionBetween ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). static . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reinit(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::SOFA_CLASS ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:20092,Safety,detect,detection,20092,"ginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionBetween ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). static . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reinit(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::SOFA_CLASS ; (; BruteForceBroadPhase ; , . core::collision::BroadPhaseDetection ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceBroadPhase; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:20297,Safety,detect,detection,20297,"ginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionBetween ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). static . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reinit(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::SOFA_CLASS ; (; BruteForceBroadPhase ; , . core::collision::BroadPhaseDetection ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceBroadPhase; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:20440,Safety,detect,detection,20440,"ginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionBetween ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). static . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reinit(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::SOFA_CLASS ; (; BruteForceBroadPhase ; , . core::collision::BroadPhaseDetection ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceBroadPhase; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:20561,Safety,detect,detection,20561,"ginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionBetween ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). static . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reinit(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::SOFA_CLASS ; (; BruteForceBroadPhase ; , . core::collision::BroadPhaseDetection ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceBroadPhase; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:20813,Safety,detect,detection,20813,"ginBroadPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::BroadPhaseDetection. ◆ doesSelfCollide(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::doesSelfCollide ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel can collide with itself. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ intersectWithBoxModel(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::intersectWithBoxModel ; (; core::CollisionModel * ; cm); const. protected . Return true if the provided CollisionModel intersect boxModel, false otherwise. . ◆ keepCollisionBetween(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::keepCollisionBetween ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). static . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::BruteForceBroadPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reinit(). void sofa::component::collision::detection::algorithm::BruteForceBroadPhase::reinit ; (; ). overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceBroadPhase::SOFA_CLASS ; (; BruteForceBroadPhase ; , . core::collision::BroadPhaseDetection ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceBroadPhase; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:488,Testability,test,test,488,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:723,Testability,test,test,723,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection m",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:1146,Testability,test,tested,1146,"rce framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:1166,Testability,test,test,1166,"rce framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:1217,Testability,test,tests,1217,"ttributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal st",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:1228,Testability,test,tests,1228,"Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceBroadPhase Class Reference . #include <BruteForceBroadPhase.h>; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceBroadPhase:. [legend]; Detailed Description; Perform an extensive pair-wise collision test based on the bounding volume of collision models. ; This component is a broad phase algorithm used during collision detection to limit the number of pairs of objects that need to be checked for intersection. The algorithm output is a list of pairs of objects that can potentially be in intersection. This list is then used as an input for a narrow phase algorithm. In this algorithm, all possible pairs of objects are tested (brute force test). If there are n objects, there will be n^2/2 tests. The tests are based on the bounding volume of the objects, usually an axis-aligned bounding box. . Classes; struct  FirstLastCollisionModel;  . Protected Attributes; collision::geometry::CubeCollisionModel::SPtr boxModel;  ; sofa::type::vector< FirstLastCollisionModel > m_collisionModels;  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:9116,Testability,log,logging,9116," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:9189,Testability,log,logging,9189," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:9231,Testability,log,logging,9231," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:9301,Testability,log,logging,9301," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:9412,Testability,log,logging,9412," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:9454,Testability,log,logging,9454," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:11278,Testability,log,logErrors,11278,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:9497,Usability,clear,clearLoggedMessages,9497," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:10010,Deployability,update,updateInternal,10010,"ase; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BruteForceDetection, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::BruteForceDetection; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BruteForceDetection() override=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:10063,Deployability,update,updateLinks,10063,"ase; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BruteForceDetection, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::BruteForceDetection; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BruteForceDetection() override=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:310,Modifiability,inherit,inherited,310,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceDetection Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceDetection, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:9378,Performance,load,loader,9378,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BruteForceDetection, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::BruteForceDetection; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceDetection Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceDetection, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:253,Safety,detect,detection,253,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BruteForceDetection Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BruteForceDetection, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:1529,Safety,detect,detection,1529,":objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::BruteForceDete",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:2498,Safety,detect,detection,2498,"fa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::BruteForceDetectioninlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:5787,Safety,detect,detection,5787,"core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; init() overridesofa::component::collision::detection::algorithm::BruteForceDetectionvirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisp",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:9676,Safety,detect,detection,9676,"e::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BruteForceDetection, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::BruteForceDetection; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BruteForceDetection() override=defaultsofa::component::collision::detection::algorithm::BruteForceD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:10648,Safety,detect,detection,10648,"ase; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BruteForceDetection, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::BruteForceDetection; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BruteForceDetection() override=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:778,Testability,log,logging,778," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectpro",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:2253,Testability,log,logging,2253,"lizer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::BruteForceDetectioninlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:2295,Testability,log,logging,2295,"e::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::BruteForceDetectioninlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:4563,Testability,log,logging,4563,inks(const std::string &name) constsofa::core::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:4605,Testability,log,logging,4605,ore::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:10080,Testability,log,logErrors,10080,"ase; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(BruteForceDetection, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::BruteForceDetection; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BruteForceDetection() override=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html:2062,Usability,clear,clearLoggedMessages,2062,"addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; BruteForceDetection()=defaultsofa::component::collision::detection::algorithm::BruteForceDetectionprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::BruteForceDetectioninlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:720,Availability,down,down,720,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceDetection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceDetection Class Referencefinal . #include <BruteForceDetection.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceDetection:. [legend]. Public Member Functions;  SOFA_CLASS (BruteForceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:14017,Availability,down,down,14017,"  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::BruteForceDetection ; (; ). protecteddefault . ◆ ~BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::~BruteForceDetection ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::BruteForceDetection::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceDetection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceDetection::SOFA_CLASS ; (; BruteForceDetection ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceDetection; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:2623,Deployability,update,updateInternal,2623,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:7118,Deployability,update,updateLinks,7118,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:10230,Deployability,update,update,10230,"ctions; template<class T > ; static T::SPtr create (T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceDetection ()=default;  ;  ~BruteForceDetection () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:1192,Integrability,depend,dependent,1192,"ce. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceDetection Class Referencefinal . #include <BruteForceDetection.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceDetection:. [legend]. Public Member Functions;  SOFA_CLASS (BruteForceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:11933,Integrability,message,messages,11933,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:773,Modifiability,inherit,inherited,773,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceDetection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceDetection Class Referencefinal . #include <BruteForceDetection.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceDetection:. [legend]. Public Member Functions;  SOFA_CLASS (BruteForceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:2559,Modifiability,variab,variables,2559," virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:2669,Modifiability,variab,variables,2669,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:2711,Modifiability,variab,variables,2711,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:2956,Modifiability,inherit,inherited,2956," ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:9329,Modifiability,inherit,inherited,9329," getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static T::SPtr create (T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceDetection ()=default;  ;  ~BruteForceDetection () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:9729,Modifiability,inherit,inherited,9729,"aining all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static T::SPtr create (T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceDetection ()=default;  ;  ~BruteForceDetection () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:10064,Modifiability,inherit,inherited,10064,"ctions; template<class T > ; static T::SPtr create (T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  BruteForceDetection ()=default;  ;  ~BruteForceDetection () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseDat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:10787,Modifiability,inherit,inherited,10787,"cription *=nullptr);  . Protected Member Functions;  BruteForceDetection ()=default;  ;  ~BruteForceDetection () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:11518,Modifiability,inherit,inherited,11518,"a to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; Singl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:11684,Modifiability,inherit,inherited,11684,"ted Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:12506,Modifiability,inherit,inherited,12506,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::BruteForceDetection ; (; ). protecteddefault . ◆ ~BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::~BruteForceDetection ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::BruteForceDetection:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:12760,Modifiability,inherit,inherited,12760,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::BruteForceDetection ; (; ). protecteddefault . ◆ ~BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::~BruteForceDetection ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::BruteForceDetection:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:1273,Performance,load,loader,1273,". #include <BruteForceDetection.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceDetection:. [legend]. Public Member Functions;  SOFA_CLASS (BruteForceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceDetection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceDetection Class Referencefinal . #include <BruteForceDetection.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceDetection:. [legend]. Public Member Functions;  SOFA_CLASS (BruteForceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:315,Safety,detect,detection,315,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceDetection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceDetection Class Referencefinal . #include <BruteForceDetection.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceDetection:. [legend]. Public Member Functions;  SOFA_CLASS (BruteForceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:466,Safety,detect,detection,466,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BruteForceDetection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceDetection Class Referencefinal . #include <BruteForceDetection.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceDetection:. [legend]. Public Member Functions;  SOFA_CLASS (BruteForceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:13241,Safety,detect,detection,13241," Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::BruteForceDetection ; (; ). protecteddefault . ◆ ~BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::~BruteForceDetection ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::BruteForceDetection::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceDetection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceDetection::SOFA_CLASS ; (; BruteForceDetection ; , . sofa::core::objectmodel::BaseObject ;  . )",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:13385,Safety,detect,detection,13385,"  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::BruteForceDetection ; (; ). protecteddefault . ◆ ~BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::~BruteForceDetection ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::BruteForceDetection::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceDetection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceDetection::SOFA_CLASS ; (; BruteForceDetection ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceDetection; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:13578,Safety,detect,detection,13578,"  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::BruteForceDetection ; (; ). protecteddefault . ◆ ~BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::~BruteForceDetection ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::BruteForceDetection::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceDetection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceDetection::SOFA_CLASS ; (; BruteForceDetection ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceDetection; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:13860,Safety,detect,detection,13860,"  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::BruteForceDetection ; (; ). protecteddefault . ◆ ~BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::~BruteForceDetection ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::BruteForceDetection::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceDetection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceDetection::SOFA_CLASS ; (; BruteForceDetection ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceDetection; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:14135,Safety,detect,detection,14135,"  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::BruteForceDetection ; (; ). protecteddefault . ◆ ~BruteForceDetection(). sofa::component::collision::detection::algorithm::BruteForceDetection::~BruteForceDetection ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::BruteForceDetection::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::BruteForceDetection::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BruteForceDetection::SOFA_CLASS ; (; BruteForceDetection ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmBruteForceDetection; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:4974,Testability,log,logging,4974," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:5047,Testability,log,logging,5047," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:5089,Testability,log,logging,5089," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:5159,Testability,log,logging,5159," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:5270,Testability,log,logging,5270," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:5312,Testability,log,logging,5312," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:7136,Testability,log,logErrors,7136,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:5355,Usability,clear,clearLoggedMessages,5355," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:13747,Deployability,update,updateInternal,13747,"::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BVHNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::BVHNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:13800,Deployability,update,updateLinks,13800,"ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BVHNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::BVHNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:300,Modifiability,inherit,inherited,300,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase, including all inherited members. _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::BVHNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; BVHNarrowPhase()sofa::component::collision::detection::algorithm::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:8477,Performance,queue,queue,8477,"Data::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initializeExternalCells(core::CollisionModel *cm1, core::CollisionModel *cm2, std::queue< TestPair > &externalCells)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Instance typedefsofa::core::collision::CollisionAlgorithm; instancesofa::core::collision::CollisionAlgorithmprotected; intersectionMethodsofa::core::collision::Detectionprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isSelfCollision(core::CollisionModel *cm1, core::CollisionModel *cm2)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:10921,Performance,queue,queue,10921,"d; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; needsDeepBoundingTree() constsofa::core::collision::Detectioninlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; processExternalCell(const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) constsofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; processInternalCell(const TestPair &internalCell, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFile",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:11233,Performance,queue,queue,11233,"e::collision::Detectioninlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; processExternalCell(const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) constsofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; processInternalCell(const TestPair &internalCell, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:12692,Performance,load,loader,12692,"tmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BVHNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::BVHNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:14153,Performance,queue,queue,14153,"e, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::BVHNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotecte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:14626,Performance,queue,queue,14626,"OFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BVHNarrowPhase() override=defaultsofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase, including all inherited members. _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::BVHNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; BVHNarrowPhase()sofa::component::collision::detection::algorithm::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:248,Safety,detect,detection,248,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::BVHNarrowPhase Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::BVHNarrowPhase, including all inherited members. _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::BVHNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; BVHNarrowPhase()sofa::component::collision::detection::algorithm::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:664,Safety,detect,detection,664," _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::BVHNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; BVHNarrowPhase()sofa::component::collision::detection::algorithm::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:1978,Safety,detect,detection,1978,"tmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; BVHNarrowPhase()sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::obj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:4170,Safety,detect,detection,4170,"ontext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::core::collision::NarrowPhaseDetectionvirtual; endNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; finalCollisionPairs(const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:8538,Safety,detect,detection,8538,"initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initializeExternalCells(core::CollisionModel *cm1, core::CollisionModel *cm2, std::queue< TestPair > &externalCells)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Instance typedefsofa::core::collision::CollisionAlgorithm; instancesofa::core::collision::CollisionAlgorithmprotected; intersectionMethodsofa::core::collision::Detectionprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isSelfCollision(core::CollisionModel *cm1, core::CollisionModel *cm2)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:9008,Safety,detect,detection,9008,"seprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initializeExternalCells(core::CollisionModel *cm1, core::CollisionModel *cm2, std::queue< TestPair > &externalCells)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Instance typedefsofa::core::collision::CollisionAlgorithm; instancesofa::core::collision::CollisionAlgorithmprotected; intersectionMethodsofa::core::collision::Detectionprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isSelfCollision(core::CollisionModel *cm1, core::CollisionModel *cm2)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_outputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_primitiveTestCountsofa::core::collision::NarrowPhaseDetectionprotected; m_storedOutputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:11044,Safety,detect,detection,11044,"e::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; needsDeepBoundingTree() constsofa::core::collision::Detectioninlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; processExternalCell(const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) constsofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; processInternalCell(const TestPair &internalCell, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::object",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:11453,Safety,detect,detection,11453,"t std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; processExternalCell(const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) constsofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; processInternalCell(const TestPair &internalCell, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; se",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:13225,Safety,detect,detection,13225,"el::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BVHNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::BVHNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:14373,Safety,detect,detection,14373,"ion; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BVHNarrowPhase() override=defaultsofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; ~NarrowPhaseDetection() overridesof",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:14807,Safety,detect,detection,14807,"OFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BVHNarrowPhase() override=defaultsofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:15296,Safety,detect,detection,15296,"OFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~BVHNarrowPhase() override=defaultsofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:1170,Testability,log,logging,1170," _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::BVHNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; BVHNarrowPhase()sofa::component::collision::detection::algorithm::B",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:3052,Testability,log,logging,3052,"l::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::core::collision::NarrowPhaseDetectionvirtual; endNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; finalCollisionPairs(const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:3094,Testability,log,logging,3094,"ontext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::core::collision::NarrowPhaseDetectionvirtual; endNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; finalCollisionPairs(const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:6054,Testability,log,logging,6054,"ntState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDetectionOutputs() constsofa::core::collision::NarrowPhaseDetection; getDetectionOutputs(CollisionModel *cm1, CollisionModel *cm2)sofa::core::collision::NarrowPhaseDetection; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::Detectioninline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrimitiveTestCount() constsofa::core::collision::NarrowPhaseDetection; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:6096,Testability,log,logging,6096,"seinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDetectionOutputs() constsofa::core::collision::NarrowPhaseDetection; getDetectionOutputs(CollisionModel *cm1, CollisionModel *cm2)sofa::core::collision::NarrowPhaseDetection; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::Detectioninline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrimitiveTestCount() constsofa::core::collision::NarrowPhaseDetection; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:13817,Testability,log,logErrors,13817,"eObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(BVHNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::BVHNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; visitCollisionElements(const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotectedstatic; visitExternalChildren(const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection)sofa::component::collision::detection::algo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html:2783,Usability,clear,clearLoggedMessages,2783,"l::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; BVHNarrowPhase()sofa::component::collision::detection::algorithm::BVHNarrowPhaseprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *vparams) overridesofa::core::collision::NarrowPhaseDetectionvirtual; endNarrowPhase()sofa::core::collision::NarrowPhaseDetectionvirtual; f_bboxsofa::core::objectmodel::Base; f_listen",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:4700,Availability,down,down,4700,"ink) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:3069,Deployability,pipeline,pipeline,3069," core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:4974,Deployability,update,updateInternal,4974,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:9469,Deployability,update,updateLinks,9469,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:12527,Deployability,update,update,12527,"r, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BVHNarrowPhase ();  ;  ~BVHNarrowPhase () override=default;  ; void processExternalCell (const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) const;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:17152,Deployability,pipeline,pipeline,17152,"e...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:3416,Integrability,depend,dependent,3416,"m2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:15994,Integrability,message,messages,15994,"tor &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void finalCollisionPairs (const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedInte",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:1460,Modifiability,inherit,inherited,1460,"rowPhase:. [legend]; Detailed Description; Narrow phase collision detection based on bounding volume hierarchy. ; The algorithm uses the result of a broad phase collision detection. For a pair of collision models, it traverses the hierarchy of bounding volumes in order to rapidly eliminate pairs of elements which are not in intersection. Finally, the intersection method is called on the remaining pairs of elements. . Classes; struct  FinestCollision;  Store data related to two finest CollisionModel's. More...;  . Public Member Functions;  SOFA_CLASS (BVHNarrowPhase, core::collision::NarrowPhaseDetection);  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:2329,Modifiability,inherit,inherited,2329,"w phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:2821,Modifiability,inherit,inherited,2821," core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getC",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:3127,Modifiability,inherit,inherited,3127,"m2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:4910,Modifiability,variab,variables,4910,"ore...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:5020,Modifiability,variab,variables,5020,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:5062,Modifiability,variab,variables,5062,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:5307,Modifiability,inherit,inherited,5307,"potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:11859,Modifiability,inherit,inherited,11859," const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BVHNarrowPhase ();  ;  ~BVHNarrowPhase () override=default;  ; void processExternalCell (const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) const;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:12059,Modifiability,inherit,inherited,12059,"r, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BVHNarrowPhase ();  ;  ~BVHNarrowPhase () override=default;  ; void processExternalCell (const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) const;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:12248,Modifiability,inherit,inherited,12248,"r, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BVHNarrowPhase ();  ;  ~BVHNarrowPhase () override=default;  ; void processExternalCell (const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) const;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:12361,Modifiability,inherit,inherited,12361,"r, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BVHNarrowPhase ();  ;  ~BVHNarrowPhase () override=default;  ; void processExternalCell (const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) const;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:13084,Modifiability,inherit,inherited,13084,"e inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; static bool isSelfCollision (core::CollisionModel *cm1, core::CollisionModel *cm2);  Return true if both collision models belong to the same object, false otherwise. More...;  ; static void initializeExternalCells (core::CollisionModel *cm1, core::CollisionModel *cm2, std::queue< TestPair > &externalCells);  Build a list of TestPair's from internal and external children of two CollisionModel's. M",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:15579,Modifiability,inherit,inherited,15579,"e::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void visitExternalChildren (const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void finalCollisionPairs (const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetectio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:15745,Modifiability,inherit,inherited,15745,"tor *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void visitExternalChildren (const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void finalCollisionPairs (const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:16567,Modifiability,inherit,inherited,16567,"ol > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:16805,Modifiability,inherit,inherited,16805,"ol > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_v",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:17055,Modifiability,inherit,inherited,17055,"e...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:17250,Modifiability,inherit,inherited,17250,"d::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:17504,Modifiability,inherit,inherited,17504,"d::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; sta",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:17943,Modifiability,inherit,inherited,17943,"re...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::BVHNarrowPhase ; (; ). protected . ◆ ~BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::~BVHNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:18343,Modifiability,inherit,inherited,18343,"bject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::BVHNarrowPhase ; (; ). protected . ◆ ~BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::~BVHNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. ; The function traverses the hierarchy of CollisionElement's contained in each CollisionModel to avoid unnecessary pair intersections. An iterative form of the hierarchy traversal is adopted instead of a recursive form. ; Implements sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:3497,Performance,load,loader,3497,"ectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:11731,Performance,queue,queue,11731," const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  BVHNarrowPhase ();  ;  ~BVHNarrowPhase () override=default;  ; void processExternalCell (const TestPair &externalCell, core::CollisionModel *&cm1, core::CollisionModel *&cm2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, MirrorIntersector *mirror, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs) const;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:14075,Performance,queue,queue,14075,"herited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; static bool isSelfCollision (core::CollisionModel *cm1, core::CollisionModel *cm2);  Return true if both collision models belong to the same object, false otherwise. More...;  ; static void initializeExternalCells (core::CollisionModel *cm1, core::CollisionModel *cm2, std::queue< TestPair > &externalCells);  Build a list of TestPair's from internal and external children of two CollisionModel's. More...;  ; static void processInternalCell (const TestPair &internalCell, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void visitCollisionElements (const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void visitExternalChildren (const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector,",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:14366,Performance,queue,queue,14366,"isionModel *cm2);  Return true if both collision models belong to the same object, false otherwise. More...;  ; static void initializeExternalCells (core::CollisionModel *cm1, core::CollisionModel *cm2, std::queue< TestPair > &externalCells);  Build a list of TestPair's from internal and external children of two CollisionModel's. More...;  ; static void processInternalCell (const TestPair &internalCell, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void visitCollisionElements (const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void visitExternalChildren (const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void finalCollisionPairs (const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:14713,Performance,queue,queue,14713,"isionModel *cm2);  Return true if both collision models belong to the same object, false otherwise. More...;  ; static void initializeExternalCells (core::CollisionModel *cm1, core::CollisionModel *cm2, std::queue< TestPair > &externalCells);  Build a list of TestPair's from internal and external children of two CollisionModel's. More...;  ; static void processInternalCell (const TestPair &internalCell, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void visitCollisionElements (const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void visitExternalChildren (const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void finalCollisionPairs (const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:15123,Performance,queue,queue,15123,"isionModel *cm2);  Return true if both collision models belong to the same object, false otherwise. More...;  ; static void initializeExternalCells (core::CollisionModel *cm1, core::CollisionModel *cm2, std::queue< TestPair > &externalCells);  Build a list of TestPair's from internal and external children of two CollisionModel's. More...;  ; static void processInternalCell (const TestPair &internalCell, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void visitCollisionElements (const TestPair &root, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, std::stack< TestPair > &internalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void visitExternalChildren (const core::CollisionElementIterator &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void finalCollisionPairs (const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:20237,Performance,queue,queue,20237,"in each CollisionModel to avoid unnecessary pair intersections. An iterative form of the hierarchy traversal is adopted instead of a recursive form. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ finalCollisionPairs(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs ; (; const TestPair & ; pair, . bool ; selfCollision, . core::collision::ElementIntersector * ; intersector, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . Test intersection between two ranges of CollisionElement's The provided TestPair contains ranges of external CollisionElement's, which means that they can be tested against each other for intersection . ◆ initializeExternalCells(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::initializeExternalCells ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2, . std::queue< TestPair > & ; externalCells . ). staticprotected . Build a list of TestPair's from internal and external children of two CollisionModel's. . ◆ isSelfCollision(). bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInterna",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:21022,Performance,queue,queue,21022," ◆ initializeExternalCells(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::initializeExternalCells ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2, . std::queue< TestPair > & ; externalCells . ). staticprotected . Build a list of TestPair's from internal and external children of two CollisionModel's. . ◆ isSelfCollision(). bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:21401,Performance,queue,queue,21401,":component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ visitExternalChildren(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren ; (; cons",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:22055,Performance,queue,queue,22055,"ector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ visitExternalChildren(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren ; (; const core::CollisionElementIterator & ; it1, . const core::CollisionElementIterator & ; it2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . sofacomponentcollisiondetectionalgorithmBVHNarrowPhase; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:22611,Performance,queue,queue,22611,"ector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ visitExternalChildren(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren ; (; const core::CollisionElementIterator & ; it1, . const core::CollisionElementIterator & ; it2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . sofacomponentcollisiondetectionalgorithmBVHNarrowPhase; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference . #include <BVHNarrowPhase.h>; Narrow phase collision detection based on bounding volume hierarchy. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BVHNarrowPhase:. [legend]; Detailed Description; Narrow phase collision detection based on bounding volume hierarchy. ; The algorithm uses the result of a broad phase collision detection. For a pair of collision models, it traverses the hierarchy of bounding volumes in order to rapidly eliminate pairs of elements which are not in intersection. Finally, the intersection method is called on the remaining pairs of elements. . Classes; struct  FinestCollision;  Store data related to two finest CollisionModel's. More...;  . Public Member Functions;  SOFA_CLASS (BVHNarrowPhase, core::collision::NarrowPhaseDetection);  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potential",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:324,Safety,detect,detection,324,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference . #include <BVHNarrowPhase.h>; Narrow phase collision detection based on bounding volume hierarchy. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BVHNarrowPhase:. [legend]; Detailed Description; Narrow phase collision detection based on bounding volume hierarchy. ; The algorithm uses the result of a broad phase collision detection. For a pair of collision models, it traverses the hierarchy of bounding volumes in order to rapidly eliminate pairs of elements which are not in intersection. Finally, the intersection method is called on the remaining pairs of elements. . Classes; struct  FinestCollision;  Store data related to two finest CollisionModel's. More...;  . Public Member Functions;  SOFA_CLASS (BVHNarrowPhase, core::collision::NarrowPhaseDetection);  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potential",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:431,Safety,detect,detection,431,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference . #include <BVHNarrowPhase.h>; Narrow phase collision detection based on bounding volume hierarchy. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BVHNarrowPhase:. [legend]; Detailed Description; Narrow phase collision detection based on bounding volume hierarchy. ; The algorithm uses the result of a broad phase collision detection. For a pair of collision models, it traverses the hierarchy of bounding volumes in order to rapidly eliminate pairs of elements which are not in intersection. Finally, the intersection method is called on the remaining pairs of elements. . Classes; struct  FinestCollision;  Store data related to two finest CollisionModel's. More...;  . Public Member Functions;  SOFA_CLASS (BVHNarrowPhase, core::collision::NarrowPhaseDetection);  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potential",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:539,Safety,detect,detection,539,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference . #include <BVHNarrowPhase.h>; Narrow phase collision detection based on bounding volume hierarchy. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BVHNarrowPhase:. [legend]; Detailed Description; Narrow phase collision detection based on bounding volume hierarchy. ; The algorithm uses the result of a broad phase collision detection. For a pair of collision models, it traverses the hierarchy of bounding volumes in order to rapidly eliminate pairs of elements which are not in intersection. Finally, the intersection method is called on the remaining pairs of elements. . Classes; struct  FinestCollision;  Store data related to two finest CollisionModel's. More...;  . Public Member Functions;  SOFA_CLASS (BVHNarrowPhase, core::collision::NarrowPhaseDetection);  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potential",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:633,Safety,detect,detection,633,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference . #include <BVHNarrowPhase.h>; Narrow phase collision detection based on bounding volume hierarchy. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BVHNarrowPhase:. [legend]; Detailed Description; Narrow phase collision detection based on bounding volume hierarchy. ; The algorithm uses the result of a broad phase collision detection. For a pair of collision models, it traverses the hierarchy of bounding volumes in order to rapidly eliminate pairs of elements which are not in intersection. Finally, the intersection method is called on the remaining pairs of elements. . Classes; struct  FinestCollision;  Store data related to two finest CollisionModel's. More...;  . Public Member Functions;  SOFA_CLASS (BVHNarrowPhase, core::collision::NarrowPhaseDetection);  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potential",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:738,Safety,detect,detection,738,"﻿. SOFA API: sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; Protected Member Functions |; Static Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference . #include <BVHNarrowPhase.h>; Narrow phase collision detection based on bounding volume hierarchy. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BVHNarrowPhase:. [legend]; Detailed Description; Narrow phase collision detection based on bounding volume hierarchy. ; The algorithm uses the result of a broad phase collision detection. For a pair of collision models, it traverses the hierarchy of bounding volumes in order to rapidly eliminate pairs of elements which are not in intersection. Finally, the intersection method is called on the remaining pairs of elements. . Classes; struct  FinestCollision;  Store data related to two finest CollisionModel's. More...;  . Public Member Functions;  SOFA_CLASS (BVHNarrowPhase, core::collision::NarrowPhaseDetection);  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potential",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:1394,Safety,detect,detected,1394," Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BVHNarrowPhase Class Reference . #include <BVHNarrowPhase.h>; Narrow phase collision detection based on bounding volume hierarchy. ; More... Inheritance diagram for sofa::component::collision::detection::algorithm::BVHNarrowPhase:. [legend]; Detailed Description; Narrow phase collision detection based on bounding volume hierarchy. ; The algorithm uses the result of a broad phase collision detection. For a pair of collision models, it traverses the hierarchy of bounding volumes in order to rapidly eliminate pairs of elements which are not in intersection. Finally, the intersection method is called on the remaining pairs of elements. . Classes; struct  FinestCollision;  Store data related to two finest CollisionModel's. More...;  . Public Member Functions;  SOFA_CLASS (BVHNarrowPhase, core::collision::NarrowPhaseDetection);  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, Collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:1794,Safety,detect,detected,1794,"models, it traverses the hierarchy of bounding volumes in order to rapidly eliminate pairs of elements which are not in intersection. Finally, the intersection method is called on the remaining pairs of elements. . Classes; struct  FinestCollision;  Store data related to two finest CollisionModel's. More...;  . Public Member Functions;  SOFA_CLASS (BVHNarrowPhase, core::collision::NarrowPhaseDetection);  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be super",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:2694,Safety,detect,detection,2694," data of this object, for debugging purposes. More...;  ; virtual void beginNarrowPhase ();  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; virtual void endNarrowPhase ();  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:18609,Safety,detect,detection,18609,"  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::BVHNarrowPhase ; (; ). protected . ◆ ~BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::~BVHNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. ; The function traverses the hierarchy of CollisionElement's contained in each CollisionModel to avoid unnecessary pair intersections. An iterative form of the hierarchy traversal is adopted instead of a recursive form. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ finalCollisionPairs(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs ; (; const TestPair & ; pair, . bool ; selfCollisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:18731,Safety,detect,detection,18731,"names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::BVHNarrowPhase ; (; ). protected . ◆ ~BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::~BVHNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. ; The function traverses the hierarchy of CollisionElement's contained in each CollisionModel to avoid unnecessary pair intersections. An iterative form of the hierarchy traversal is adopted instead of a recursive form. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ finalCollisionPairs(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs ; (; const TestPair & ; pair, . bool ; selfCollision, . core::collision::ElementIntersector * ; intersector, . sofa::core::collision::DetectionOutputVector *& ; outputs, . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:18893,Safety,detect,detection,18893,"herited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::BVHNarrowPhase ; (; ). protected . ◆ ~BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::~BVHNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. ; The function traverses the hierarchy of CollisionElement's contained in each CollisionModel to avoid unnecessary pair intersections. An iterative form of the hierarchy traversal is adopted instead of a recursive form. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ finalCollisionPairs(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs ; (; const TestPair & ; pair, . bool ; selfCollision, . core::collision::ElementIntersector * ; intersector, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . Test intersection between two ranges of CollisionElement's The provided TestPair contains ranges of external ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:19152,Safety,detect,detected,19152,"d called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::BVHNarrowPhase ; (; ). protected . ◆ ~BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::~BVHNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. ; The function traverses the hierarchy of CollisionElement's contained in each CollisionModel to avoid unnecessary pair intersections. An iterative form of the hierarchy traversal is adopted instead of a recursive form. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ finalCollisionPairs(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs ; (; const TestPair & ; pair, . bool ; selfCollision, . core::collision::ElementIntersector * ; intersector, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . Test intersection between two ranges of CollisionElement's The provided TestPair contains ranges of external CollisionElement's, which means that they can be tested against each other for intersection . ◆ initializeExternalCells(). void sofa::component::collision::detection::alg",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:19278,Safety,avoid,avoid,19278,"arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::BVHNarrowPhase ; (; ). protected . ◆ ~BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::~BVHNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. ; The function traverses the hierarchy of CollisionElement's contained in each CollisionModel to avoid unnecessary pair intersections. An iterative form of the hierarchy traversal is adopted instead of a recursive form. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ finalCollisionPairs(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs ; (; const TestPair & ; pair, . bool ; selfCollision, . core::collision::ElementIntersector * ; intersector, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . Test intersection between two ranges of CollisionElement's The provided TestPair contains ranges of external CollisionElement's, which means that they can be tested against each other for intersection . ◆ initializeExternalCells(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::initializeExternalCells ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2, . std::queue< Test",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:19517,Safety,detect,detection,19517,"tructor details. ◆ BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::BVHNarrowPhase ; (; ). protected . ◆ ~BVHNarrowPhase(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::~BVHNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. ; The function traverses the hierarchy of CollisionElement's contained in each CollisionModel to avoid unnecessary pair intersections. An iterative form of the hierarchy traversal is adopted instead of a recursive form. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ finalCollisionPairs(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs ; (; const TestPair & ; pair, . bool ; selfCollision, . core::collision::ElementIntersector * ; intersector, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . Test intersection between two ranges of CollisionElement's The provided TestPair contains ranges of external CollisionElement's, which means that they can be tested against each other for intersection . ◆ initializeExternalCells(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::initializeExternalCells ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2, . std::queue< TestPair > & ; externalCells . ). staticprotected . Build a list of TestPair's from internal and external children of two CollisionModel's. . ◆ isSelfCollision(). bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::Collisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:20101,Safety,detect,detection,20101,"ls, which has been detected in the broad phase. ; The function traverses the hierarchy of CollisionElement's contained in each CollisionModel to avoid unnecessary pair intersections. An iterative form of the hierarchy traversal is adopted instead of a recursive form. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ finalCollisionPairs(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs ; (; const TestPair & ; pair, . bool ; selfCollision, . core::collision::ElementIntersector * ; intersector, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . Test intersection between two ranges of CollisionElement's The provided TestPair contains ranges of external CollisionElement's, which means that they can be tested against each other for intersection . ◆ initializeExternalCells(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::initializeExternalCells ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2, . std::queue< TestPair > & ; externalCells . ). staticprotected . Build a list of TestPair's from internal and external children of two CollisionModel's. . ◆ isSelfCollision(). bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:20440,Safety,detect,detection,20440,"llisionPairs(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs ; (; const TestPair & ; pair, . bool ; selfCollision, . core::collision::ElementIntersector * ; intersector, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . Test intersection between two ranges of CollisionElement's The provided TestPair contains ranges of external CollisionElement's, which means that they can be tested against each other for intersection . ◆ initializeExternalCells(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::initializeExternalCells ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2, . std::queue< TestPair > & ; externalCells . ). staticprotected . Build a list of TestPair's from internal and external children of two CollisionModel's. . ◆ isSelfCollision(). bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:20724,Safety,detect,detection,20724,"fa::core::collision::Intersection * ; currentIntersection . ). staticprotected . Test intersection between two ranges of CollisionElement's The provided TestPair contains ranges of external CollisionElement's, which means that they can be tested against each other for intersection . ◆ initializeExternalCells(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::initializeExternalCells ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2, . std::queue< TestPair > & ; externalCells . ). staticprotected . Build a list of TestPair's from internal and external children of two CollisionModel's. . ◆ isSelfCollision(). bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:21201,Safety,detect,detection,21201,"std::queue< TestPair > & ; externalCells . ). staticprotected . Build a list of TestPair's from internal and external children of two CollisionModel's. . ◆ isSelfCollision(). bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Inter",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:21678,Safety,detect,detection,21678,"::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ visitExternalChildren(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren ; (; const core::CollisionElementIterator & ; it1, . const core::CollisionElementIterator & ; it2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:21860,Safety,detect,detection,21860,"ore::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ visitExternalChildren(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren ; (; const core::CollisionElementIterator & ; it1, . const core::CollisionElementIterator & ; it2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . sofacomponentcollisiondetectionalgorithmBVHNarrowPhase; Generated on Mon Nov 11 2024 02:1",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:22348,Safety,detect,detection,22348,"ector * ; coarseIntersector, . const FinestCollision & ; finest, . MirrorIntersector * ; mirror, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs . ); const. protected . ◆ processInternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell ; (; const TestPair & ; internalCell, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::BVHNarrowPhase::SOFA_CLASS ; (; BVHNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ visitCollisionElements(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements ; (; const TestPair & ; root, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . std::stack< TestPair > & ; internalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . ◆ visitExternalChildren(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren ; (; const core::CollisionElementIterator & ; it1, . const core::CollisionElementIterator & ; it2, . core::collision::ElementIntersector * ; coarseIntersector, . const FinestCollision & ; finest, . std::queue< TestPair > & ; externalCells, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . sofacomponentcollisiondetectionalgorithmBVHNarrowPhase; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:7325,Testability,log,logging,7325," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:7398,Testability,log,logging,7398," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:7440,Testability,log,logging,7440," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:7510,Testability,log,logging,7510," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:7621,Testability,log,logging,7621," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:7663,Testability,log,logging,7663," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:9487,Testability,log,logErrors,9487,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:19994,Testability,test,tested,19994,"llisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . In the narrow phase, examine a potential collision between a pair of collision models, which has been detected in the broad phase. ; The function traverses the hierarchy of CollisionElement's contained in each CollisionModel to avoid unnecessary pair intersections. An iterative form of the hierarchy traversal is adopted instead of a recursive form. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ finalCollisionPairs(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::finalCollisionPairs ; (; const TestPair & ; pair, . bool ; selfCollision, . core::collision::ElementIntersector * ; intersector, . sofa::core::collision::DetectionOutputVector *& ; outputs, . const sofa::core::collision::Intersection * ; currentIntersection . ). staticprotected . Test intersection between two ranges of CollisionElement's The provided TestPair contains ranges of external CollisionElement's, which means that they can be tested against each other for intersection . ◆ initializeExternalCells(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::initializeExternalCells ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2, . std::queue< TestPair > & ; externalCells . ). staticprotected . Build a list of TestPair's from internal and external children of two CollisionModel's. . ◆ isSelfCollision(). bool sofa::component::collision::detection::algorithm::BVHNarrowPhase::isSelfCollision ; (; core::CollisionModel * ; cm1, . core::CollisionModel * ; cm2 . ). staticprotected . Return true if both collision models belong to the same object, false otherwise. . ◆ processExternalCell(). void sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell ; (; const TestPair & ; externalCell, . core::CollisionModel *& ; cm1, . core::CollisionModel *& ; cm2, . core::collision::ElementIntersector * ; coarseInt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:7706,Usability,clear,clearLoggedMessages,7706," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html:298,Modifiability,inherit,inherited,298,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPair Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPair, including all inherited members. CollidingPair()sofa::component::collision::detection::algorithm::CollidingPairinline; CollidingPair(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *)sofa::component::collision::detection::algorithm::CollidingPairinline; elem1sofa::component::collision::detection::algorithm::CollidingPair; elem2sofa::component::collision::detection::algorithm::CollidingPair; init(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_)sofa::component::collision::detection::algorithm::CollidingPairinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPair Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPair, including all inherited members. CollidingPair()sofa::component::collision::detection::algorithm::CollidingPairinline; CollidingPair(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *)sofa::component::collision::detection::algorithm::CollidingPairinline; elem1sofa::component::collision::detection::algorithm::CollidingPair; elem2sofa::component::collision::detection::algorithm::CollidingPair; init(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_)sofa::component::collision::detection::algorithm::CollidingPairinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html:247,Safety,detect,detection,247,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPair Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPair, including all inherited members. CollidingPair()sofa::component::collision::detection::algorithm::CollidingPairinline; CollidingPair(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *)sofa::component::collision::detection::algorithm::CollidingPairinline; elem1sofa::component::collision::detection::algorithm::CollidingPair; elem2sofa::component::collision::detection::algorithm::CollidingPair; init(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_)sofa::component::collision::detection::algorithm::CollidingPairinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html:360,Safety,detect,detection,360,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPair Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPair, including all inherited members. CollidingPair()sofa::component::collision::detection::algorithm::CollidingPairinline; CollidingPair(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *)sofa::component::collision::detection::algorithm::CollidingPairinline; elem1sofa::component::collision::detection::algorithm::CollidingPair; elem2sofa::component::collision::detection::algorithm::CollidingPair; init(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_)sofa::component::collision::detection::algorithm::CollidingPairinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html:575,Safety,detect,detection,575,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPair Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPair, including all inherited members. CollidingPair()sofa::component::collision::detection::algorithm::CollidingPairinline; CollidingPair(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *)sofa::component::collision::detection::algorithm::CollidingPairinline; elem1sofa::component::collision::detection::algorithm::CollidingPair; elem2sofa::component::collision::detection::algorithm::CollidingPair; init(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_)sofa::component::collision::detection::algorithm::CollidingPairinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html:651,Safety,detect,detection,651,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPair Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPair, including all inherited members. CollidingPair()sofa::component::collision::detection::algorithm::CollidingPairinline; CollidingPair(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *)sofa::component::collision::detection::algorithm::CollidingPairinline; elem1sofa::component::collision::detection::algorithm::CollidingPair; elem2sofa::component::collision::detection::algorithm::CollidingPair; init(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_)sofa::component::collision::detection::algorithm::CollidingPairinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html:721,Safety,detect,detection,721,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPair Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPair, including all inherited members. CollidingPair()sofa::component::collision::detection::algorithm::CollidingPairinline; CollidingPair(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *)sofa::component::collision::detection::algorithm::CollidingPairinline; elem1sofa::component::collision::detection::algorithm::CollidingPair; elem2sofa::component::collision::detection::algorithm::CollidingPair; init(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_)sofa::component::collision::detection::algorithm::CollidingPairinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html:882,Safety,detect,detection,882,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPair Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPair, including all inherited members. CollidingPair()sofa::component::collision::detection::algorithm::CollidingPairinline; CollidingPair(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *)sofa::component::collision::detection::algorithm::CollidingPairinline; elem1sofa::component::collision::detection::algorithm::CollidingPair; elem2sofa::component::collision::detection::algorithm::CollidingPair; init(const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_)sofa::component::collision::detection::algorithm::CollidingPairinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPair Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPair Class Reference . #include <CollisionPM.h>. Public Attributes; core::CollisionElementIterator elem1;  ; core::CollisionElementIterator elem2;  . Public Member Functions;  CollidingPair ();  ;  CollidingPair (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *);  ; void init (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_);  . Attribute details. ◆ elem1. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem1. ◆ elem2. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem2. Constructor details. ◆ CollidingPair() [1/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; ). inline . ◆ CollidingPair() [2/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_, . core::collision::ElementIntersector * ;  . ). inline . x and y value are used to identify this pair, the order is not important but the order of elem1_ and elem2_ is because when using intersect function we run inter->intersect(elem1,elem2,output), so the intersect method must handle the order you give. . Function details. ◆ init(). void sofa::component::collision::detection::algorithm::CollidingPair::init ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_ . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPair; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html:266,Safety,detect,detection,266,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPair Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPair Class Reference . #include <CollisionPM.h>. Public Attributes; core::CollisionElementIterator elem1;  ; core::CollisionElementIterator elem2;  . Public Member Functions;  CollidingPair ();  ;  CollidingPair (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *);  ; void init (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_);  . Attribute details. ◆ elem1. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem1. ◆ elem2. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem2. Constructor details. ◆ CollidingPair() [1/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; ). inline . ◆ CollidingPair() [2/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_, . core::collision::ElementIntersector * ;  . ). inline . x and y value are used to identify this pair, the order is not important but the order of elem1_ and elem2_ is because when using intersect function we run inter->intersect(elem1,elem2,output), so the intersect method must handle the order you give. . Function details. ◆ init(). void sofa::component::collision::detection::algorithm::CollidingPair::init ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_ . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPair; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html:839,Safety,detect,detection,839,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPair Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPair Class Reference . #include <CollisionPM.h>. Public Attributes; core::CollisionElementIterator elem1;  ; core::CollisionElementIterator elem2;  . Public Member Functions;  CollidingPair ();  ;  CollidingPair (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *);  ; void init (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_);  . Attribute details. ◆ elem1. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem1. ◆ elem2. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem2. Constructor details. ◆ CollidingPair() [1/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; ). inline . ◆ CollidingPair() [2/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_, . core::collision::ElementIntersector * ;  . ). inline . x and y value are used to identify this pair, the order is not important but the order of elem1_ and elem2_ is because when using intersect function we run inter->intersect(elem1,elem2,output), so the intersect method must handle the order you give. . Function details. ◆ init(). void sofa::component::collision::detection::algorithm::CollidingPair::init ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_ . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPair; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html:951,Safety,detect,detection,951,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPair Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPair Class Reference . #include <CollisionPM.h>. Public Attributes; core::CollisionElementIterator elem1;  ; core::CollisionElementIterator elem2;  . Public Member Functions;  CollidingPair ();  ;  CollidingPair (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *);  ; void init (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_);  . Attribute details. ◆ elem1. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem1. ◆ elem2. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem2. Constructor details. ◆ CollidingPair() [1/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; ). inline . ◆ CollidingPair() [2/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_, . core::collision::ElementIntersector * ;  . ). inline . x and y value are used to identify this pair, the order is not important but the order of elem1_ and elem2_ is because when using intersect function we run inter->intersect(elem1,elem2,output), so the intersect method must handle the order you give. . Function details. ◆ init(). void sofa::component::collision::detection::algorithm::CollidingPair::init ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_ . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPair; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html:1069,Safety,detect,detection,1069,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPair Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPair Class Reference . #include <CollisionPM.h>. Public Attributes; core::CollisionElementIterator elem1;  ; core::CollisionElementIterator elem2;  . Public Member Functions;  CollidingPair ();  ;  CollidingPair (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *);  ; void init (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_);  . Attribute details. ◆ elem1. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem1. ◆ elem2. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem2. Constructor details. ◆ CollidingPair() [1/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; ). inline . ◆ CollidingPair() [2/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_, . core::collision::ElementIntersector * ;  . ). inline . x and y value are used to identify this pair, the order is not important but the order of elem1_ and elem2_ is because when using intersect function we run inter->intersect(elem1,elem2,output), so the intersect method must handle the order you give. . Function details. ◆ init(). void sofa::component::collision::detection::algorithm::CollidingPair::init ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_ . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPair; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html:1190,Safety,detect,detection,1190,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPair Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPair Class Reference . #include <CollisionPM.h>. Public Attributes; core::CollisionElementIterator elem1;  ; core::CollisionElementIterator elem2;  . Public Member Functions;  CollidingPair ();  ;  CollidingPair (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *);  ; void init (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_);  . Attribute details. ◆ elem1. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem1. ◆ elem2. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem2. Constructor details. ◆ CollidingPair() [1/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; ). inline . ◆ CollidingPair() [2/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_, . core::collision::ElementIntersector * ;  . ). inline . x and y value are used to identify this pair, the order is not important but the order of elem1_ and elem2_ is because when using intersect function we run inter->intersect(elem1,elem2,output), so the intersect method must handle the order you give. . Function details. ◆ init(). void sofa::component::collision::detection::algorithm::CollidingPair::init ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_ . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPair; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html:1716,Safety,detect,detection,1716,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPair Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPair Class Reference . #include <CollisionPM.h>. Public Attributes; core::CollisionElementIterator elem1;  ; core::CollisionElementIterator elem2;  . Public Member Functions;  CollidingPair ();  ;  CollidingPair (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_, core::collision::ElementIntersector *);  ; void init (const core::CollisionElementIterator &elem1_, const core::CollisionElementIterator &elem2_);  . Attribute details. ◆ elem1. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem1. ◆ elem2. core::CollisionElementIterator sofa::component::collision::detection::algorithm::CollidingPair::elem2. Constructor details. ◆ CollidingPair() [1/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; ). inline . ◆ CollidingPair() [2/2]. sofa::component::collision::detection::algorithm::CollidingPair::CollidingPair ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_, . core::collision::ElementIntersector * ;  . ). inline . x and y value are used to identify this pair, the order is not important but the order of elem1_ and elem2_ is because when using intersect function we run inter->intersect(elem1,elem2,output), so the intersect method must handle the order you give. . Function details. ◆ init(). void sofa::component::collision::detection::algorithm::CollidingPair::init ; (; const core::CollisionElementIterator & ; elem1_, . const core::CollisionElementIterator & ; elem2_ . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPair; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_pair.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:294,Modifiability,inherit,inherited,294,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:245,Safety,detect,detection,245,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:452,Safety,detect,detection,452,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:600,Safety,detect,detection,600,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:676,Safety,detect,detection,676,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:758,Safety,detect,detection,758,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:882,Safety,detect,detection,882,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:1061,Safety,detect,detection,1061,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:1152,Safety,detect,detection,1152,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html:641,Usability,clear,clear,641,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollidingPM Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollidingPM, including all inherited members. add(Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; add(core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod)sofa::component::collision::detection::algorithm::CollidingPMinline; clear()sofa::component::collision::detection::algorithm::CollidingPMinline; CollidingPM()sofa::component::collision::detection::algorithm::CollidingPMinline; intersect(core::collision::NarrowPhaseDetection *phase)sofa::component::collision::detection::algorithm::CollidingPMinline; remove(int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2)sofa::component::collision::detection::algorithm::CollidingPMinline; umap_collision typedefsofa::component::collision::detection::algorithm::CollidingPM. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:254,Safety,detect,detection,254,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:891,Safety,detect,detection,891,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:1021,Safety,detect,detection,1021,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:1210,Safety,detect,detection,1210,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:1435,Safety,detect,detection,1435,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:1541,Safety,detect,detection,1541,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:1695,Safety,detect,detection,1695,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:746,Usability,clear,clear,746,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:1393,Usability,clear,clear,1393,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html:1470,Usability,clear,clear,1470,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollidingPM Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollidingPM Class Reference . #include <CollisionPM.h>. Classes; struct  CollModID;  . Public Member Functions;  CollidingPM ();  ; void add (Index a, Index b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void add (core::CollisionModel *cm, sofa::core::collision::Intersection *interMehtod);  ; void remove (int a, int b, const core::CollisionElementIterator &elem1, const core::CollisionElementIterator &elem2);  ; void clear ();  ; void intersect (core::collision::NarrowPhaseDetection *phase);  . Constructor details. ◆ CollidingPM(). sofa::component::collision::detection::algorithm::CollidingPM::CollidingPM ; (; ). inline . Function details. ◆ add() [1/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; core::CollisionModel * ; cm, . sofa::core::collision::Intersection * ; interMehtod . ). inline . ◆ add() [2/2]. void sofa::component::collision::detection::algorithm::CollidingPM::add ; (; Index ; a, . Index ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . ◆ clear(). void sofa::component::collision::detection::algorithm::CollidingPM::clear ; (; ). inline . ◆ intersect(). void sofa::component::collision::detection::algorithm::CollidingPM::intersect ; (; core::collision::NarrowPhaseDetection * ; phase). inline . ◆ remove(). void sofa::component::collision::detection::algorithm::CollidingPM::remove ; (; int ; a, . int ; b, . const core::CollisionElementIterator & ; elem1, . const core::CollisionElementIterator & ; elem2 . ). inline . sofacomponentcollisiondetectionalgorithmCollidingPM; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_colliding_p_m.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html:302,Modifiability,inherit,inherited,302,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollisionPairID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollisionPairID, including all inherited members. CollisionPairID(Index x, Index y)sofa::component::collision::detection::algorithm::CollisionPairIDinline; operator<(const CollisionPairID &other) constsofa::component::collision::detection::algorithm::CollisionPairIDinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollisionPairID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollisionPairID, including all inherited members. CollisionPairID(Index x, Index y)sofa::component::collision::detection::algorithm::CollisionPairIDinline; operator<(const CollisionPairID &other) constsofa::component::collision::detection::algorithm::CollisionPairIDinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html:249,Safety,detect,detection,249,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollisionPairID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollisionPairID, including all inherited members. CollisionPairID(Index x, Index y)sofa::component::collision::detection::algorithm::CollisionPairIDinline; operator<(const CollisionPairID &other) constsofa::component::collision::detection::algorithm::CollisionPairIDinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html:382,Safety,detect,detection,382,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollisionPairID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollisionPairID, including all inherited members. CollisionPairID(Index x, Index y)sofa::component::collision::detection::algorithm::CollisionPairIDinline; operator<(const CollisionPairID &other) constsofa::component::collision::detection::algorithm::CollisionPairIDinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html:500,Safety,detect,detection,500,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollisionPairID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollisionPairID, including all inherited members. CollisionPairID(Index x, Index y)sofa::component::collision::detection::algorithm::CollisionPairIDinline; operator<(const CollisionPairID &other) constsofa::component::collision::detection::algorithm::CollisionPairIDinline. Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollisionPairID Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPairID Class Reference . #include <CollisionPM.h>. Public Member Functions;  CollisionPairID (Index x, Index y);  ; bool operator< (const CollisionPairID &other) const;  . Constructor details. ◆ CollisionPairID(). sofa::component::collision::detection::algorithm::CollisionPairID::CollisionPairID ; (; Index ; x, . Index ; y . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollisionPairID::operator< ; (; const CollisionPairID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollisionPairID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html:247,Safety,detect,detection,247,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollisionPairID Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPairID Class Reference . #include <CollisionPM.h>. Public Member Functions;  CollisionPairID (Index x, Index y);  ; bool operator< (const CollisionPairID &other) const;  . Constructor details. ◆ CollisionPairID(). sofa::component::collision::detection::algorithm::CollisionPairID::CollisionPairID ; (; Index ; x, . Index ; y . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollisionPairID::operator< ; (; const CollisionPairID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollisionPairID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html:520,Safety,detect,detection,520,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollisionPairID Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPairID Class Reference . #include <CollisionPM.h>. Public Member Functions;  CollisionPairID (Index x, Index y);  ; bool operator< (const CollisionPairID &other) const;  . Constructor details. ◆ CollisionPairID(). sofa::component::collision::detection::algorithm::CollisionPairID::CollisionPairID ; (; Index ; x, . Index ; y . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollisionPairID::operator< ; (; const CollisionPairID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollisionPairID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html:683,Safety,detect,detection,683,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollisionPairID Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPairID Class Reference . #include <CollisionPM.h>. Public Member Functions;  CollisionPairID (Index x, Index y);  ; bool operator< (const CollisionPairID &other) const;  . Constructor details. ◆ CollisionPairID(). sofa::component::collision::detection::algorithm::CollisionPairID::CollisionPairID ; (; Index ; x, . Index ; y . ). inline . Function details. ◆ operator<(). bool sofa::component::collision::detection::algorithm::CollisionPairID::operator< ; (; const CollisionPairID & ; other); const. inline . sofacomponentcollisiondetectionalgorithmCollisionPairID; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pair_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:12091,Deployability,update,updateInternal,12091,"::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Pipeline, sofa::core::objectmodel::BaseObject)sofa::core::collision::Pipeline; SOFA_CLASS(CollisionPipeline, sofa::simulation::PipelineImpl)sofa::component::collision::detection::algorithm::CollisionPipeline; sofa::simulation::PipelineImpl::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Pipeline() overridesofa::core::collision::Pipelineprotected; ~PipelineImpl() overridesofa::simulation::PipelineImplprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:12144,Deployability,update,updateLinks,12144,"::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Pipeline, sofa::core::objectmodel::BaseObject)sofa::core::collision::Pipeline; SOFA_CLASS(CollisionPipeline, sofa::simulation::PipelineImpl)sofa::component::collision::detection::algorithm::CollisionPipeline; sofa::simulation::PipelineImpl::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Pipeline() overridesofa::core::collision::Pipelineprotected; ~PipelineImpl() overridesofa::simulation::PipelineImplprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:306,Modifiability,inherit,inherited,306,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollisionPipeline Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollisionPipeline, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:11374,Performance,load,loader,11374,"reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(objectmodel::BaseNode *node) overridesofa::core::collision::Pipelinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::simulation::PipelineImplvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Pipeline, sofa::core::objectmodel::BaseObject)sofa::core::collision::Pipeline; SOFA_CLASS(CollisionPipeline, sofa::simulation::PipelineImpl)sofa::component::collision::detection::algorithm::CollisionPipeline; sofa::simulation::PipelineImpl::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::ma",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollisionPipeline Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollisionPipeline, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:251,Safety,detect,detection,251,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::CollisionPipeline Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::CollisionPipeline, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:2004,Safety,detect,detection,2004,"Objectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescri",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:2279,Safety,detect,detection,2279,"s)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintI",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:3151,Safety,detect,detection,3151,"aseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:3233,Safety,detect,detection,3233,"ionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:3322,Safety,detect,detection,3322,"; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkD",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:3463,Safety,detect,detection,3463,"::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &na",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:3636,Safety,detect,detection,3636,"rtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:3748,Safety,detect,detection,3748,"otected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:3863,Safety,detect,detection,3863,"e::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) consts",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:6402,Safety,detect,detection,6402,inline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNarrowPhaseDetection() constsofa::core::collision::Pipeline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResponseList() const overridesofa::component::collision::detection::algorithm::CollisionPipelinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupManagersofa::core::collision::Pipelineprotected; groupManagerssofa::core::collision::Pipelineprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; init() overridesofa::component::collision::detection::,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:7396,Safety,detect,detection,7396,":detection::algorithm::CollisionPipelinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupManagersofa::core::collision::Pipelineprotected; groupManagerssofa::core::collision::Pipelineprotected; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; init() overridesofa::component::collision::detection::algorithm::CollisionPipelinevirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDispla",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:11764,Safety,detect,detection,11764,"FileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Pipeline, sofa::core::objectmodel::BaseObject)sofa::core::collision::Pipeline; SOFA_CLASS(CollisionPipeline, sofa::simulation::PipelineImpl)sofa::component::collision::detection::algorithm::CollisionPipeline; sofa::simulation::PipelineImpl::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Pipeline() overridesofa::core::collision::Pipelineprotected; ~PipelineImpl() overridesofa::simulation::Pip",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:774,Testability,log,logging,774," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:2853,Testability,log,logging,2853,"eSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::colli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:2895,Testability,log,logging,2895,"e_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPipeline; d_doDebugDrawsofa::component::collision::detection::algorithm::CollisionPipeline; d_doPrintInfoMessagesofa::component::collision::detection::algorithm::CollisionPipeline; d_messageLogCountsofa::core::objectmodel::Basemutable; defaultDepthValuesofa::component::collision::detection::algorithm::CollisionPipelinestatic; doCollisionDetection(const sofa::type::vector< core::CollisionModel * > &collisionModels) overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionReset() overridesofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; doCollisionResponse() overridesofa::component::collision::detection::algorithm::CollisionPipel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:5891,Testability,log,logging,5891,e; getBroadPhaseDetection() constsofa::core::collision::Pipeline; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNarrowPhaseDetection() constsofa::core::collision::Pipeline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResponseList() const overridesofa::component::collision::detection::algorithm::CollisionPipelinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupManagersofa::core::collision::Pipelineprotected; groupManagerssofa::core::collision::Pipe,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:5933,Testability,log,logging,5933,e::collision::Pipeline; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getNarrowPhaseDetection() constsofa::core::collision::Pipeline; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getResponseList() const overridesofa::component::collision::detection::algorithm::CollisionPipelinevirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; groupManagersofa::core::collision::Pipelineprotected; groupManagerssofa::core::collision::Pipelineprotected; handleEvent(Event *)sofa::c,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:12161,Testability,log,logErrors,12161,"::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(Pipeline, sofa::core::objectmodel::BaseObject)sofa::core::collision::Pipeline; SOFA_CLASS(CollisionPipeline, sofa::simulation::PipelineImpl)sofa::component::collision::detection::algorithm::CollisionPipeline; sofa::simulation::PipelineImpl::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~Pipeline() overridesofa::core::collision::Pipelineprotected; ~PipelineImpl() overridesofa::simulation::PipelineImplprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html:2174,Usability,clear,clearLoggedMessages,2174,"jectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; broadPhaseDetectionsofa::core::collision::Pipelineprotected; broadPhaseDetectionssofa::core::collision::Pipelineprotected; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkDataValues()sofa::component::collision::detection::algorithm::CollisionPipelineprotectedvirtual; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionPipeline()sofa::component::collision::detection::algorithm::CollisionPipelineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; computeCollisionDetection() overridesofa::simulation::PipelineImplvirtual; computeCollisionReset() overridesofa::simulation::PipelineImplvirtual; computeCollisionResponse() overridesofa::simulation::PipelineImplvirtual; computeCollisions()sofa::core::collision::Pipelineinline; contactManagersofa::core::collision::Pipelineprotected; contactManagerssofa::core::collision::Pipelineprotected; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_depthsofa::component::collision::detection::algorithm::CollisionPi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:1881,Availability,down,down,1881,"e...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject); ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:1993,Availability,avail,available,1993,"tring > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:2223,Availability,down,down,2223,"_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:17282,Availability,avail,available,17282,"Value = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ getResponseList(). std::set< std::string > sofa::component::collision::detection::algorithm::CollisionPipeline::getResponseList ; (; ); const. overridevirtual . get the set of response available with the current collision pipeline ; Implements sofa::core::collision::Pipeline. ◆ init(). void sofa::component::collision::detection::algorithm::CollisionPipeline::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::CollisionPipeline::SOFA_CLASS ; (; CollisionPipeline ; , . sofa::simulation::PipelineImpl ;  . ). sofacomponentcollisiondetectionalgorithmCollisionPipeline; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:17572,Availability,down,down,17572,"Value = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ getResponseList(). std::set< std::string > sofa::component::collision::detection::algorithm::CollisionPipeline::getResponseList ; (; ); const. overridevirtual . get the set of response available with the current collision pipeline ; Implements sofa::core::collision::Pipeline. ◆ init(). void sofa::component::collision::detection::algorithm::CollisionPipeline::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::CollisionPipeline::SOFA_CLASS ; (; CollisionPipeline ; , . sofa::simulation::PipelineImpl ;  . ). sofacomponentcollisiondetectionalgorithmCollisionPipeline; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:2030,Deployability,pipeline,pipeline,2030,"tring > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:4985,Deployability,update,updateInternal,4985,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:9420,Deployability,update,updateLinks,9420,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:12279,Deployability,update,update,12279," ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CollisionPipeline ();  ; void doCollisionReset () override;  Remove collision response from last step. More...;  ; void doCollisionDetection (const sofa::type::vector< core::CollisionModel * > &collisionModels) override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void doCollisionResponse () override;  Add collision response in the simulation graph. More...;  ; virtual void checkDataValues ();  ;  Protected Member Functions inherited from sofa::simulation::PipelineImpl;  PipelineImpl ();  ;  ~PipelineImpl () override;  ;  Protected Member Functions inherited from sofa::core::collision::Pipeline;  Pipeline ();  ;  ~Pipeline () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:17319,Deployability,pipeline,pipeline,17319,"Value = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ getResponseList(). std::set< std::string > sofa::component::collision::detection::algorithm::CollisionPipeline::getResponseList ; (; ); const. overridevirtual . get the set of response available with the current collision pipeline ; Implements sofa::core::collision::Pipeline. ◆ init(). void sofa::component::collision::detection::algorithm::CollisionPipeline::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::CollisionPipeline::SOFA_CLASS ; (; CollisionPipeline ; , . sofa::simulation::PipelineImpl ;  . ). sofacomponentcollisiondetectionalgorithmCollisionPipeline; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:1068,Integrability,message,messages,1068,"algorithm::CollisionPipeline Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference . #include <CollisionPipeline.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::CollisionPipeline:. [legend]. Public Attributes; Data< bool > d_doPrintInfoMessage;  ; Data< bool > d_doDebugDraw;  ; Data< int > d_depth;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:3640,Integrability,depend,dependent,3640," void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:653,Modifiability,inherit,inherited,653,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference . #include <CollisionPipeline.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::CollisionPipeline:. [legend]. Public Attributes; Data< bool > d_doPrintInfoMessage;  ; Data< bool > d_doDebugDraw;  ; Data< int > d_depth;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response availabl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:819,Modifiability,inherit,inherited,819,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference . #include <CollisionPipeline.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::CollisionPipeline:. [legend]. Public Attributes; Data< bool > d_doPrintInfoMessage;  ; Data< bool > d_doDebugDraw;  ; Data< int > d_depth;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response availabl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:2076,Modifiability,inherit,inherited,2076,"_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool re",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:2674,Modifiability,inherit,inherited,2674,"t () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:3221,Modifiability,inherit,inherited,3221,"  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; Base",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:4921,Modifiability,variab,variables,4921," getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:5031,Modifiability,variab,variables,5031,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:5073,Modifiability,variab,variables,5073,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:5258,Modifiability,inherit,inherited,5258,"al void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:11866,Modifiability,inherit,inherited,11866," ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CollisionPipeline ();  ; void doCollisionReset () override;  Remove collision response from last step. More...;  ; void doCollisionDetection (const sofa::type::vector< core::CollisionModel * > &collisionModels) override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void doCollisionResponse () override;  Add collision response in the simulation graph. More...;  ; virtual void checkDataValues ();  ;  Protected Member Functions inherited from sofa::simulation::PipelineImpl;  PipelineImpl ();  ;  ~PipelineImpl () override;  ;  Protected Member Functions inherited from sofa::core::collision::Pipeline;  Pipeline ();  ;  ~Pipeline () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:11993,Modifiability,inherit,inherited,11993," ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CollisionPipeline ();  ; void doCollisionReset () override;  Remove collision response from last step. More...;  ; void doCollisionDetection (const sofa::type::vector< core::CollisionModel * > &collisionModels) override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void doCollisionResponse () override;  Add collision response in the simulation graph. More...;  ; virtual void checkDataValues ();  ;  Protected Member Functions inherited from sofa::simulation::PipelineImpl;  PipelineImpl ();  ;  ~PipelineImpl () override;  ;  Protected Member Functions inherited from sofa::core::collision::Pipeline;  Pipeline ();  ;  ~Pipeline () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:12113,Modifiability,inherit,inherited,12113," ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  CollisionPipeline ();  ; void doCollisionReset () override;  Remove collision response from last step. More...;  ; void doCollisionDetection (const sofa::type::vector< core::CollisionModel * > &collisionModels) override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void doCollisionResponse () override;  Add collision response in the simulation graph. More...;  ; virtual void checkDataValues ();  ;  Protected Member Functions inherited from sofa::simulation::PipelineImpl;  PipelineImpl ();  ;  ~PipelineImpl () override;  ;  Protected Member Functions inherited from sofa::core::collision::Pipeline;  Pipeline ();  ;  ~Pipeline () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:12836,Modifiability,inherit,inherited,12836," override;  ;  Protected Member Functions inherited from sofa::core::collision::Pipeline;  Pipeline ();  ;  ~Pipeline () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::collision::Pipeline; sofa::type::vector< Intersection * > intersectionMethods;  ; sofa::type::vector< BroadPhaseDetection * > broadPhaseDetections;  ; sofa::type::vector< NarrowPhaseDetection * > narrowPhaseDetections;  ; sofa::type::vector< ContactManager * > contactManagers;  ; sofa::type::vector< CollisionGroupManager * > groupManagers;  ; Intersecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:13570,Modifiability,inherit,inherited,13570,"Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::collision::Pipeline; sofa::type::vector< Intersection * > intersectionMethods;  ; sofa::type::vector< BroadPhaseDetection * > broadPhaseDetections;  ; sofa::type::vector< NarrowPhaseDetection * > narrowPhaseDetections;  ; sofa::type::vector< ContactManager * > contactManagers;  ; sofa::type::vector< CollisionGroupManager * > groupManagers;  ; Intersection * intersectionMethod;  ; BroadPhaseDetection * broadPhaseDetection;  ; NarrowPhaseDetection * narrowPhaseDetection;  ; ContactManager * contactManager;  ; CollisionGroupManager * groupManager;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:14173,Modifiability,inherit,inherited,14173,"Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::collision::Pipeline; sofa::type::vector< Intersection * > intersectionMethods;  ; sofa::type::vector< BroadPhaseDetection * > broadPhaseDetections;  ; sofa::type::vector< NarrowPhaseDetection * > narrowPhaseDetections;  ; sofa::type::vector< ContactManager * > contactManagers;  ; sofa::type::vector< CollisionGroupManager * > groupManagers;  ; Intersection * intersectionMethod;  ; BroadPhaseDetection * broadPhaseDetection;  ; NarrowPhaseDetection * narrowPhaseDetection;  ; ContactManager * contactManager;  ; CollisionGroupManager * groupManager;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:14427,Modifiability,inherit,inherited,14427,"Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::collision::Pipeline; sofa::type::vector< Intersection * > intersectionMethods;  ; sofa::type::vector< BroadPhaseDetection * > broadPhaseDetections;  ; sofa::type::vector< NarrowPhaseDetection * > narrowPhaseDetections;  ; sofa::type::vector< ContactManager * > contactManagers;  ; sofa::type::vector< CollisionGroupManager * > groupManagers;  ; Intersection * intersectionMethod;  ; BroadPhaseDetection * broadPhaseDetection;  ; NarrowPhaseDetection * narrowPhaseDetection;  ; ContactManager * contactManager;  ; CollisionGroupManager * groupManager;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:14866,Modifiability,inherit,inherited,14866,"rsection * intersectionMethod;  ; BroadPhaseDetection * broadPhaseDetection;  ; NarrowPhaseDetection * narrowPhaseDetection;  ; ContactManager * contactManager;  ; CollisionGroupManager * groupManager;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_depth. Data<int> sofa::component::collision::detection::algorithm::CollisionPipeline::d_depth. ◆ d_doDebugDraw. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doDebugDraw. ◆ d_doPrintInfoMessage. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doPrintInfoMessage. ◆ defaultDepthValue. const int sofa::component::collision::detection::algorithm::CollisionPipeline::defaultDepthValue = 6. stat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:15266,Modifiability,inherit,inherited,15266,"bject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_depth. Data<int> sofa::component::collision::detection::algorithm::CollisionPipeline::d_depth. ◆ d_doDebugDraw. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doDebugDraw. ◆ d_doPrintInfoMessage. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doPrintInfoMessage. ◆ defaultDepthValue. const int sofa::component::collision::detection::algorithm::CollisionPipeline::defaultDepthValue = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::Collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:3721,Performance,load,loader,3721,"onst BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modificatio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference . #include <CollisionPipeline.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::CollisionPipeline:. [legend]. Public Attributes; Data< bool > d_doPrintInfoMessage;  ; Data< bool > d_doDebugDraw;  ; Data< int > d_depth;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response availabl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:328,Safety,detect,detection,328,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference . #include <CollisionPipeline.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::CollisionPipeline:. [legend]. Public Attributes; Data< bool > d_doPrintInfoMessage;  ; Data< bool > d_doDebugDraw;  ; Data< int > d_depth;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response availabl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:470,Safety,detect,detection,470,"﻿. SOFA API: sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference . #include <CollisionPipeline.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::CollisionPipeline:. [legend]. Public Attributes; Data< bool > d_doPrintInfoMessage;  ; Data< bool > d_doDebugDraw;  ; Data< int > d_depth;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response availabl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:2909,Safety,detect,detection,2909,"t () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:3035,Safety,detect,detection,3035," with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:15531,Safety,detect,detection,15531,"rnalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_depth. Data<int> sofa::component::collision::detection::algorithm::CollisionPipeline::d_depth. ◆ d_doDebugDraw. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doDebugDraw. ◆ d_doPrintInfoMessage. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doPrintInfoMessage. ◆ defaultDepthValue. const int sofa::component::collision::detection::algorithm::CollisionPipeline::defaultDepthValue = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:15637,Safety,detect,detection,15637," Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_depth. Data<int> sofa::component::collision::detection::algorithm::CollisionPipeline::d_depth. ◆ d_doDebugDraw. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doDebugDraw. ◆ d_doPrintInfoMessage. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doPrintInfoMessage. ◆ defaultDepthValue. const int sofa::component::collision::detection::algorithm::CollisionPipeline::defaultDepthValue = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:15756,Safety,detect,detection,15756,";  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_depth. Data<int> sofa::component::collision::detection::algorithm::CollisionPipeline::d_depth. ◆ d_doDebugDraw. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doDebugDraw. ◆ d_doPrintInfoMessage. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doPrintInfoMessage. ◆ defaultDepthValue. const int sofa::component::collision::detection::algorithm::CollisionPipeline::defaultDepthValue = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:15878,Safety,detect,detection,15878,"e::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_depth. Data<int> sofa::component::collision::detection::algorithm::CollisionPipeline::d_depth. ◆ d_doDebugDraw. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doDebugDraw. ◆ d_doPrintInfoMessage. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doPrintInfoMessage. ◆ defaultDepthValue. const int sofa::component::collision::detection::algorithm::CollisionPipeline::defaultDepthValue = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::compone",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:16023,Safety,detect,detection,16023,"lled by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_depth. Data<int> sofa::component::collision::detection::algorithm::CollisionPipeline::d_depth. ◆ d_doDebugDraw. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doDebugDraw. ◆ d_doPrintInfoMessage. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doPrintInfoMessage. ◆ defaultDepthValue. const int sofa::component::collision::detection::algorithm::CollisionPipeline::defaultDepthValue = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:16174,Safety,detect,detection,16174," method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_depth. Data<int> sofa::component::collision::detection::algorithm::CollisionPipeline::d_depth. ◆ d_doDebugDraw. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doDebugDraw. ◆ d_doPrintInfoMessage. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doPrintInfoMessage. ◆ defaultDepthValue. const int sofa::component::collision::detection::algorithm::CollisionPipeline::defaultDepthValue = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ getResponseList(). std::set< std::string > sofa::component::collision::detection::algorithm:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:16317,Safety,detect,detection,16317," > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_depth. Data<int> sofa::component::collision::detection::algorithm::CollisionPipeline::d_depth. ◆ d_doDebugDraw. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doDebugDraw. ◆ d_doPrintInfoMessage. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doPrintInfoMessage. ◆ defaultDepthValue. const int sofa::component::collision::detection::algorithm::CollisionPipeline::defaultDepthValue = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ getResponseList(). std::set< std::string > sofa::component::collision::detection::algorithm::CollisionPipeline::getResponseList ; (; ); const. overridevirtual . get the set of response available with the current collision pipeline ; Implements sofa::core::collision::Pipeli",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:16666,Safety,detect,detection,16666,"oDebugDraw. ◆ d_doPrintInfoMessage. Data<bool> sofa::component::collision::detection::algorithm::CollisionPipeline::d_doPrintInfoMessage. ◆ defaultDepthValue. const int sofa::component::collision::detection::algorithm::CollisionPipeline::defaultDepthValue = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ getResponseList(). std::set< std::string > sofa::component::collision::detection::algorithm::CollisionPipeline::getResponseList ; (; ); const. overridevirtual . get the set of response available with the current collision pipeline ; Implements sofa::core::collision::Pipeline. ◆ init(). void sofa::component::collision::detection::algorithm::CollisionPipeline::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:16905,Safety,detect,detection,16905,"aultDepthValue = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ getResponseList(). std::set< std::string > sofa::component::collision::detection::algorithm::CollisionPipeline::getResponseList ; (; ); const. overridevirtual . get the set of response available with the current collision pipeline ; Implements sofa::core::collision::Pipeline. ◆ init(). void sofa::component::collision::detection::algorithm::CollisionPipeline::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::CollisionPipeline::SOFA_CLASS ; (; CollisionPipeline ; , . sofa::simulation::PipelineImpl ;  . ). sofacomponentcollisiondetectionalgorithmCollisionPipeline; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:17168,Safety,detect,detection,17168,"Value = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ getResponseList(). std::set< std::string > sofa::component::collision::detection::algorithm::CollisionPipeline::getResponseList ; (; ); const. overridevirtual . get the set of response available with the current collision pipeline ; Implements sofa::core::collision::Pipeline. ◆ init(). void sofa::component::collision::detection::algorithm::CollisionPipeline::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::CollisionPipeline::SOFA_CLASS ; (; CollisionPipeline ; , . sofa::simulation::PipelineImpl ;  . ). sofacomponentcollisiondetectionalgorithmCollisionPipeline; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:17417,Safety,detect,detection,17417,"Value = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ getResponseList(). std::set< std::string > sofa::component::collision::detection::algorithm::CollisionPipeline::getResponseList ; (; ); const. overridevirtual . get the set of response available with the current collision pipeline ; Implements sofa::core::collision::Pipeline. ◆ init(). void sofa::component::collision::detection::algorithm::CollisionPipeline::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::CollisionPipeline::SOFA_CLASS ; (; CollisionPipeline ; , . sofa::simulation::PipelineImpl ;  . ). sofacomponentcollisiondetectionalgorithmCollisionPipeline; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:17690,Safety,detect,detection,17690,"Value = 6. static . Constructor details. ◆ CollisionPipeline(). sofa::component::collision::detection::algorithm::CollisionPipeline::CollisionPipeline ; (; ). protected . Function details. ◆ checkDataValues(). void sofa::component::collision::detection::algorithm::CollisionPipeline::checkDataValues ; (; ). protectedvirtual . ◆ doCollisionDetection(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionDetection ; (; const sofa::type::vector< core::CollisionModel * > & ; collisionModels). overrideprotectedvirtual . Detect new collisions. Note that this step must not modify the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionReset(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionReset ; (; ). overrideprotectedvirtual . Remove collision response from last step. ; Implements sofa::core::collision::Pipeline. ◆ doCollisionResponse(). void sofa::component::collision::detection::algorithm::CollisionPipeline::doCollisionResponse ; (; ). overrideprotectedvirtual . Add collision response in the simulation graph. ; Implements sofa::core::collision::Pipeline. ◆ getResponseList(). std::set< std::string > sofa::component::collision::detection::algorithm::CollisionPipeline::getResponseList ; (; ); const. overridevirtual . get the set of response available with the current collision pipeline ; Implements sofa::core::collision::Pipeline. ◆ init(). void sofa::component::collision::detection::algorithm::CollisionPipeline::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::CollisionPipeline::SOFA_CLASS ; (; CollisionPipeline ; , . sofa::simulation::PipelineImpl ;  . ). sofacomponentcollisiondetectionalgorithmCollisionPipeline; Generated on Mon Nov 11 2024 02:19:51 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:2926,Security,access,accessor,2926,"t () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base *",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:3052,Security,access,accessor,3052," with the current collision pipeline More...;  ;  Public Member Functions inherited from sofa::simulation::PipelineImpl; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void computeCollisionReset () override;  Remove collision response from last step. More...;  ; void computeCollisionDetection () override;  Detect new collisions. Note that this step must not modify the simulation graph. More...;  ; void computeCollisionResponse () override;  Add collision response in the simulation graph. More...;  ;  Public Member Functions inherited from sofa::core::collision::Pipeline;  SOFA_ABSTRACT_CLASS (Pipeline, sofa::core::objectmodel::BaseObject);  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:7276,Testability,log,logging,7276," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:7349,Testability,log,logging,7349," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:7391,Testability,log,logging,7391," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:7461,Testability,log,logging,7461," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:7572,Testability,log,logging,7572," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:7614,Testability,log,logging,7614," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:9438,Testability,log,logErrors,9438,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:7657,Usability,clear,clearLoggedMessages,7657," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:9930,Deployability,update,updateInternal,9930,"moveTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(DirectSAP, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::DirectSAP; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAP() override=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:9983,Deployability,update,updateLinks,9983,"moveTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(DirectSAP, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::DirectSAP; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAP() override=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:290,Modifiability,inherit,inherited,290,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAP Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAP, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:9318,Performance,load,loader,9318,":objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(DirectSAP, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::DirectSAP; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const s",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAP Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAP, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:243,Safety,detect,detection,243,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAP Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAP, including all inherited members. addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:2369,Safety,detect,detection,2369,"ectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::DirectSAPinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DirectSAP()=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:2563,Safety,detect,detection,2563,"e::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::DirectSAPinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DirectSAP()=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::obje",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:5737,Safety,detect,detection,5737,"core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; hasField(const std::string &attribute) constsofa::core::objectmodel::Basevirtual; hasTag(Tag t) constsofa::core::objectmodel::Base; init() overridesofa::component::collision::detection::algorithm::DirectSAPvirtual; initData(::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:9606,Safety,detect,detection,9606,"moveTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(DirectSAP, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::DirectSAP; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAP() override=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:10558,Safety,detect,detection,10558,"moveTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(DirectSAP, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::DirectSAP; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAP() override=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:758,Testability,log,logging,758," addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:2124,Testability,log,logging,2124," > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::DirectSAPinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DirectSAP()=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalFi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:2166,Testability,log,logging,2166,"ctmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::DirectSAPinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DirectSAP()=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:4513,Testability,log,logging,4513,inks(const std::string &name) constsofa::core::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)s,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:4555,Testability,log,logging,4555,ore::objectmodel::Base; getClass() constsofa::core::objectmodel::Baseinlinevirtual; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClassName() constsofa::core::objectmodel::Basevirtual; getComponentState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDataChanged(const BaseData &data)sofa::core::objectmodel::BaseObjectprotecte,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:10000,Testability,log,logErrors,10000,"moveTag(Tag t)sofa::core::objectmodel::Base; reset()sofa::core::objectmodel::BaseObjectvirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_CLASS(DirectSAP, sofa::core::objectmodel::BaseObject)sofa::component::collision::detection::algorithm::DirectSAP; sofa::core::objectmodel::BaseObject::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; SPtr typedefsofa::core::objectmodel::Base; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAP() override=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html:1933,Usability,clear,clearLoggedMessages,1933,"e(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg)sofa::component::collision::detection::algorithm::DirectSAPinlinestatic; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; DirectSAP()=defaultsofa::component::collision::detection::algorithm::DirectSAPprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *)sofa::core::objectmodel::BaseObjectinlinevirtual; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:670,Availability,down,down,670,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAP Class Referencefinal . #include <DirectSAP.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAP:. [legend]. Public Member Functions;  SOFA_CLASS (DirectSAP, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:13867,Availability,down,down,13867,"ing, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::DirectSAP ; (; ). protecteddefault . ◆ ~DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::~DirectSAP ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::DirectSAP::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::DirectSAP::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAP::SOFA_CLASS ; (; DirectSAP ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmDirectSAP; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:2573,Deployability,update,updateInternal,2573,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:7068,Deployability,update,updateLinks,7068,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:10160,Deployability,update,update,10160,"Member Functions; template<class T > ; static T::SPtr create (T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  DirectSAP ()=default;  ;  ~DirectSAP () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:1142,Integrability,depend,dependent,1142,"tion::algorithm::DirectSAP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAP Class Referencefinal . #include <DirectSAP.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAP:. [legend]. Public Member Functions;  SOFA_CLASS (DirectSAP, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:11863,Integrability,message,messages,11863,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:723,Modifiability,inherit,inherited,723,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAP Class Referencefinal . #include <DirectSAP.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAP:. [legend]. Public Member Functions;  SOFA_CLASS (DirectSAP, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:2509,Modifiability,variab,variables,2509," virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:2619,Modifiability,variab,variables,2619,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:2661,Modifiability,variab,variables,2661,"time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:2906,Modifiability,inherit,inherited,2906," ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void reset ();  Reset to initial state. More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:9279,Modifiability,inherit,inherited,9279," getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static T::SPtr create (T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  DirectSAP ()=default;  ;  ~DirectSAP () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:9679,Modifiability,inherit,inherited,9679,"aining all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; template<class T > ; static T::SPtr create (T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  DirectSAP ()=default;  ;  ~DirectSAP () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Ba",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:9994,Modifiability,inherit,inherited,9994,"Member Functions; template<class T > ; static T::SPtr create (T *, sofa::core::objectmodel::BaseContext *context, sofa::core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  DirectSAP ()=default;  ;  ~DirectSAP () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:10717,Modifiability,inherit,inherited,10717,"llptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  DirectSAP ()=default;  ;  ~DirectSAP () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:11448,Modifiability,inherit,inherited,11448,"a to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; Singl",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:11614,Modifiability,inherit,inherited,11614,"ted Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:12436,Modifiability,inherit,inherited,12436,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::DirectSAP ; (; ). protecteddefault . ◆ ~DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::~DirectSAP ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::DirectSAP::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; contex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:12690,Modifiability,inherit,inherited,12690,"nts, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::DirectSAP ; (; ). protecteddefault . ◆ ~DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::~DirectSAP ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::DirectSAP::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; contex",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:1223,Performance,load,loader,1223,"irectSAP Class Referencefinal . #include <DirectSAP.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAP:. [legend]. Public Member Functions;  SOFA_CLASS (DirectSAP, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAP Class Referencefinal . #include <DirectSAP.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAP:. [legend]. Public Member Functions;  SOFA_CLASS (DirectSAP, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:305,Safety,detect,detection,305,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAP Class Referencefinal . #include <DirectSAP.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAP:. [legend]. Public Member Functions;  SOFA_CLASS (DirectSAP, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:436,Safety,detect,detection,436,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAP Class Referencefinal . #include <DirectSAP.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAP:. [legend]. Public Member Functions;  SOFA_CLASS (DirectSAP, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void ha",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:13161,Safety,detect,detection,13161,"among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::DirectSAP ; (; ). protecteddefault . ◆ ~DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::~DirectSAP ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::DirectSAP::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::DirectSAP::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAP::SOFA_CLASS ; (; DirectSAP ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmDirectSAP; Generated on Mon Nov 11 202",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:13275,Safety,detect,detection,13275,"ing, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::DirectSAP ; (; ). protecteddefault . ◆ ~DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::~DirectSAP ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::DirectSAP::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::DirectSAP::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAP::SOFA_CLASS ; (; DirectSAP ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmDirectSAP; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:13448,Safety,detect,detection,13448,"ing, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::DirectSAP ; (; ). protecteddefault . ◆ ~DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::~DirectSAP ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::DirectSAP::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::DirectSAP::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAP::SOFA_CLASS ; (; DirectSAP ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmDirectSAP; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:13720,Safety,detect,detection,13720,"ing, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::DirectSAP ; (; ). protecteddefault . ◆ ~DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::~DirectSAP ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::DirectSAP::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::DirectSAP::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAP::SOFA_CLASS ; (; DirectSAP ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmDirectSAP; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:13985,Safety,detect,detection,13985,"ing, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Constructor details. ◆ DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::DirectSAP ; (; ). protecteddefault . ◆ ~DirectSAP(). sofa::component::collision::detection::algorithm::DirectSAP::~DirectSAP ; (; ). overrideprotecteddefault . Function details. ◆ create(). template<class T > . static T::SPtr sofa::component::collision::detection::algorithm::DirectSAP::create ; (; T * ; , . sofa::core::objectmodel::BaseContext * ; context, . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory. . ◆ init(). void sofa::component::collision::detection::algorithm::DirectSAP::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAP::SOFA_CLASS ; (; DirectSAP ; , . sofa::core::objectmodel::BaseObject ;  . ). sofacomponentcollisiondetectionalgorithmDirectSAP; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:4924,Testability,log,logging,4924," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:4997,Testability,log,logging,4997," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:5039,Testability,log,logging,5039," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:5109,Testability,log,logging,5109," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:5220,Testability,log,logging,5220," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:5262,Testability,log,logging,5262," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:7086,Testability,log,logErrors,7086,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:5305,Usability,clear,clearLoggedMessages,5305," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:13847,Deployability,update,updateInternal,13847,"::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sortEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAPNarrowPhase() override=defaultsofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:13900,Deployability,update,updateLinks,13900,"::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sortEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAPNarrowPhase() override=defaultsofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:312,Modifiability,inherit,inherited,312,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase, including all inherited members. _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:2041,Performance,cache,cacheData,2041,"e::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cacheData()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNewCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionA",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:12684,Performance,load,loader,12684,"(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sortEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detecti",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase, including all inherited members. _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:254,Safety,detect,detection,254,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase, including all inherited members. _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:676,Safety,detect,detection,676," _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:1937,Safety,detect,detection,1937,"e::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cacheData()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNewCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:2080,Safety,detect,detection,2080,"::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cacheData()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNewCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:2778,Safety,detect,detection,2778,"ject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cacheData()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNewCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPh",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:3480,Safety,detect,detection,3480,"etectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNewCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPhase()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; endNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; EndPointList typedefsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectm",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:3816,Safety,detect,detection,3816," cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPhase()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; endNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; EndPointList typedefsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLin",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:4017,Safety,detect,detection,4017,"e::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPhase()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; endNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; EndPointList typedefsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:4121,Safety,detect,detection,4121,"core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPhase()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; endNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; EndPointList typedefsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinline",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:4220,Safety,detect,detection,4220,"eSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPhase()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; endNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; EndPointList typedefsofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; f_bboxsofa::core::objectmodel::Base; f_listeningsofa::core::objectmodel::BaseObject; f_printLogsofa::core::objectmodel::Base; f_tagssofa::core::objectmodel::Base; findData(const std::string &name) constsofa::core::objectmodel::Base; findDataLinkDest(BaseData *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Basevirtual; findGlobalField(const std::string &name) constsofa::core::objectmodel::Base; findLink(const std::string &name) constsofa::core::objectmodel::Base; findLinkDest(T *&ptr, const std::string &path, const BaseLink *link)sofa::core::objectmodel::Baseinline; findLinkDestClass(const BaseClass *destType, const std::string &path, const BaseLink *link) overridesofa::core::objectmodel::BaseObjectvirtual; findLinks(const std::string &name) constsofa::core::objectmodel::Base; GetClass()sofa::core::objectmodel::Baseinlinestatic; getClass() constsofa::core::objectmodel::Baseinlinevirtual; getClassName() constsofa::core:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:9043,Safety,detect,detection,9043,"ine; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Instance typedefsofa::core::collision::CollisionAlgorithm; instancesofa::core::collision::CollisionAlgorithmprotected; intersectionMethodsofa::core::collision::Detectionprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isPairFiltered(const BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) constsofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_boxDatasofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; m_broadPhaseCollisionModelssofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_outputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_primitiveTestCountsofa::core::co",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:9453,Safety,detect,detection,9453,"st T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Instance typedefsofa::core::collision::CollisionAlgorithm; instancesofa::core::collision::CollisionAlgorithmprotected; intersectionMethodsofa::core::collision::Detectionprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isPairFiltered(const BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) constsofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_boxDatasofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; m_broadPhaseCollisionModelssofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_outputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_primitiveTestCountsofa::core::collision::NarrowPhaseDetectionprotected; m_storedOutputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; narrowCollisionDetectionFor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:9561,Safety,detect,detection,9561,"jectmodel::Baseinlineprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; Instance typedefsofa::core::collision::CollisionAlgorithm; instancesofa::core::collision::CollisionAlgorithmprotected; intersectionMethodsofa::core::collision::Detectionprotected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isPairFiltered(const BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) constsofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_boxDatasofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; m_broadPhaseCollisionModelssofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_outputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_primitiveTestCountsofa::core::collision::NarrowPhaseDetectionprotected; m_storedOutputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; narrowCollisionDetectionForPair(core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::Collisio",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:10730,Safety,detect,detection,10730,"ciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_outputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_primitiveTestCountsofa::core::collision::NarrowPhaseDetectionprotected; m_storedOutputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; narrowCollisionDetectionForPair(core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; narrowCollisionDetectionFromSortedEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; needsDeepBoundingTree() const overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseinlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::Bas",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:10856,Safety,detect,detection,10856,"esofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_outputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_primitiveTestCountsofa::core::collision::NarrowPhaseDetectionprotected; m_storedOutputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; narrowCollisionDetectionForPair(core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; narrowCollisionDetectionFromSortedEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; needsDeepBoundingTree() const overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseinlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::component::collision::detection::algorith",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:10975,Safety,detect,detection,10975,"n::NarrowPhaseDetectionprotected; m_primitiveTestCountsofa::core::collision::NarrowPhaseDetectionprotected; m_storedOutputsMapsofa::core::collision::NarrowPhaseDetectionprotected; m_vecDatasofa::core::objectmodel::Baseprotected; m_vecLinksofa::core::objectmodel::Baseprotected; MapData typedefsofa::core::objectmodel::Base; MapLink typedefsofa::core::objectmodel::Base; MyClass typedefsofa::core::objectmodel::Base; namesofa::core::objectmodel::Base; narrowCollisionDetectionForPair(core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; narrowCollisionDetectionFromSortedEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; needsDeepBoundingTree() const overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseinlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:11842,Safety,detect,detection,11842,"llision::detection::algorithm::DirectSAPNarrowPhaseprotected; needsDeepBoundingTree() const overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseinlinevirtual; notMuted() constsofa::core::objectmodel::Baseinline; parse(BaseObjectDescription *arg) overridesofa::core::objectmodel::BaseObjectvirtual; parseField(const std::string &attribute, const std::string &value)sofa::core::objectmodel::Basevirtual; parseFields(const std::list< std::string > &str)sofa::core::objectmodel::Base; parseFields(const std::map< std::string, std::string * > &str)sofa::core::objectmodel::Basevirtual; Ptr typedefsofa::core::objectmodel::Base; reinit()sofa::core::objectmodel::BaseObjectvirtual; removeData(BaseData *f)sofa::core::objectmodel::Base; removeInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; removeSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; removeTag(Tag t)sofa::core::objectmodel::Base; reset() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; setDefinitionSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setDefinitionSourceFilePos(const int)sofa::core::objectmodel::Base; setInstance(Instance inst)sofa::core::collision::CollisionAlgorithminlinevirtual; setInstanciationSourceFileName(const std::string &sourceFileName)sofa::core::objectmodel::Base; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:13223,Safety,detect,detection,13223,"se; setInstanciationSourceFilePos(const int)sofa::core::objectmodel::Base; setIntersectionMethod(Intersection *v)sofa::core::collision::Detectioninlinevirtual; setName(const std::string &n)sofa::core::objectmodel::Base; setName(const std::string &n, int counter)sofa::core::objectmodel::Base; setSrc(const std::string &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sortEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &o",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:13538,Safety,detect,detection,13538,"ng &v, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; setSrc(const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sortEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAPNarrowPhase() override=defaultsofa::compone",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:14558,Safety,detect,detection,14558,"::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sortEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAPNarrowPhase() override=defaultsofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:1188,Testability,log,logging,1188," _zeroCollisionsofa::core::collision::NarrowPhaseDetectionprotected; addAlias(BaseData *field, const char *alias)sofa::core::objectmodel::Base; addAlias(BaseLink *link, const char *alias)sofa::core::objectmodel::Base; addCollisionPair(const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; addCollisionPairs(const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v)sofa::core::collision::NarrowPhaseDetectionvirtual; addData(BaseData *f, const std::string &name)sofa::core::objectmodel::Base; addData(BaseData *f)sofa::core::objectmodel::Base; addDeprecatedAttribute(lifecycle::DeprecatedData *attribute)sofa::core::objectmodel::Base; addLink(BaseLink *l)sofa::core::objectmodel::Base; addMessage(const sofa::helper::logging::Message &m) constsofa::core::objectmodel::Base; addOutputsToCallback(const std::string &name, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; addSlave(BaseObject::SPtr s)sofa::core::objectmodel::BaseObjectvirtual; addTag(Tag t)sofa::core::objectmodel::Base; addUpdateCallback(const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs)sofa::core::objectmodel::Base; Base()sofa::core::objectmodel::Baseprotected; BaseObject()sofa::core::objectmodel::BaseObjectprotected; BaseType typedefsofa::core::objectmodel::Base; beginNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:3204,Testability,log,logging,3204,"el::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNewCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPhase()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; endNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; EndPointList typedefsofa::component:",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:3246,Testability,log,logging,3246,"ink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNewCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPhase()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(const core::visual::VisualParams *) overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; endNarrowPhase() overridesofa::component::collision::detection::algorithm::DirectSAPNarrowPhasevirtual; EndPointList typedefsofa::component::collision::detection::algorithm::DirectSA",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:6258,Testability,log,logging,6258,"ntState() constsofa::core::objectmodel::Baseinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDetectionOutputs() constsofa::core::collision::NarrowPhaseDetection; getDetectionOutputs(CollisionModel *cm1, CollisionModel *cm2)sofa::core::collision::NarrowPhaseDetection; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::Detectioninline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrimitiveTestCount() constsofa::core::collision::NarrowPhaseDetection; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::c",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:6300,Testability,log,logging,6300,"seinline; getContext() constsofa::core::objectmodel::BaseObject; getContext()sofa::core::objectmodel::BaseObject; getDataAliases() constsofa::core::objectmodel::Baseinline; getDataFields() constsofa::core::objectmodel::Baseinline; getDefinitionSourceFileName() constsofa::core::objectmodel::Base; getDefinitionSourceFilePos() constsofa::core::objectmodel::Base; getDetectionOutputs() constsofa::core::collision::NarrowPhaseDetection; getDetectionOutputs(CollisionModel *cm1, CollisionModel *cm2)sofa::core::collision::NarrowPhaseDetection; getInstanciationSourceFileName() constsofa::core::objectmodel::Base; getInstanciationSourceFilePos() constsofa::core::objectmodel::Base; getIntersectionMethod() constsofa::core::collision::Detectioninline; getLinkAliases() constsofa::core::objectmodel::Baseinline; getLinks() constsofa::core::objectmodel::Baseinline; getLoggedMessages() constsofa::core::objectmodel::Base; getLoggedMessagesAsString(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; getMaster() constsofa::core::objectmodel::BaseObject; getMaster()sofa::core::objectmodel::BaseObject; getName() constsofa::core::objectmodel::Baseinline; getNameSpaceName() constsofa::core::objectmodel::Base; getPathName() const overridesofa::core::objectmodel::BaseObjectvirtual; getPrimitiveTestCount() constsofa::core::collision::NarrowPhaseDetection; getSlave(const std::string &name) constsofa::core::objectmodel::BaseObject; getSlaves() constsofa::core::objectmodel::BaseObject; getTags() constsofa::core::objectmodel::Baseinline; getTemplateName() const finalsofa::core::objectmodel::Basevirtual; getTime() constsofa::core::objectmodel::BaseObject; getTypeName() constsofa::core::objectmodel::Base; handleEvent(Event *)sofa::core::objectmodel::BaseObjectvirtual; handleTopologyChange()sofa::core::objectmodel::BaseObjectinlinevirtual; handleTopologyChange(core::topology::Topology *t)sofa::core::objectmodel::BaseObjectvirtual; hasDa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:13917,Testability,log,logErrors,13917,"::vector< std::string > *attributeList=nullptr)sofa::core::objectmodel::BaseObject; shortName(const T *ptr=nullptr, BaseObjectDescription *=nullptr)sofa::core::objectmodel::Baseinlinestatic; SOFA_ABSTRACT_CLASS(NarrowPhaseDetection, Detection)sofa::core::collision::NarrowPhaseDetection; sofa::core::collision::Detection::SOFA_ABSTRACT_CLASS(CollisionAlgorithm, objectmodel::BaseObject)sofa::core::collision::CollisionAlgorithm; SOFA_CLASS(DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection)sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; sofa::core::collision::NarrowPhaseDetection::SOFA_CLASS(Detection, CollisionAlgorithm)sofa::core::collision::Detection; sofa::core::collision::CollisionAlgorithm::SOFA_CLASS(BaseObject, Base)sofa::core::objectmodel::BaseObject; sortEndPoints()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; SPtr typedefsofa::core::objectmodel::Base; storedIntersectionMethodsofa::core::collision::Detectionprotected; storeResetState()sofa::core::objectmodel::BaseObjectvirtual; trackInternalData(const BaseData &data)sofa::core::objectmodel::BaseObjectprotected; updateInternal()sofa::core::objectmodel::BaseObject; updateLinks(bool logErrors=true)sofa::core::objectmodel::Basevirtual; VecData typedefsofa::core::objectmodel::Base; VecLink typedefsofa::core::objectmodel::Base; VecSlaves typedefsofa::core::objectmodel::BaseObject; writeDatas(std::map< std::string, std::string * > &str)sofa::core::objectmodel::Base; writeDatas(std::ostream &out, const std::string &separator="" "")sofa::core::objectmodel::Base; zeroCollision() constsofa::core::collision::NarrowPhaseDetectioninline; ~Base()sofa::core::objectmodel::Baseprotectedvirtual; ~BaseObject() overridesofa::core::objectmodel::BaseObjectprotected; ~DirectSAPNarrowPhase() override=defaultsofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; ~NarrowPhaseDetection() overridesofa::core::collision::NarrowPhaseDetectionprotected.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html:2935,Usability,clear,clearLoggedMessages,2935,"n::algorithm::DirectSAPNarrowPhasevirtual; bwdInit()sofa::core::objectmodel::BaseObjectvirtual; cacheData()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; canCreate(T *, BaseContext *, BaseObjectDescription *)sofa::core::objectmodel::BaseObjectinlinestatic; changeContextLink(BaseContext *before, BaseContext *&after)sofa::core::objectmodel::BaseObjectprotected; changeInstance(Instance inst) overridesofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceBP(Instance)sofa::core::collision::Detectioninlineprotectedvirtual; changeInstanceNP(Instance inst) overridesofa::core::collision::NarrowPhaseDetectionprotectedvirtual; changeSlavesLink(BaseObject::SPtr ptr, std::size_t, bool add)sofa::core::objectmodel::BaseObjectprotected; checkNewCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase; cleanTracker()sofa::core::objectmodel::BaseObjectprotected; cleanup()sofa::core::objectmodel::BaseObjectvirtual; clearLoggedMessages() constsofa::core::objectmodel::Base; CollisionAlgorithm()sofa::core::collision::CollisionAlgorithminlineprotected; computeBBox(const core::ExecParams *, bool=false)sofa::core::objectmodel::BaseObjectinlinevirtual; countLoggedMessages(sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) constsofa::core::objectmodel::Base; create(T *, BaseContext *context, BaseObjectDescription *arg)sofa::core::objectmodel::BaseObjectinlinestatic; createBoxesFromCollisionModels()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; d_componentStatesofa::core::objectmodel::Base; d_messageLogCountsofa::core::objectmodel::Basemutable; Detection()sofa::core::collision::Detectioninlineprotected; DetectionOutputMap typedefsofa::core::collision::NarrowPhaseDetection; DirectSAPNarrowPhase()sofa::component::collision::detection::algorithm::DirectSAPNarrowPhaseprotected; doUpdateInternal()sofa::core::objectmodel::BaseObjectprotectedvirtual; draw(",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:6237,Availability,down,down,6237,"ink) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputs",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:1639,Deployability,pipeline,pipeline,1639," version, i.e. at each step it sorts all the primitives along an axis (not checking the moving ones) and computes overlapping pairs without saving it. But the memory used to save these primitives is created just once, the first time we add CollisionModels. . Classes; struct  BoxData;  . Protected Attributes; std::unordered_set< core::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection);  ; void reset () override;  Reset to initial state. More...;  ; void beginNarrowPhase () override;  Clear all t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:4606,Deployability,pipeline,pipeline,4606,"id draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:6511,Deployability,update,updateInternal,6511,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:10946,Deployability,update,updateLinks,10946,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:14288,Deployability,update,update,14288," BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:4953,Integrability,depend,dependent,4953,"eTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:15991,Integrability,message,messages,15991,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions i",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:1054,Modifiability,inherit,inherited,1054,"multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Class Reference . #include <DirectSAPNarrowPhase.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase:. [legend]; Detailed Description; This class is an implementation of sweep and prune in its ""direct"" version, i.e. at each step it sorts all the primitives along an axis (not checking the moving ones) and computes overlapping pairs without saving it. But the memory used to save these primitives is created just once, the first time we add CollisionModels. . Classes; struct  BoxData;  . Protected Attributes; std::unordered_set< core::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:1292,Modifiability,inherit,inherited,1292,"multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Class Reference . #include <DirectSAPNarrowPhase.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase:. [legend]; Detailed Description; This class is an implementation of sweep and prune in its ""direct"" version, i.e. at each step it sorts all the primitives along an axis (not checking the moving ones) and computes overlapping pairs without saving it. But the memory used to save these primitives is created just once, the first time we add CollisionModels. . Classes; struct  BoxData;  . Protected Attributes; std::unordered_set< core::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:1542,Modifiability,inherit,inherited,1542," version, i.e. at each step it sorts all the primitives along an axis (not checking the moving ones) and computes overlapping pairs without saving it. But the memory used to save these primitives is created just once, the first time we add CollisionModels. . Classes; struct  BoxData;  . Protected Attributes; std::unordered_set< core::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection);  ; void reset () override;  Reset to initial state. More...;  ; void beginNarrowPhase () override;  Clear all t",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:1737,Modifiability,inherit,inherited,1737,"e::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection);  ; void reset () override;  Reset to initial state. More...;  ; void beginNarrowPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  Add a new potentially colliding pairs of models. More...;  ; void endNarrowPhase () override;  ; void draw (const core::visual::VisualPara",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:1991,Modifiability,inherit,inherited,1991,"e::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection);  ; void reset () override;  Reset to initial state. More...;  ; void beginNarrowPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  Add a new potentially colliding pairs of models. More...;  ; void endNarrowPhase () override;  ; void draw (const core::visual::VisualPara",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:3331,Modifiability,inherit,inherited,3331,"rectSAPNarrowPhase, core::collision::NarrowPhaseDetection);  ; void reset () override;  Reset to initial state. More...;  ; void beginNarrowPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  Add a new potentially colliding pairs of models. More...;  ; void endNarrowPhase () override;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void checkNewCollisionModels ();  Get the result of the broad phase and check if there are some new collision models that was not yet processed. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:4034,Modifiability,inherit,inherited,4034,"  ; void checkNewCollisionModels ();  Get the result of the broad phase and check if there are some new collision models that was not yet processed. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseO",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:4358,Modifiability,inherit,inherited,4358,"id draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ;",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:4664,Modifiability,inherit,inherited,4664,"eTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:6447,Modifiability,variab,variables,6447,"ore...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:6557,Modifiability,variab,variables,6557,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:6599,Modifiability,variab,variables,6599,"onst;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:6784,Modifiability,inherit,inherited,6784,"en description to assign values to this object's fields and potentially other parameters. More...;  ; virtual void init ();  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void bwdInit ();  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; virtual void reinit ();  Update method called when variables used in precomputation are modified. More...;  ; void updateInternal ();  Update method called when variables (used to compute other internal variables) are modified. More...;  ; virtual void storeResetState ();  Save the initial state for later uses in reset() More...;  ; virtual void cleanup ();  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> function, std::initializer_list< BaseData * > outputs);  ; void addOutputsToCallback (const std::string &name, std::initializer_list< BaseData * > outputs);  ; const std::string & getName () const;  Accessor to the object name. More...;  ; void setName (const std::string &n);  Set the name of this object. More...;  ; void setName (const std::string &n, int counter);  Set the name of this object, adding an integer counter. More...;  ; std::string getTypeName () const;  Get the type name of this object (i.e. class and template types) More...;  ; virtual std::string getClassName () const;  Get the class name of this object. More...;  ; virtual std::string getTemplateName () const final;  Get the template type names (if any) used to instantiate this object. More...;  ; std::string getNameSpaceName () const;  Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionS",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:13620,Modifiability,inherit,inherited,13620,"ap containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DirectSAPNarrowPhase ();  ;  ~DirectSAPNarrowPhase () override=default;  ; bool isPairFiltered (const BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:13820,Modifiability,inherit,inherited,13820," BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:14009,Modifiability,inherit,inherited,14009," BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:14122,Modifiability,inherit,inherited,14122," BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:14845,Modifiability,inherit,inherited,14845,"e inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_pr",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:15576,Modifiability,inherit,inherited,15576,"a to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObj",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:15742,Modifiability,inherit,inherited,15742,"ted Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr creat",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:16574,Modifiability,inherit,inherited,16574," Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_boxData. std::vector<BoxData> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_boxData. protected . ◆ m_broadPhaseCollisionModels. std::unordered_set<core::CollisionModel *> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::compo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:16974,Modifiability,inherit,inherited,16974,"::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_boxData. std::vector<BoxData> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_boxData. protected . ◆ m_broadPhaseCollisionModels. std::unordered_set<core::CollisionModel *> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtua",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:5034,Performance,load,loader,5034,"void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:13427,Performance,cache,cacheData,13427," Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DirectSAPNarrowPhase ();  ;  ~DirectSAPNarrowPhase () override=default;  ; bool isPairFiltered (const BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:18459,Performance,cache,cacheData,18459,"::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:18549,Performance,cache,cacheData,18549,"details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Class Reference . #include <DirectSAPNarrowPhase.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase:. [legend]; Detailed Description; This class is an implementation of sweep and prune in its ""direct"" version, i.e. at each step it sorts all the primitives along an axis (not checking the moving ones) and computes overlapping pairs without saving it. But the memory used to save these primitives is created just once, the first time we add CollisionModels. . Classes; struct  BoxData;  . Protected Attributes; std::unordered_set< core::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:317,Safety,detect,detection,317,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Class Reference . #include <DirectSAPNarrowPhase.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase:. [legend]; Detailed Description; This class is an implementation of sweep and prune in its ""direct"" version, i.e. at each step it sorts all the primitives along an axis (not checking the moving ones) and computes overlapping pairs without saving it. But the memory used to save these primitives is created just once, the first time we add CollisionModels. . Classes; struct  BoxData;  . Protected Attributes; std::unordered_set< core::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:465,Safety,detect,detection,465,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase Class Reference . #include <DirectSAPNarrowPhase.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase:. [legend]; Detailed Description; This class is an implementation of sweep and prune in its ""direct"" version, i.e. at each step it sorts all the primitives along an axis (not checking the moving ones) and computes overlapping pairs without saving it. But the memory used to save these primitives is created just once, the first time we add CollisionModels. . Classes; struct  BoxData;  . Protected Attributes; std::unordered_set< core::CollisionModel * > m_broadPhaseCollisionModels;  ; std::vector< BoxData > m_boxData;  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedIntersectionMethod;  All intersection methods. More...;  ;  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:2640,Safety,detect,detected,2640," Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection);  ; void reset () override;  Reset to initial state. More...;  ; void beginNarrowPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  Add a new potentially colliding pairs of models. More...;  ; void endNarrowPhase () override;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void checkNewCollisionModels ();  Get the result of the broad phase and check if there are some new collision models that was not yet processed. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void addCollisionPairs ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:3273,Safety,detect,detection,3273,"s and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (DirectSAPNarrowPhase, core::collision::NarrowPhaseDetection);  ; void reset () override;  Reset to initial state. More...;  ; void beginNarrowPhase () override;  Clear all the potentially colliding pairs detected in the previous simulation step. More...;  ; void addCollisionPair (const std::pair< core::CollisionModel *, core::CollisionModel * > &cmPair) override;  Add a new potentially colliding pairs of models. More...;  ; void endNarrowPhase () override;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void checkNewCollisionModels ();  Get the result of the broad phase and check if there are some new collision models that was not yet processed. More...;  ; bool needsDeepBoundingTree () const override;  Bounding tree is not required by this detection algorithm. More...;  ;  Public Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  SOFA_ABSTRACT_CLASS (NarrowPhaseDetection, Detection);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; virtual void addCollisionPairs (const sofa::type::vector< std::pair< core::CollisionModel *, core::CollisionModel * > > &v);  Add a new list of potentially colliding pairs of models. More...;  ; size_t getPrimitiveTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:13494,Safety,avoid,avoid,13494," Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DirectSAPNarrowPhase ();  ;  ~DirectSAPNarrowPhase () override=default;  ; bool isPairFiltered (const BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:17252,Safety,detect,detection,17252,"_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_boxData. std::vector<BoxData> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_boxData. protected . ◆ m_broadPhaseCollisionModels. std::unordered_set<core::CollisionModel *> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNar",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:17421,Safety,detect,detection,17421,"itionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_boxData. std::vector<BoxData> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_boxData. protected . ◆ m_broadPhaseCollisionModels. std::unordered_set<core::CollisionModel *> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::cor",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:17581,Safety,detect,detection,17581,"bjectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_boxData. std::vector<BoxData> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_boxData. protected . ◆ m_broadPhaseCollisionModels. std::unordered_set<core::CollisionModel *> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModel",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:17721,Safety,detect,detection,17721,"hod called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_boxData. std::vector<BoxData> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_boxData. protected . ◆ m_broadPhaseCollisionModels. std::unordered_set<core::CollisionModel *> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broa",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:17895,Safety,detect,detection,17895,"Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_boxData. std::vector<BoxData> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_boxData. protected . ◆ m_broadPhaseCollisionModels. std::unordered_set<core::CollisionModel *> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createB",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:18220,Safety,detect,detection,18220,"nt::collision::detection::algorithm::DirectSAPNarrowPhase::m_boxData. protected . ◆ m_broadPhaseCollisionModels. std::unordered_set<core::CollisionModel *> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:18349,Safety,detect,detected,18349,". std::unordered_set<core::CollisionModel *> sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::m_broadPhaseCollisionModels. protected . Constructor details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::Direc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:18505,Safety,detect,detection,18505,"details. ◆ DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::DirectSAPNarrowPhase ; (; ). protected . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:18641,Safety,detect,detection,18641,"ed . ◆ ~DirectSAPNarrowPhase(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::~DirectSAPNarrowPhase ; (; ). overrideprotecteddefault . Function details. ◆ addCollisionPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:18899,Safety,detect,detection,18899,"SAPNarrowPhase::addCollisionPair ; (; const std::pair< core::CollisionModel *, core::CollisionModel * > & ; cmPair). overridevirtual . Add a new potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::Collisi",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:19037,Safety,detect,detection,19037,"w potentially colliding pairs of models. ; Implements sofa::core::collision::NarrowPhaseDetection. ◆ beginNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::beginNarrowPhase ; (; ). overridevirtual . Clear all the potentially colliding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::Col",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:19321,Safety,detect,detection,19321,"iding pairs detected in the previous simulation step. ; Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ cacheData(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::cacheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoun",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:19523,Safety,detect,detection,19523,"cheData ; (; ). protected . ◆ checkNewCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::checkNewCollisionModels ; (; ). Get the result of the broad phase and check if there are some new collision models that was not yet processed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Rei",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:19774,Safety,detect,detection,19774,"ed. . ◆ createBoxesFromCollisionModels(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::createBoxesFromCollisionModels ; (; ). protected . ◆ draw(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reset(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:20214,Safety,detect,detection,20214,"bjectmodel::BaseObject. ◆ endNarrowPhase(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reset(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::SOFA_CLASS ; (; DirectSAPNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ sortEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::sortEndPoints ; (; ). protected . Cache data into vector to avoid overhead during access. . sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhase; Generated on Mo",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:20382,Safety,detect,detection,20382," sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reset(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::SOFA_CLASS ; (; DirectSAPNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ sortEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::sortEndPoints ; (; ). protected . Cache data into vector to avoid overhead during access. . sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhase; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:20525,Safety,detect,detection,20525," sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reset(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::SOFA_CLASS ; (; DirectSAPNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ sortEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::sortEndPoints ; (; ). protected . Cache data into vector to avoid overhead during access. . sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhase; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:20645,Safety,detect,detection,20645," sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reset(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::SOFA_CLASS ; (; DirectSAPNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ sortEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::sortEndPoints ; (; ). protected . Cache data into vector to avoid overhead during access. . sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhase; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:20847,Safety,detect,detection,20847," sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reset(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::SOFA_CLASS ; (; DirectSAPNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ sortEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::sortEndPoints ; (; ). protected . Cache data into vector to avoid overhead during access. . sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhase; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:21032,Safety,detect,detection,21032," sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reset(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::SOFA_CLASS ; (; DirectSAPNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ sortEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::sortEndPoints ; (; ). protected . Cache data into vector to avoid overhead during access. . sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhase; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:21136,Safety,avoid,avoid,21136," sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reset(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::SOFA_CLASS ; (; DirectSAPNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ sortEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::sortEndPoints ; (; ). protected . Cache data into vector to avoid overhead during access. . sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhase; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:13516,Security,access,access,13516," Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DirectSAPNarrowPhase ();  ;  ~DirectSAPNarrowPhase () override=default;  ; bool isPairFiltered (const BoxData &data0, const BoxData &data1, const DSAPBox &box0, int boxId1) const;  ; void narrowCollisionDetectionForPair (core::collision::ElementIntersector *intersector, core::CollisionModel *collisionModel0, core::CollisionModel *collisionModel1, core::CollisionElementIterator collisionModelIterator0, core::CollisionElementIterator collisionModelIterator1);  ; void createBoxesFromCollisionModels ();  ; void cacheData ();  ; void sortEndPoints ();  Cache data into vector to avoid overhead during access. More...;  ; void narrowCollisionDetectionFromSortedEndPoints ();  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::Detection;  Detection ();  ; virtual void changeInstanceBP (Instance);  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObjec",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:21158,Security,access,access,21158," sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::endNarrowPhase ; (; ). overridevirtual . Reimplemented from sofa::core::collision::NarrowPhaseDetection. ◆ isPairFiltered(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::isPairFiltered ; (; const BoxData & ; data0, . const BoxData & ; data1, . const DSAPBox & ; box0, . int ; boxId1 . ); const. protected . ◆ narrowCollisionDetectionForPair(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionForPair ; (; core::collision::ElementIntersector * ; intersector, . core::CollisionModel * ; collisionModel0, . core::CollisionModel * ; collisionModel1, . core::CollisionElementIterator ; collisionModelIterator0, . core::CollisionElementIterator ; collisionModelIterator1 . ). protected . ◆ narrowCollisionDetectionFromSortedEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::narrowCollisionDetectionFromSortedEndPoints ; (; ). protected . ◆ needsDeepBoundingTree(). bool sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::needsDeepBoundingTree ; (; ); const. inlineoverridevirtual . Bounding tree is not required by this detection algorithm. ; Reimplemented from sofa::core::collision::Detection. ◆ reset(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::reset ; (; ). overridevirtual . Reset to initial state. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::SOFA_CLASS ; (; DirectSAPNarrowPhase ; , . core::collision::NarrowPhaseDetection ;  . ). ◆ sortEndPoints(). void sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase::sortEndPoints ; (; ). protected . Cache data into vector to avoid overhead during access. . sofacomponentcollisiondetectionalgorithmDirectSAPNarrowPhase; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:8802,Testability,log,logging,8802," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:8875,Testability,log,logging,8875," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:8917,Testability,log,logging,8917," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:8987,Testability,log,logging,8987," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:9098,Testability,log,logging,9098," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:9140,Testability,log,logging,9140," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:10964,Testability,log,logErrors,10964,"d::string > &str);  Assign the field values stored in the given list of name + value pairs of strings. More...;  ; virtual void parseFields (const std::map< std::string, std::string * > &str);  Assign the field values stored in the given map of name -> value pairs. More...;  ; void writeDatas (std::map< std::string, std::string * > &str);  Write the current field values to the given map of name -> value pairs. More...;  ; void writeDatas (std::ostream &out, const std::string &separator="" "");  ; BaseData * findData (const std::string &name) const;  ; std::vector< BaseData * > findGlobalField (const std::string &name) const;  Find data fields given a name: several can be found as we look into the alias map. More...;  ; BaseLink * findLink (const std::string &name) const;  ; std::vector< BaseLink * > findLinks (const std::string &name) const;  Find link fields given a name: several can be found as we look into the alias map. More...;  ; virtual void updateLinks (bool logErrors=true);  Update pointers in case the pointed-to objects have appeared. More...;  ; template<class T > ; BaseData::BaseInitData initData (::sofa::core::objectmodel::Data< T > *field, const char *name, const char *help, ::sofa::core::objectmodel::BaseData::DataFlags dataflags);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; BaseData::BaseInitData initData (Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; template<class T > ; Data< T >::InitData initData (Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used to initialize a data field containing a value of type T. More...;  ; void addData (BaseData *f, const std::string &name);  ; void addData (BaseData *f);  ; void removeData (BaseData *f);  Remove a data field. More..",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:9183,Usability,clear,clearLoggedMessages,9183," Get the template type names (if any) used to instantiate this object. More...;  ; void setDefinitionSourceFileName (const std::string &sourceFileName);  Set the source filename (where the component is implemented) More...;  ; const std::string & getDefinitionSourceFileName () const;  Get the source filename (where the component is implemented) More...;  ; void setDefinitionSourceFilePos (const int);  Set the source location (where the component is implemented) More...;  ; int getDefinitionSourceFilePos () const;  Get the source location (where the component is implemented) More...;  ; void setInstanciationSourceFileName (const std::string &sourceFileName);  ; const std::string & getInstanciationSourceFileName () const;  ; void setInstanciationSourceFilePos (const int);  ; int getInstanciationSourceFilePos () const;  ; void addMessage (const sofa::helper::logging::Message &m) const;  ; size_t countLoggedMessages (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; const std::deque< sofa::helper::logging::Message > & getLoggedMessages () const;  ; const std::string getLoggedMessagesAsString (sofa::helper::logging::Message::TypeSet t=sofa::helper::logging::Message::AnyTypes) const;  ; void clearLoggedMessages () const;  ; bool notMuted () const;  ; const sofa::core::objectmodel::TagSet & getTags () const;  Represents the subsets the object belongs to. More...;  ; bool hasTag (Tag t) const;  Return true if the object belong to the given subset. More...;  ; void addTag (Tag t);  Add a subset qualification to the object. More...;  ; void removeTag (Tag t);  Remove a subset qualification to the object. More...;  ; ComponentState getComponentState () const;  ; bool isComponentStateValid () const;  ; virtual bool parseField (const std::string &attribute, const std::string &value);  Assign one field value (Data or Link) More...;  ; virtual bool hasField (const std::string &attribute) const;  Check if a given Data field or Link exists.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:943,Deployability,update,update,943,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:286,Modifiability,inherit,inherited,286,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:241,Safety,detect,detection,241,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:337,Safety,detect,detection,337,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:483,Safety,detect,detection,483,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:559,Safety,detect,detection,559,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:621,Safety,detect,detection,621,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:692,Safety,detect,detection,692,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:800,Safety,detect,detection,800,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:912,Safety,detect,detection,912,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html:1005,Safety,detect,detection,1005,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::DSAPBox Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::DSAPBox, including all inherited members. cubesofa::component::collision::detection::algorithm::DSAPBox; DSAPBox(const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr)sofa::component::collision::detection::algorithm::DSAPBoxinlineexplicit; maxsofa::component::collision::detection::algorithm::DSAPBox; minsofa::component::collision::detection::algorithm::DSAPBox; show() constsofa::component::collision::detection::algorithm::DSAPBoxinline; squaredDistance(const DSAPBox &other) constsofa::component::collision::detection::algorithm::DSAPBox; squaredDistance(const DSAPBox &other, int axis) constsofa::component::collision::detection::algorithm::DSAPBox; update(int axis, double alarmDist)sofa::component::collision::detection::algorithm::DSAPBox. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:604,Deployability,update,updated,604,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DSAPBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DSAPBox Class Reference . #include <DSAPBox.h>; Detailed Description; SAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:628,Deployability,update,update,628,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DSAPBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DSAPBox Class Reference . #include <DSAPBox.h>; Detailed Description; SAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:712,Deployability,update,update,712,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DSAPBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DSAPBox Class Reference . #include <DSAPBox.h>; Detailed Description; SAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:965,Deployability,update,update,965,"a::component::collision::detection::algorithm::DSAPBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DSAPBox Class Reference . #include <DSAPBox.h>; Detailed Description; SAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); con",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:2256,Deployability,update,update,2256,"in and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); const. ◆ squaredDistance() [2/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other, . int ; axis . ); const. Compute the squared distance from this to other on a specific axis. . ◆ update(). void sofa::component::collision::detection::algorithm::DSAPBox::update ; (; int ; axis, . double ; alarmDist . ). sofacomponentcollisiondetectionalgorithmDSAPBox; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:2330,Deployability,update,update,2330,"in and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); const. ◆ squaredDistance() [2/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other, . int ; axis . ); const. Compute the squared distance from this to other on a specific axis. . ◆ update(). void sofa::component::collision::detection::algorithm::DSAPBox::update ; (; int ; axis, . double ; alarmDist . ). sofacomponentcollisiondetectionalgorithmDSAPBox; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:41,Safety,detect,detection,41,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DSAPBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DSAPBox Class Reference . #include <DSAPBox.h>; Detailed Description; SAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:260,Safety,detect,detection,260,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DSAPBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DSAPBox Class Reference . #include <DSAPBox.h>; Detailed Description; SAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:1309,Safety,detect,detection,1309,"erence . #include <DSAPBox.h>; Detailed Description; SAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); const. ◆ squaredDistance() [2/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other, . int ; axis . ); const. Compute the squared distance from this to other on a specific axis. . ◆ update(). void sofa::component::collision::d",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:1391,Safety,detect,detection,1391,"ns a Cube which contains only one final CollisionElement and pointers to min and max EndPoints. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); const. ◆ squaredDistance() [2/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other, . int ; axis . ); const. Compute the squared distance from this to other on a specific axis. . ◆ update(). void sofa::component::collision::detection::algorithm::DSAPBox::update ; (; int ; axis, . double ; alarmDist . ). sofacomponentc",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:1482,Safety,detect,detection,1482,"nts. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); const. ◆ squaredDistance() [2/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other, . int ; axis . ); const. Compute the squared distance from this to other on a specific axis. . ◆ update(). void sofa::component::collision::detection::algorithm::DSAPBox::update ; (; int ; axis, . double ; alarmDist . ). sofacomponentcollisiondetectionalgorithmDSAPBox; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:1590,Safety,detect,detection,1590,"in and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); const. ◆ squaredDistance() [2/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other, . int ; axis . ); const. Compute the squared distance from this to other on a specific axis. . ◆ update(). void sofa::component::collision::detection::algorithm::DSAPBox::update ; (; int ; axis, . double ; alarmDist . ). sofacomponentcollisiondetectionalgorithmDSAPBox; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:1813,Safety,detect,detection,1813,"in and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); const. ◆ squaredDistance() [2/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other, . int ; axis . ); const. Compute the squared distance from this to other on a specific axis. . ◆ update(). void sofa::component::collision::detection::algorithm::DSAPBox::update ; (; int ; axis, . double ; alarmDist . ). sofacomponentcollisiondetectionalgorithmDSAPBox; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:1935,Safety,detect,detection,1935,"in and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); const. ◆ squaredDistance() [2/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other, . int ; axis . ); const. Compute the squared distance from this to other on a specific axis. . ◆ update(). void sofa::component::collision::detection::algorithm::DSAPBox::update ; (; int ; axis, . double ; alarmDist . ). sofacomponentcollisiondetectionalgorithmDSAPBox; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:2082,Safety,detect,detection,2082,"in and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); const. ◆ squaredDistance() [2/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other, . int ; axis . ); const. Compute the squared distance from this to other on a specific axis. . ◆ update(). void sofa::component::collision::detection::algorithm::DSAPBox::update ; (; int ; axis, . double ; alarmDist . ). sofacomponentcollisiondetectionalgorithmDSAPBox; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:2299,Safety,detect,detection,2299,"in and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other); const. ◆ squaredDistance() [2/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox & ; other, . int ; axis . ); const. Compute the squared distance from this to other on a specific axis. . ◆ update(). void sofa::component::collision::detection::algorithm::DSAPBox::update ; (; int ; axis, . double ; alarmDist . ). sofacomponentcollisiondetectionalgorithmDSAPBox; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html:364,Usability,simpl,simple,364,"﻿. SOFA API: sofa::component::collision::detection::algorithm::DSAPBox Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DSAPBox Class Reference . #include <DSAPBox.h>; Detailed Description; SAPBox is a simple bounding box. It contains a Cube which contains only one final CollisionElement and pointers to min and max EndPoints. min and max end points are respectively min and max coordinates of the cube on a coordinate axis. min and max are updated with the method update(int i), so min and max have min/max values on the i-th axis after the method update(int i). . Public Attributes; collision::geometry::Cube cube;  ; EndPoint * min {nullptr};  ; EndPoint * max {nullptr};  . Public Member Functions;  DSAPBox (const collision::geometry::Cube &c, EndPoint *mi=nullptr, EndPoint *ma=nullptr);  ; void update (int axis, double alarmDist);  ; double squaredDistance (const DSAPBox &other) const;  ; double squaredDistance (const DSAPBox &other, int axis) const;  Compute the squared distance from this to other on a specific axis. More...;  ; void show () const;  . Attribute details. ◆ cube. collision::geometry::Cube sofa::component::collision::detection::algorithm::DSAPBox::cube. ◆ max. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::max {nullptr}. ◆ min. EndPoint* sofa::component::collision::detection::algorithm::DSAPBox::min {nullptr}. Constructor details. ◆ DSAPBox(). sofa::component::collision::detection::algorithm::DSAPBox::DSAPBox ; (; const collision::geometry::Cube & ; c, . EndPoint * ; mi = nullptr, . EndPoint * ; ma = nullptr . ). inlineexplicit . Function details. ◆ show(). void sofa::component::collision::detection::algorithm::DSAPBox::show ; (; ); const. inline . ◆ squaredDistance() [1/2]. double sofa::component::collision::detection::algorithm::DSAPBox::squaredDistance ; (; const DSAPBox ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_d_s_a_p_box.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:288,Modifiability,inherit,inherited,288,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:242,Safety,detect,detection,242,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:348,Safety,detect,detection,348,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:424,Safety,detect,detection,424,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:501,Safety,detect,detection,501,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:578,Safety,detect,detection,578,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:660,Safety,detect,detection,660,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:734,Safety,detect,detection,734,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:822,Safety,detect,detection,822,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:896,Safety,detect,detection,896,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:984,Safety,detect,detection,984,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:1062,Safety,detect,detection,1062,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html:1133,Safety,detect,detection,1133,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPoint Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPoint, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:41,Safety,detect,detection,41,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Gener,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:261,Safety,detect,detection,261,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Gener,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:385,Safety,detect,detection,385,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Gener,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:790,Safety,detect,detection,790,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Gener,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:892,Safety,detect,detection,892,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Gener,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:1011,Safety,detect,detection,1011,omponent::collision::detection::algorithm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Generated on Mon Nov 11 2,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:1115,Safety,detect,detection,1115,thm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:1217,Safety,detect,detection,1217,thm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:1324,Safety,detect,detection,1324,thm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:1435,Safety,detect,detection,1435,thm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:1544,Safety,detect,detection,1544,thm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:1661,Safety,detect,detection,1661,thm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:1770,Safety,detect,detection,1770,thm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html:1885,Safety,detect,detection,1885,thm::EndPoint Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPoint Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPoint:. [legend]. Public Attributes; double value;  . Public Member Functions;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ value. double sofa::component::collision::detection::algorithm::EndPoint::value. Constructor details. ◆ EndPoint(). sofa::component::collision::detection::algorithm::EndPoint::EndPoint ; (; ). inline . Function details. ◆ boxID(). int sofa::component::collision::detection::algorithm::EndPoint::boxID ; (; ); const. inline . ◆ max(). bool sofa::component::collision::detection::algorithm::EndPoint::max ; (; ); const. inline . ◆ min(). bool sofa::component::collision::detection::algorithm::EndPoint::min ; (; ); const. inline . ◆ setBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setBoxID ; (; int ; ID). inline . ◆ setMax(). void sofa::component::collision::detection::algorithm::EndPoint::setMax ; (; ). inline . ◆ setMaxAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMaxAndBoxID ; (; int ; ID). inline . ◆ setMin(). void sofa::component::collision::detection::algorithm::EndPoint::setMin ; (; ). inline . ◆ setMinAndBoxID(). void sofa::component::collision::detection::algorithm::EndPoint::setMinAndBoxID ; (; int ; ID). inline . ◆ show(). void sofa::component::collision::detection::algorithm::EndPoint::show ; (; ); const. inline . sofacomponentcollisiondetectionalgorithmEndPoint; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:292,Modifiability,inherit,inherited,292,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:128,Safety,detect,detection,128,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:244,Safety,detect,detection,244,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:352,Safety,detect,detection,352,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:428,Safety,detect,detection,428,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:506,Safety,detect,detection,506,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:576,Safety,detect,detection,576,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:649,Safety,detect,detection,649,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:726,Safety,detect,detection,726,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:808,Safety,detect,detection,808,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:882,Safety,detect,detection,882,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:970,Safety,detect,detection,970,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:1044,Safety,detect,detection,1044,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:1132,Safety,detect,detection,1132,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:1210,Safety,detect,detection,1210,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html:1281,Safety,detect,detection,1281,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::component::collision::detection::algorithm::EndPointID Member List . This is the complete list of members for sofa::component::collision::detection::algorithm::EndPointID, including all inherited members. boxID() constsofa::component::collision::detection::algorithm::EndPointinline; EndPoint()sofa::component::collision::detection::algorithm::EndPointinline; EndPointID()sofa::component::collision::detection::algorithm::EndPointIDinline; IDsofa::component::collision::detection::algorithm::EndPointID; max() constsofa::component::collision::detection::algorithm::EndPointinline; min() constsofa::component::collision::detection::algorithm::EndPointinline; setBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMax()sofa::component::collision::detection::algorithm::EndPointinline; setMaxAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; setMin()sofa::component::collision::detection::algorithm::EndPointinline; setMinAndBoxID(int ID)sofa::component::collision::detection::algorithm::EndPointinline; show() constsofa::component::collision::detection::algorithm::EndPointinline; valuesofa::component::collision::detection::algorithm::EndPoint. Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ",MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d-members.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html:483,Modifiability,inherit,inherited,483,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPointID Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPointID Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPointID:. [legend]. Public Attributes; int ID;  ;  Public Attributes inherited from sofa::component::collision::detection::algorithm::EndPoint; double value;  . Public Member Functions;  EndPointID ();  ;  Public Member Functions inherited from sofa::component::collision::detection::algorithm::EndPoint;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ ID. int sofa::component::collision::detection::algorithm::EndPointID::ID. Constructor details. ◆ EndPointID(). sofa::component::collision::detection::algorithm::EndPointID::EndPointID ; (; ). inline . sofacomponentcollisiondetectionalgorithmEndPointID; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html:644,Modifiability,inherit,inherited,644,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPointID Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPointID Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPointID:. [legend]. Public Attributes; int ID;  ;  Public Attributes inherited from sofa::component::collision::detection::algorithm::EndPoint; double value;  . Public Member Functions;  EndPointID ();  ;  Public Member Functions inherited from sofa::component::collision::detection::algorithm::EndPoint;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ ID. int sofa::component::collision::detection::algorithm::EndPointID::ID. Constructor details. ◆ EndPointID(). sofa::component::collision::detection::algorithm::EndPointID::EndPointID ; (; ). inline . sofacomponentcollisiondetectionalgorithmEndPointID; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html:41,Safety,detect,detection,41,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPointID Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPointID Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPointID:. [legend]. Public Attributes; int ID;  ;  Public Attributes inherited from sofa::component::collision::detection::algorithm::EndPoint; double value;  . Public Member Functions;  EndPointID ();  ;  Public Member Functions inherited from sofa::component::collision::detection::algorithm::EndPoint;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ ID. int sofa::component::collision::detection::algorithm::EndPointID::ID. Constructor details. ◆ EndPointID(). sofa::component::collision::detection::algorithm::EndPointID::EndPointID ; (; ). inline . sofacomponentcollisiondetectionalgorithmEndPointID; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html:263,Safety,detect,detection,263,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPointID Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPointID Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPointID:. [legend]. Public Attributes; int ID;  ;  Public Attributes inherited from sofa::component::collision::detection::algorithm::EndPoint; double value;  . Public Member Functions;  EndPointID ();  ;  Public Member Functions inherited from sofa::component::collision::detection::algorithm::EndPoint;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ ID. int sofa::component::collision::detection::algorithm::EndPointID::ID. Constructor details. ◆ EndPointID(). sofa::component::collision::detection::algorithm::EndPointID::EndPointID ; (; ). inline . sofacomponentcollisiondetectionalgorithmEndPointID; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html:389,Safety,detect,detection,389,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPointID Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPointID Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPointID:. [legend]. Public Attributes; int ID;  ;  Public Attributes inherited from sofa::component::collision::detection::algorithm::EndPoint; double value;  . Public Member Functions;  EndPointID ();  ;  Public Member Functions inherited from sofa::component::collision::detection::algorithm::EndPoint;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ ID. int sofa::component::collision::detection::algorithm::EndPointID::ID. Constructor details. ◆ EndPointID(). sofa::component::collision::detection::algorithm::EndPointID::EndPointID ; (; ). inline . sofacomponentcollisiondetectionalgorithmEndPointID; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html
https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html:526,Safety,detect,detection,526,﻿. SOFA API: sofa::component::collision::detection::algorithm::EndPointID Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::collision::detection::algorithm::EndPointID Class Reference . #include <EndPoint.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::EndPointID:. [legend]. Public Attributes; int ID;  ;  Public Attributes inherited from sofa::component::collision::detection::algorithm::EndPoint; double value;  . Public Member Functions;  EndPointID ();  ;  Public Member Functions inherited from sofa::component::collision::detection::algorithm::EndPoint;  EndPoint ();  ; void setMax ();  ; void setMin ();  ; void setBoxID (int ID);  ; int boxID () const;  ; bool max () const;  ; bool min () const;  ; void show () const;  ; void setMinAndBoxID (int ID);  ; void setMaxAndBoxID (int ID);  . Attribute details. ◆ ID. int sofa::component::collision::detection::algorithm::EndPointID::ID. Constructor details. ◆ EndPointID(). sofa::component::collision::detection::algorithm::EndPointID::EndPointID ; (; ). inline . sofacomponentcollisiondetectionalgorithmEndPointID; Generated on Mon Nov 11 2024 02:19:52 for SOFA API by 1.9.1 . ,MatchSource.WIKI,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_end_point_i_d.html
